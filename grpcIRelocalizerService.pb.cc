// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIRelocalizerService.proto

#include "grpcIRelocalizerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcIRelocalizer {
PROTOBUF_CONSTEXPR addKeyframeRequest::addKeyframeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.keyframe_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addKeyframeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addKeyframeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addKeyframeRequestDefaultTypeInternal() {}
  union {
    addKeyframeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addKeyframeRequestDefaultTypeInternal _addKeyframeRequest_default_instance_;
PROTOBUF_CONSTEXPR addKeyframeResponse::addKeyframeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addKeyframeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addKeyframeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addKeyframeResponseDefaultTypeInternal() {}
  union {
    addKeyframeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addKeyframeResponseDefaultTypeInternal _addKeyframeResponse_default_instance_;
PROTOBUF_CONSTEXPR relocalizeRequest::relocalizeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.frame_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pose_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct relocalizeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR relocalizeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~relocalizeRequestDefaultTypeInternal() {}
  union {
    relocalizeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 relocalizeRequestDefaultTypeInternal _relocalizeRequest_default_instance_;
PROTOBUF_CONSTEXPR relocalizeResponse::relocalizeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pose_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct relocalizeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR relocalizeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~relocalizeResponseDefaultTypeInternal() {}
  union {
    relocalizeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 relocalizeResponseDefaultTypeInternal _relocalizeResponse_default_instance_;
}  // namespace grpcIRelocalizer
static ::_pb::Metadata file_level_metadata_grpcIRelocalizerService_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcIRelocalizerService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcIRelocalizerService_2eproto = nullptr;

const uint32_t TableStruct_grpcIRelocalizerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::addKeyframeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::addKeyframeRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::addKeyframeRequest, _impl_.keyframe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::addKeyframeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::addKeyframeResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::relocalizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::relocalizeRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::relocalizeRequest, _impl_.frame_),
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::relocalizeRequest, _impl_.pose_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::relocalizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::relocalizeResponse, _impl_.pose_),
  PROTOBUF_FIELD_OFFSET(::grpcIRelocalizer::relocalizeResponse, _impl_.xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcIRelocalizer::addKeyframeRequest)},
  { 8, -1, -1, sizeof(::grpcIRelocalizer::addKeyframeResponse)},
  { 15, -1, -1, sizeof(::grpcIRelocalizer::relocalizeRequest)},
  { 24, -1, -1, sizeof(::grpcIRelocalizer::relocalizeResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcIRelocalizer::_addKeyframeRequest_default_instance_._instance,
  &::grpcIRelocalizer::_addKeyframeResponse_default_instance_._instance,
  &::grpcIRelocalizer::_relocalizeRequest_default_instance_._instance,
  &::grpcIRelocalizer::_relocalizeResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcIRelocalizerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035grpcIRelocalizerService.proto\022\020grpcIRe"
  "localizer\032\033google/protobuf/empty.proto\"K"
  "\n\022addKeyframeRequest\022#\n\033grpcServerCompre"
  "ssionFormat\030\001 \001(\005\022\020\n\010keyframe\030\002 \001(\014\"2\n\023a"
  "ddKeyframeResponse\022\033\n\023xpcfGrpcReturnValu"
  "e\030\001 \001(\021\"U\n\021relocalizeRequest\022#\n\033grpcServ"
  "erCompressionFormat\030\001 \001(\005\022\r\n\005frame\030\002 \001(\014"
  "\022\014\n\004pose\030\003 \001(\014\"\?\n\022relocalizeResponse\022\014\n\004"
  "pose\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\0212"
  "\322\001\n\027grpcIRelocalizerService\022\\\n\013addKeyfra"
  "me\022$.grpcIRelocalizer.addKeyframeRequest"
  "\032%.grpcIRelocalizer.addKeyframeResponse\""
  "\000\022Y\n\nrelocalize\022#.grpcIRelocalizer.reloc"
  "alizeRequest\032$.grpcIRelocalizer.relocali"
  "zeResponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcIRelocalizerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcIRelocalizerService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcIRelocalizerService_2eproto = {
    false, false, 580, descriptor_table_protodef_grpcIRelocalizerService_2eproto,
    "grpcIRelocalizerService.proto",
    &descriptor_table_grpcIRelocalizerService_2eproto_once, descriptor_table_grpcIRelocalizerService_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_grpcIRelocalizerService_2eproto::offsets,
    file_level_metadata_grpcIRelocalizerService_2eproto, file_level_enum_descriptors_grpcIRelocalizerService_2eproto,
    file_level_service_descriptors_grpcIRelocalizerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcIRelocalizerService_2eproto_getter() {
  return &descriptor_table_grpcIRelocalizerService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcIRelocalizerService_2eproto(&descriptor_table_grpcIRelocalizerService_2eproto);
namespace grpcIRelocalizer {

// ===================================================================

class addKeyframeRequest::_Internal {
 public:
};

addKeyframeRequest::addKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRelocalizer.addKeyframeRequest)
}
addKeyframeRequest::addKeyframeRequest(const addKeyframeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addKeyframeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.keyframe_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.keyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keyframe().empty()) {
    _this->_impl_.keyframe_.Set(from._internal_keyframe(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIRelocalizer.addKeyframeRequest)
}

inline void addKeyframeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.keyframe_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.keyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

addKeyframeRequest::~addKeyframeRequest() {
  // @@protoc_insertion_point(destructor:grpcIRelocalizer.addKeyframeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addKeyframeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keyframe_.Destroy();
}

void addKeyframeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addKeyframeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRelocalizer.addKeyframeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keyframe_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addKeyframeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRelocalizer.addKeyframeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframe = 2;
  if (!this->_internal_keyframe().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRelocalizer.addKeyframeRequest)
  return target;
}

size_t addKeyframeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRelocalizer.addKeyframeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 2;
  if (!this->_internal_keyframe().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addKeyframeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addKeyframeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addKeyframeRequest::GetClassData() const { return &_class_data_; }


void addKeyframeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addKeyframeRequest*>(&to_msg);
  auto& from = static_cast<const addKeyframeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRelocalizer.addKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keyframe().empty()) {
    _this->_internal_set_keyframe(from._internal_keyframe());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addKeyframeRequest::CopyFrom(const addKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRelocalizer.addKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframeRequest::IsInitialized() const {
  return true;
}

void addKeyframeRequest::InternalSwap(addKeyframeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.keyframe_, lhs_arena,
      &other->_impl_.keyframe_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRelocalizerService_2eproto_getter, &descriptor_table_grpcIRelocalizerService_2eproto_once,
      file_level_metadata_grpcIRelocalizerService_2eproto[0]);
}

// ===================================================================

class addKeyframeResponse::_Internal {
 public:
};

addKeyframeResponse::addKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRelocalizer.addKeyframeResponse)
}
addKeyframeResponse::addKeyframeResponse(const addKeyframeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addKeyframeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIRelocalizer.addKeyframeResponse)
}

inline void addKeyframeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

addKeyframeResponse::~addKeyframeResponse() {
  // @@protoc_insertion_point(destructor:grpcIRelocalizer.addKeyframeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addKeyframeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void addKeyframeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addKeyframeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRelocalizer.addKeyframeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addKeyframeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRelocalizer.addKeyframeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRelocalizer.addKeyframeResponse)
  return target;
}

size_t addKeyframeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRelocalizer.addKeyframeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addKeyframeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addKeyframeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addKeyframeResponse::GetClassData() const { return &_class_data_; }


void addKeyframeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addKeyframeResponse*>(&to_msg);
  auto& from = static_cast<const addKeyframeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRelocalizer.addKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addKeyframeResponse::CopyFrom(const addKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRelocalizer.addKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframeResponse::IsInitialized() const {
  return true;
}

void addKeyframeResponse::InternalSwap(addKeyframeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRelocalizerService_2eproto_getter, &descriptor_table_grpcIRelocalizerService_2eproto_once,
      file_level_metadata_grpcIRelocalizerService_2eproto[1]);
}

// ===================================================================

class relocalizeRequest::_Internal {
 public:
};

relocalizeRequest::relocalizeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRelocalizer.relocalizeRequest)
}
relocalizeRequest::relocalizeRequest(const relocalizeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  relocalizeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.frame_){}
    , decltype(_impl_.pose_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.frame_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.frame_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_frame().empty()) {
    _this->_impl_.frame_.Set(from._internal_frame(), 
      _this->GetArenaForAllocation());
  }
  _impl_.pose_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pose_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pose().empty()) {
    _this->_impl_.pose_.Set(from._internal_pose(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIRelocalizer.relocalizeRequest)
}

inline void relocalizeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.frame_){}
    , decltype(_impl_.pose_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.frame_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.frame_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pose_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pose_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

relocalizeRequest::~relocalizeRequest() {
  // @@protoc_insertion_point(destructor:grpcIRelocalizer.relocalizeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void relocalizeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.frame_.Destroy();
  _impl_.pose_.Destroy();
}

void relocalizeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void relocalizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRelocalizer.relocalizeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.frame_.ClearToEmpty();
  _impl_.pose_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* relocalizeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes frame = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_frame();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes pose = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_pose();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* relocalizeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRelocalizer.relocalizeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes frame = 2;
  if (!this->_internal_frame().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_frame(), target);
  }

  // bytes pose = 3;
  if (!this->_internal_pose().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_pose(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRelocalizer.relocalizeRequest)
  return target;
}

size_t relocalizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRelocalizer.relocalizeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frame = 2;
  if (!this->_internal_frame().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frame());
  }

  // bytes pose = 3;
  if (!this->_internal_pose().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pose());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData relocalizeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    relocalizeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*relocalizeRequest::GetClassData() const { return &_class_data_; }


void relocalizeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<relocalizeRequest*>(&to_msg);
  auto& from = static_cast<const relocalizeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRelocalizer.relocalizeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_frame().empty()) {
    _this->_internal_set_frame(from._internal_frame());
  }
  if (!from._internal_pose().empty()) {
    _this->_internal_set_pose(from._internal_pose());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void relocalizeRequest::CopyFrom(const relocalizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRelocalizer.relocalizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool relocalizeRequest::IsInitialized() const {
  return true;
}

void relocalizeRequest::InternalSwap(relocalizeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.frame_, lhs_arena,
      &other->_impl_.frame_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pose_, lhs_arena,
      &other->_impl_.pose_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata relocalizeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRelocalizerService_2eproto_getter, &descriptor_table_grpcIRelocalizerService_2eproto_once,
      file_level_metadata_grpcIRelocalizerService_2eproto[2]);
}

// ===================================================================

class relocalizeResponse::_Internal {
 public:
};

relocalizeResponse::relocalizeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRelocalizer.relocalizeResponse)
}
relocalizeResponse::relocalizeResponse(const relocalizeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  relocalizeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pose_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.pose_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pose_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pose().empty()) {
    _this->_impl_.pose_.Set(from._internal_pose(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIRelocalizer.relocalizeResponse)
}

inline void relocalizeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pose_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.pose_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pose_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

relocalizeResponse::~relocalizeResponse() {
  // @@protoc_insertion_point(destructor:grpcIRelocalizer.relocalizeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void relocalizeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pose_.Destroy();
}

void relocalizeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void relocalizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRelocalizer.relocalizeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pose_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* relocalizeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes pose = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pose();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* relocalizeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRelocalizer.relocalizeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pose = 1;
  if (!this->_internal_pose().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pose(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRelocalizer.relocalizeResponse)
  return target;
}

size_t relocalizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRelocalizer.relocalizeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pose = 1;
  if (!this->_internal_pose().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pose());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData relocalizeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    relocalizeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*relocalizeResponse::GetClassData() const { return &_class_data_; }


void relocalizeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<relocalizeResponse*>(&to_msg);
  auto& from = static_cast<const relocalizeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRelocalizer.relocalizeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pose().empty()) {
    _this->_internal_set_pose(from._internal_pose());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void relocalizeResponse::CopyFrom(const relocalizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRelocalizer.relocalizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool relocalizeResponse::IsInitialized() const {
  return true;
}

void relocalizeResponse::InternalSwap(relocalizeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pose_, lhs_arena,
      &other->_impl_.pose_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata relocalizeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRelocalizerService_2eproto_getter, &descriptor_table_grpcIRelocalizerService_2eproto_once,
      file_level_metadata_grpcIRelocalizerService_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIRelocalizer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIRelocalizer::addKeyframeRequest*
Arena::CreateMaybeMessage< ::grpcIRelocalizer::addKeyframeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRelocalizer::addKeyframeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRelocalizer::addKeyframeResponse*
Arena::CreateMaybeMessage< ::grpcIRelocalizer::addKeyframeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRelocalizer::addKeyframeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRelocalizer::relocalizeRequest*
Arena::CreateMaybeMessage< ::grpcIRelocalizer::relocalizeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRelocalizer::relocalizeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRelocalizer::relocalizeResponse*
Arena::CreateMaybeMessage< ::grpcIRelocalizer::relocalizeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRelocalizer::relocalizeResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
