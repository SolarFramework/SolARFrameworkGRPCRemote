// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcI3D3DCorrespondencesFinderService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcI3D3DCorrespondencesFinderService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcI3D3DCorrespondencesFinderService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcI3D3DCorrespondencesFinderService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcI3D3DCorrespondencesFinderService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcI3D3DCorrespondencesFinderService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcI3D3DCorrespondencesFinderService_2eproto_metadata_getter(int index);
namespace grpcI3D3DCorrespondencesFinder {
class find_grpc0Request;
struct find_grpc0RequestDefaultTypeInternal;
extern find_grpc0RequestDefaultTypeInternal _find_grpc0Request_default_instance_;
class find_grpc0Response;
struct find_grpc0ResponseDefaultTypeInternal;
extern find_grpc0ResponseDefaultTypeInternal _find_grpc0Response_default_instance_;
class find_grpc1Request;
struct find_grpc1RequestDefaultTypeInternal;
extern find_grpc1RequestDefaultTypeInternal _find_grpc1Request_default_instance_;
class find_grpc1Response;
struct find_grpc1ResponseDefaultTypeInternal;
extern find_grpc1ResponseDefaultTypeInternal _find_grpc1Response_default_instance_;
}  // namespace grpcI3D3DCorrespondencesFinder
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcI3D3DCorrespondencesFinder::find_grpc0Request* Arena::CreateMaybeMessage<::grpcI3D3DCorrespondencesFinder::find_grpc0Request>(Arena*);
template<> ::grpcI3D3DCorrespondencesFinder::find_grpc0Response* Arena::CreateMaybeMessage<::grpcI3D3DCorrespondencesFinder::find_grpc0Response>(Arena*);
template<> ::grpcI3D3DCorrespondencesFinder::find_grpc1Request* Arena::CreateMaybeMessage<::grpcI3D3DCorrespondencesFinder::find_grpc1Request>(Arena*);
template<> ::grpcI3D3DCorrespondencesFinder::find_grpc1Response* Arena::CreateMaybeMessage<::grpcI3D3DCorrespondencesFinder::find_grpc1Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcI3D3DCorrespondencesFinder {

// ===================================================================

class find_grpc0Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3D3DCorrespondencesFinder.find_grpc0Request) */ {
 public:
  inline find_grpc0Request() : find_grpc0Request(nullptr) {}
  virtual ~find_grpc0Request();
  explicit constexpr find_grpc0Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  find_grpc0Request(const find_grpc0Request& from);
  find_grpc0Request(find_grpc0Request&& from) noexcept
    : find_grpc0Request() {
    *this = ::std::move(from);
  }

  inline find_grpc0Request& operator=(const find_grpc0Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline find_grpc0Request& operator=(find_grpc0Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const find_grpc0Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const find_grpc0Request* internal_default_instance() {
    return reinterpret_cast<const find_grpc0Request*>(
               &_find_grpc0Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(find_grpc0Request& a, find_grpc0Request& b) {
    a.Swap(&b);
  }
  inline void Swap(find_grpc0Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(find_grpc0Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline find_grpc0Request* New() const final {
    return CreateMaybeMessage<find_grpc0Request>(nullptr);
  }

  find_grpc0Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<find_grpc0Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const find_grpc0Request& from);
  void MergeFrom(const find_grpc0Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(find_grpc0Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3D3DCorrespondencesFinder.find_grpc0Request";
  }
  protected:
  explicit find_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3D3DCorrespondencesFinderService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstKeyframeFieldNumber = 1,
    kSecondKeyframeFieldNumber = 2,
    kCurrentMatchesFieldNumber = 3,
    kFirstCloudPointsFieldNumber = 4,
    kSecondCloudPointsFieldNumber = 5,
    kFoundMatchesFieldNumber = 6,
    kRemainingMatchesFieldNumber = 7,
  };
  // bytes firstKeyframe = 1;
  void clear_firstkeyframe();
  const std::string& firstkeyframe() const;
  void set_firstkeyframe(const std::string& value);
  void set_firstkeyframe(std::string&& value);
  void set_firstkeyframe(const char* value);
  void set_firstkeyframe(const void* value, size_t size);
  std::string* mutable_firstkeyframe();
  std::string* release_firstkeyframe();
  void set_allocated_firstkeyframe(std::string* firstkeyframe);
  private:
  const std::string& _internal_firstkeyframe() const;
  void _internal_set_firstkeyframe(const std::string& value);
  std::string* _internal_mutable_firstkeyframe();
  public:

  // bytes secondKeyframe = 2;
  void clear_secondkeyframe();
  const std::string& secondkeyframe() const;
  void set_secondkeyframe(const std::string& value);
  void set_secondkeyframe(std::string&& value);
  void set_secondkeyframe(const char* value);
  void set_secondkeyframe(const void* value, size_t size);
  std::string* mutable_secondkeyframe();
  std::string* release_secondkeyframe();
  void set_allocated_secondkeyframe(std::string* secondkeyframe);
  private:
  const std::string& _internal_secondkeyframe() const;
  void _internal_set_secondkeyframe(const std::string& value);
  std::string* _internal_mutable_secondkeyframe();
  public:

  // bytes current_matches = 3;
  void clear_current_matches();
  const std::string& current_matches() const;
  void set_current_matches(const std::string& value);
  void set_current_matches(std::string&& value);
  void set_current_matches(const char* value);
  void set_current_matches(const void* value, size_t size);
  std::string* mutable_current_matches();
  std::string* release_current_matches();
  void set_allocated_current_matches(std::string* current_matches);
  private:
  const std::string& _internal_current_matches() const;
  void _internal_set_current_matches(const std::string& value);
  std::string* _internal_mutable_current_matches();
  public:

  // bytes firstCloudPoints = 4;
  void clear_firstcloudpoints();
  const std::string& firstcloudpoints() const;
  void set_firstcloudpoints(const std::string& value);
  void set_firstcloudpoints(std::string&& value);
  void set_firstcloudpoints(const char* value);
  void set_firstcloudpoints(const void* value, size_t size);
  std::string* mutable_firstcloudpoints();
  std::string* release_firstcloudpoints();
  void set_allocated_firstcloudpoints(std::string* firstcloudpoints);
  private:
  const std::string& _internal_firstcloudpoints() const;
  void _internal_set_firstcloudpoints(const std::string& value);
  std::string* _internal_mutable_firstcloudpoints();
  public:

  // bytes secondCloudPoints = 5;
  void clear_secondcloudpoints();
  const std::string& secondcloudpoints() const;
  void set_secondcloudpoints(const std::string& value);
  void set_secondcloudpoints(std::string&& value);
  void set_secondcloudpoints(const char* value);
  void set_secondcloudpoints(const void* value, size_t size);
  std::string* mutable_secondcloudpoints();
  std::string* release_secondcloudpoints();
  void set_allocated_secondcloudpoints(std::string* secondcloudpoints);
  private:
  const std::string& _internal_secondcloudpoints() const;
  void _internal_set_secondcloudpoints(const std::string& value);
  std::string* _internal_mutable_secondcloudpoints();
  public:

  // bytes found_matches = 6;
  void clear_found_matches();
  const std::string& found_matches() const;
  void set_found_matches(const std::string& value);
  void set_found_matches(std::string&& value);
  void set_found_matches(const char* value);
  void set_found_matches(const void* value, size_t size);
  std::string* mutable_found_matches();
  std::string* release_found_matches();
  void set_allocated_found_matches(std::string* found_matches);
  private:
  const std::string& _internal_found_matches() const;
  void _internal_set_found_matches(const std::string& value);
  std::string* _internal_mutable_found_matches();
  public:

  // bytes remaining_matches = 7;
  void clear_remaining_matches();
  const std::string& remaining_matches() const;
  void set_remaining_matches(const std::string& value);
  void set_remaining_matches(std::string&& value);
  void set_remaining_matches(const char* value);
  void set_remaining_matches(const void* value, size_t size);
  std::string* mutable_remaining_matches();
  std::string* release_remaining_matches();
  void set_allocated_remaining_matches(std::string* remaining_matches);
  private:
  const std::string& _internal_remaining_matches() const;
  void _internal_set_remaining_matches(const std::string& value);
  std::string* _internal_mutable_remaining_matches();
  public:

  // @@protoc_insertion_point(class_scope:grpcI3D3DCorrespondencesFinder.find_grpc0Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstkeyframe_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondkeyframe_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_matches_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstcloudpoints_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondcloudpoints_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr found_matches_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr remaining_matches_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3D3DCorrespondencesFinderService_2eproto;
};
// -------------------------------------------------------------------

class find_grpc0Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3D3DCorrespondencesFinder.find_grpc0Response) */ {
 public:
  inline find_grpc0Response() : find_grpc0Response(nullptr) {}
  virtual ~find_grpc0Response();
  explicit constexpr find_grpc0Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  find_grpc0Response(const find_grpc0Response& from);
  find_grpc0Response(find_grpc0Response&& from) noexcept
    : find_grpc0Response() {
    *this = ::std::move(from);
  }

  inline find_grpc0Response& operator=(const find_grpc0Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline find_grpc0Response& operator=(find_grpc0Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const find_grpc0Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const find_grpc0Response* internal_default_instance() {
    return reinterpret_cast<const find_grpc0Response*>(
               &_find_grpc0Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(find_grpc0Response& a, find_grpc0Response& b) {
    a.Swap(&b);
  }
  inline void Swap(find_grpc0Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(find_grpc0Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline find_grpc0Response* New() const final {
    return CreateMaybeMessage<find_grpc0Response>(nullptr);
  }

  find_grpc0Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<find_grpc0Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const find_grpc0Response& from);
  void MergeFrom(const find_grpc0Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(find_grpc0Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3D3DCorrespondencesFinder.find_grpc0Response";
  }
  protected:
  explicit find_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3D3DCorrespondencesFinderService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstCloudPointsFieldNumber = 1,
    kSecondCloudPointsFieldNumber = 2,
    kFoundMatchesFieldNumber = 3,
    kRemainingMatchesFieldNumber = 4,
    kXpcfGrpcReturnValueFieldNumber = 5,
  };
  // bytes firstCloudPoints = 1;
  void clear_firstcloudpoints();
  const std::string& firstcloudpoints() const;
  void set_firstcloudpoints(const std::string& value);
  void set_firstcloudpoints(std::string&& value);
  void set_firstcloudpoints(const char* value);
  void set_firstcloudpoints(const void* value, size_t size);
  std::string* mutable_firstcloudpoints();
  std::string* release_firstcloudpoints();
  void set_allocated_firstcloudpoints(std::string* firstcloudpoints);
  private:
  const std::string& _internal_firstcloudpoints() const;
  void _internal_set_firstcloudpoints(const std::string& value);
  std::string* _internal_mutable_firstcloudpoints();
  public:

  // bytes secondCloudPoints = 2;
  void clear_secondcloudpoints();
  const std::string& secondcloudpoints() const;
  void set_secondcloudpoints(const std::string& value);
  void set_secondcloudpoints(std::string&& value);
  void set_secondcloudpoints(const char* value);
  void set_secondcloudpoints(const void* value, size_t size);
  std::string* mutable_secondcloudpoints();
  std::string* release_secondcloudpoints();
  void set_allocated_secondcloudpoints(std::string* secondcloudpoints);
  private:
  const std::string& _internal_secondcloudpoints() const;
  void _internal_set_secondcloudpoints(const std::string& value);
  std::string* _internal_mutable_secondcloudpoints();
  public:

  // bytes found_matches = 3;
  void clear_found_matches();
  const std::string& found_matches() const;
  void set_found_matches(const std::string& value);
  void set_found_matches(std::string&& value);
  void set_found_matches(const char* value);
  void set_found_matches(const void* value, size_t size);
  std::string* mutable_found_matches();
  std::string* release_found_matches();
  void set_allocated_found_matches(std::string* found_matches);
  private:
  const std::string& _internal_found_matches() const;
  void _internal_set_found_matches(const std::string& value);
  std::string* _internal_mutable_found_matches();
  public:

  // bytes remaining_matches = 4;
  void clear_remaining_matches();
  const std::string& remaining_matches() const;
  void set_remaining_matches(const std::string& value);
  void set_remaining_matches(std::string&& value);
  void set_remaining_matches(const char* value);
  void set_remaining_matches(const void* value, size_t size);
  std::string* mutable_remaining_matches();
  std::string* release_remaining_matches();
  void set_allocated_remaining_matches(std::string* remaining_matches);
  private:
  const std::string& _internal_remaining_matches() const;
  void _internal_set_remaining_matches(const std::string& value);
  std::string* _internal_mutable_remaining_matches();
  public:

  // sint32 xpcfGrpcReturnValue = 5;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3D3DCorrespondencesFinder.find_grpc0Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstcloudpoints_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondcloudpoints_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr found_matches_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr remaining_matches_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3D3DCorrespondencesFinderService_2eproto;
};
// -------------------------------------------------------------------

class find_grpc1Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3D3DCorrespondencesFinder.find_grpc1Request) */ {
 public:
  inline find_grpc1Request() : find_grpc1Request(nullptr) {}
  virtual ~find_grpc1Request();
  explicit constexpr find_grpc1Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  find_grpc1Request(const find_grpc1Request& from);
  find_grpc1Request(find_grpc1Request&& from) noexcept
    : find_grpc1Request() {
    *this = ::std::move(from);
  }

  inline find_grpc1Request& operator=(const find_grpc1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline find_grpc1Request& operator=(find_grpc1Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const find_grpc1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const find_grpc1Request* internal_default_instance() {
    return reinterpret_cast<const find_grpc1Request*>(
               &_find_grpc1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(find_grpc1Request& a, find_grpc1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(find_grpc1Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(find_grpc1Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline find_grpc1Request* New() const final {
    return CreateMaybeMessage<find_grpc1Request>(nullptr);
  }

  find_grpc1Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<find_grpc1Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const find_grpc1Request& from);
  void MergeFrom(const find_grpc1Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(find_grpc1Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3D3DCorrespondencesFinder.find_grpc1Request";
  }
  protected:
  explicit find_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3D3DCorrespondencesFinderService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstKeyframeFieldNumber = 1,
    kSecondKeyframeFieldNumber = 2,
    kCurrentMatchesFieldNumber = 3,
    kFirstCloudPointsIndicesFieldNumber = 4,
    kSecondCloudPointsIndicesFieldNumber = 5,
    kFoundMatchesFieldNumber = 6,
  };
  // bytes firstKeyframe = 1;
  void clear_firstkeyframe();
  const std::string& firstkeyframe() const;
  void set_firstkeyframe(const std::string& value);
  void set_firstkeyframe(std::string&& value);
  void set_firstkeyframe(const char* value);
  void set_firstkeyframe(const void* value, size_t size);
  std::string* mutable_firstkeyframe();
  std::string* release_firstkeyframe();
  void set_allocated_firstkeyframe(std::string* firstkeyframe);
  private:
  const std::string& _internal_firstkeyframe() const;
  void _internal_set_firstkeyframe(const std::string& value);
  std::string* _internal_mutable_firstkeyframe();
  public:

  // bytes secondKeyframe = 2;
  void clear_secondkeyframe();
  const std::string& secondkeyframe() const;
  void set_secondkeyframe(const std::string& value);
  void set_secondkeyframe(std::string&& value);
  void set_secondkeyframe(const char* value);
  void set_secondkeyframe(const void* value, size_t size);
  std::string* mutable_secondkeyframe();
  std::string* release_secondkeyframe();
  void set_allocated_secondkeyframe(std::string* secondkeyframe);
  private:
  const std::string& _internal_secondkeyframe() const;
  void _internal_set_secondkeyframe(const std::string& value);
  std::string* _internal_mutable_secondkeyframe();
  public:

  // bytes current_matches = 3;
  void clear_current_matches();
  const std::string& current_matches() const;
  void set_current_matches(const std::string& value);
  void set_current_matches(std::string&& value);
  void set_current_matches(const char* value);
  void set_current_matches(const void* value, size_t size);
  std::string* mutable_current_matches();
  std::string* release_current_matches();
  void set_allocated_current_matches(std::string* current_matches);
  private:
  const std::string& _internal_current_matches() const;
  void _internal_set_current_matches(const std::string& value);
  std::string* _internal_mutable_current_matches();
  public:

  // bytes firstCloudPointsIndices = 4;
  void clear_firstcloudpointsindices();
  const std::string& firstcloudpointsindices() const;
  void set_firstcloudpointsindices(const std::string& value);
  void set_firstcloudpointsindices(std::string&& value);
  void set_firstcloudpointsindices(const char* value);
  void set_firstcloudpointsindices(const void* value, size_t size);
  std::string* mutable_firstcloudpointsindices();
  std::string* release_firstcloudpointsindices();
  void set_allocated_firstcloudpointsindices(std::string* firstcloudpointsindices);
  private:
  const std::string& _internal_firstcloudpointsindices() const;
  void _internal_set_firstcloudpointsindices(const std::string& value);
  std::string* _internal_mutable_firstcloudpointsindices();
  public:

  // bytes secondCloudPointsIndices = 5;
  void clear_secondcloudpointsindices();
  const std::string& secondcloudpointsindices() const;
  void set_secondcloudpointsindices(const std::string& value);
  void set_secondcloudpointsindices(std::string&& value);
  void set_secondcloudpointsindices(const char* value);
  void set_secondcloudpointsindices(const void* value, size_t size);
  std::string* mutable_secondcloudpointsindices();
  std::string* release_secondcloudpointsindices();
  void set_allocated_secondcloudpointsindices(std::string* secondcloudpointsindices);
  private:
  const std::string& _internal_secondcloudpointsindices() const;
  void _internal_set_secondcloudpointsindices(const std::string& value);
  std::string* _internal_mutable_secondcloudpointsindices();
  public:

  // bytes found_matches = 6;
  void clear_found_matches();
  const std::string& found_matches() const;
  void set_found_matches(const std::string& value);
  void set_found_matches(std::string&& value);
  void set_found_matches(const char* value);
  void set_found_matches(const void* value, size_t size);
  std::string* mutable_found_matches();
  std::string* release_found_matches();
  void set_allocated_found_matches(std::string* found_matches);
  private:
  const std::string& _internal_found_matches() const;
  void _internal_set_found_matches(const std::string& value);
  std::string* _internal_mutable_found_matches();
  public:

  // @@protoc_insertion_point(class_scope:grpcI3D3DCorrespondencesFinder.find_grpc1Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstkeyframe_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondkeyframe_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr current_matches_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstcloudpointsindices_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondcloudpointsindices_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr found_matches_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3D3DCorrespondencesFinderService_2eproto;
};
// -------------------------------------------------------------------

class find_grpc1Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3D3DCorrespondencesFinder.find_grpc1Response) */ {
 public:
  inline find_grpc1Response() : find_grpc1Response(nullptr) {}
  virtual ~find_grpc1Response();
  explicit constexpr find_grpc1Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  find_grpc1Response(const find_grpc1Response& from);
  find_grpc1Response(find_grpc1Response&& from) noexcept
    : find_grpc1Response() {
    *this = ::std::move(from);
  }

  inline find_grpc1Response& operator=(const find_grpc1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline find_grpc1Response& operator=(find_grpc1Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const find_grpc1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const find_grpc1Response* internal_default_instance() {
    return reinterpret_cast<const find_grpc1Response*>(
               &_find_grpc1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(find_grpc1Response& a, find_grpc1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(find_grpc1Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(find_grpc1Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline find_grpc1Response* New() const final {
    return CreateMaybeMessage<find_grpc1Response>(nullptr);
  }

  find_grpc1Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<find_grpc1Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const find_grpc1Response& from);
  void MergeFrom(const find_grpc1Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(find_grpc1Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3D3DCorrespondencesFinder.find_grpc1Response";
  }
  protected:
  explicit find_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3D3DCorrespondencesFinderService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstCloudPointsIndicesFieldNumber = 1,
    kSecondCloudPointsIndicesFieldNumber = 2,
    kFoundMatchesFieldNumber = 3,
    kXpcfGrpcReturnValueFieldNumber = 4,
  };
  // bytes firstCloudPointsIndices = 1;
  void clear_firstcloudpointsindices();
  const std::string& firstcloudpointsindices() const;
  void set_firstcloudpointsindices(const std::string& value);
  void set_firstcloudpointsindices(std::string&& value);
  void set_firstcloudpointsindices(const char* value);
  void set_firstcloudpointsindices(const void* value, size_t size);
  std::string* mutable_firstcloudpointsindices();
  std::string* release_firstcloudpointsindices();
  void set_allocated_firstcloudpointsindices(std::string* firstcloudpointsindices);
  private:
  const std::string& _internal_firstcloudpointsindices() const;
  void _internal_set_firstcloudpointsindices(const std::string& value);
  std::string* _internal_mutable_firstcloudpointsindices();
  public:

  // bytes secondCloudPointsIndices = 2;
  void clear_secondcloudpointsindices();
  const std::string& secondcloudpointsindices() const;
  void set_secondcloudpointsindices(const std::string& value);
  void set_secondcloudpointsindices(std::string&& value);
  void set_secondcloudpointsindices(const char* value);
  void set_secondcloudpointsindices(const void* value, size_t size);
  std::string* mutable_secondcloudpointsindices();
  std::string* release_secondcloudpointsindices();
  void set_allocated_secondcloudpointsindices(std::string* secondcloudpointsindices);
  private:
  const std::string& _internal_secondcloudpointsindices() const;
  void _internal_set_secondcloudpointsindices(const std::string& value);
  std::string* _internal_mutable_secondcloudpointsindices();
  public:

  // bytes found_matches = 3;
  void clear_found_matches();
  const std::string& found_matches() const;
  void set_found_matches(const std::string& value);
  void set_found_matches(std::string&& value);
  void set_found_matches(const char* value);
  void set_found_matches(const void* value, size_t size);
  std::string* mutable_found_matches();
  std::string* release_found_matches();
  void set_allocated_found_matches(std::string* found_matches);
  private:
  const std::string& _internal_found_matches() const;
  void _internal_set_found_matches(const std::string& value);
  std::string* _internal_mutable_found_matches();
  public:

  // sint32 xpcfGrpcReturnValue = 4;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3D3DCorrespondencesFinder.find_grpc1Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstcloudpointsindices_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondcloudpointsindices_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr found_matches_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3D3DCorrespondencesFinderService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// find_grpc0Request

// bytes firstKeyframe = 1;
inline void find_grpc0Request::clear_firstkeyframe() {
  firstkeyframe_.ClearToEmpty();
}
inline const std::string& find_grpc0Request::firstkeyframe() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstKeyframe)
  return _internal_firstkeyframe();
}
inline void find_grpc0Request::set_firstkeyframe(const std::string& value) {
  _internal_set_firstkeyframe(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstKeyframe)
}
inline std::string* find_grpc0Request::mutable_firstkeyframe() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstKeyframe)
  return _internal_mutable_firstkeyframe();
}
inline const std::string& find_grpc0Request::_internal_firstkeyframe() const {
  return firstkeyframe_.Get();
}
inline void find_grpc0Request::_internal_set_firstkeyframe(const std::string& value) {
  
  firstkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Request::set_firstkeyframe(std::string&& value) {
  
  firstkeyframe_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstKeyframe)
}
inline void find_grpc0Request::set_firstkeyframe(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstKeyframe)
}
inline void find_grpc0Request::set_firstkeyframe(const void* value,
    size_t size) {
  
  firstkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstKeyframe)
}
inline std::string* find_grpc0Request::_internal_mutable_firstkeyframe() {
  
  return firstkeyframe_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Request::release_firstkeyframe() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstKeyframe)
  return firstkeyframe_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Request::set_allocated_firstkeyframe(std::string* firstkeyframe) {
  if (firstkeyframe != nullptr) {
    
  } else {
    
  }
  firstkeyframe_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstkeyframe,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstKeyframe)
}

// bytes secondKeyframe = 2;
inline void find_grpc0Request::clear_secondkeyframe() {
  secondkeyframe_.ClearToEmpty();
}
inline const std::string& find_grpc0Request::secondkeyframe() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondKeyframe)
  return _internal_secondkeyframe();
}
inline void find_grpc0Request::set_secondkeyframe(const std::string& value) {
  _internal_set_secondkeyframe(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondKeyframe)
}
inline std::string* find_grpc0Request::mutable_secondkeyframe() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondKeyframe)
  return _internal_mutable_secondkeyframe();
}
inline const std::string& find_grpc0Request::_internal_secondkeyframe() const {
  return secondkeyframe_.Get();
}
inline void find_grpc0Request::_internal_set_secondkeyframe(const std::string& value) {
  
  secondkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Request::set_secondkeyframe(std::string&& value) {
  
  secondkeyframe_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondKeyframe)
}
inline void find_grpc0Request::set_secondkeyframe(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondKeyframe)
}
inline void find_grpc0Request::set_secondkeyframe(const void* value,
    size_t size) {
  
  secondkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondKeyframe)
}
inline std::string* find_grpc0Request::_internal_mutable_secondkeyframe() {
  
  return secondkeyframe_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Request::release_secondkeyframe() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondKeyframe)
  return secondkeyframe_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Request::set_allocated_secondkeyframe(std::string* secondkeyframe) {
  if (secondkeyframe != nullptr) {
    
  } else {
    
  }
  secondkeyframe_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondkeyframe,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondKeyframe)
}

// bytes current_matches = 3;
inline void find_grpc0Request::clear_current_matches() {
  current_matches_.ClearToEmpty();
}
inline const std::string& find_grpc0Request::current_matches() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Request.current_matches)
  return _internal_current_matches();
}
inline void find_grpc0Request::set_current_matches(const std::string& value) {
  _internal_set_current_matches(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Request.current_matches)
}
inline std::string* find_grpc0Request::mutable_current_matches() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Request.current_matches)
  return _internal_mutable_current_matches();
}
inline const std::string& find_grpc0Request::_internal_current_matches() const {
  return current_matches_.Get();
}
inline void find_grpc0Request::_internal_set_current_matches(const std::string& value) {
  
  current_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Request::set_current_matches(std::string&& value) {
  
  current_matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Request.current_matches)
}
inline void find_grpc0Request::set_current_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Request.current_matches)
}
inline void find_grpc0Request::set_current_matches(const void* value,
    size_t size) {
  
  current_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Request.current_matches)
}
inline std::string* find_grpc0Request::_internal_mutable_current_matches() {
  
  return current_matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Request::release_current_matches() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Request.current_matches)
  return current_matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Request::set_allocated_current_matches(std::string* current_matches) {
  if (current_matches != nullptr) {
    
  } else {
    
  }
  current_matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Request.current_matches)
}

// bytes firstCloudPoints = 4;
inline void find_grpc0Request::clear_firstcloudpoints() {
  firstcloudpoints_.ClearToEmpty();
}
inline const std::string& find_grpc0Request::firstcloudpoints() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstCloudPoints)
  return _internal_firstcloudpoints();
}
inline void find_grpc0Request::set_firstcloudpoints(const std::string& value) {
  _internal_set_firstcloudpoints(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstCloudPoints)
}
inline std::string* find_grpc0Request::mutable_firstcloudpoints() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstCloudPoints)
  return _internal_mutable_firstcloudpoints();
}
inline const std::string& find_grpc0Request::_internal_firstcloudpoints() const {
  return firstcloudpoints_.Get();
}
inline void find_grpc0Request::_internal_set_firstcloudpoints(const std::string& value) {
  
  firstcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Request::set_firstcloudpoints(std::string&& value) {
  
  firstcloudpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstCloudPoints)
}
inline void find_grpc0Request::set_firstcloudpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstCloudPoints)
}
inline void find_grpc0Request::set_firstcloudpoints(const void* value,
    size_t size) {
  
  firstcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstCloudPoints)
}
inline std::string* find_grpc0Request::_internal_mutable_firstcloudpoints() {
  
  return firstcloudpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Request::release_firstcloudpoints() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstCloudPoints)
  return firstcloudpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Request::set_allocated_firstcloudpoints(std::string* firstcloudpoints) {
  if (firstcloudpoints != nullptr) {
    
  } else {
    
  }
  firstcloudpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstcloudpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Request.firstCloudPoints)
}

// bytes secondCloudPoints = 5;
inline void find_grpc0Request::clear_secondcloudpoints() {
  secondcloudpoints_.ClearToEmpty();
}
inline const std::string& find_grpc0Request::secondcloudpoints() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondCloudPoints)
  return _internal_secondcloudpoints();
}
inline void find_grpc0Request::set_secondcloudpoints(const std::string& value) {
  _internal_set_secondcloudpoints(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondCloudPoints)
}
inline std::string* find_grpc0Request::mutable_secondcloudpoints() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondCloudPoints)
  return _internal_mutable_secondcloudpoints();
}
inline const std::string& find_grpc0Request::_internal_secondcloudpoints() const {
  return secondcloudpoints_.Get();
}
inline void find_grpc0Request::_internal_set_secondcloudpoints(const std::string& value) {
  
  secondcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Request::set_secondcloudpoints(std::string&& value) {
  
  secondcloudpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondCloudPoints)
}
inline void find_grpc0Request::set_secondcloudpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondCloudPoints)
}
inline void find_grpc0Request::set_secondcloudpoints(const void* value,
    size_t size) {
  
  secondcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondCloudPoints)
}
inline std::string* find_grpc0Request::_internal_mutable_secondcloudpoints() {
  
  return secondcloudpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Request::release_secondcloudpoints() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondCloudPoints)
  return secondcloudpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Request::set_allocated_secondcloudpoints(std::string* secondcloudpoints) {
  if (secondcloudpoints != nullptr) {
    
  } else {
    
  }
  secondcloudpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondcloudpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Request.secondCloudPoints)
}

// bytes found_matches = 6;
inline void find_grpc0Request::clear_found_matches() {
  found_matches_.ClearToEmpty();
}
inline const std::string& find_grpc0Request::found_matches() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Request.found_matches)
  return _internal_found_matches();
}
inline void find_grpc0Request::set_found_matches(const std::string& value) {
  _internal_set_found_matches(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Request.found_matches)
}
inline std::string* find_grpc0Request::mutable_found_matches() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Request.found_matches)
  return _internal_mutable_found_matches();
}
inline const std::string& find_grpc0Request::_internal_found_matches() const {
  return found_matches_.Get();
}
inline void find_grpc0Request::_internal_set_found_matches(const std::string& value) {
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Request::set_found_matches(std::string&& value) {
  
  found_matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Request.found_matches)
}
inline void find_grpc0Request::set_found_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Request.found_matches)
}
inline void find_grpc0Request::set_found_matches(const void* value,
    size_t size) {
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Request.found_matches)
}
inline std::string* find_grpc0Request::_internal_mutable_found_matches() {
  
  return found_matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Request::release_found_matches() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Request.found_matches)
  return found_matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Request::set_allocated_found_matches(std::string* found_matches) {
  if (found_matches != nullptr) {
    
  } else {
    
  }
  found_matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), found_matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Request.found_matches)
}

// bytes remaining_matches = 7;
inline void find_grpc0Request::clear_remaining_matches() {
  remaining_matches_.ClearToEmpty();
}
inline const std::string& find_grpc0Request::remaining_matches() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Request.remaining_matches)
  return _internal_remaining_matches();
}
inline void find_grpc0Request::set_remaining_matches(const std::string& value) {
  _internal_set_remaining_matches(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Request.remaining_matches)
}
inline std::string* find_grpc0Request::mutable_remaining_matches() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Request.remaining_matches)
  return _internal_mutable_remaining_matches();
}
inline const std::string& find_grpc0Request::_internal_remaining_matches() const {
  return remaining_matches_.Get();
}
inline void find_grpc0Request::_internal_set_remaining_matches(const std::string& value) {
  
  remaining_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Request::set_remaining_matches(std::string&& value) {
  
  remaining_matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Request.remaining_matches)
}
inline void find_grpc0Request::set_remaining_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  remaining_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Request.remaining_matches)
}
inline void find_grpc0Request::set_remaining_matches(const void* value,
    size_t size) {
  
  remaining_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Request.remaining_matches)
}
inline std::string* find_grpc0Request::_internal_mutable_remaining_matches() {
  
  return remaining_matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Request::release_remaining_matches() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Request.remaining_matches)
  return remaining_matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Request::set_allocated_remaining_matches(std::string* remaining_matches) {
  if (remaining_matches != nullptr) {
    
  } else {
    
  }
  remaining_matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), remaining_matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Request.remaining_matches)
}

// -------------------------------------------------------------------

// find_grpc0Response

// bytes firstCloudPoints = 1;
inline void find_grpc0Response::clear_firstcloudpoints() {
  firstcloudpoints_.ClearToEmpty();
}
inline const std::string& find_grpc0Response::firstcloudpoints() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Response.firstCloudPoints)
  return _internal_firstcloudpoints();
}
inline void find_grpc0Response::set_firstcloudpoints(const std::string& value) {
  _internal_set_firstcloudpoints(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Response.firstCloudPoints)
}
inline std::string* find_grpc0Response::mutable_firstcloudpoints() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Response.firstCloudPoints)
  return _internal_mutable_firstcloudpoints();
}
inline const std::string& find_grpc0Response::_internal_firstcloudpoints() const {
  return firstcloudpoints_.Get();
}
inline void find_grpc0Response::_internal_set_firstcloudpoints(const std::string& value) {
  
  firstcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Response::set_firstcloudpoints(std::string&& value) {
  
  firstcloudpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Response.firstCloudPoints)
}
inline void find_grpc0Response::set_firstcloudpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Response.firstCloudPoints)
}
inline void find_grpc0Response::set_firstcloudpoints(const void* value,
    size_t size) {
  
  firstcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Response.firstCloudPoints)
}
inline std::string* find_grpc0Response::_internal_mutable_firstcloudpoints() {
  
  return firstcloudpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Response::release_firstcloudpoints() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Response.firstCloudPoints)
  return firstcloudpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Response::set_allocated_firstcloudpoints(std::string* firstcloudpoints) {
  if (firstcloudpoints != nullptr) {
    
  } else {
    
  }
  firstcloudpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstcloudpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Response.firstCloudPoints)
}

// bytes secondCloudPoints = 2;
inline void find_grpc0Response::clear_secondcloudpoints() {
  secondcloudpoints_.ClearToEmpty();
}
inline const std::string& find_grpc0Response::secondcloudpoints() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Response.secondCloudPoints)
  return _internal_secondcloudpoints();
}
inline void find_grpc0Response::set_secondcloudpoints(const std::string& value) {
  _internal_set_secondcloudpoints(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Response.secondCloudPoints)
}
inline std::string* find_grpc0Response::mutable_secondcloudpoints() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Response.secondCloudPoints)
  return _internal_mutable_secondcloudpoints();
}
inline const std::string& find_grpc0Response::_internal_secondcloudpoints() const {
  return secondcloudpoints_.Get();
}
inline void find_grpc0Response::_internal_set_secondcloudpoints(const std::string& value) {
  
  secondcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Response::set_secondcloudpoints(std::string&& value) {
  
  secondcloudpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Response.secondCloudPoints)
}
inline void find_grpc0Response::set_secondcloudpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Response.secondCloudPoints)
}
inline void find_grpc0Response::set_secondcloudpoints(const void* value,
    size_t size) {
  
  secondcloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Response.secondCloudPoints)
}
inline std::string* find_grpc0Response::_internal_mutable_secondcloudpoints() {
  
  return secondcloudpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Response::release_secondcloudpoints() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Response.secondCloudPoints)
  return secondcloudpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Response::set_allocated_secondcloudpoints(std::string* secondcloudpoints) {
  if (secondcloudpoints != nullptr) {
    
  } else {
    
  }
  secondcloudpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondcloudpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Response.secondCloudPoints)
}

// bytes found_matches = 3;
inline void find_grpc0Response::clear_found_matches() {
  found_matches_.ClearToEmpty();
}
inline const std::string& find_grpc0Response::found_matches() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Response.found_matches)
  return _internal_found_matches();
}
inline void find_grpc0Response::set_found_matches(const std::string& value) {
  _internal_set_found_matches(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Response.found_matches)
}
inline std::string* find_grpc0Response::mutable_found_matches() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Response.found_matches)
  return _internal_mutable_found_matches();
}
inline const std::string& find_grpc0Response::_internal_found_matches() const {
  return found_matches_.Get();
}
inline void find_grpc0Response::_internal_set_found_matches(const std::string& value) {
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Response::set_found_matches(std::string&& value) {
  
  found_matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Response.found_matches)
}
inline void find_grpc0Response::set_found_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Response.found_matches)
}
inline void find_grpc0Response::set_found_matches(const void* value,
    size_t size) {
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Response.found_matches)
}
inline std::string* find_grpc0Response::_internal_mutable_found_matches() {
  
  return found_matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Response::release_found_matches() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Response.found_matches)
  return found_matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Response::set_allocated_found_matches(std::string* found_matches) {
  if (found_matches != nullptr) {
    
  } else {
    
  }
  found_matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), found_matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Response.found_matches)
}

// bytes remaining_matches = 4;
inline void find_grpc0Response::clear_remaining_matches() {
  remaining_matches_.ClearToEmpty();
}
inline const std::string& find_grpc0Response::remaining_matches() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Response.remaining_matches)
  return _internal_remaining_matches();
}
inline void find_grpc0Response::set_remaining_matches(const std::string& value) {
  _internal_set_remaining_matches(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Response.remaining_matches)
}
inline std::string* find_grpc0Response::mutable_remaining_matches() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc0Response.remaining_matches)
  return _internal_mutable_remaining_matches();
}
inline const std::string& find_grpc0Response::_internal_remaining_matches() const {
  return remaining_matches_.Get();
}
inline void find_grpc0Response::_internal_set_remaining_matches(const std::string& value) {
  
  remaining_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc0Response::set_remaining_matches(std::string&& value) {
  
  remaining_matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc0Response.remaining_matches)
}
inline void find_grpc0Response::set_remaining_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  remaining_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc0Response.remaining_matches)
}
inline void find_grpc0Response::set_remaining_matches(const void* value,
    size_t size) {
  
  remaining_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc0Response.remaining_matches)
}
inline std::string* find_grpc0Response::_internal_mutable_remaining_matches() {
  
  return remaining_matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc0Response::release_remaining_matches() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc0Response.remaining_matches)
  return remaining_matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc0Response::set_allocated_remaining_matches(std::string* remaining_matches) {
  if (remaining_matches != nullptr) {
    
  } else {
    
  }
  remaining_matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), remaining_matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc0Response.remaining_matches)
}

// sint32 xpcfGrpcReturnValue = 5;
inline void find_grpc0Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 find_grpc0Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 find_grpc0Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc0Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void find_grpc0Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void find_grpc0Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc0Response.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// find_grpc1Request

// bytes firstKeyframe = 1;
inline void find_grpc1Request::clear_firstkeyframe() {
  firstkeyframe_.ClearToEmpty();
}
inline const std::string& find_grpc1Request::firstkeyframe() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstKeyframe)
  return _internal_firstkeyframe();
}
inline void find_grpc1Request::set_firstkeyframe(const std::string& value) {
  _internal_set_firstkeyframe(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstKeyframe)
}
inline std::string* find_grpc1Request::mutable_firstkeyframe() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstKeyframe)
  return _internal_mutable_firstkeyframe();
}
inline const std::string& find_grpc1Request::_internal_firstkeyframe() const {
  return firstkeyframe_.Get();
}
inline void find_grpc1Request::_internal_set_firstkeyframe(const std::string& value) {
  
  firstkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc1Request::set_firstkeyframe(std::string&& value) {
  
  firstkeyframe_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstKeyframe)
}
inline void find_grpc1Request::set_firstkeyframe(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstKeyframe)
}
inline void find_grpc1Request::set_firstkeyframe(const void* value,
    size_t size) {
  
  firstkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstKeyframe)
}
inline std::string* find_grpc1Request::_internal_mutable_firstkeyframe() {
  
  return firstkeyframe_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc1Request::release_firstkeyframe() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstKeyframe)
  return firstkeyframe_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc1Request::set_allocated_firstkeyframe(std::string* firstkeyframe) {
  if (firstkeyframe != nullptr) {
    
  } else {
    
  }
  firstkeyframe_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstkeyframe,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstKeyframe)
}

// bytes secondKeyframe = 2;
inline void find_grpc1Request::clear_secondkeyframe() {
  secondkeyframe_.ClearToEmpty();
}
inline const std::string& find_grpc1Request::secondkeyframe() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondKeyframe)
  return _internal_secondkeyframe();
}
inline void find_grpc1Request::set_secondkeyframe(const std::string& value) {
  _internal_set_secondkeyframe(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondKeyframe)
}
inline std::string* find_grpc1Request::mutable_secondkeyframe() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondKeyframe)
  return _internal_mutable_secondkeyframe();
}
inline const std::string& find_grpc1Request::_internal_secondkeyframe() const {
  return secondkeyframe_.Get();
}
inline void find_grpc1Request::_internal_set_secondkeyframe(const std::string& value) {
  
  secondkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc1Request::set_secondkeyframe(std::string&& value) {
  
  secondkeyframe_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondKeyframe)
}
inline void find_grpc1Request::set_secondkeyframe(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondKeyframe)
}
inline void find_grpc1Request::set_secondkeyframe(const void* value,
    size_t size) {
  
  secondkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondKeyframe)
}
inline std::string* find_grpc1Request::_internal_mutable_secondkeyframe() {
  
  return secondkeyframe_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc1Request::release_secondkeyframe() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondKeyframe)
  return secondkeyframe_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc1Request::set_allocated_secondkeyframe(std::string* secondkeyframe) {
  if (secondkeyframe != nullptr) {
    
  } else {
    
  }
  secondkeyframe_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondkeyframe,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondKeyframe)
}

// bytes current_matches = 3;
inline void find_grpc1Request::clear_current_matches() {
  current_matches_.ClearToEmpty();
}
inline const std::string& find_grpc1Request::current_matches() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Request.current_matches)
  return _internal_current_matches();
}
inline void find_grpc1Request::set_current_matches(const std::string& value) {
  _internal_set_current_matches(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Request.current_matches)
}
inline std::string* find_grpc1Request::mutable_current_matches() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc1Request.current_matches)
  return _internal_mutable_current_matches();
}
inline const std::string& find_grpc1Request::_internal_current_matches() const {
  return current_matches_.Get();
}
inline void find_grpc1Request::_internal_set_current_matches(const std::string& value) {
  
  current_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc1Request::set_current_matches(std::string&& value) {
  
  current_matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc1Request.current_matches)
}
inline void find_grpc1Request::set_current_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  current_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc1Request.current_matches)
}
inline void find_grpc1Request::set_current_matches(const void* value,
    size_t size) {
  
  current_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc1Request.current_matches)
}
inline std::string* find_grpc1Request::_internal_mutable_current_matches() {
  
  return current_matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc1Request::release_current_matches() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc1Request.current_matches)
  return current_matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc1Request::set_allocated_current_matches(std::string* current_matches) {
  if (current_matches != nullptr) {
    
  } else {
    
  }
  current_matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), current_matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc1Request.current_matches)
}

// bytes firstCloudPointsIndices = 4;
inline void find_grpc1Request::clear_firstcloudpointsindices() {
  firstcloudpointsindices_.ClearToEmpty();
}
inline const std::string& find_grpc1Request::firstcloudpointsindices() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstCloudPointsIndices)
  return _internal_firstcloudpointsindices();
}
inline void find_grpc1Request::set_firstcloudpointsindices(const std::string& value) {
  _internal_set_firstcloudpointsindices(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstCloudPointsIndices)
}
inline std::string* find_grpc1Request::mutable_firstcloudpointsindices() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstCloudPointsIndices)
  return _internal_mutable_firstcloudpointsindices();
}
inline const std::string& find_grpc1Request::_internal_firstcloudpointsindices() const {
  return firstcloudpointsindices_.Get();
}
inline void find_grpc1Request::_internal_set_firstcloudpointsindices(const std::string& value) {
  
  firstcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc1Request::set_firstcloudpointsindices(std::string&& value) {
  
  firstcloudpointsindices_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstCloudPointsIndices)
}
inline void find_grpc1Request::set_firstcloudpointsindices(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstCloudPointsIndices)
}
inline void find_grpc1Request::set_firstcloudpointsindices(const void* value,
    size_t size) {
  
  firstcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstCloudPointsIndices)
}
inline std::string* find_grpc1Request::_internal_mutable_firstcloudpointsindices() {
  
  return firstcloudpointsindices_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc1Request::release_firstcloudpointsindices() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstCloudPointsIndices)
  return firstcloudpointsindices_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc1Request::set_allocated_firstcloudpointsindices(std::string* firstcloudpointsindices) {
  if (firstcloudpointsindices != nullptr) {
    
  } else {
    
  }
  firstcloudpointsindices_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstcloudpointsindices,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc1Request.firstCloudPointsIndices)
}

// bytes secondCloudPointsIndices = 5;
inline void find_grpc1Request::clear_secondcloudpointsindices() {
  secondcloudpointsindices_.ClearToEmpty();
}
inline const std::string& find_grpc1Request::secondcloudpointsindices() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondCloudPointsIndices)
  return _internal_secondcloudpointsindices();
}
inline void find_grpc1Request::set_secondcloudpointsindices(const std::string& value) {
  _internal_set_secondcloudpointsindices(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondCloudPointsIndices)
}
inline std::string* find_grpc1Request::mutable_secondcloudpointsindices() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondCloudPointsIndices)
  return _internal_mutable_secondcloudpointsindices();
}
inline const std::string& find_grpc1Request::_internal_secondcloudpointsindices() const {
  return secondcloudpointsindices_.Get();
}
inline void find_grpc1Request::_internal_set_secondcloudpointsindices(const std::string& value) {
  
  secondcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc1Request::set_secondcloudpointsindices(std::string&& value) {
  
  secondcloudpointsindices_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondCloudPointsIndices)
}
inline void find_grpc1Request::set_secondcloudpointsindices(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondCloudPointsIndices)
}
inline void find_grpc1Request::set_secondcloudpointsindices(const void* value,
    size_t size) {
  
  secondcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondCloudPointsIndices)
}
inline std::string* find_grpc1Request::_internal_mutable_secondcloudpointsindices() {
  
  return secondcloudpointsindices_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc1Request::release_secondcloudpointsindices() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondCloudPointsIndices)
  return secondcloudpointsindices_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc1Request::set_allocated_secondcloudpointsindices(std::string* secondcloudpointsindices) {
  if (secondcloudpointsindices != nullptr) {
    
  } else {
    
  }
  secondcloudpointsindices_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondcloudpointsindices,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc1Request.secondCloudPointsIndices)
}

// bytes found_matches = 6;
inline void find_grpc1Request::clear_found_matches() {
  found_matches_.ClearToEmpty();
}
inline const std::string& find_grpc1Request::found_matches() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Request.found_matches)
  return _internal_found_matches();
}
inline void find_grpc1Request::set_found_matches(const std::string& value) {
  _internal_set_found_matches(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Request.found_matches)
}
inline std::string* find_grpc1Request::mutable_found_matches() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc1Request.found_matches)
  return _internal_mutable_found_matches();
}
inline const std::string& find_grpc1Request::_internal_found_matches() const {
  return found_matches_.Get();
}
inline void find_grpc1Request::_internal_set_found_matches(const std::string& value) {
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc1Request::set_found_matches(std::string&& value) {
  
  found_matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc1Request.found_matches)
}
inline void find_grpc1Request::set_found_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc1Request.found_matches)
}
inline void find_grpc1Request::set_found_matches(const void* value,
    size_t size) {
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc1Request.found_matches)
}
inline std::string* find_grpc1Request::_internal_mutable_found_matches() {
  
  return found_matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc1Request::release_found_matches() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc1Request.found_matches)
  return found_matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc1Request::set_allocated_found_matches(std::string* found_matches) {
  if (found_matches != nullptr) {
    
  } else {
    
  }
  found_matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), found_matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc1Request.found_matches)
}

// -------------------------------------------------------------------

// find_grpc1Response

// bytes firstCloudPointsIndices = 1;
inline void find_grpc1Response::clear_firstcloudpointsindices() {
  firstcloudpointsindices_.ClearToEmpty();
}
inline const std::string& find_grpc1Response::firstcloudpointsindices() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Response.firstCloudPointsIndices)
  return _internal_firstcloudpointsindices();
}
inline void find_grpc1Response::set_firstcloudpointsindices(const std::string& value) {
  _internal_set_firstcloudpointsindices(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Response.firstCloudPointsIndices)
}
inline std::string* find_grpc1Response::mutable_firstcloudpointsindices() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc1Response.firstCloudPointsIndices)
  return _internal_mutable_firstcloudpointsindices();
}
inline const std::string& find_grpc1Response::_internal_firstcloudpointsindices() const {
  return firstcloudpointsindices_.Get();
}
inline void find_grpc1Response::_internal_set_firstcloudpointsindices(const std::string& value) {
  
  firstcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc1Response::set_firstcloudpointsindices(std::string&& value) {
  
  firstcloudpointsindices_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc1Response.firstCloudPointsIndices)
}
inline void find_grpc1Response::set_firstcloudpointsindices(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc1Response.firstCloudPointsIndices)
}
inline void find_grpc1Response::set_firstcloudpointsindices(const void* value,
    size_t size) {
  
  firstcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc1Response.firstCloudPointsIndices)
}
inline std::string* find_grpc1Response::_internal_mutable_firstcloudpointsindices() {
  
  return firstcloudpointsindices_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc1Response::release_firstcloudpointsindices() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc1Response.firstCloudPointsIndices)
  return firstcloudpointsindices_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc1Response::set_allocated_firstcloudpointsindices(std::string* firstcloudpointsindices) {
  if (firstcloudpointsindices != nullptr) {
    
  } else {
    
  }
  firstcloudpointsindices_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstcloudpointsindices,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc1Response.firstCloudPointsIndices)
}

// bytes secondCloudPointsIndices = 2;
inline void find_grpc1Response::clear_secondcloudpointsindices() {
  secondcloudpointsindices_.ClearToEmpty();
}
inline const std::string& find_grpc1Response::secondcloudpointsindices() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Response.secondCloudPointsIndices)
  return _internal_secondcloudpointsindices();
}
inline void find_grpc1Response::set_secondcloudpointsindices(const std::string& value) {
  _internal_set_secondcloudpointsindices(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Response.secondCloudPointsIndices)
}
inline std::string* find_grpc1Response::mutable_secondcloudpointsindices() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc1Response.secondCloudPointsIndices)
  return _internal_mutable_secondcloudpointsindices();
}
inline const std::string& find_grpc1Response::_internal_secondcloudpointsindices() const {
  return secondcloudpointsindices_.Get();
}
inline void find_grpc1Response::_internal_set_secondcloudpointsindices(const std::string& value) {
  
  secondcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc1Response::set_secondcloudpointsindices(std::string&& value) {
  
  secondcloudpointsindices_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc1Response.secondCloudPointsIndices)
}
inline void find_grpc1Response::set_secondcloudpointsindices(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc1Response.secondCloudPointsIndices)
}
inline void find_grpc1Response::set_secondcloudpointsindices(const void* value,
    size_t size) {
  
  secondcloudpointsindices_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc1Response.secondCloudPointsIndices)
}
inline std::string* find_grpc1Response::_internal_mutable_secondcloudpointsindices() {
  
  return secondcloudpointsindices_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc1Response::release_secondcloudpointsindices() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc1Response.secondCloudPointsIndices)
  return secondcloudpointsindices_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc1Response::set_allocated_secondcloudpointsindices(std::string* secondcloudpointsindices) {
  if (secondcloudpointsindices != nullptr) {
    
  } else {
    
  }
  secondcloudpointsindices_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondcloudpointsindices,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc1Response.secondCloudPointsIndices)
}

// bytes found_matches = 3;
inline void find_grpc1Response::clear_found_matches() {
  found_matches_.ClearToEmpty();
}
inline const std::string& find_grpc1Response::found_matches() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Response.found_matches)
  return _internal_found_matches();
}
inline void find_grpc1Response::set_found_matches(const std::string& value) {
  _internal_set_found_matches(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Response.found_matches)
}
inline std::string* find_grpc1Response::mutable_found_matches() {
  // @@protoc_insertion_point(field_mutable:grpcI3D3DCorrespondencesFinder.find_grpc1Response.found_matches)
  return _internal_mutable_found_matches();
}
inline const std::string& find_grpc1Response::_internal_found_matches() const {
  return found_matches_.Get();
}
inline void find_grpc1Response::_internal_set_found_matches(const std::string& value) {
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void find_grpc1Response::set_found_matches(std::string&& value) {
  
  found_matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3D3DCorrespondencesFinder.find_grpc1Response.found_matches)
}
inline void find_grpc1Response::set_found_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3D3DCorrespondencesFinder.find_grpc1Response.found_matches)
}
inline void find_grpc1Response::set_found_matches(const void* value,
    size_t size) {
  
  found_matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3D3DCorrespondencesFinder.find_grpc1Response.found_matches)
}
inline std::string* find_grpc1Response::_internal_mutable_found_matches() {
  
  return found_matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* find_grpc1Response::release_found_matches() {
  // @@protoc_insertion_point(field_release:grpcI3D3DCorrespondencesFinder.find_grpc1Response.found_matches)
  return found_matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void find_grpc1Response::set_allocated_found_matches(std::string* found_matches) {
  if (found_matches != nullptr) {
    
  } else {
    
  }
  found_matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), found_matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3D3DCorrespondencesFinder.find_grpc1Response.found_matches)
}

// sint32 xpcfGrpcReturnValue = 4;
inline void find_grpc1Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 find_grpc1Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 find_grpc1Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcI3D3DCorrespondencesFinder.find_grpc1Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void find_grpc1Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void find_grpc1Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcI3D3DCorrespondencesFinder.find_grpc1Response.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcI3D3DCorrespondencesFinder

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcI3D3DCorrespondencesFinderService_2eproto
