// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIMapManagerService.proto

#include "grpcIMapManagerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIMapManager {
constexpr setMapRequest::setMapRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : map_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct setMapRequestDefaultTypeInternal {
  constexpr setMapRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setMapRequestDefaultTypeInternal() {}
  union {
    setMapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setMapRequestDefaultTypeInternal _setMapRequest_default_instance_;
constexpr setMapResponse::setMapResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct setMapResponseDefaultTypeInternal {
  constexpr setMapResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setMapResponseDefaultTypeInternal() {}
  union {
    setMapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setMapResponseDefaultTypeInternal _setMapResponse_default_instance_;
constexpr getMapRequest::getMapRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : map_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct getMapRequestDefaultTypeInternal {
  constexpr getMapRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getMapRequestDefaultTypeInternal() {}
  union {
    getMapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getMapRequestDefaultTypeInternal _getMapRequest_default_instance_;
constexpr getMapResponse::getMapResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : map_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getMapResponseDefaultTypeInternal {
  constexpr getMapResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getMapResponseDefaultTypeInternal() {}
  union {
    getMapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getMapResponseDefaultTypeInternal _getMapResponse_default_instance_;
constexpr getLocalPointCloudRequest::getLocalPointCloudRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframe_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , localpointcloud_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0)
  , minweightneighbor_(0){}
struct getLocalPointCloudRequestDefaultTypeInternal {
  constexpr getLocalPointCloudRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getLocalPointCloudRequestDefaultTypeInternal() {}
  union {
    getLocalPointCloudRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getLocalPointCloudRequestDefaultTypeInternal _getLocalPointCloudRequest_default_instance_;
constexpr getLocalPointCloudResponse::getLocalPointCloudResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : localpointcloud_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getLocalPointCloudResponseDefaultTypeInternal {
  constexpr getLocalPointCloudResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getLocalPointCloudResponseDefaultTypeInternal() {}
  union {
    getLocalPointCloudResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getLocalPointCloudResponseDefaultTypeInternal _getLocalPointCloudResponse_default_instance_;
constexpr addCloudPointRequest::addCloudPointRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cloudpoint_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct addCloudPointRequestDefaultTypeInternal {
  constexpr addCloudPointRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addCloudPointRequestDefaultTypeInternal() {}
  union {
    addCloudPointRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addCloudPointRequestDefaultTypeInternal _addCloudPointRequest_default_instance_;
constexpr addCloudPointResponse::addCloudPointResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct addCloudPointResponseDefaultTypeInternal {
  constexpr addCloudPointResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addCloudPointResponseDefaultTypeInternal() {}
  union {
    addCloudPointResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addCloudPointResponseDefaultTypeInternal _addCloudPointResponse_default_instance_;
constexpr removeCloudPointRequest::removeCloudPointRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cloudpoint_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct removeCloudPointRequestDefaultTypeInternal {
  constexpr removeCloudPointRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~removeCloudPointRequestDefaultTypeInternal() {}
  union {
    removeCloudPointRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT removeCloudPointRequestDefaultTypeInternal _removeCloudPointRequest_default_instance_;
constexpr removeCloudPointResponse::removeCloudPointResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct removeCloudPointResponseDefaultTypeInternal {
  constexpr removeCloudPointResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~removeCloudPointResponseDefaultTypeInternal() {}
  union {
    removeCloudPointResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT removeCloudPointResponseDefaultTypeInternal _removeCloudPointResponse_default_instance_;
constexpr addKeyframeRequest::addKeyframeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframe_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct addKeyframeRequestDefaultTypeInternal {
  constexpr addKeyframeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addKeyframeRequestDefaultTypeInternal() {}
  union {
    addKeyframeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addKeyframeRequestDefaultTypeInternal _addKeyframeRequest_default_instance_;
constexpr addKeyframeResponse::addKeyframeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct addKeyframeResponseDefaultTypeInternal {
  constexpr addKeyframeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addKeyframeResponseDefaultTypeInternal() {}
  union {
    addKeyframeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addKeyframeResponseDefaultTypeInternal _addKeyframeResponse_default_instance_;
constexpr removeKeyframeRequest::removeKeyframeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframe_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct removeKeyframeRequestDefaultTypeInternal {
  constexpr removeKeyframeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~removeKeyframeRequestDefaultTypeInternal() {}
  union {
    removeKeyframeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT removeKeyframeRequestDefaultTypeInternal _removeKeyframeRequest_default_instance_;
constexpr removeKeyframeResponse::removeKeyframeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct removeKeyframeResponseDefaultTypeInternal {
  constexpr removeKeyframeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~removeKeyframeResponseDefaultTypeInternal() {}
  union {
    removeKeyframeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT removeKeyframeResponseDefaultTypeInternal _removeKeyframeResponse_default_instance_;
constexpr pointCloudPruningRequest::pointCloudPruningRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cloudpoints_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct pointCloudPruningRequestDefaultTypeInternal {
  constexpr pointCloudPruningRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~pointCloudPruningRequestDefaultTypeInternal() {}
  union {
    pointCloudPruningRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT pointCloudPruningRequestDefaultTypeInternal _pointCloudPruningRequest_default_instance_;
constexpr pointCloudPruningResponse::pointCloudPruningResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct pointCloudPruningResponseDefaultTypeInternal {
  constexpr pointCloudPruningResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~pointCloudPruningResponseDefaultTypeInternal() {}
  union {
    pointCloudPruningResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT pointCloudPruningResponseDefaultTypeInternal _pointCloudPruningResponse_default_instance_;
constexpr keyframePruningRequest::keyframePruningRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct keyframePruningRequestDefaultTypeInternal {
  constexpr keyframePruningRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~keyframePruningRequestDefaultTypeInternal() {}
  union {
    keyframePruningRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT keyframePruningRequestDefaultTypeInternal _keyframePruningRequest_default_instance_;
constexpr keyframePruningResponse::keyframePruningResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct keyframePruningResponseDefaultTypeInternal {
  constexpr keyframePruningResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~keyframePruningResponseDefaultTypeInternal() {}
  union {
    keyframePruningResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT keyframePruningResponseDefaultTypeInternal _keyframePruningResponse_default_instance_;
constexpr saveToFileRequest::saveToFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct saveToFileRequestDefaultTypeInternal {
  constexpr saveToFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~saveToFileRequestDefaultTypeInternal() {}
  union {
    saveToFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT saveToFileRequestDefaultTypeInternal _saveToFileRequest_default_instance_;
constexpr saveToFileResponse::saveToFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct saveToFileResponseDefaultTypeInternal {
  constexpr saveToFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~saveToFileResponseDefaultTypeInternal() {}
  union {
    saveToFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT saveToFileResponseDefaultTypeInternal _saveToFileResponse_default_instance_;
constexpr loadFromFileRequest::loadFromFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct loadFromFileRequestDefaultTypeInternal {
  constexpr loadFromFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~loadFromFileRequestDefaultTypeInternal() {}
  union {
    loadFromFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT loadFromFileRequestDefaultTypeInternal _loadFromFileRequest_default_instance_;
constexpr loadFromFileResponse::loadFromFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct loadFromFileResponseDefaultTypeInternal {
  constexpr loadFromFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~loadFromFileResponseDefaultTypeInternal() {}
  union {
    loadFromFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT loadFromFileResponseDefaultTypeInternal _loadFromFileResponse_default_instance_;
}  // namespace grpcIMapManager
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIMapManagerService_2eproto[22];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIMapManagerService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIMapManagerService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIMapManagerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapRequest, map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapRequest, map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapResponse, map_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloudRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloudRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloudRequest, keyframe_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloudRequest, minweightneighbor_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloudRequest, localpointcloud_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloudResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloudResponse, localpointcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloudResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointRequest, cloudpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointRequest, cloudpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeRequest, keyframe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeRequest, keyframe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningRequest, cloudpoints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningRequest, keyframes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::saveToFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::saveToFileRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::saveToFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::saveToFileResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::loadFromFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::loadFromFileRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::loadFromFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::loadFromFileResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIMapManager::setMapRequest)},
  { 7, -1, sizeof(::grpcIMapManager::setMapResponse)},
  { 13, -1, sizeof(::grpcIMapManager::getMapRequest)},
  { 20, -1, sizeof(::grpcIMapManager::getMapResponse)},
  { 27, -1, sizeof(::grpcIMapManager::getLocalPointCloudRequest)},
  { 36, -1, sizeof(::grpcIMapManager::getLocalPointCloudResponse)},
  { 43, -1, sizeof(::grpcIMapManager::addCloudPointRequest)},
  { 50, -1, sizeof(::grpcIMapManager::addCloudPointResponse)},
  { 56, -1, sizeof(::grpcIMapManager::removeCloudPointRequest)},
  { 63, -1, sizeof(::grpcIMapManager::removeCloudPointResponse)},
  { 69, -1, sizeof(::grpcIMapManager::addKeyframeRequest)},
  { 76, -1, sizeof(::grpcIMapManager::addKeyframeResponse)},
  { 82, -1, sizeof(::grpcIMapManager::removeKeyframeRequest)},
  { 89, -1, sizeof(::grpcIMapManager::removeKeyframeResponse)},
  { 95, -1, sizeof(::grpcIMapManager::pointCloudPruningRequest)},
  { 102, -1, sizeof(::grpcIMapManager::pointCloudPruningResponse)},
  { 108, -1, sizeof(::grpcIMapManager::keyframePruningRequest)},
  { 115, -1, sizeof(::grpcIMapManager::keyframePruningResponse)},
  { 121, -1, sizeof(::grpcIMapManager::saveToFileRequest)},
  { 127, -1, sizeof(::grpcIMapManager::saveToFileResponse)},
  { 133, -1, sizeof(::grpcIMapManager::loadFromFileRequest)},
  { 139, -1, sizeof(::grpcIMapManager::loadFromFileResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_setMapRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_setMapResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_getMapRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_getMapResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_getLocalPointCloudRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_getLocalPointCloudResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_addCloudPointRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_addCloudPointResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_removeCloudPointRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_removeCloudPointResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_addKeyframeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_addKeyframeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_removeKeyframeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_removeKeyframeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_pointCloudPruningRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_pointCloudPruningResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_keyframePruningRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_keyframePruningResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_saveToFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_saveToFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_loadFromFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMapManager::_loadFromFileResponse_default_instance_),
};

const char descriptor_table_protodef_grpcIMapManagerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034grpcIMapManagerService.proto\022\017grpcIMap"
  "Manager\032\033google/protobuf/empty.proto\"A\n\r"
  "setMapRequest\022#\n\033grpcServerCompressionFo"
  "rmat\030\001 \001(\005\022\013\n\003map\030\002 \001(\014\"-\n\016setMapRespons"
  "e\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"A\n\rgetMap"
  "Request\022#\n\033grpcServerCompressionFormat\030\001"
  " \001(\005\022\013\n\003map\030\002 \001(\014\":\n\016getMapResponse\022\013\n\003m"
  "ap\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\"\206\001"
  "\n\031getLocalPointCloudRequest\022#\n\033grpcServe"
  "rCompressionFormat\030\001 \001(\005\022\020\n\010keyframe\030\002 \001"
  "(\014\022\031\n\021minWeightNeighbor\030\003 \001(\002\022\027\n\017localPo"
  "intCloud\030\004 \001(\014\"R\n\032getLocalPointCloudResp"
  "onse\022\027\n\017localPointCloud\030\001 \001(\014\022\033\n\023xpcfGrp"
  "cReturnValue\030\002 \001(\021\"O\n\024addCloudPointReque"
  "st\022#\n\033grpcServerCompressionFormat\030\001 \001(\005\022"
  "\022\n\ncloudPoint\030\002 \001(\014\"4\n\025addCloudPointResp"
  "onse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"R\n\027rem"
  "oveCloudPointRequest\022#\n\033grpcServerCompre"
  "ssionFormat\030\001 \001(\005\022\022\n\ncloudPoint\030\002 \001(\014\"7\n"
  "\030removeCloudPointResponse\022\033\n\023xpcfGrpcRet"
  "urnValue\030\001 \001(\021\"K\n\022addKeyframeRequest\022#\n\033"
  "grpcServerCompressionFormat\030\001 \001(\005\022\020\n\010key"
  "frame\030\002 \001(\014\"2\n\023addKeyframeResponse\022\033\n\023xp"
  "cfGrpcReturnValue\030\001 \001(\021\"N\n\025removeKeyfram"
  "eRequest\022#\n\033grpcServerCompressionFormat\030"
  "\001 \001(\005\022\020\n\010keyframe\030\002 \001(\014\"5\n\026removeKeyfram"
  "eResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"T"
  "\n\030pointCloudPruningRequest\022#\n\033grpcServer"
  "CompressionFormat\030\001 \001(\005\022\023\n\013cloudPoints\030\002"
  " \001(\014\"8\n\031pointCloudPruningResponse\022\033\n\023xpc"
  "fGrpcReturnValue\030\001 \001(\021\"P\n\026keyframePrunin"
  "gRequest\022#\n\033grpcServerCompressionFormat\030"
  "\001 \001(\005\022\021\n\tkeyframes\030\002 \001(\014\"6\n\027keyframePrun"
  "ingResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021"
  "\"8\n\021saveToFileRequest\022#\n\033grpcServerCompr"
  "essionFormat\030\001 \001(\005\"1\n\022saveToFileResponse"
  "\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\":\n\023loadFro"
  "mFileRequest\022#\n\033grpcServerCompressionFor"
  "mat\030\001 \001(\005\"3\n\024loadFromFileResponse\022\033\n\023xpc"
  "fGrpcReturnValue\030\001 \001(\0212\277\010\n\026grpcIMapManag"
  "erService\022K\n\006setMap\022\036.grpcIMapManager.se"
  "tMapRequest\032\037.grpcIMapManager.setMapResp"
  "onse\"\000\022K\n\006getMap\022\036.grpcIMapManager.getMa"
  "pRequest\032\037.grpcIMapManager.getMapRespons"
  "e\"\000\022o\n\022getLocalPointCloud\022*.grpcIMapMana"
  "ger.getLocalPointCloudRequest\032+.grpcIMap"
  "Manager.getLocalPointCloudResponse\"\000\022`\n\r"
  "addCloudPoint\022%.grpcIMapManager.addCloud"
  "PointRequest\032&.grpcIMapManager.addCloudP"
  "ointResponse\"\000\022i\n\020removeCloudPoint\022(.grp"
  "cIMapManager.removeCloudPointRequest\032).g"
  "rpcIMapManager.removeCloudPointResponse\""
  "\000\022Z\n\013addKeyframe\022#.grpcIMapManager.addKe"
  "yframeRequest\032$.grpcIMapManager.addKeyfr"
  "ameResponse\"\000\022c\n\016removeKeyframe\022&.grpcIM"
  "apManager.removeKeyframeRequest\032\'.grpcIM"
  "apManager.removeKeyframeResponse\"\000\022l\n\021po"
  "intCloudPruning\022).grpcIMapManager.pointC"
  "loudPruningRequest\032*.grpcIMapManager.poi"
  "ntCloudPruningResponse\"\000\022f\n\017keyframePrun"
  "ing\022\'.grpcIMapManager.keyframePruningReq"
  "uest\032(.grpcIMapManager.keyframePruningRe"
  "sponse\"\000\022W\n\nsaveToFile\022\".grpcIMapManager"
  ".saveToFileRequest\032#.grpcIMapManager.sav"
  "eToFileResponse\"\000\022]\n\014loadFromFile\022$.grpc"
  "IMapManager.loadFromFileRequest\032%.grpcIM"
  "apManager.loadFromFileResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIMapManagerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIMapManagerService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIMapManagerService_2eproto = {
  false, false, 2680, descriptor_table_protodef_grpcIMapManagerService_2eproto, "grpcIMapManagerService.proto", 
  &descriptor_table_grpcIMapManagerService_2eproto_once, descriptor_table_grpcIMapManagerService_2eproto_deps, 1, 22,
  schemas, file_default_instances, TableStruct_grpcIMapManagerService_2eproto::offsets,
  file_level_metadata_grpcIMapManagerService_2eproto, file_level_enum_descriptors_grpcIMapManagerService_2eproto, file_level_service_descriptors_grpcIMapManagerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIMapManagerService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIMapManagerService_2eproto);
  return descriptor_table_grpcIMapManagerService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIMapManagerService_2eproto(&descriptor_table_grpcIMapManagerService_2eproto);
namespace grpcIMapManager {

// ===================================================================

class setMapRequest::_Internal {
 public:
};

setMapRequest::setMapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.setMapRequest)
}
setMapRequest::setMapRequest(const setMapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_map().empty()) {
    map_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_map(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.setMapRequest)
}

void setMapRequest::SharedCtor() {
map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

setMapRequest::~setMapRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.setMapRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setMapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  map_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setMapRequest::ArenaDtor(void* object) {
  setMapRequest* _this = reinterpret_cast< setMapRequest* >(object);
  (void)_this;
}
void setMapRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setMapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.setMapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes map = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_map();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setMapRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.setMapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes map = 2;
  if (this->map().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_map(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.setMapRequest)
  return target;
}

size_t setMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.setMapRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes map = 2;
  if (this->map().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setMapRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.setMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setMapRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setMapRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.setMapRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.setMapRequest)
    MergeFrom(*source);
  }
}

void setMapRequest::MergeFrom(const setMapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.setMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map().size() > 0) {
    _internal_set_map(from._internal_map());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void setMapRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.setMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setMapRequest::CopyFrom(const setMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.setMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapRequest::IsInitialized() const {
  return true;
}

void setMapRequest::InternalSwap(setMapRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  map_.Swap(&other->map_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setMapResponse::_Internal {
 public:
};

setMapResponse::setMapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.setMapResponse)
}
setMapResponse::setMapResponse(const setMapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.setMapResponse)
}

void setMapResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

setMapResponse::~setMapResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.setMapResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setMapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void setMapResponse::ArenaDtor(void* object) {
  setMapResponse* _this = reinterpret_cast< setMapResponse* >(object);
  (void)_this;
}
void setMapResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setMapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.setMapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setMapResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.setMapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.setMapResponse)
  return target;
}

size_t setMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.setMapResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setMapResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.setMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const setMapResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setMapResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.setMapResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.setMapResponse)
    MergeFrom(*source);
  }
}

void setMapResponse::MergeFrom(const setMapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.setMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void setMapResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.setMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setMapResponse::CopyFrom(const setMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.setMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapResponse::IsInitialized() const {
  return true;
}

void setMapResponse::InternalSwap(setMapResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getMapRequest::_Internal {
 public:
};

getMapRequest::getMapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getMapRequest)
}
getMapRequest::getMapRequest(const getMapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_map().empty()) {
    map_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_map(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getMapRequest)
}

void getMapRequest::SharedCtor() {
map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

getMapRequest::~getMapRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getMapRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getMapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  map_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getMapRequest::ArenaDtor(void* object) {
  getMapRequest* _this = reinterpret_cast< getMapRequest* >(object);
  (void)_this;
}
void getMapRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getMapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getMapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes map = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_map();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getMapRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getMapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes map = 2;
  if (this->map().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_map(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getMapRequest)
  return target;
}

size_t getMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getMapRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes map = 2;
  if (this->map().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getMapRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.getMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getMapRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getMapRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.getMapRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.getMapRequest)
    MergeFrom(*source);
  }
}

void getMapRequest::MergeFrom(const getMapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map().size() > 0) {
    _internal_set_map(from._internal_map());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getMapRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.getMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getMapRequest::CopyFrom(const getMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapRequest::IsInitialized() const {
  return true;
}

void getMapRequest::InternalSwap(getMapRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  map_.Swap(&other->map_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getMapResponse::_Internal {
 public:
};

getMapResponse::getMapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getMapResponse)
}
getMapResponse::getMapResponse(const getMapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_map().empty()) {
    map_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_map(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getMapResponse)
}

void getMapResponse::SharedCtor() {
map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getMapResponse::~getMapResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getMapResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getMapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  map_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getMapResponse::ArenaDtor(void* object) {
  getMapResponse* _this = reinterpret_cast< getMapResponse* >(object);
  (void)_this;
}
void getMapResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getMapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getMapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_map();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getMapResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getMapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes map = 1;
  if (this->map().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_map(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getMapResponse)
  return target;
}

size_t getMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getMapResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes map = 1;
  if (this->map().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getMapResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.getMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getMapResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getMapResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.getMapResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.getMapResponse)
    MergeFrom(*source);
  }
}

void getMapResponse::MergeFrom(const getMapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map().size() > 0) {
    _internal_set_map(from._internal_map());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getMapResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.getMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getMapResponse::CopyFrom(const getMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapResponse::IsInitialized() const {
  return true;
}

void getMapResponse::InternalSwap(getMapResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  map_.Swap(&other->map_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getLocalPointCloudRequest::_Internal {
 public:
};

getLocalPointCloudRequest::getLocalPointCloudRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getLocalPointCloudRequest)
}
getLocalPointCloudRequest::getLocalPointCloudRequest(const getLocalPointCloudRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframe(), 
      GetArena());
  }
  localpointcloud_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_localpointcloud().empty()) {
    localpointcloud_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_localpointcloud(), 
      GetArena());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&minweightneighbor_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(minweightneighbor_));
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getLocalPointCloudRequest)
}

void getLocalPointCloudRequest::SharedCtor() {
keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
localpointcloud_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&minweightneighbor_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(minweightneighbor_));
}

getLocalPointCloudRequest::~getLocalPointCloudRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getLocalPointCloudRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getLocalPointCloudRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localpointcloud_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getLocalPointCloudRequest::ArenaDtor(void* object) {
  getLocalPointCloudRequest* _this = reinterpret_cast< getLocalPointCloudRequest* >(object);
  (void)_this;
}
void getLocalPointCloudRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getLocalPointCloudRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getLocalPointCloudRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getLocalPointCloudRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  localpointcloud_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minweightneighbor_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(minweightneighbor_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getLocalPointCloudRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float minWeightNeighbor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          minweightneighbor_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // bytes localPointCloud = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_localpointcloud();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getLocalPointCloudRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getLocalPointCloudRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe(), target);
  }

  // float minWeightNeighbor = 3;
  if (!(this->minweightneighbor() <= 0 && this->minweightneighbor() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_minweightneighbor(), target);
  }

  // bytes localPointCloud = 4;
  if (this->localpointcloud().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_localpointcloud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getLocalPointCloudRequest)
  return target;
}

size_t getLocalPointCloudRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getLocalPointCloudRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // bytes localPointCloud = 4;
  if (this->localpointcloud().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_localpointcloud());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  // float minWeightNeighbor = 3;
  if (!(this->minweightneighbor() <= 0 && this->minweightneighbor() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getLocalPointCloudRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.getLocalPointCloudRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getLocalPointCloudRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getLocalPointCloudRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.getLocalPointCloudRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.getLocalPointCloudRequest)
    MergeFrom(*source);
  }
}

void getLocalPointCloudRequest::MergeFrom(const getLocalPointCloudRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getLocalPointCloudRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframe().size() > 0) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (from.localpointcloud().size() > 0) {
    _internal_set_localpointcloud(from._internal_localpointcloud());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (!(from.minweightneighbor() <= 0 && from.minweightneighbor() >= 0)) {
    _internal_set_minweightneighbor(from._internal_minweightneighbor());
  }
}

void getLocalPointCloudRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.getLocalPointCloudRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getLocalPointCloudRequest::CopyFrom(const getLocalPointCloudRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getLocalPointCloudRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getLocalPointCloudRequest::IsInitialized() const {
  return true;
}

void getLocalPointCloudRequest::InternalSwap(getLocalPointCloudRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframe_.Swap(&other->keyframe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  localpointcloud_.Swap(&other->localpointcloud_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getLocalPointCloudRequest, minweightneighbor_)
      + sizeof(getLocalPointCloudRequest::minweightneighbor_)
      - PROTOBUF_FIELD_OFFSET(getLocalPointCloudRequest, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getLocalPointCloudRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getLocalPointCloudResponse::_Internal {
 public:
};

getLocalPointCloudResponse::getLocalPointCloudResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getLocalPointCloudResponse)
}
getLocalPointCloudResponse::getLocalPointCloudResponse(const getLocalPointCloudResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  localpointcloud_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_localpointcloud().empty()) {
    localpointcloud_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_localpointcloud(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getLocalPointCloudResponse)
}

void getLocalPointCloudResponse::SharedCtor() {
localpointcloud_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getLocalPointCloudResponse::~getLocalPointCloudResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getLocalPointCloudResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getLocalPointCloudResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  localpointcloud_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getLocalPointCloudResponse::ArenaDtor(void* object) {
  getLocalPointCloudResponse* _this = reinterpret_cast< getLocalPointCloudResponse* >(object);
  (void)_this;
}
void getLocalPointCloudResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getLocalPointCloudResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getLocalPointCloudResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getLocalPointCloudResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  localpointcloud_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getLocalPointCloudResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes localPointCloud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_localpointcloud();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getLocalPointCloudResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getLocalPointCloudResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes localPointCloud = 1;
  if (this->localpointcloud().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_localpointcloud(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getLocalPointCloudResponse)
  return target;
}

size_t getLocalPointCloudResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getLocalPointCloudResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes localPointCloud = 1;
  if (this->localpointcloud().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_localpointcloud());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getLocalPointCloudResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.getLocalPointCloudResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getLocalPointCloudResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getLocalPointCloudResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.getLocalPointCloudResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.getLocalPointCloudResponse)
    MergeFrom(*source);
  }
}

void getLocalPointCloudResponse::MergeFrom(const getLocalPointCloudResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getLocalPointCloudResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.localpointcloud().size() > 0) {
    _internal_set_localpointcloud(from._internal_localpointcloud());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getLocalPointCloudResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.getLocalPointCloudResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getLocalPointCloudResponse::CopyFrom(const getLocalPointCloudResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getLocalPointCloudResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getLocalPointCloudResponse::IsInitialized() const {
  return true;
}

void getLocalPointCloudResponse::InternalSwap(getLocalPointCloudResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  localpointcloud_.Swap(&other->localpointcloud_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getLocalPointCloudResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class addCloudPointRequest::_Internal {
 public:
};

addCloudPointRequest::addCloudPointRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addCloudPointRequest)
}
addCloudPointRequest::addCloudPointRequest(const addCloudPointRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cloudpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cloudpoint().empty()) {
    cloudpoint_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cloudpoint(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addCloudPointRequest)
}

void addCloudPointRequest::SharedCtor() {
cloudpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

addCloudPointRequest::~addCloudPointRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addCloudPointRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void addCloudPointRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cloudpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void addCloudPointRequest::ArenaDtor(void* object) {
  addCloudPointRequest* _this = reinterpret_cast< addCloudPointRequest* >(object);
  (void)_this;
}
void addCloudPointRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addCloudPointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addCloudPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addCloudPointRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cloudpoint_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addCloudPointRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes cloudPoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_cloudpoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addCloudPointRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addCloudPointRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes cloudPoint = 2;
  if (this->cloudpoint().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cloudpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addCloudPointRequest)
  return target;
}

size_t addCloudPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addCloudPointRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cloudPoint = 2;
  if (this->cloudpoint().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cloudpoint());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addCloudPointRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.addCloudPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const addCloudPointRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addCloudPointRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.addCloudPointRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.addCloudPointRequest)
    MergeFrom(*source);
  }
}

void addCloudPointRequest::MergeFrom(const addCloudPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addCloudPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cloudpoint().size() > 0) {
    _internal_set_cloudpoint(from._internal_cloudpoint());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void addCloudPointRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.addCloudPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addCloudPointRequest::CopyFrom(const addCloudPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addCloudPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addCloudPointRequest::IsInitialized() const {
  return true;
}

void addCloudPointRequest::InternalSwap(addCloudPointRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cloudpoint_.Swap(&other->cloudpoint_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addCloudPointRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class addCloudPointResponse::_Internal {
 public:
};

addCloudPointResponse::addCloudPointResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addCloudPointResponse)
}
addCloudPointResponse::addCloudPointResponse(const addCloudPointResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addCloudPointResponse)
}

void addCloudPointResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

addCloudPointResponse::~addCloudPointResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addCloudPointResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void addCloudPointResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void addCloudPointResponse::ArenaDtor(void* object) {
  addCloudPointResponse* _this = reinterpret_cast< addCloudPointResponse* >(object);
  (void)_this;
}
void addCloudPointResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addCloudPointResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addCloudPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addCloudPointResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addCloudPointResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addCloudPointResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addCloudPointResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addCloudPointResponse)
  return target;
}

size_t addCloudPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addCloudPointResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addCloudPointResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.addCloudPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const addCloudPointResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addCloudPointResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.addCloudPointResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.addCloudPointResponse)
    MergeFrom(*source);
  }
}

void addCloudPointResponse::MergeFrom(const addCloudPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addCloudPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void addCloudPointResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.addCloudPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addCloudPointResponse::CopyFrom(const addCloudPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addCloudPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addCloudPointResponse::IsInitialized() const {
  return true;
}

void addCloudPointResponse::InternalSwap(addCloudPointResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addCloudPointResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class removeCloudPointRequest::_Internal {
 public:
};

removeCloudPointRequest::removeCloudPointRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeCloudPointRequest)
}
removeCloudPointRequest::removeCloudPointRequest(const removeCloudPointRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cloudpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cloudpoint().empty()) {
    cloudpoint_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cloudpoint(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeCloudPointRequest)
}

void removeCloudPointRequest::SharedCtor() {
cloudpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

removeCloudPointRequest::~removeCloudPointRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeCloudPointRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void removeCloudPointRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cloudpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void removeCloudPointRequest::ArenaDtor(void* object) {
  removeCloudPointRequest* _this = reinterpret_cast< removeCloudPointRequest* >(object);
  (void)_this;
}
void removeCloudPointRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void removeCloudPointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeCloudPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeCloudPointRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cloudpoint_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeCloudPointRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes cloudPoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_cloudpoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* removeCloudPointRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeCloudPointRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes cloudPoint = 2;
  if (this->cloudpoint().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cloudpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeCloudPointRequest)
  return target;
}

size_t removeCloudPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeCloudPointRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cloudPoint = 2;
  if (this->cloudpoint().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cloudpoint());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void removeCloudPointRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.removeCloudPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const removeCloudPointRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<removeCloudPointRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.removeCloudPointRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.removeCloudPointRequest)
    MergeFrom(*source);
  }
}

void removeCloudPointRequest::MergeFrom(const removeCloudPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeCloudPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cloudpoint().size() > 0) {
    _internal_set_cloudpoint(from._internal_cloudpoint());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void removeCloudPointRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.removeCloudPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void removeCloudPointRequest::CopyFrom(const removeCloudPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeCloudPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeCloudPointRequest::IsInitialized() const {
  return true;
}

void removeCloudPointRequest::InternalSwap(removeCloudPointRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cloudpoint_.Swap(&other->cloudpoint_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeCloudPointRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class removeCloudPointResponse::_Internal {
 public:
};

removeCloudPointResponse::removeCloudPointResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeCloudPointResponse)
}
removeCloudPointResponse::removeCloudPointResponse(const removeCloudPointResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeCloudPointResponse)
}

void removeCloudPointResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

removeCloudPointResponse::~removeCloudPointResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeCloudPointResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void removeCloudPointResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void removeCloudPointResponse::ArenaDtor(void* object) {
  removeCloudPointResponse* _this = reinterpret_cast< removeCloudPointResponse* >(object);
  (void)_this;
}
void removeCloudPointResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void removeCloudPointResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeCloudPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeCloudPointResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeCloudPointResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* removeCloudPointResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeCloudPointResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeCloudPointResponse)
  return target;
}

size_t removeCloudPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeCloudPointResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void removeCloudPointResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.removeCloudPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const removeCloudPointResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<removeCloudPointResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.removeCloudPointResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.removeCloudPointResponse)
    MergeFrom(*source);
  }
}

void removeCloudPointResponse::MergeFrom(const removeCloudPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeCloudPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void removeCloudPointResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.removeCloudPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void removeCloudPointResponse::CopyFrom(const removeCloudPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeCloudPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeCloudPointResponse::IsInitialized() const {
  return true;
}

void removeCloudPointResponse::InternalSwap(removeCloudPointResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeCloudPointResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class addKeyframeRequest::_Internal {
 public:
};

addKeyframeRequest::addKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addKeyframeRequest)
}
addKeyframeRequest::addKeyframeRequest(const addKeyframeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframe(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addKeyframeRequest)
}

void addKeyframeRequest::SharedCtor() {
keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

addKeyframeRequest::~addKeyframeRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addKeyframeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void addKeyframeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void addKeyframeRequest::ArenaDtor(void* object) {
  addKeyframeRequest* _this = reinterpret_cast< addKeyframeRequest* >(object);
  (void)_this;
}
void addKeyframeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addKeyframeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addKeyframeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addKeyframeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addKeyframeRequest)
  return target;
}

size_t addKeyframeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addKeyframeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addKeyframeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.addKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const addKeyframeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addKeyframeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.addKeyframeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.addKeyframeRequest)
    MergeFrom(*source);
  }
}

void addKeyframeRequest::MergeFrom(const addKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframe().size() > 0) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void addKeyframeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.addKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addKeyframeRequest::CopyFrom(const addKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframeRequest::IsInitialized() const {
  return true;
}

void addKeyframeRequest::InternalSwap(addKeyframeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframe_.Swap(&other->keyframe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class addKeyframeResponse::_Internal {
 public:
};

addKeyframeResponse::addKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addKeyframeResponse)
}
addKeyframeResponse::addKeyframeResponse(const addKeyframeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addKeyframeResponse)
}

void addKeyframeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

addKeyframeResponse::~addKeyframeResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addKeyframeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void addKeyframeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void addKeyframeResponse::ArenaDtor(void* object) {
  addKeyframeResponse* _this = reinterpret_cast< addKeyframeResponse* >(object);
  (void)_this;
}
void addKeyframeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addKeyframeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addKeyframeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addKeyframeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addKeyframeResponse)
  return target;
}

size_t addKeyframeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addKeyframeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addKeyframeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.addKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const addKeyframeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addKeyframeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.addKeyframeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.addKeyframeResponse)
    MergeFrom(*source);
  }
}

void addKeyframeResponse::MergeFrom(const addKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void addKeyframeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.addKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addKeyframeResponse::CopyFrom(const addKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframeResponse::IsInitialized() const {
  return true;
}

void addKeyframeResponse::InternalSwap(addKeyframeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class removeKeyframeRequest::_Internal {
 public:
};

removeKeyframeRequest::removeKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeKeyframeRequest)
}
removeKeyframeRequest::removeKeyframeRequest(const removeKeyframeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframe(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeKeyframeRequest)
}

void removeKeyframeRequest::SharedCtor() {
keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

removeKeyframeRequest::~removeKeyframeRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeKeyframeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void removeKeyframeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void removeKeyframeRequest::ArenaDtor(void* object) {
  removeKeyframeRequest* _this = reinterpret_cast< removeKeyframeRequest* >(object);
  (void)_this;
}
void removeKeyframeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void removeKeyframeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeKeyframeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeKeyframeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* removeKeyframeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeKeyframeRequest)
  return target;
}

size_t removeKeyframeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeKeyframeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void removeKeyframeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.removeKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const removeKeyframeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<removeKeyframeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.removeKeyframeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.removeKeyframeRequest)
    MergeFrom(*source);
  }
}

void removeKeyframeRequest::MergeFrom(const removeKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframe().size() > 0) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void removeKeyframeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.removeKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void removeKeyframeRequest::CopyFrom(const removeKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeKeyframeRequest::IsInitialized() const {
  return true;
}

void removeKeyframeRequest::InternalSwap(removeKeyframeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframe_.Swap(&other->keyframe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeKeyframeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class removeKeyframeResponse::_Internal {
 public:
};

removeKeyframeResponse::removeKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeKeyframeResponse)
}
removeKeyframeResponse::removeKeyframeResponse(const removeKeyframeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeKeyframeResponse)
}

void removeKeyframeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

removeKeyframeResponse::~removeKeyframeResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeKeyframeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void removeKeyframeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void removeKeyframeResponse::ArenaDtor(void* object) {
  removeKeyframeResponse* _this = reinterpret_cast< removeKeyframeResponse* >(object);
  (void)_this;
}
void removeKeyframeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void removeKeyframeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeKeyframeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeKeyframeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* removeKeyframeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeKeyframeResponse)
  return target;
}

size_t removeKeyframeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeKeyframeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void removeKeyframeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.removeKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const removeKeyframeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<removeKeyframeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.removeKeyframeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.removeKeyframeResponse)
    MergeFrom(*source);
  }
}

void removeKeyframeResponse::MergeFrom(const removeKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void removeKeyframeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.removeKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void removeKeyframeResponse::CopyFrom(const removeKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeKeyframeResponse::IsInitialized() const {
  return true;
}

void removeKeyframeResponse::InternalSwap(removeKeyframeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeKeyframeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class pointCloudPruningRequest::_Internal {
 public:
};

pointCloudPruningRequest::pointCloudPruningRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.pointCloudPruningRequest)
}
pointCloudPruningRequest::pointCloudPruningRequest(const pointCloudPruningRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cloudpoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cloudpoints().empty()) {
    cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cloudpoints(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.pointCloudPruningRequest)
}

void pointCloudPruningRequest::SharedCtor() {
cloudpoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

pointCloudPruningRequest::~pointCloudPruningRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.pointCloudPruningRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void pointCloudPruningRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cloudpoints_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void pointCloudPruningRequest::ArenaDtor(void* object) {
  pointCloudPruningRequest* _this = reinterpret_cast< pointCloudPruningRequest* >(object);
  (void)_this;
}
void pointCloudPruningRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void pointCloudPruningRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void pointCloudPruningRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.pointCloudPruningRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cloudpoints_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* pointCloudPruningRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes cloudPoints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_cloudpoints();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* pointCloudPruningRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.pointCloudPruningRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes cloudPoints = 2;
  if (this->cloudpoints().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cloudpoints(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.pointCloudPruningRequest)
  return target;
}

size_t pointCloudPruningRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.pointCloudPruningRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cloudPoints = 2;
  if (this->cloudpoints().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cloudpoints());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pointCloudPruningRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.pointCloudPruningRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const pointCloudPruningRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<pointCloudPruningRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.pointCloudPruningRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.pointCloudPruningRequest)
    MergeFrom(*source);
  }
}

void pointCloudPruningRequest::MergeFrom(const pointCloudPruningRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.pointCloudPruningRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cloudpoints().size() > 0) {
    _internal_set_cloudpoints(from._internal_cloudpoints());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void pointCloudPruningRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.pointCloudPruningRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pointCloudPruningRequest::CopyFrom(const pointCloudPruningRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.pointCloudPruningRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pointCloudPruningRequest::IsInitialized() const {
  return true;
}

void pointCloudPruningRequest::InternalSwap(pointCloudPruningRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cloudpoints_.Swap(&other->cloudpoints_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata pointCloudPruningRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class pointCloudPruningResponse::_Internal {
 public:
};

pointCloudPruningResponse::pointCloudPruningResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.pointCloudPruningResponse)
}
pointCloudPruningResponse::pointCloudPruningResponse(const pointCloudPruningResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.pointCloudPruningResponse)
}

void pointCloudPruningResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

pointCloudPruningResponse::~pointCloudPruningResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.pointCloudPruningResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void pointCloudPruningResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void pointCloudPruningResponse::ArenaDtor(void* object) {
  pointCloudPruningResponse* _this = reinterpret_cast< pointCloudPruningResponse* >(object);
  (void)_this;
}
void pointCloudPruningResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void pointCloudPruningResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void pointCloudPruningResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.pointCloudPruningResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* pointCloudPruningResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* pointCloudPruningResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.pointCloudPruningResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.pointCloudPruningResponse)
  return target;
}

size_t pointCloudPruningResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.pointCloudPruningResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pointCloudPruningResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.pointCloudPruningResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const pointCloudPruningResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<pointCloudPruningResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.pointCloudPruningResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.pointCloudPruningResponse)
    MergeFrom(*source);
  }
}

void pointCloudPruningResponse::MergeFrom(const pointCloudPruningResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.pointCloudPruningResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void pointCloudPruningResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.pointCloudPruningResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pointCloudPruningResponse::CopyFrom(const pointCloudPruningResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.pointCloudPruningResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pointCloudPruningResponse::IsInitialized() const {
  return true;
}

void pointCloudPruningResponse::InternalSwap(pointCloudPruningResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata pointCloudPruningResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class keyframePruningRequest::_Internal {
 public:
};

keyframePruningRequest::keyframePruningRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.keyframePruningRequest)
}
keyframePruningRequest::keyframePruningRequest(const keyframePruningRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframes().empty()) {
    keyframes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframes(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.keyframePruningRequest)
}

void keyframePruningRequest::SharedCtor() {
keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

keyframePruningRequest::~keyframePruningRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.keyframePruningRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void keyframePruningRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void keyframePruningRequest::ArenaDtor(void* object) {
  keyframePruningRequest* _this = reinterpret_cast< keyframePruningRequest* >(object);
  (void)_this;
}
void keyframePruningRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void keyframePruningRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void keyframePruningRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.keyframePruningRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframes_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* keyframePruningRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyframes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* keyframePruningRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.keyframePruningRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframes = 2;
  if (this->keyframes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.keyframePruningRequest)
  return target;
}

size_t keyframePruningRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.keyframePruningRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframes = 2;
  if (this->keyframes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframes());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void keyframePruningRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.keyframePruningRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const keyframePruningRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<keyframePruningRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.keyframePruningRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.keyframePruningRequest)
    MergeFrom(*source);
  }
}

void keyframePruningRequest::MergeFrom(const keyframePruningRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.keyframePruningRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframes().size() > 0) {
    _internal_set_keyframes(from._internal_keyframes());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void keyframePruningRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.keyframePruningRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void keyframePruningRequest::CopyFrom(const keyframePruningRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.keyframePruningRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool keyframePruningRequest::IsInitialized() const {
  return true;
}

void keyframePruningRequest::InternalSwap(keyframePruningRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframes_.Swap(&other->keyframes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata keyframePruningRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class keyframePruningResponse::_Internal {
 public:
};

keyframePruningResponse::keyframePruningResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.keyframePruningResponse)
}
keyframePruningResponse::keyframePruningResponse(const keyframePruningResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.keyframePruningResponse)
}

void keyframePruningResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

keyframePruningResponse::~keyframePruningResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.keyframePruningResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void keyframePruningResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void keyframePruningResponse::ArenaDtor(void* object) {
  keyframePruningResponse* _this = reinterpret_cast< keyframePruningResponse* >(object);
  (void)_this;
}
void keyframePruningResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void keyframePruningResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void keyframePruningResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.keyframePruningResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* keyframePruningResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* keyframePruningResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.keyframePruningResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.keyframePruningResponse)
  return target;
}

size_t keyframePruningResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.keyframePruningResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void keyframePruningResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.keyframePruningResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const keyframePruningResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<keyframePruningResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.keyframePruningResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.keyframePruningResponse)
    MergeFrom(*source);
  }
}

void keyframePruningResponse::MergeFrom(const keyframePruningResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.keyframePruningResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void keyframePruningResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.keyframePruningResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void keyframePruningResponse::CopyFrom(const keyframePruningResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.keyframePruningResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool keyframePruningResponse::IsInitialized() const {
  return true;
}

void keyframePruningResponse::InternalSwap(keyframePruningResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata keyframePruningResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class saveToFileRequest::_Internal {
 public:
};

saveToFileRequest::saveToFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.saveToFileRequest)
}
saveToFileRequest::saveToFileRequest(const saveToFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.saveToFileRequest)
}

void saveToFileRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

saveToFileRequest::~saveToFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.saveToFileRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void saveToFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void saveToFileRequest::ArenaDtor(void* object) {
  saveToFileRequest* _this = reinterpret_cast< saveToFileRequest* >(object);
  (void)_this;
}
void saveToFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void saveToFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void saveToFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.saveToFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* saveToFileRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.saveToFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.saveToFileRequest)
  return target;
}

size_t saveToFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.saveToFileRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void saveToFileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.saveToFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const saveToFileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<saveToFileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.saveToFileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.saveToFileRequest)
    MergeFrom(*source);
  }
}

void saveToFileRequest::MergeFrom(const saveToFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.saveToFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void saveToFileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.saveToFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void saveToFileRequest::CopyFrom(const saveToFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.saveToFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileRequest::IsInitialized() const {
  return true;
}

void saveToFileRequest::InternalSwap(saveToFileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class saveToFileResponse::_Internal {
 public:
};

saveToFileResponse::saveToFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.saveToFileResponse)
}
saveToFileResponse::saveToFileResponse(const saveToFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.saveToFileResponse)
}

void saveToFileResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

saveToFileResponse::~saveToFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.saveToFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void saveToFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void saveToFileResponse::ArenaDtor(void* object) {
  saveToFileResponse* _this = reinterpret_cast< saveToFileResponse* >(object);
  (void)_this;
}
void saveToFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void saveToFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void saveToFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.saveToFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* saveToFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.saveToFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.saveToFileResponse)
  return target;
}

size_t saveToFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.saveToFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void saveToFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.saveToFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const saveToFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<saveToFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.saveToFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.saveToFileResponse)
    MergeFrom(*source);
  }
}

void saveToFileResponse::MergeFrom(const saveToFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.saveToFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void saveToFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.saveToFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void saveToFileResponse::CopyFrom(const saveToFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.saveToFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileResponse::IsInitialized() const {
  return true;
}

void saveToFileResponse::InternalSwap(saveToFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class loadFromFileRequest::_Internal {
 public:
};

loadFromFileRequest::loadFromFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.loadFromFileRequest)
}
loadFromFileRequest::loadFromFileRequest(const loadFromFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.loadFromFileRequest)
}

void loadFromFileRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

loadFromFileRequest::~loadFromFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.loadFromFileRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void loadFromFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void loadFromFileRequest::ArenaDtor(void* object) {
  loadFromFileRequest* _this = reinterpret_cast< loadFromFileRequest* >(object);
  (void)_this;
}
void loadFromFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void loadFromFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void loadFromFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.loadFromFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* loadFromFileRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.loadFromFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.loadFromFileRequest)
  return target;
}

size_t loadFromFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.loadFromFileRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void loadFromFileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.loadFromFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const loadFromFileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<loadFromFileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.loadFromFileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.loadFromFileRequest)
    MergeFrom(*source);
  }
}

void loadFromFileRequest::MergeFrom(const loadFromFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.loadFromFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void loadFromFileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.loadFromFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loadFromFileRequest::CopyFrom(const loadFromFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.loadFromFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileRequest::IsInitialized() const {
  return true;
}

void loadFromFileRequest::InternalSwap(loadFromFileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class loadFromFileResponse::_Internal {
 public:
};

loadFromFileResponse::loadFromFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.loadFromFileResponse)
}
loadFromFileResponse::loadFromFileResponse(const loadFromFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.loadFromFileResponse)
}

void loadFromFileResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

loadFromFileResponse::~loadFromFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.loadFromFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void loadFromFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void loadFromFileResponse::ArenaDtor(void* object) {
  loadFromFileResponse* _this = reinterpret_cast< loadFromFileResponse* >(object);
  (void)_this;
}
void loadFromFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void loadFromFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void loadFromFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.loadFromFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* loadFromFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.loadFromFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.loadFromFileResponse)
  return target;
}

size_t loadFromFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.loadFromFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void loadFromFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMapManager.loadFromFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const loadFromFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<loadFromFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMapManager.loadFromFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMapManager.loadFromFileResponse)
    MergeFrom(*source);
  }
}

void loadFromFileResponse::MergeFrom(const loadFromFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.loadFromFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void loadFromFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMapManager.loadFromFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loadFromFileResponse::CopyFrom(const loadFromFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.loadFromFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileResponse::IsInitialized() const {
  return true;
}

void loadFromFileResponse::InternalSwap(loadFromFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIMapManager
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIMapManager::setMapRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::setMapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::setMapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::setMapResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::setMapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::setMapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getMapRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::getMapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getMapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getMapResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::getMapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getMapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getLocalPointCloudRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::getLocalPointCloudRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getLocalPointCloudRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getLocalPointCloudResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::getLocalPointCloudResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getLocalPointCloudResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addCloudPointRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::addCloudPointRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addCloudPointRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addCloudPointResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::addCloudPointResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addCloudPointResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeCloudPointRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::removeCloudPointRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeCloudPointRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeCloudPointResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::removeCloudPointResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeCloudPointResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addKeyframeRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::addKeyframeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addKeyframeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addKeyframeResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::addKeyframeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addKeyframeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeKeyframeRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::removeKeyframeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeKeyframeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeKeyframeResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::removeKeyframeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeKeyframeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::pointCloudPruningRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::pointCloudPruningRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::pointCloudPruningRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::pointCloudPruningResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::pointCloudPruningResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::pointCloudPruningResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::keyframePruningRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::keyframePruningRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::keyframePruningRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::keyframePruningResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::keyframePruningResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::keyframePruningResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::saveToFileRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::saveToFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::saveToFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::saveToFileResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::saveToFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::saveToFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::loadFromFileRequest* Arena::CreateMaybeMessage< ::grpcIMapManager::loadFromFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::loadFromFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::loadFromFileResponse* Arena::CreateMaybeMessage< ::grpcIMapManager::loadFromFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::loadFromFileResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
