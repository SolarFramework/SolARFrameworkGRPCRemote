// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIMapManagerService.proto

#include "grpcIMapManagerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcIMapManager {
PROTOBUF_CONSTEXPR setMapRequest::setMapRequest(
    ::_pbi::ConstantInitialized)
  : map_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct setMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setMapRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~setMapRequestDefaultTypeInternal() {}
  union {
    setMapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setMapRequestDefaultTypeInternal _setMapRequest_default_instance_;
PROTOBUF_CONSTEXPR setMapResponse::setMapResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct setMapResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setMapResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~setMapResponseDefaultTypeInternal() {}
  union {
    setMapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setMapResponseDefaultTypeInternal _setMapResponse_default_instance_;
PROTOBUF_CONSTEXPR getMapRequest::getMapRequest(
    ::_pbi::ConstantInitialized)
  : map_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct getMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMapRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMapRequestDefaultTypeInternal() {}
  union {
    getMapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMapRequestDefaultTypeInternal _getMapRequest_default_instance_;
PROTOBUF_CONSTEXPR getMapResponse::getMapResponse(
    ::_pbi::ConstantInitialized)
  : map_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct getMapResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMapResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMapResponseDefaultTypeInternal() {}
  union {
    getMapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMapResponseDefaultTypeInternal _getMapResponse_default_instance_;
PROTOBUF_CONSTEXPR getSubmapRequest::getSubmapRequest(
    ::_pbi::ConstantInitialized)
  : submap_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0)
  , idcenteredkeyframe_(0u)
  , nbkeyframes_(0u){}
struct getSubmapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getSubmapRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getSubmapRequestDefaultTypeInternal() {}
  union {
    getSubmapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getSubmapRequestDefaultTypeInternal _getSubmapRequest_default_instance_;
PROTOBUF_CONSTEXPR getSubmapResponse::getSubmapResponse(
    ::_pbi::ConstantInitialized)
  : submap_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct getSubmapResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getSubmapResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getSubmapResponseDefaultTypeInternal() {}
  union {
    getSubmapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getSubmapResponseDefaultTypeInternal _getSubmapResponse_default_instance_;
PROTOBUF_CONSTEXPR getLocalPointCloud_grpc0Request::getLocalPointCloud_grpc0Request(
    ::_pbi::ConstantInitialized)
  : keyframes_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , localpointcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct getLocalPointCloud_grpc0RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getLocalPointCloud_grpc0RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getLocalPointCloud_grpc0RequestDefaultTypeInternal() {}
  union {
    getLocalPointCloud_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getLocalPointCloud_grpc0RequestDefaultTypeInternal _getLocalPointCloud_grpc0Request_default_instance_;
PROTOBUF_CONSTEXPR getLocalPointCloud_grpc0Response::getLocalPointCloud_grpc0Response(
    ::_pbi::ConstantInitialized)
  : localpointcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct getLocalPointCloud_grpc0ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getLocalPointCloud_grpc0ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getLocalPointCloud_grpc0ResponseDefaultTypeInternal() {}
  union {
    getLocalPointCloud_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getLocalPointCloud_grpc0ResponseDefaultTypeInternal _getLocalPointCloud_grpc0Response_default_instance_;
PROTOBUF_CONSTEXPR getLocalPointCloud_grpc1Request::getLocalPointCloud_grpc1Request(
    ::_pbi::ConstantInitialized)
  : keyframe_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , localpointcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0)
  , minweightneighbor_(0){}
struct getLocalPointCloud_grpc1RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getLocalPointCloud_grpc1RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getLocalPointCloud_grpc1RequestDefaultTypeInternal() {}
  union {
    getLocalPointCloud_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getLocalPointCloud_grpc1RequestDefaultTypeInternal _getLocalPointCloud_grpc1Request_default_instance_;
PROTOBUF_CONSTEXPR getLocalPointCloud_grpc1Response::getLocalPointCloud_grpc1Response(
    ::_pbi::ConstantInitialized)
  : localpointcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct getLocalPointCloud_grpc1ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getLocalPointCloud_grpc1ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getLocalPointCloud_grpc1ResponseDefaultTypeInternal() {}
  union {
    getLocalPointCloud_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getLocalPointCloud_grpc1ResponseDefaultTypeInternal _getLocalPointCloud_grpc1Response_default_instance_;
PROTOBUF_CONSTEXPR addCloudPointRequest::addCloudPointRequest(
    ::_pbi::ConstantInitialized)
  : cloudpoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct addCloudPointRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addCloudPointRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addCloudPointRequestDefaultTypeInternal() {}
  union {
    addCloudPointRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addCloudPointRequestDefaultTypeInternal _addCloudPointRequest_default_instance_;
PROTOBUF_CONSTEXPR addCloudPointResponse::addCloudPointResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct addCloudPointResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addCloudPointResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addCloudPointResponseDefaultTypeInternal() {}
  union {
    addCloudPointResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addCloudPointResponseDefaultTypeInternal _addCloudPointResponse_default_instance_;
PROTOBUF_CONSTEXPR removeCloudPointRequest::removeCloudPointRequest(
    ::_pbi::ConstantInitialized)
  : cloudpoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct removeCloudPointRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeCloudPointRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeCloudPointRequestDefaultTypeInternal() {}
  union {
    removeCloudPointRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeCloudPointRequestDefaultTypeInternal _removeCloudPointRequest_default_instance_;
PROTOBUF_CONSTEXPR removeCloudPointResponse::removeCloudPointResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct removeCloudPointResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeCloudPointResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeCloudPointResponseDefaultTypeInternal() {}
  union {
    removeCloudPointResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeCloudPointResponseDefaultTypeInternal _removeCloudPointResponse_default_instance_;
PROTOBUF_CONSTEXPR addKeyframeRequest::addKeyframeRequest(
    ::_pbi::ConstantInitialized)
  : keyframe_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct addKeyframeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addKeyframeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addKeyframeRequestDefaultTypeInternal() {}
  union {
    addKeyframeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addKeyframeRequestDefaultTypeInternal _addKeyframeRequest_default_instance_;
PROTOBUF_CONSTEXPR addKeyframeResponse::addKeyframeResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct addKeyframeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addKeyframeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addKeyframeResponseDefaultTypeInternal() {}
  union {
    addKeyframeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addKeyframeResponseDefaultTypeInternal _addKeyframeResponse_default_instance_;
PROTOBUF_CONSTEXPR removeKeyframeRequest::removeKeyframeRequest(
    ::_pbi::ConstantInitialized)
  : keyframe_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct removeKeyframeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeKeyframeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeKeyframeRequestDefaultTypeInternal() {}
  union {
    removeKeyframeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeKeyframeRequestDefaultTypeInternal _removeKeyframeRequest_default_instance_;
PROTOBUF_CONSTEXPR removeKeyframeResponse::removeKeyframeResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct removeKeyframeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeKeyframeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeKeyframeResponseDefaultTypeInternal() {}
  union {
    removeKeyframeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeKeyframeResponseDefaultTypeInternal _removeKeyframeResponse_default_instance_;
PROTOBUF_CONSTEXPR addCameraParametersRequest::addCameraParametersRequest(
    ::_pbi::ConstantInitialized)
  : cameraparameters_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct addCameraParametersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addCameraParametersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addCameraParametersRequestDefaultTypeInternal() {}
  union {
    addCameraParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addCameraParametersRequestDefaultTypeInternal _addCameraParametersRequest_default_instance_;
PROTOBUF_CONSTEXPR addCameraParametersResponse::addCameraParametersResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct addCameraParametersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addCameraParametersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addCameraParametersResponseDefaultTypeInternal() {}
  union {
    addCameraParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addCameraParametersResponseDefaultTypeInternal _addCameraParametersResponse_default_instance_;
PROTOBUF_CONSTEXPR removeCameraParametersRequest::removeCameraParametersRequest(
    ::_pbi::ConstantInitialized)
  : cameraparameters_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct removeCameraParametersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeCameraParametersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeCameraParametersRequestDefaultTypeInternal() {}
  union {
    removeCameraParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeCameraParametersRequestDefaultTypeInternal _removeCameraParametersRequest_default_instance_;
PROTOBUF_CONSTEXPR removeCameraParametersResponse::removeCameraParametersResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct removeCameraParametersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeCameraParametersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeCameraParametersResponseDefaultTypeInternal() {}
  union {
    removeCameraParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeCameraParametersResponseDefaultTypeInternal _removeCameraParametersResponse_default_instance_;
PROTOBUF_CONSTEXPR getCameraParameters_grpc0Request::getCameraParameters_grpc0Request(
    ::_pbi::ConstantInitialized)
  : cameraparameters_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0)
  , id_(0u){}
struct getCameraParameters_grpc0RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getCameraParameters_grpc0RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getCameraParameters_grpc0RequestDefaultTypeInternal() {}
  union {
    getCameraParameters_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getCameraParameters_grpc0RequestDefaultTypeInternal _getCameraParameters_grpc0Request_default_instance_;
PROTOBUF_CONSTEXPR getCameraParameters_grpc0Response::getCameraParameters_grpc0Response(
    ::_pbi::ConstantInitialized)
  : cameraparameters_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct getCameraParameters_grpc0ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getCameraParameters_grpc0ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getCameraParameters_grpc0ResponseDefaultTypeInternal() {}
  union {
    getCameraParameters_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getCameraParameters_grpc0ResponseDefaultTypeInternal _getCameraParameters_grpc0Response_default_instance_;
PROTOBUF_CONSTEXPR getCameraParameters_grpc1Request::getCameraParameters_grpc1Request(
    ::_pbi::ConstantInitialized)
  : cameraparameters_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0)
  , id_(0u){}
struct getCameraParameters_grpc1RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getCameraParameters_grpc1RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getCameraParameters_grpc1RequestDefaultTypeInternal() {}
  union {
    getCameraParameters_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getCameraParameters_grpc1RequestDefaultTypeInternal _getCameraParameters_grpc1Request_default_instance_;
PROTOBUF_CONSTEXPR getCameraParameters_grpc1Response::getCameraParameters_grpc1Response(
    ::_pbi::ConstantInitialized)
  : cameraparameters_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct getCameraParameters_grpc1ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getCameraParameters_grpc1ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getCameraParameters_grpc1ResponseDefaultTypeInternal() {}
  union {
    getCameraParameters_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getCameraParameters_grpc1ResponseDefaultTypeInternal _getCameraParameters_grpc1Response_default_instance_;
PROTOBUF_CONSTEXPR pointCloudPruningRequest::pointCloudPruningRequest(
    ::_pbi::ConstantInitialized)
  : cloudpoints_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct pointCloudPruningRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR pointCloudPruningRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~pointCloudPruningRequestDefaultTypeInternal() {}
  union {
    pointCloudPruningRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 pointCloudPruningRequestDefaultTypeInternal _pointCloudPruningRequest_default_instance_;
PROTOBUF_CONSTEXPR pointCloudPruningResponse::pointCloudPruningResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct pointCloudPruningResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR pointCloudPruningResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~pointCloudPruningResponseDefaultTypeInternal() {}
  union {
    pointCloudPruningResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 pointCloudPruningResponseDefaultTypeInternal _pointCloudPruningResponse_default_instance_;
PROTOBUF_CONSTEXPR keyframePruningRequest::keyframePruningRequest(
    ::_pbi::ConstantInitialized)
  : keyframes_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct keyframePruningRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR keyframePruningRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~keyframePruningRequestDefaultTypeInternal() {}
  union {
    keyframePruningRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 keyframePruningRequestDefaultTypeInternal _keyframePruningRequest_default_instance_;
PROTOBUF_CONSTEXPR keyframePruningResponse::keyframePruningResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct keyframePruningResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR keyframePruningResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~keyframePruningResponseDefaultTypeInternal() {}
  union {
    keyframePruningResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 keyframePruningResponseDefaultTypeInternal _keyframePruningResponse_default_instance_;
PROTOBUF_CONSTEXPR visibilityPruningRequest::visibilityPruningRequest(
    ::_pbi::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct visibilityPruningRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR visibilityPruningRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~visibilityPruningRequestDefaultTypeInternal() {}
  union {
    visibilityPruningRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 visibilityPruningRequestDefaultTypeInternal _visibilityPruningRequest_default_instance_;
PROTOBUF_CONSTEXPR visibilityPruningResponse::visibilityPruningResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct visibilityPruningResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR visibilityPruningResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~visibilityPruningResponseDefaultTypeInternal() {}
  union {
    visibilityPruningResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 visibilityPruningResponseDefaultTypeInternal _visibilityPruningResponse_default_instance_;
PROTOBUF_CONSTEXPR saveToFileRequest::saveToFileRequest(
    ::_pbi::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct saveToFileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR saveToFileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~saveToFileRequestDefaultTypeInternal() {}
  union {
    saveToFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 saveToFileRequestDefaultTypeInternal _saveToFileRequest_default_instance_;
PROTOBUF_CONSTEXPR saveToFileResponse::saveToFileResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct saveToFileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR saveToFileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~saveToFileResponseDefaultTypeInternal() {}
  union {
    saveToFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 saveToFileResponseDefaultTypeInternal _saveToFileResponse_default_instance_;
PROTOBUF_CONSTEXPR loadFromFileRequest::loadFromFileRequest(
    ::_pbi::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct loadFromFileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR loadFromFileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~loadFromFileRequestDefaultTypeInternal() {}
  union {
    loadFromFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 loadFromFileRequestDefaultTypeInternal _loadFromFileRequest_default_instance_;
PROTOBUF_CONSTEXPR loadFromFileResponse::loadFromFileResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct loadFromFileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR loadFromFileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~loadFromFileResponseDefaultTypeInternal() {}
  union {
    loadFromFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 loadFromFileResponseDefaultTypeInternal _loadFromFileResponse_default_instance_;
PROTOBUF_CONSTEXPR deleteFileRequest::deleteFileRequest(
    ::_pbi::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct deleteFileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR deleteFileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~deleteFileRequestDefaultTypeInternal() {}
  union {
    deleteFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 deleteFileRequestDefaultTypeInternal _deleteFileRequest_default_instance_;
PROTOBUF_CONSTEXPR deleteFileResponse::deleteFileResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct deleteFileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR deleteFileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~deleteFileResponseDefaultTypeInternal() {}
  union {
    deleteFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 deleteFileResponseDefaultTypeInternal _deleteFileResponse_default_instance_;
}  // namespace grpcIMapManager
static ::_pb::Metadata file_level_metadata_grpcIMapManagerService_2eproto[38];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcIMapManagerService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcIMapManagerService_2eproto = nullptr;

const uint32_t TableStruct_grpcIMapManagerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapRequest, map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::setMapResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapRequest, map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapResponse, map_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getMapResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getSubmapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getSubmapRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getSubmapRequest, idcenteredkeyframe_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getSubmapRequest, nbkeyframes_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getSubmapRequest, submap_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getSubmapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getSubmapResponse, submap_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getSubmapResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc0Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc0Request, keyframes_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc0Request, localpointcloud_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc0Response, localpointcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc0Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc1Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc1Request, keyframe_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc1Request, minweightneighbor_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc1Request, localpointcloud_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc1Response, localpointcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getLocalPointCloud_grpc1Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointRequest, cloudpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCloudPointResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointRequest, cloudpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCloudPointResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeRequest, keyframe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addKeyframeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeRequest, keyframe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeKeyframeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCameraParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCameraParametersRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCameraParametersRequest, cameraparameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCameraParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::addCameraParametersResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCameraParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCameraParametersRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCameraParametersRequest, cameraparameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCameraParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::removeCameraParametersResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc0Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc0Request, id_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc0Request, cameraparameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc0Response, cameraparameters_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc0Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc1Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc1Request, id_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc1Request, cameraparameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc1Response, cameraparameters_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::getCameraParameters_grpc1Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningRequest, cloudpoints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::pointCloudPruningResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningRequest, keyframes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::keyframePruningResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::visibilityPruningRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::visibilityPruningRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::visibilityPruningResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::visibilityPruningResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::saveToFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::saveToFileRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::saveToFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::saveToFileResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::loadFromFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::loadFromFileRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::loadFromFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::loadFromFileResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::deleteFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::deleteFileRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::deleteFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapManager::deleteFileResponse, xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcIMapManager::setMapRequest)},
  { 8, -1, -1, sizeof(::grpcIMapManager::setMapResponse)},
  { 15, -1, -1, sizeof(::grpcIMapManager::getMapRequest)},
  { 23, -1, -1, sizeof(::grpcIMapManager::getMapResponse)},
  { 31, -1, -1, sizeof(::grpcIMapManager::getSubmapRequest)},
  { 41, -1, -1, sizeof(::grpcIMapManager::getSubmapResponse)},
  { 49, -1, -1, sizeof(::grpcIMapManager::getLocalPointCloud_grpc0Request)},
  { 58, -1, -1, sizeof(::grpcIMapManager::getLocalPointCloud_grpc0Response)},
  { 66, -1, -1, sizeof(::grpcIMapManager::getLocalPointCloud_grpc1Request)},
  { 76, -1, -1, sizeof(::grpcIMapManager::getLocalPointCloud_grpc1Response)},
  { 84, -1, -1, sizeof(::grpcIMapManager::addCloudPointRequest)},
  { 92, -1, -1, sizeof(::grpcIMapManager::addCloudPointResponse)},
  { 99, -1, -1, sizeof(::grpcIMapManager::removeCloudPointRequest)},
  { 107, -1, -1, sizeof(::grpcIMapManager::removeCloudPointResponse)},
  { 114, -1, -1, sizeof(::grpcIMapManager::addKeyframeRequest)},
  { 122, -1, -1, sizeof(::grpcIMapManager::addKeyframeResponse)},
  { 129, -1, -1, sizeof(::grpcIMapManager::removeKeyframeRequest)},
  { 137, -1, -1, sizeof(::grpcIMapManager::removeKeyframeResponse)},
  { 144, -1, -1, sizeof(::grpcIMapManager::addCameraParametersRequest)},
  { 152, -1, -1, sizeof(::grpcIMapManager::addCameraParametersResponse)},
  { 159, -1, -1, sizeof(::grpcIMapManager::removeCameraParametersRequest)},
  { 167, -1, -1, sizeof(::grpcIMapManager::removeCameraParametersResponse)},
  { 174, -1, -1, sizeof(::grpcIMapManager::getCameraParameters_grpc0Request)},
  { 183, -1, -1, sizeof(::grpcIMapManager::getCameraParameters_grpc0Response)},
  { 191, -1, -1, sizeof(::grpcIMapManager::getCameraParameters_grpc1Request)},
  { 200, -1, -1, sizeof(::grpcIMapManager::getCameraParameters_grpc1Response)},
  { 208, -1, -1, sizeof(::grpcIMapManager::pointCloudPruningRequest)},
  { 216, -1, -1, sizeof(::grpcIMapManager::pointCloudPruningResponse)},
  { 223, -1, -1, sizeof(::grpcIMapManager::keyframePruningRequest)},
  { 231, -1, -1, sizeof(::grpcIMapManager::keyframePruningResponse)},
  { 238, -1, -1, sizeof(::grpcIMapManager::visibilityPruningRequest)},
  { 245, -1, -1, sizeof(::grpcIMapManager::visibilityPruningResponse)},
  { 252, -1, -1, sizeof(::grpcIMapManager::saveToFileRequest)},
  { 259, -1, -1, sizeof(::grpcIMapManager::saveToFileResponse)},
  { 266, -1, -1, sizeof(::grpcIMapManager::loadFromFileRequest)},
  { 273, -1, -1, sizeof(::grpcIMapManager::loadFromFileResponse)},
  { 280, -1, -1, sizeof(::grpcIMapManager::deleteFileRequest)},
  { 287, -1, -1, sizeof(::grpcIMapManager::deleteFileResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcIMapManager::_setMapRequest_default_instance_._instance,
  &::grpcIMapManager::_setMapResponse_default_instance_._instance,
  &::grpcIMapManager::_getMapRequest_default_instance_._instance,
  &::grpcIMapManager::_getMapResponse_default_instance_._instance,
  &::grpcIMapManager::_getSubmapRequest_default_instance_._instance,
  &::grpcIMapManager::_getSubmapResponse_default_instance_._instance,
  &::grpcIMapManager::_getLocalPointCloud_grpc0Request_default_instance_._instance,
  &::grpcIMapManager::_getLocalPointCloud_grpc0Response_default_instance_._instance,
  &::grpcIMapManager::_getLocalPointCloud_grpc1Request_default_instance_._instance,
  &::grpcIMapManager::_getLocalPointCloud_grpc1Response_default_instance_._instance,
  &::grpcIMapManager::_addCloudPointRequest_default_instance_._instance,
  &::grpcIMapManager::_addCloudPointResponse_default_instance_._instance,
  &::grpcIMapManager::_removeCloudPointRequest_default_instance_._instance,
  &::grpcIMapManager::_removeCloudPointResponse_default_instance_._instance,
  &::grpcIMapManager::_addKeyframeRequest_default_instance_._instance,
  &::grpcIMapManager::_addKeyframeResponse_default_instance_._instance,
  &::grpcIMapManager::_removeKeyframeRequest_default_instance_._instance,
  &::grpcIMapManager::_removeKeyframeResponse_default_instance_._instance,
  &::grpcIMapManager::_addCameraParametersRequest_default_instance_._instance,
  &::grpcIMapManager::_addCameraParametersResponse_default_instance_._instance,
  &::grpcIMapManager::_removeCameraParametersRequest_default_instance_._instance,
  &::grpcIMapManager::_removeCameraParametersResponse_default_instance_._instance,
  &::grpcIMapManager::_getCameraParameters_grpc0Request_default_instance_._instance,
  &::grpcIMapManager::_getCameraParameters_grpc0Response_default_instance_._instance,
  &::grpcIMapManager::_getCameraParameters_grpc1Request_default_instance_._instance,
  &::grpcIMapManager::_getCameraParameters_grpc1Response_default_instance_._instance,
  &::grpcIMapManager::_pointCloudPruningRequest_default_instance_._instance,
  &::grpcIMapManager::_pointCloudPruningResponse_default_instance_._instance,
  &::grpcIMapManager::_keyframePruningRequest_default_instance_._instance,
  &::grpcIMapManager::_keyframePruningResponse_default_instance_._instance,
  &::grpcIMapManager::_visibilityPruningRequest_default_instance_._instance,
  &::grpcIMapManager::_visibilityPruningResponse_default_instance_._instance,
  &::grpcIMapManager::_saveToFileRequest_default_instance_._instance,
  &::grpcIMapManager::_saveToFileResponse_default_instance_._instance,
  &::grpcIMapManager::_loadFromFileRequest_default_instance_._instance,
  &::grpcIMapManager::_loadFromFileResponse_default_instance_._instance,
  &::grpcIMapManager::_deleteFileRequest_default_instance_._instance,
  &::grpcIMapManager::_deleteFileResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcIMapManagerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034grpcIMapManagerService.proto\022\017grpcIMap"
  "Manager\032\033google/protobuf/empty.proto\"A\n\r"
  "setMapRequest\022#\n\033grpcServerCompressionFo"
  "rmat\030\001 \001(\005\022\013\n\003map\030\002 \001(\014\"-\n\016setMapRespons"
  "e\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"A\n\rgetMap"
  "Request\022#\n\033grpcServerCompressionFormat\030\001"
  " \001(\005\022\013\n\003map\030\002 \001(\014\":\n\016getMapResponse\022\013\n\003m"
  "ap\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\"x\n"
  "\020getSubmapRequest\022#\n\033grpcServerCompressi"
  "onFormat\030\001 \001(\005\022\032\n\022idCenteredKeyframe\030\002 \001"
  "(\r\022\023\n\013nbKeyframes\030\003 \001(\r\022\016\n\006submap\030\004 \001(\014\""
  "@\n\021getSubmapResponse\022\016\n\006submap\030\001 \001(\014\022\033\n\023"
  "xpcfGrpcReturnValue\030\002 \001(\021\"r\n\037getLocalPoi"
  "ntCloud_grpc0Request\022#\n\033grpcServerCompre"
  "ssionFormat\030\001 \001(\005\022\021\n\tkeyframes\030\002 \001(\014\022\027\n\017"
  "localPointCloud\030\003 \001(\014\"X\n getLocalPointCl"
  "oud_grpc0Response\022\027\n\017localPointCloud\030\001 \001"
  "(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\"\214\001\n\037getL"
  "ocalPointCloud_grpc1Request\022#\n\033grpcServe"
  "rCompressionFormat\030\001 \001(\005\022\020\n\010keyframe\030\002 \001"
  "(\014\022\031\n\021minWeightNeighbor\030\003 \001(\002\022\027\n\017localPo"
  "intCloud\030\004 \001(\014\"X\n getLocalPointCloud_grp"
  "c1Response\022\027\n\017localPointCloud\030\001 \001(\014\022\033\n\023x"
  "pcfGrpcReturnValue\030\002 \001(\021\"O\n\024addCloudPoin"
  "tRequest\022#\n\033grpcServerCompressionFormat\030"
  "\001 \001(\005\022\022\n\ncloudPoint\030\002 \001(\014\"4\n\025addCloudPoi"
  "ntResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\""
  "R\n\027removeCloudPointRequest\022#\n\033grpcServer"
  "CompressionFormat\030\001 \001(\005\022\022\n\ncloudPoint\030\002 "
  "\001(\014\"7\n\030removeCloudPointResponse\022\033\n\023xpcfG"
  "rpcReturnValue\030\001 \001(\021\"K\n\022addKeyframeReque"
  "st\022#\n\033grpcServerCompressionFormat\030\001 \001(\005\022"
  "\020\n\010keyframe\030\002 \001(\014\"2\n\023addKeyframeResponse"
  "\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"N\n\025removeK"
  "eyframeRequest\022#\n\033grpcServerCompressionF"
  "ormat\030\001 \001(\005\022\020\n\010keyframe\030\002 \001(\014\"5\n\026removeK"
  "eyframeResponse\022\033\n\023xpcfGrpcReturnValue\030\001"
  " \001(\021\"[\n\032addCameraParametersRequest\022#\n\033gr"
  "pcServerCompressionFormat\030\001 \001(\005\022\030\n\020camer"
  "aParameters\030\002 \001(\014\":\n\033addCameraParameters"
  "Response\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"^\n"
  "\035removeCameraParametersRequest\022#\n\033grpcSe"
  "rverCompressionFormat\030\001 \001(\005\022\030\n\020cameraPar"
  "ameters\030\002 \001(\014\"=\n\036removeCameraParametersR"
  "esponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"m\n "
  "getCameraParameters_grpc0Request\022#\n\033grpc"
  "ServerCompressionFormat\030\001 \001(\005\022\n\n\002id\030\002 \001("
  "\r\022\030\n\020cameraParameters\030\003 \001(\014\"Z\n!getCamera"
  "Parameters_grpc0Response\022\030\n\020cameraParame"
  "ters\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\""
  "m\n getCameraParameters_grpc1Request\022#\n\033g"
  "rpcServerCompressionFormat\030\001 \001(\005\022\n\n\002id\030\002"
  " \001(\r\022\030\n\020cameraParameters\030\003 \001(\014\"Z\n!getCam"
  "eraParameters_grpc1Response\022\030\n\020cameraPar"
  "ameters\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001"
  "(\021\"T\n\030pointCloudPruningRequest\022#\n\033grpcSe"
  "rverCompressionFormat\030\001 \001(\005\022\023\n\013cloudPoin"
  "ts\030\002 \001(\014\"8\n\031pointCloudPruningResponse\022\033\n"
  "\023xpcfGrpcReturnValue\030\001 \001(\021\"P\n\026keyframePr"
  "uningRequest\022#\n\033grpcServerCompressionFor"
  "mat\030\001 \001(\005\022\021\n\tkeyframes\030\002 \001(\014\"6\n\027keyframe"
  "PruningResponse\022\033\n\023xpcfGrpcReturnValue\030\001"
  " \001(\021\"\?\n\030visibilityPruningRequest\022#\n\033grpc"
  "ServerCompressionFormat\030\001 \001(\005\"8\n\031visibil"
  "ityPruningResponse\022\033\n\023xpcfGrpcReturnValu"
  "e\030\001 \001(\021\"8\n\021saveToFileRequest\022#\n\033grpcServ"
  "erCompressionFormat\030\001 \001(\005\"1\n\022saveToFileR"
  "esponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\":\n\023"
  "loadFromFileRequest\022#\n\033grpcServerCompres"
  "sionFormat\030\001 \001(\005\"3\n\024loadFromFileResponse"
  "\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"8\n\021deleteF"
  "ileRequest\022#\n\033grpcServerCompressionForma"
  "t\030\001 \001(\005\"1\n\022deleteFileResponse\022\033\n\023xpcfGrp"
  "cReturnValue\030\001 \001(\0212\362\017\n\026grpcIMapManagerSe"
  "rvice\022K\n\006setMap\022\036.grpcIMapManager.setMap"
  "Request\032\037.grpcIMapManager.setMapResponse"
  "\"\000\022K\n\006getMap\022\036.grpcIMapManager.getMapReq"
  "uest\032\037.grpcIMapManager.getMapResponse\"\000\022"
  "T\n\tgetSubmap\022!.grpcIMapManager.getSubmap"
  "Request\032\".grpcIMapManager.getSubmapRespo"
  "nse\"\000\022\201\001\n\030getLocalPointCloud_grpc0\0220.grp"
  "cIMapManager.getLocalPointCloud_grpc0Req"
  "uest\0321.grpcIMapManager.getLocalPointClou"
  "d_grpc0Response\"\000\022\201\001\n\030getLocalPointCloud"
  "_grpc1\0220.grpcIMapManager.getLocalPointCl"
  "oud_grpc1Request\0321.grpcIMapManager.getLo"
  "calPointCloud_grpc1Response\"\000\022`\n\raddClou"
  "dPoint\022%.grpcIMapManager.addCloudPointRe"
  "quest\032&.grpcIMapManager.addCloudPointRes"
  "ponse\"\000\022i\n\020removeCloudPoint\022(.grpcIMapMa"
  "nager.removeCloudPointRequest\032).grpcIMap"
  "Manager.removeCloudPointResponse\"\000\022Z\n\013ad"
  "dKeyframe\022#.grpcIMapManager.addKeyframeR"
  "equest\032$.grpcIMapManager.addKeyframeResp"
  "onse\"\000\022c\n\016removeKeyframe\022&.grpcIMapManag"
  "er.removeKeyframeRequest\032\'.grpcIMapManag"
  "er.removeKeyframeResponse\"\000\022r\n\023addCamera"
  "Parameters\022+.grpcIMapManager.addCameraPa"
  "rametersRequest\032,.grpcIMapManager.addCam"
  "eraParametersResponse\"\000\022{\n\026removeCameraP"
  "arameters\022..grpcIMapManager.removeCamera"
  "ParametersRequest\032/.grpcIMapManager.remo"
  "veCameraParametersResponse\"\000\022\204\001\n\031getCame"
  "raParameters_grpc0\0221.grpcIMapManager.get"
  "CameraParameters_grpc0Request\0322.grpcIMap"
  "Manager.getCameraParameters_grpc0Respons"
  "e\"\000\022\204\001\n\031getCameraParameters_grpc1\0221.grpc"
  "IMapManager.getCameraParameters_grpc1Req"
  "uest\0322.grpcIMapManager.getCameraParamete"
  "rs_grpc1Response\"\000\022l\n\021pointCloudPruning\022"
  ").grpcIMapManager.pointCloudPruningReque"
  "st\032*.grpcIMapManager.pointCloudPruningRe"
  "sponse\"\000\022f\n\017keyframePruning\022\'.grpcIMapMa"
  "nager.keyframePruningRequest\032(.grpcIMapM"
  "anager.keyframePruningResponse\"\000\022l\n\021visi"
  "bilityPruning\022).grpcIMapManager.visibili"
  "tyPruningRequest\032*.grpcIMapManager.visib"
  "ilityPruningResponse\"\000\022W\n\nsaveToFile\022\".g"
  "rpcIMapManager.saveToFileRequest\032#.grpcI"
  "MapManager.saveToFileResponse\"\000\022]\n\014loadF"
  "romFile\022$.grpcIMapManager.loadFromFileRe"
  "quest\032%.grpcIMapManager.loadFromFileResp"
  "onse\"\000\022W\n\ndeleteFile\022\".grpcIMapManager.d"
  "eleteFileRequest\032#.grpcIMapManager.delet"
  "eFileResponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcIMapManagerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcIMapManagerService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcIMapManagerService_2eproto = {
    false, false, 4983, descriptor_table_protodef_grpcIMapManagerService_2eproto,
    "grpcIMapManagerService.proto",
    &descriptor_table_grpcIMapManagerService_2eproto_once, descriptor_table_grpcIMapManagerService_2eproto_deps, 1, 38,
    schemas, file_default_instances, TableStruct_grpcIMapManagerService_2eproto::offsets,
    file_level_metadata_grpcIMapManagerService_2eproto, file_level_enum_descriptors_grpcIMapManagerService_2eproto,
    file_level_service_descriptors_grpcIMapManagerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcIMapManagerService_2eproto_getter() {
  return &descriptor_table_grpcIMapManagerService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcIMapManagerService_2eproto(&descriptor_table_grpcIMapManagerService_2eproto);
namespace grpcIMapManager {

// ===================================================================

class setMapRequest::_Internal {
 public:
};

setMapRequest::setMapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.setMapRequest)
}
setMapRequest::setMapRequest(const setMapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    map_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_map().empty()) {
    map_.Set(from._internal_map(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.setMapRequest)
}

inline void setMapRequest::SharedCtor() {
map_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  map_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

setMapRequest::~setMapRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.setMapRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void setMapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  map_.Destroy();
}

void setMapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.setMapRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes map = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_map();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* setMapRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.setMapRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes map = 2;
  if (!this->_internal_map().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_map(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.setMapRequest)
  return target;
}

size_t setMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.setMapRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes map = 2;
  if (!this->_internal_map().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setMapRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    setMapRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setMapRequest::GetClassData() const { return &_class_data_; }

void setMapRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<setMapRequest *>(to)->MergeFrom(
      static_cast<const setMapRequest &>(from));
}


void setMapRequest::MergeFrom(const setMapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.setMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_map().empty()) {
    _internal_set_map(from._internal_map());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setMapRequest::CopyFrom(const setMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.setMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapRequest::IsInitialized() const {
  return true;
}

void setMapRequest::InternalSwap(setMapRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &map_, lhs_arena,
      &other->map_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[0]);
}

// ===================================================================

class setMapResponse::_Internal {
 public:
};

setMapResponse::setMapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.setMapResponse)
}
setMapResponse::setMapResponse(const setMapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.setMapResponse)
}

inline void setMapResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

setMapResponse::~setMapResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.setMapResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void setMapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void setMapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.setMapResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* setMapResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.setMapResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.setMapResponse)
  return target;
}

size_t setMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.setMapResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setMapResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    setMapResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setMapResponse::GetClassData() const { return &_class_data_; }

void setMapResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<setMapResponse *>(to)->MergeFrom(
      static_cast<const setMapResponse &>(from));
}


void setMapResponse::MergeFrom(const setMapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.setMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setMapResponse::CopyFrom(const setMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.setMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapResponse::IsInitialized() const {
  return true;
}

void setMapResponse::InternalSwap(setMapResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[1]);
}

// ===================================================================

class getMapRequest::_Internal {
 public:
};

getMapRequest::getMapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getMapRequest)
}
getMapRequest::getMapRequest(const getMapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    map_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_map().empty()) {
    map_.Set(from._internal_map(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getMapRequest)
}

inline void getMapRequest::SharedCtor() {
map_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  map_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

getMapRequest::~getMapRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getMapRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  map_.Destroy();
}

void getMapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getMapRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes map = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_map();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMapRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getMapRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes map = 2;
  if (!this->_internal_map().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_map(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getMapRequest)
  return target;
}

size_t getMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getMapRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes map = 2;
  if (!this->_internal_map().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMapRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getMapRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMapRequest::GetClassData() const { return &_class_data_; }

void getMapRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getMapRequest *>(to)->MergeFrom(
      static_cast<const getMapRequest &>(from));
}


void getMapRequest::MergeFrom(const getMapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_map().empty()) {
    _internal_set_map(from._internal_map());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMapRequest::CopyFrom(const getMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapRequest::IsInitialized() const {
  return true;
}

void getMapRequest::InternalSwap(getMapRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &map_, lhs_arena,
      &other->map_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[2]);
}

// ===================================================================

class getMapResponse::_Internal {
 public:
};

getMapResponse::getMapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getMapResponse)
}
getMapResponse::getMapResponse(const getMapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    map_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_map().empty()) {
    map_.Set(from._internal_map(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getMapResponse)
}

inline void getMapResponse::SharedCtor() {
map_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  map_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

getMapResponse::~getMapResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getMapResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  map_.Destroy();
}

void getMapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getMapResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_map();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMapResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getMapResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes map = 1;
  if (!this->_internal_map().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_map(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getMapResponse)
  return target;
}

size_t getMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getMapResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes map = 1;
  if (!this->_internal_map().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMapResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getMapResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMapResponse::GetClassData() const { return &_class_data_; }

void getMapResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getMapResponse *>(to)->MergeFrom(
      static_cast<const getMapResponse &>(from));
}


void getMapResponse::MergeFrom(const getMapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_map().empty()) {
    _internal_set_map(from._internal_map());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMapResponse::CopyFrom(const getMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapResponse::IsInitialized() const {
  return true;
}

void getMapResponse::InternalSwap(getMapResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &map_, lhs_arena,
      &other->map_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[3]);
}

// ===================================================================

class getSubmapRequest::_Internal {
 public:
};

getSubmapRequest::getSubmapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getSubmapRequest)
}
getSubmapRequest::getSubmapRequest(const getSubmapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  submap_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    submap_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_submap().empty()) {
    submap_.Set(from._internal_submap(), 
      GetArenaForAllocation());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&nbkeyframes_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(nbkeyframes_));
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getSubmapRequest)
}

inline void getSubmapRequest::SharedCtor() {
submap_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  submap_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&nbkeyframes_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(nbkeyframes_));
}

getSubmapRequest::~getSubmapRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getSubmapRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getSubmapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  submap_.Destroy();
}

void getSubmapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getSubmapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getSubmapRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  submap_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nbkeyframes_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(nbkeyframes_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getSubmapRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 idCenteredKeyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          idcenteredkeyframe_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 nbKeyframes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          nbkeyframes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes submap = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_submap();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getSubmapRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getSubmapRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // uint32 idCenteredKeyframe = 2;
  if (this->_internal_idcenteredkeyframe() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_idcenteredkeyframe(), target);
  }

  // uint32 nbKeyframes = 3;
  if (this->_internal_nbkeyframes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_nbkeyframes(), target);
  }

  // bytes submap = 4;
  if (!this->_internal_submap().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_submap(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getSubmapRequest)
  return target;
}

size_t getSubmapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getSubmapRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes submap = 4;
  if (!this->_internal_submap().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_submap());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  // uint32 idCenteredKeyframe = 2;
  if (this->_internal_idcenteredkeyframe() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_idcenteredkeyframe());
  }

  // uint32 nbKeyframes = 3;
  if (this->_internal_nbkeyframes() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_nbkeyframes());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getSubmapRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getSubmapRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getSubmapRequest::GetClassData() const { return &_class_data_; }

void getSubmapRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getSubmapRequest *>(to)->MergeFrom(
      static_cast<const getSubmapRequest &>(from));
}


void getSubmapRequest::MergeFrom(const getSubmapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getSubmapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_submap().empty()) {
    _internal_set_submap(from._internal_submap());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from._internal_idcenteredkeyframe() != 0) {
    _internal_set_idcenteredkeyframe(from._internal_idcenteredkeyframe());
  }
  if (from._internal_nbkeyframes() != 0) {
    _internal_set_nbkeyframes(from._internal_nbkeyframes());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getSubmapRequest::CopyFrom(const getSubmapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getSubmapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getSubmapRequest::IsInitialized() const {
  return true;
}

void getSubmapRequest::InternalSwap(getSubmapRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &submap_, lhs_arena,
      &other->submap_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getSubmapRequest, nbkeyframes_)
      + sizeof(getSubmapRequest::nbkeyframes_)
      - PROTOBUF_FIELD_OFFSET(getSubmapRequest, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getSubmapRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[4]);
}

// ===================================================================

class getSubmapResponse::_Internal {
 public:
};

getSubmapResponse::getSubmapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getSubmapResponse)
}
getSubmapResponse::getSubmapResponse(const getSubmapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  submap_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    submap_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_submap().empty()) {
    submap_.Set(from._internal_submap(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getSubmapResponse)
}

inline void getSubmapResponse::SharedCtor() {
submap_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  submap_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

getSubmapResponse::~getSubmapResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getSubmapResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getSubmapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  submap_.Destroy();
}

void getSubmapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getSubmapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getSubmapResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  submap_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getSubmapResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes submap = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_submap();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getSubmapResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getSubmapResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes submap = 1;
  if (!this->_internal_submap().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_submap(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getSubmapResponse)
  return target;
}

size_t getSubmapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getSubmapResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes submap = 1;
  if (!this->_internal_submap().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_submap());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getSubmapResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getSubmapResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getSubmapResponse::GetClassData() const { return &_class_data_; }

void getSubmapResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getSubmapResponse *>(to)->MergeFrom(
      static_cast<const getSubmapResponse &>(from));
}


void getSubmapResponse::MergeFrom(const getSubmapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getSubmapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_submap().empty()) {
    _internal_set_submap(from._internal_submap());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getSubmapResponse::CopyFrom(const getSubmapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getSubmapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getSubmapResponse::IsInitialized() const {
  return true;
}

void getSubmapResponse::InternalSwap(getSubmapResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &submap_, lhs_arena,
      &other->submap_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getSubmapResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[5]);
}

// ===================================================================

class getLocalPointCloud_grpc0Request::_Internal {
 public:
};

getLocalPointCloud_grpc0Request::getLocalPointCloud_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getLocalPointCloud_grpc0Request)
}
getLocalPointCloud_grpc0Request::getLocalPointCloud_grpc0Request(const getLocalPointCloud_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    keyframes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keyframes().empty()) {
    keyframes_.Set(from._internal_keyframes(), 
      GetArenaForAllocation());
  }
  localpointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    localpointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_localpointcloud().empty()) {
    localpointcloud_.Set(from._internal_localpointcloud(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getLocalPointCloud_grpc0Request)
}

inline void getLocalPointCloud_grpc0Request::SharedCtor() {
keyframes_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  keyframes_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
localpointcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  localpointcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

getLocalPointCloud_grpc0Request::~getLocalPointCloud_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getLocalPointCloud_grpc0Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getLocalPointCloud_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  keyframes_.Destroy();
  localpointcloud_.Destroy();
}

void getLocalPointCloud_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getLocalPointCloud_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getLocalPointCloud_grpc0Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframes_.ClearToEmpty();
  localpointcloud_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getLocalPointCloud_grpc0Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keyframes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keyframes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes localPointCloud = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_localpointcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getLocalPointCloud_grpc0Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getLocalPointCloud_grpc0Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframes = 2;
  if (!this->_internal_keyframes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframes(), target);
  }

  // bytes localPointCloud = 3;
  if (!this->_internal_localpointcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_localpointcloud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getLocalPointCloud_grpc0Request)
  return target;
}

size_t getLocalPointCloud_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getLocalPointCloud_grpc0Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframes = 2;
  if (!this->_internal_keyframes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframes());
  }

  // bytes localPointCloud = 3;
  if (!this->_internal_localpointcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_localpointcloud());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getLocalPointCloud_grpc0Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getLocalPointCloud_grpc0Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getLocalPointCloud_grpc0Request::GetClassData() const { return &_class_data_; }

void getLocalPointCloud_grpc0Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getLocalPointCloud_grpc0Request *>(to)->MergeFrom(
      static_cast<const getLocalPointCloud_grpc0Request &>(from));
}


void getLocalPointCloud_grpc0Request::MergeFrom(const getLocalPointCloud_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getLocalPointCloud_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keyframes().empty()) {
    _internal_set_keyframes(from._internal_keyframes());
  }
  if (!from._internal_localpointcloud().empty()) {
    _internal_set_localpointcloud(from._internal_localpointcloud());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getLocalPointCloud_grpc0Request::CopyFrom(const getLocalPointCloud_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getLocalPointCloud_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getLocalPointCloud_grpc0Request::IsInitialized() const {
  return true;
}

void getLocalPointCloud_grpc0Request::InternalSwap(getLocalPointCloud_grpc0Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &keyframes_, lhs_arena,
      &other->keyframes_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &localpointcloud_, lhs_arena,
      &other->localpointcloud_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getLocalPointCloud_grpc0Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[6]);
}

// ===================================================================

class getLocalPointCloud_grpc0Response::_Internal {
 public:
};

getLocalPointCloud_grpc0Response::getLocalPointCloud_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getLocalPointCloud_grpc0Response)
}
getLocalPointCloud_grpc0Response::getLocalPointCloud_grpc0Response(const getLocalPointCloud_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  localpointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    localpointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_localpointcloud().empty()) {
    localpointcloud_.Set(from._internal_localpointcloud(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getLocalPointCloud_grpc0Response)
}

inline void getLocalPointCloud_grpc0Response::SharedCtor() {
localpointcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  localpointcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

getLocalPointCloud_grpc0Response::~getLocalPointCloud_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getLocalPointCloud_grpc0Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getLocalPointCloud_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  localpointcloud_.Destroy();
}

void getLocalPointCloud_grpc0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getLocalPointCloud_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getLocalPointCloud_grpc0Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  localpointcloud_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getLocalPointCloud_grpc0Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes localPointCloud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_localpointcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getLocalPointCloud_grpc0Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getLocalPointCloud_grpc0Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes localPointCloud = 1;
  if (!this->_internal_localpointcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_localpointcloud(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getLocalPointCloud_grpc0Response)
  return target;
}

size_t getLocalPointCloud_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getLocalPointCloud_grpc0Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes localPointCloud = 1;
  if (!this->_internal_localpointcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_localpointcloud());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getLocalPointCloud_grpc0Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getLocalPointCloud_grpc0Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getLocalPointCloud_grpc0Response::GetClassData() const { return &_class_data_; }

void getLocalPointCloud_grpc0Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getLocalPointCloud_grpc0Response *>(to)->MergeFrom(
      static_cast<const getLocalPointCloud_grpc0Response &>(from));
}


void getLocalPointCloud_grpc0Response::MergeFrom(const getLocalPointCloud_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getLocalPointCloud_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_localpointcloud().empty()) {
    _internal_set_localpointcloud(from._internal_localpointcloud());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getLocalPointCloud_grpc0Response::CopyFrom(const getLocalPointCloud_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getLocalPointCloud_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getLocalPointCloud_grpc0Response::IsInitialized() const {
  return true;
}

void getLocalPointCloud_grpc0Response::InternalSwap(getLocalPointCloud_grpc0Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &localpointcloud_, lhs_arena,
      &other->localpointcloud_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getLocalPointCloud_grpc0Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[7]);
}

// ===================================================================

class getLocalPointCloud_grpc1Request::_Internal {
 public:
};

getLocalPointCloud_grpc1Request::getLocalPointCloud_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getLocalPointCloud_grpc1Request)
}
getLocalPointCloud_grpc1Request::getLocalPointCloud_grpc1Request(const getLocalPointCloud_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    keyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(from._internal_keyframe(), 
      GetArenaForAllocation());
  }
  localpointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    localpointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_localpointcloud().empty()) {
    localpointcloud_.Set(from._internal_localpointcloud(), 
      GetArenaForAllocation());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&minweightneighbor_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(minweightneighbor_));
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getLocalPointCloud_grpc1Request)
}

inline void getLocalPointCloud_grpc1Request::SharedCtor() {
keyframe_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  keyframe_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
localpointcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  localpointcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&minweightneighbor_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(minweightneighbor_));
}

getLocalPointCloud_grpc1Request::~getLocalPointCloud_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getLocalPointCloud_grpc1Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getLocalPointCloud_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  keyframe_.Destroy();
  localpointcloud_.Destroy();
}

void getLocalPointCloud_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getLocalPointCloud_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getLocalPointCloud_grpc1Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  localpointcloud_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minweightneighbor_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(minweightneighbor_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getLocalPointCloud_grpc1Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float minWeightNeighbor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          minweightneighbor_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // bytes localPointCloud = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_localpointcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getLocalPointCloud_grpc1Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getLocalPointCloud_grpc1Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframe = 2;
  if (!this->_internal_keyframe().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe(), target);
  }

  // float minWeightNeighbor = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_minweightneighbor = this->_internal_minweightneighbor();
  uint32_t raw_minweightneighbor;
  memcpy(&raw_minweightneighbor, &tmp_minweightneighbor, sizeof(tmp_minweightneighbor));
  if (raw_minweightneighbor != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_minweightneighbor(), target);
  }

  // bytes localPointCloud = 4;
  if (!this->_internal_localpointcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_localpointcloud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getLocalPointCloud_grpc1Request)
  return target;
}

size_t getLocalPointCloud_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getLocalPointCloud_grpc1Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 2;
  if (!this->_internal_keyframe().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // bytes localPointCloud = 4;
  if (!this->_internal_localpointcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_localpointcloud());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  // float minWeightNeighbor = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_minweightneighbor = this->_internal_minweightneighbor();
  uint32_t raw_minweightneighbor;
  memcpy(&raw_minweightneighbor, &tmp_minweightneighbor, sizeof(tmp_minweightneighbor));
  if (raw_minweightneighbor != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getLocalPointCloud_grpc1Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getLocalPointCloud_grpc1Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getLocalPointCloud_grpc1Request::GetClassData() const { return &_class_data_; }

void getLocalPointCloud_grpc1Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getLocalPointCloud_grpc1Request *>(to)->MergeFrom(
      static_cast<const getLocalPointCloud_grpc1Request &>(from));
}


void getLocalPointCloud_grpc1Request::MergeFrom(const getLocalPointCloud_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getLocalPointCloud_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keyframe().empty()) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (!from._internal_localpointcloud().empty()) {
    _internal_set_localpointcloud(from._internal_localpointcloud());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_minweightneighbor = from._internal_minweightneighbor();
  uint32_t raw_minweightneighbor;
  memcpy(&raw_minweightneighbor, &tmp_minweightneighbor, sizeof(tmp_minweightneighbor));
  if (raw_minweightneighbor != 0) {
    _internal_set_minweightneighbor(from._internal_minweightneighbor());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getLocalPointCloud_grpc1Request::CopyFrom(const getLocalPointCloud_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getLocalPointCloud_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getLocalPointCloud_grpc1Request::IsInitialized() const {
  return true;
}

void getLocalPointCloud_grpc1Request::InternalSwap(getLocalPointCloud_grpc1Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &keyframe_, lhs_arena,
      &other->keyframe_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &localpointcloud_, lhs_arena,
      &other->localpointcloud_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getLocalPointCloud_grpc1Request, minweightneighbor_)
      + sizeof(getLocalPointCloud_grpc1Request::minweightneighbor_)
      - PROTOBUF_FIELD_OFFSET(getLocalPointCloud_grpc1Request, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getLocalPointCloud_grpc1Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[8]);
}

// ===================================================================

class getLocalPointCloud_grpc1Response::_Internal {
 public:
};

getLocalPointCloud_grpc1Response::getLocalPointCloud_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getLocalPointCloud_grpc1Response)
}
getLocalPointCloud_grpc1Response::getLocalPointCloud_grpc1Response(const getLocalPointCloud_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  localpointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    localpointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_localpointcloud().empty()) {
    localpointcloud_.Set(from._internal_localpointcloud(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getLocalPointCloud_grpc1Response)
}

inline void getLocalPointCloud_grpc1Response::SharedCtor() {
localpointcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  localpointcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

getLocalPointCloud_grpc1Response::~getLocalPointCloud_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getLocalPointCloud_grpc1Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getLocalPointCloud_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  localpointcloud_.Destroy();
}

void getLocalPointCloud_grpc1Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getLocalPointCloud_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getLocalPointCloud_grpc1Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  localpointcloud_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getLocalPointCloud_grpc1Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes localPointCloud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_localpointcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getLocalPointCloud_grpc1Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getLocalPointCloud_grpc1Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes localPointCloud = 1;
  if (!this->_internal_localpointcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_localpointcloud(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getLocalPointCloud_grpc1Response)
  return target;
}

size_t getLocalPointCloud_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getLocalPointCloud_grpc1Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes localPointCloud = 1;
  if (!this->_internal_localpointcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_localpointcloud());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getLocalPointCloud_grpc1Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getLocalPointCloud_grpc1Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getLocalPointCloud_grpc1Response::GetClassData() const { return &_class_data_; }

void getLocalPointCloud_grpc1Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getLocalPointCloud_grpc1Response *>(to)->MergeFrom(
      static_cast<const getLocalPointCloud_grpc1Response &>(from));
}


void getLocalPointCloud_grpc1Response::MergeFrom(const getLocalPointCloud_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getLocalPointCloud_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_localpointcloud().empty()) {
    _internal_set_localpointcloud(from._internal_localpointcloud());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getLocalPointCloud_grpc1Response::CopyFrom(const getLocalPointCloud_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getLocalPointCloud_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getLocalPointCloud_grpc1Response::IsInitialized() const {
  return true;
}

void getLocalPointCloud_grpc1Response::InternalSwap(getLocalPointCloud_grpc1Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &localpointcloud_, lhs_arena,
      &other->localpointcloud_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getLocalPointCloud_grpc1Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[9]);
}

// ===================================================================

class addCloudPointRequest::_Internal {
 public:
};

addCloudPointRequest::addCloudPointRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addCloudPointRequest)
}
addCloudPointRequest::addCloudPointRequest(const addCloudPointRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cloudpoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cloudpoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cloudpoint().empty()) {
    cloudpoint_.Set(from._internal_cloudpoint(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addCloudPointRequest)
}

inline void addCloudPointRequest::SharedCtor() {
cloudpoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cloudpoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

addCloudPointRequest::~addCloudPointRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addCloudPointRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addCloudPointRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cloudpoint_.Destroy();
}

void addCloudPointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addCloudPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addCloudPointRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cloudpoint_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addCloudPointRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes cloudPoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cloudpoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addCloudPointRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addCloudPointRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes cloudPoint = 2;
  if (!this->_internal_cloudpoint().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cloudpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addCloudPointRequest)
  return target;
}

size_t addCloudPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addCloudPointRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cloudPoint = 2;
  if (!this->_internal_cloudpoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cloudpoint());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addCloudPointRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addCloudPointRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addCloudPointRequest::GetClassData() const { return &_class_data_; }

void addCloudPointRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addCloudPointRequest *>(to)->MergeFrom(
      static_cast<const addCloudPointRequest &>(from));
}


void addCloudPointRequest::MergeFrom(const addCloudPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addCloudPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cloudpoint().empty()) {
    _internal_set_cloudpoint(from._internal_cloudpoint());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addCloudPointRequest::CopyFrom(const addCloudPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addCloudPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addCloudPointRequest::IsInitialized() const {
  return true;
}

void addCloudPointRequest::InternalSwap(addCloudPointRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cloudpoint_, lhs_arena,
      &other->cloudpoint_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addCloudPointRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[10]);
}

// ===================================================================

class addCloudPointResponse::_Internal {
 public:
};

addCloudPointResponse::addCloudPointResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addCloudPointResponse)
}
addCloudPointResponse::addCloudPointResponse(const addCloudPointResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addCloudPointResponse)
}

inline void addCloudPointResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

addCloudPointResponse::~addCloudPointResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addCloudPointResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addCloudPointResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void addCloudPointResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addCloudPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addCloudPointResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addCloudPointResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addCloudPointResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addCloudPointResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addCloudPointResponse)
  return target;
}

size_t addCloudPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addCloudPointResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addCloudPointResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addCloudPointResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addCloudPointResponse::GetClassData() const { return &_class_data_; }

void addCloudPointResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addCloudPointResponse *>(to)->MergeFrom(
      static_cast<const addCloudPointResponse &>(from));
}


void addCloudPointResponse::MergeFrom(const addCloudPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addCloudPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addCloudPointResponse::CopyFrom(const addCloudPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addCloudPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addCloudPointResponse::IsInitialized() const {
  return true;
}

void addCloudPointResponse::InternalSwap(addCloudPointResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addCloudPointResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[11]);
}

// ===================================================================

class removeCloudPointRequest::_Internal {
 public:
};

removeCloudPointRequest::removeCloudPointRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeCloudPointRequest)
}
removeCloudPointRequest::removeCloudPointRequest(const removeCloudPointRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cloudpoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cloudpoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cloudpoint().empty()) {
    cloudpoint_.Set(from._internal_cloudpoint(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeCloudPointRequest)
}

inline void removeCloudPointRequest::SharedCtor() {
cloudpoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cloudpoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

removeCloudPointRequest::~removeCloudPointRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeCloudPointRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeCloudPointRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cloudpoint_.Destroy();
}

void removeCloudPointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeCloudPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeCloudPointRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cloudpoint_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeCloudPointRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes cloudPoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cloudpoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeCloudPointRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeCloudPointRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes cloudPoint = 2;
  if (!this->_internal_cloudpoint().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cloudpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeCloudPointRequest)
  return target;
}

size_t removeCloudPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeCloudPointRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cloudPoint = 2;
  if (!this->_internal_cloudpoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cloudpoint());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeCloudPointRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    removeCloudPointRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeCloudPointRequest::GetClassData() const { return &_class_data_; }

void removeCloudPointRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<removeCloudPointRequest *>(to)->MergeFrom(
      static_cast<const removeCloudPointRequest &>(from));
}


void removeCloudPointRequest::MergeFrom(const removeCloudPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeCloudPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cloudpoint().empty()) {
    _internal_set_cloudpoint(from._internal_cloudpoint());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeCloudPointRequest::CopyFrom(const removeCloudPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeCloudPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeCloudPointRequest::IsInitialized() const {
  return true;
}

void removeCloudPointRequest::InternalSwap(removeCloudPointRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cloudpoint_, lhs_arena,
      &other->cloudpoint_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeCloudPointRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[12]);
}

// ===================================================================

class removeCloudPointResponse::_Internal {
 public:
};

removeCloudPointResponse::removeCloudPointResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeCloudPointResponse)
}
removeCloudPointResponse::removeCloudPointResponse(const removeCloudPointResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeCloudPointResponse)
}

inline void removeCloudPointResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

removeCloudPointResponse::~removeCloudPointResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeCloudPointResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeCloudPointResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void removeCloudPointResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeCloudPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeCloudPointResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeCloudPointResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeCloudPointResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeCloudPointResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeCloudPointResponse)
  return target;
}

size_t removeCloudPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeCloudPointResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeCloudPointResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    removeCloudPointResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeCloudPointResponse::GetClassData() const { return &_class_data_; }

void removeCloudPointResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<removeCloudPointResponse *>(to)->MergeFrom(
      static_cast<const removeCloudPointResponse &>(from));
}


void removeCloudPointResponse::MergeFrom(const removeCloudPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeCloudPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeCloudPointResponse::CopyFrom(const removeCloudPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeCloudPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeCloudPointResponse::IsInitialized() const {
  return true;
}

void removeCloudPointResponse::InternalSwap(removeCloudPointResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeCloudPointResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[13]);
}

// ===================================================================

class addKeyframeRequest::_Internal {
 public:
};

addKeyframeRequest::addKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addKeyframeRequest)
}
addKeyframeRequest::addKeyframeRequest(const addKeyframeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    keyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(from._internal_keyframe(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addKeyframeRequest)
}

inline void addKeyframeRequest::SharedCtor() {
keyframe_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  keyframe_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

addKeyframeRequest::~addKeyframeRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addKeyframeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addKeyframeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  keyframe_.Destroy();
}

void addKeyframeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addKeyframeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addKeyframeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addKeyframeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addKeyframeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframe = 2;
  if (!this->_internal_keyframe().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addKeyframeRequest)
  return target;
}

size_t addKeyframeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addKeyframeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 2;
  if (!this->_internal_keyframe().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addKeyframeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addKeyframeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addKeyframeRequest::GetClassData() const { return &_class_data_; }

void addKeyframeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addKeyframeRequest *>(to)->MergeFrom(
      static_cast<const addKeyframeRequest &>(from));
}


void addKeyframeRequest::MergeFrom(const addKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keyframe().empty()) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addKeyframeRequest::CopyFrom(const addKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframeRequest::IsInitialized() const {
  return true;
}

void addKeyframeRequest::InternalSwap(addKeyframeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &keyframe_, lhs_arena,
      &other->keyframe_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[14]);
}

// ===================================================================

class addKeyframeResponse::_Internal {
 public:
};

addKeyframeResponse::addKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addKeyframeResponse)
}
addKeyframeResponse::addKeyframeResponse(const addKeyframeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addKeyframeResponse)
}

inline void addKeyframeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

addKeyframeResponse::~addKeyframeResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addKeyframeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addKeyframeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void addKeyframeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addKeyframeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addKeyframeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addKeyframeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addKeyframeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addKeyframeResponse)
  return target;
}

size_t addKeyframeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addKeyframeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addKeyframeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addKeyframeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addKeyframeResponse::GetClassData() const { return &_class_data_; }

void addKeyframeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addKeyframeResponse *>(to)->MergeFrom(
      static_cast<const addKeyframeResponse &>(from));
}


void addKeyframeResponse::MergeFrom(const addKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addKeyframeResponse::CopyFrom(const addKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframeResponse::IsInitialized() const {
  return true;
}

void addKeyframeResponse::InternalSwap(addKeyframeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[15]);
}

// ===================================================================

class removeKeyframeRequest::_Internal {
 public:
};

removeKeyframeRequest::removeKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeKeyframeRequest)
}
removeKeyframeRequest::removeKeyframeRequest(const removeKeyframeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    keyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(from._internal_keyframe(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeKeyframeRequest)
}

inline void removeKeyframeRequest::SharedCtor() {
keyframe_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  keyframe_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

removeKeyframeRequest::~removeKeyframeRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeKeyframeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeKeyframeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  keyframe_.Destroy();
}

void removeKeyframeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeKeyframeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeKeyframeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeKeyframeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeKeyframeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeKeyframeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframe = 2;
  if (!this->_internal_keyframe().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeKeyframeRequest)
  return target;
}

size_t removeKeyframeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeKeyframeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 2;
  if (!this->_internal_keyframe().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeKeyframeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    removeKeyframeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeKeyframeRequest::GetClassData() const { return &_class_data_; }

void removeKeyframeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<removeKeyframeRequest *>(to)->MergeFrom(
      static_cast<const removeKeyframeRequest &>(from));
}


void removeKeyframeRequest::MergeFrom(const removeKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keyframe().empty()) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeKeyframeRequest::CopyFrom(const removeKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeKeyframeRequest::IsInitialized() const {
  return true;
}

void removeKeyframeRequest::InternalSwap(removeKeyframeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &keyframe_, lhs_arena,
      &other->keyframe_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeKeyframeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[16]);
}

// ===================================================================

class removeKeyframeResponse::_Internal {
 public:
};

removeKeyframeResponse::removeKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeKeyframeResponse)
}
removeKeyframeResponse::removeKeyframeResponse(const removeKeyframeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeKeyframeResponse)
}

inline void removeKeyframeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

removeKeyframeResponse::~removeKeyframeResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeKeyframeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeKeyframeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void removeKeyframeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeKeyframeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeKeyframeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeKeyframeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeKeyframeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeKeyframeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeKeyframeResponse)
  return target;
}

size_t removeKeyframeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeKeyframeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeKeyframeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    removeKeyframeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeKeyframeResponse::GetClassData() const { return &_class_data_; }

void removeKeyframeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<removeKeyframeResponse *>(to)->MergeFrom(
      static_cast<const removeKeyframeResponse &>(from));
}


void removeKeyframeResponse::MergeFrom(const removeKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeKeyframeResponse::CopyFrom(const removeKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeKeyframeResponse::IsInitialized() const {
  return true;
}

void removeKeyframeResponse::InternalSwap(removeKeyframeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeKeyframeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[17]);
}

// ===================================================================

class addCameraParametersRequest::_Internal {
 public:
};

addCameraParametersRequest::addCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addCameraParametersRequest)
}
addCameraParametersRequest::addCameraParametersRequest(const addCameraParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cameraparameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cameraparameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cameraparameters().empty()) {
    cameraparameters_.Set(from._internal_cameraparameters(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addCameraParametersRequest)
}

inline void addCameraParametersRequest::SharedCtor() {
cameraparameters_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cameraparameters_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

addCameraParametersRequest::~addCameraParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addCameraParametersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addCameraParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cameraparameters_.Destroy();
}

void addCameraParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addCameraParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addCameraParametersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cameraparameters_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addCameraParametersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes cameraParameters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cameraparameters();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addCameraParametersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addCameraParametersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes cameraParameters = 2;
  if (!this->_internal_cameraparameters().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cameraparameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addCameraParametersRequest)
  return target;
}

size_t addCameraParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addCameraParametersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cameraParameters = 2;
  if (!this->_internal_cameraparameters().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cameraparameters());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addCameraParametersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addCameraParametersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addCameraParametersRequest::GetClassData() const { return &_class_data_; }

void addCameraParametersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addCameraParametersRequest *>(to)->MergeFrom(
      static_cast<const addCameraParametersRequest &>(from));
}


void addCameraParametersRequest::MergeFrom(const addCameraParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addCameraParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cameraparameters().empty()) {
    _internal_set_cameraparameters(from._internal_cameraparameters());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addCameraParametersRequest::CopyFrom(const addCameraParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addCameraParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addCameraParametersRequest::IsInitialized() const {
  return true;
}

void addCameraParametersRequest::InternalSwap(addCameraParametersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cameraparameters_, lhs_arena,
      &other->cameraparameters_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addCameraParametersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[18]);
}

// ===================================================================

class addCameraParametersResponse::_Internal {
 public:
};

addCameraParametersResponse::addCameraParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.addCameraParametersResponse)
}
addCameraParametersResponse::addCameraParametersResponse(const addCameraParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.addCameraParametersResponse)
}

inline void addCameraParametersResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

addCameraParametersResponse::~addCameraParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.addCameraParametersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addCameraParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void addCameraParametersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addCameraParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.addCameraParametersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addCameraParametersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addCameraParametersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.addCameraParametersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.addCameraParametersResponse)
  return target;
}

size_t addCameraParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.addCameraParametersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addCameraParametersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addCameraParametersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addCameraParametersResponse::GetClassData() const { return &_class_data_; }

void addCameraParametersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<addCameraParametersResponse *>(to)->MergeFrom(
      static_cast<const addCameraParametersResponse &>(from));
}


void addCameraParametersResponse::MergeFrom(const addCameraParametersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.addCameraParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addCameraParametersResponse::CopyFrom(const addCameraParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.addCameraParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addCameraParametersResponse::IsInitialized() const {
  return true;
}

void addCameraParametersResponse::InternalSwap(addCameraParametersResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addCameraParametersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[19]);
}

// ===================================================================

class removeCameraParametersRequest::_Internal {
 public:
};

removeCameraParametersRequest::removeCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeCameraParametersRequest)
}
removeCameraParametersRequest::removeCameraParametersRequest(const removeCameraParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cameraparameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cameraparameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cameraparameters().empty()) {
    cameraparameters_.Set(from._internal_cameraparameters(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeCameraParametersRequest)
}

inline void removeCameraParametersRequest::SharedCtor() {
cameraparameters_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cameraparameters_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

removeCameraParametersRequest::~removeCameraParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeCameraParametersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeCameraParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cameraparameters_.Destroy();
}

void removeCameraParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeCameraParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeCameraParametersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cameraparameters_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeCameraParametersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes cameraParameters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cameraparameters();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeCameraParametersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeCameraParametersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes cameraParameters = 2;
  if (!this->_internal_cameraparameters().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cameraparameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeCameraParametersRequest)
  return target;
}

size_t removeCameraParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeCameraParametersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cameraParameters = 2;
  if (!this->_internal_cameraparameters().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cameraparameters());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeCameraParametersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    removeCameraParametersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeCameraParametersRequest::GetClassData() const { return &_class_data_; }

void removeCameraParametersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<removeCameraParametersRequest *>(to)->MergeFrom(
      static_cast<const removeCameraParametersRequest &>(from));
}


void removeCameraParametersRequest::MergeFrom(const removeCameraParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeCameraParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cameraparameters().empty()) {
    _internal_set_cameraparameters(from._internal_cameraparameters());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeCameraParametersRequest::CopyFrom(const removeCameraParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeCameraParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeCameraParametersRequest::IsInitialized() const {
  return true;
}

void removeCameraParametersRequest::InternalSwap(removeCameraParametersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cameraparameters_, lhs_arena,
      &other->cameraparameters_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeCameraParametersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[20]);
}

// ===================================================================

class removeCameraParametersResponse::_Internal {
 public:
};

removeCameraParametersResponse::removeCameraParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.removeCameraParametersResponse)
}
removeCameraParametersResponse::removeCameraParametersResponse(const removeCameraParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.removeCameraParametersResponse)
}

inline void removeCameraParametersResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

removeCameraParametersResponse::~removeCameraParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.removeCameraParametersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeCameraParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void removeCameraParametersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeCameraParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.removeCameraParametersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeCameraParametersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeCameraParametersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.removeCameraParametersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.removeCameraParametersResponse)
  return target;
}

size_t removeCameraParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.removeCameraParametersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeCameraParametersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    removeCameraParametersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeCameraParametersResponse::GetClassData() const { return &_class_data_; }

void removeCameraParametersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<removeCameraParametersResponse *>(to)->MergeFrom(
      static_cast<const removeCameraParametersResponse &>(from));
}


void removeCameraParametersResponse::MergeFrom(const removeCameraParametersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.removeCameraParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeCameraParametersResponse::CopyFrom(const removeCameraParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.removeCameraParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeCameraParametersResponse::IsInitialized() const {
  return true;
}

void removeCameraParametersResponse::InternalSwap(removeCameraParametersResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeCameraParametersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[21]);
}

// ===================================================================

class getCameraParameters_grpc0Request::_Internal {
 public:
};

getCameraParameters_grpc0Request::getCameraParameters_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getCameraParameters_grpc0Request)
}
getCameraParameters_grpc0Request::getCameraParameters_grpc0Request(const getCameraParameters_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cameraparameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cameraparameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cameraparameters().empty()) {
    cameraparameters_.Set(from._internal_cameraparameters(), 
      GetArenaForAllocation());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getCameraParameters_grpc0Request)
}

inline void getCameraParameters_grpc0Request::SharedCtor() {
cameraparameters_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cameraparameters_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
}

getCameraParameters_grpc0Request::~getCameraParameters_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getCameraParameters_grpc0Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getCameraParameters_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cameraparameters_.Destroy();
}

void getCameraParameters_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getCameraParameters_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getCameraParameters_grpc0Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cameraparameters_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getCameraParameters_grpc0Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes cameraParameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_cameraparameters();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getCameraParameters_grpc0Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getCameraParameters_grpc0Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // bytes cameraParameters = 3;
  if (!this->_internal_cameraparameters().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_cameraparameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getCameraParameters_grpc0Request)
  return target;
}

size_t getCameraParameters_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getCameraParameters_grpc0Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cameraParameters = 3;
  if (!this->_internal_cameraparameters().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cameraparameters());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getCameraParameters_grpc0Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getCameraParameters_grpc0Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getCameraParameters_grpc0Request::GetClassData() const { return &_class_data_; }

void getCameraParameters_grpc0Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getCameraParameters_grpc0Request *>(to)->MergeFrom(
      static_cast<const getCameraParameters_grpc0Request &>(from));
}


void getCameraParameters_grpc0Request::MergeFrom(const getCameraParameters_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getCameraParameters_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cameraparameters().empty()) {
    _internal_set_cameraparameters(from._internal_cameraparameters());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getCameraParameters_grpc0Request::CopyFrom(const getCameraParameters_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getCameraParameters_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getCameraParameters_grpc0Request::IsInitialized() const {
  return true;
}

void getCameraParameters_grpc0Request::InternalSwap(getCameraParameters_grpc0Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cameraparameters_, lhs_arena,
      &other->cameraparameters_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getCameraParameters_grpc0Request, id_)
      + sizeof(getCameraParameters_grpc0Request::id_)
      - PROTOBUF_FIELD_OFFSET(getCameraParameters_grpc0Request, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getCameraParameters_grpc0Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[22]);
}

// ===================================================================

class getCameraParameters_grpc0Response::_Internal {
 public:
};

getCameraParameters_grpc0Response::getCameraParameters_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getCameraParameters_grpc0Response)
}
getCameraParameters_grpc0Response::getCameraParameters_grpc0Response(const getCameraParameters_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cameraparameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cameraparameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cameraparameters().empty()) {
    cameraparameters_.Set(from._internal_cameraparameters(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getCameraParameters_grpc0Response)
}

inline void getCameraParameters_grpc0Response::SharedCtor() {
cameraparameters_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cameraparameters_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

getCameraParameters_grpc0Response::~getCameraParameters_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getCameraParameters_grpc0Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getCameraParameters_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cameraparameters_.Destroy();
}

void getCameraParameters_grpc0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getCameraParameters_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getCameraParameters_grpc0Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cameraparameters_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getCameraParameters_grpc0Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes cameraParameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_cameraparameters();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getCameraParameters_grpc0Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getCameraParameters_grpc0Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cameraParameters = 1;
  if (!this->_internal_cameraparameters().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_cameraparameters(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getCameraParameters_grpc0Response)
  return target;
}

size_t getCameraParameters_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getCameraParameters_grpc0Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cameraParameters = 1;
  if (!this->_internal_cameraparameters().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cameraparameters());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getCameraParameters_grpc0Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getCameraParameters_grpc0Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getCameraParameters_grpc0Response::GetClassData() const { return &_class_data_; }

void getCameraParameters_grpc0Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getCameraParameters_grpc0Response *>(to)->MergeFrom(
      static_cast<const getCameraParameters_grpc0Response &>(from));
}


void getCameraParameters_grpc0Response::MergeFrom(const getCameraParameters_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getCameraParameters_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cameraparameters().empty()) {
    _internal_set_cameraparameters(from._internal_cameraparameters());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getCameraParameters_grpc0Response::CopyFrom(const getCameraParameters_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getCameraParameters_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getCameraParameters_grpc0Response::IsInitialized() const {
  return true;
}

void getCameraParameters_grpc0Response::InternalSwap(getCameraParameters_grpc0Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cameraparameters_, lhs_arena,
      &other->cameraparameters_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getCameraParameters_grpc0Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[23]);
}

// ===================================================================

class getCameraParameters_grpc1Request::_Internal {
 public:
};

getCameraParameters_grpc1Request::getCameraParameters_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getCameraParameters_grpc1Request)
}
getCameraParameters_grpc1Request::getCameraParameters_grpc1Request(const getCameraParameters_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cameraparameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cameraparameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cameraparameters().empty()) {
    cameraparameters_.Set(from._internal_cameraparameters(), 
      GetArenaForAllocation());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getCameraParameters_grpc1Request)
}

inline void getCameraParameters_grpc1Request::SharedCtor() {
cameraparameters_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cameraparameters_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
}

getCameraParameters_grpc1Request::~getCameraParameters_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getCameraParameters_grpc1Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getCameraParameters_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cameraparameters_.Destroy();
}

void getCameraParameters_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getCameraParameters_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getCameraParameters_grpc1Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cameraparameters_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getCameraParameters_grpc1Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes cameraParameters = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_cameraparameters();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getCameraParameters_grpc1Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getCameraParameters_grpc1Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // bytes cameraParameters = 3;
  if (!this->_internal_cameraparameters().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_cameraparameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getCameraParameters_grpc1Request)
  return target;
}

size_t getCameraParameters_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getCameraParameters_grpc1Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cameraParameters = 3;
  if (!this->_internal_cameraparameters().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cameraparameters());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getCameraParameters_grpc1Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getCameraParameters_grpc1Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getCameraParameters_grpc1Request::GetClassData() const { return &_class_data_; }

void getCameraParameters_grpc1Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getCameraParameters_grpc1Request *>(to)->MergeFrom(
      static_cast<const getCameraParameters_grpc1Request &>(from));
}


void getCameraParameters_grpc1Request::MergeFrom(const getCameraParameters_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getCameraParameters_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cameraparameters().empty()) {
    _internal_set_cameraparameters(from._internal_cameraparameters());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getCameraParameters_grpc1Request::CopyFrom(const getCameraParameters_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getCameraParameters_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getCameraParameters_grpc1Request::IsInitialized() const {
  return true;
}

void getCameraParameters_grpc1Request::InternalSwap(getCameraParameters_grpc1Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cameraparameters_, lhs_arena,
      &other->cameraparameters_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getCameraParameters_grpc1Request, id_)
      + sizeof(getCameraParameters_grpc1Request::id_)
      - PROTOBUF_FIELD_OFFSET(getCameraParameters_grpc1Request, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getCameraParameters_grpc1Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[24]);
}

// ===================================================================

class getCameraParameters_grpc1Response::_Internal {
 public:
};

getCameraParameters_grpc1Response::getCameraParameters_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.getCameraParameters_grpc1Response)
}
getCameraParameters_grpc1Response::getCameraParameters_grpc1Response(const getCameraParameters_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cameraparameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cameraparameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cameraparameters().empty()) {
    cameraparameters_.Set(from._internal_cameraparameters(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.getCameraParameters_grpc1Response)
}

inline void getCameraParameters_grpc1Response::SharedCtor() {
cameraparameters_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cameraparameters_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

getCameraParameters_grpc1Response::~getCameraParameters_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.getCameraParameters_grpc1Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getCameraParameters_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cameraparameters_.Destroy();
}

void getCameraParameters_grpc1Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getCameraParameters_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.getCameraParameters_grpc1Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cameraparameters_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getCameraParameters_grpc1Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes cameraParameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_cameraparameters();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getCameraParameters_grpc1Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.getCameraParameters_grpc1Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes cameraParameters = 1;
  if (!this->_internal_cameraparameters().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_cameraparameters(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.getCameraParameters_grpc1Response)
  return target;
}

size_t getCameraParameters_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.getCameraParameters_grpc1Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cameraParameters = 1;
  if (!this->_internal_cameraparameters().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cameraparameters());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getCameraParameters_grpc1Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    getCameraParameters_grpc1Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getCameraParameters_grpc1Response::GetClassData() const { return &_class_data_; }

void getCameraParameters_grpc1Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<getCameraParameters_grpc1Response *>(to)->MergeFrom(
      static_cast<const getCameraParameters_grpc1Response &>(from));
}


void getCameraParameters_grpc1Response::MergeFrom(const getCameraParameters_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.getCameraParameters_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cameraparameters().empty()) {
    _internal_set_cameraparameters(from._internal_cameraparameters());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getCameraParameters_grpc1Response::CopyFrom(const getCameraParameters_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.getCameraParameters_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getCameraParameters_grpc1Response::IsInitialized() const {
  return true;
}

void getCameraParameters_grpc1Response::InternalSwap(getCameraParameters_grpc1Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cameraparameters_, lhs_arena,
      &other->cameraparameters_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getCameraParameters_grpc1Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[25]);
}

// ===================================================================

class pointCloudPruningRequest::_Internal {
 public:
};

pointCloudPruningRequest::pointCloudPruningRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.pointCloudPruningRequest)
}
pointCloudPruningRequest::pointCloudPruningRequest(const pointCloudPruningRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cloudpoints_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cloudpoints_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cloudpoints().empty()) {
    cloudpoints_.Set(from._internal_cloudpoints(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.pointCloudPruningRequest)
}

inline void pointCloudPruningRequest::SharedCtor() {
cloudpoints_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cloudpoints_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

pointCloudPruningRequest::~pointCloudPruningRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.pointCloudPruningRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void pointCloudPruningRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cloudpoints_.Destroy();
}

void pointCloudPruningRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void pointCloudPruningRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.pointCloudPruningRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cloudpoints_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* pointCloudPruningRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes cloudPoints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cloudpoints();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* pointCloudPruningRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.pointCloudPruningRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes cloudPoints = 2;
  if (!this->_internal_cloudpoints().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cloudpoints(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.pointCloudPruningRequest)
  return target;
}

size_t pointCloudPruningRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.pointCloudPruningRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cloudPoints = 2;
  if (!this->_internal_cloudpoints().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cloudpoints());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData pointCloudPruningRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    pointCloudPruningRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*pointCloudPruningRequest::GetClassData() const { return &_class_data_; }

void pointCloudPruningRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<pointCloudPruningRequest *>(to)->MergeFrom(
      static_cast<const pointCloudPruningRequest &>(from));
}


void pointCloudPruningRequest::MergeFrom(const pointCloudPruningRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.pointCloudPruningRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cloudpoints().empty()) {
    _internal_set_cloudpoints(from._internal_cloudpoints());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void pointCloudPruningRequest::CopyFrom(const pointCloudPruningRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.pointCloudPruningRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pointCloudPruningRequest::IsInitialized() const {
  return true;
}

void pointCloudPruningRequest::InternalSwap(pointCloudPruningRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &cloudpoints_, lhs_arena,
      &other->cloudpoints_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata pointCloudPruningRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[26]);
}

// ===================================================================

class pointCloudPruningResponse::_Internal {
 public:
};

pointCloudPruningResponse::pointCloudPruningResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.pointCloudPruningResponse)
}
pointCloudPruningResponse::pointCloudPruningResponse(const pointCloudPruningResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.pointCloudPruningResponse)
}

inline void pointCloudPruningResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

pointCloudPruningResponse::~pointCloudPruningResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.pointCloudPruningResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void pointCloudPruningResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void pointCloudPruningResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void pointCloudPruningResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.pointCloudPruningResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* pointCloudPruningResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* pointCloudPruningResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.pointCloudPruningResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.pointCloudPruningResponse)
  return target;
}

size_t pointCloudPruningResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.pointCloudPruningResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData pointCloudPruningResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    pointCloudPruningResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*pointCloudPruningResponse::GetClassData() const { return &_class_data_; }

void pointCloudPruningResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<pointCloudPruningResponse *>(to)->MergeFrom(
      static_cast<const pointCloudPruningResponse &>(from));
}


void pointCloudPruningResponse::MergeFrom(const pointCloudPruningResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.pointCloudPruningResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void pointCloudPruningResponse::CopyFrom(const pointCloudPruningResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.pointCloudPruningResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pointCloudPruningResponse::IsInitialized() const {
  return true;
}

void pointCloudPruningResponse::InternalSwap(pointCloudPruningResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata pointCloudPruningResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[27]);
}

// ===================================================================

class keyframePruningRequest::_Internal {
 public:
};

keyframePruningRequest::keyframePruningRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.keyframePruningRequest)
}
keyframePruningRequest::keyframePruningRequest(const keyframePruningRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    keyframes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keyframes().empty()) {
    keyframes_.Set(from._internal_keyframes(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.keyframePruningRequest)
}

inline void keyframePruningRequest::SharedCtor() {
keyframes_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  keyframes_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

keyframePruningRequest::~keyframePruningRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.keyframePruningRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void keyframePruningRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  keyframes_.Destroy();
}

void keyframePruningRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void keyframePruningRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.keyframePruningRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframes_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* keyframePruningRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keyframes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keyframes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* keyframePruningRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.keyframePruningRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframes = 2;
  if (!this->_internal_keyframes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.keyframePruningRequest)
  return target;
}

size_t keyframePruningRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.keyframePruningRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframes = 2;
  if (!this->_internal_keyframes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframes());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData keyframePruningRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    keyframePruningRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*keyframePruningRequest::GetClassData() const { return &_class_data_; }

void keyframePruningRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<keyframePruningRequest *>(to)->MergeFrom(
      static_cast<const keyframePruningRequest &>(from));
}


void keyframePruningRequest::MergeFrom(const keyframePruningRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.keyframePruningRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keyframes().empty()) {
    _internal_set_keyframes(from._internal_keyframes());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void keyframePruningRequest::CopyFrom(const keyframePruningRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.keyframePruningRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool keyframePruningRequest::IsInitialized() const {
  return true;
}

void keyframePruningRequest::InternalSwap(keyframePruningRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &keyframes_, lhs_arena,
      &other->keyframes_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata keyframePruningRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[28]);
}

// ===================================================================

class keyframePruningResponse::_Internal {
 public:
};

keyframePruningResponse::keyframePruningResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.keyframePruningResponse)
}
keyframePruningResponse::keyframePruningResponse(const keyframePruningResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.keyframePruningResponse)
}

inline void keyframePruningResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

keyframePruningResponse::~keyframePruningResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.keyframePruningResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void keyframePruningResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void keyframePruningResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void keyframePruningResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.keyframePruningResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* keyframePruningResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* keyframePruningResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.keyframePruningResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.keyframePruningResponse)
  return target;
}

size_t keyframePruningResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.keyframePruningResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData keyframePruningResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    keyframePruningResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*keyframePruningResponse::GetClassData() const { return &_class_data_; }

void keyframePruningResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<keyframePruningResponse *>(to)->MergeFrom(
      static_cast<const keyframePruningResponse &>(from));
}


void keyframePruningResponse::MergeFrom(const keyframePruningResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.keyframePruningResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void keyframePruningResponse::CopyFrom(const keyframePruningResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.keyframePruningResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool keyframePruningResponse::IsInitialized() const {
  return true;
}

void keyframePruningResponse::InternalSwap(keyframePruningResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata keyframePruningResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[29]);
}

// ===================================================================

class visibilityPruningRequest::_Internal {
 public:
};

visibilityPruningRequest::visibilityPruningRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.visibilityPruningRequest)
}
visibilityPruningRequest::visibilityPruningRequest(const visibilityPruningRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.visibilityPruningRequest)
}

inline void visibilityPruningRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

visibilityPruningRequest::~visibilityPruningRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.visibilityPruningRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void visibilityPruningRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void visibilityPruningRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void visibilityPruningRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.visibilityPruningRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* visibilityPruningRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* visibilityPruningRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.visibilityPruningRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.visibilityPruningRequest)
  return target;
}

size_t visibilityPruningRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.visibilityPruningRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData visibilityPruningRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    visibilityPruningRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*visibilityPruningRequest::GetClassData() const { return &_class_data_; }

void visibilityPruningRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<visibilityPruningRequest *>(to)->MergeFrom(
      static_cast<const visibilityPruningRequest &>(from));
}


void visibilityPruningRequest::MergeFrom(const visibilityPruningRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.visibilityPruningRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void visibilityPruningRequest::CopyFrom(const visibilityPruningRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.visibilityPruningRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool visibilityPruningRequest::IsInitialized() const {
  return true;
}

void visibilityPruningRequest::InternalSwap(visibilityPruningRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata visibilityPruningRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[30]);
}

// ===================================================================

class visibilityPruningResponse::_Internal {
 public:
};

visibilityPruningResponse::visibilityPruningResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.visibilityPruningResponse)
}
visibilityPruningResponse::visibilityPruningResponse(const visibilityPruningResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.visibilityPruningResponse)
}

inline void visibilityPruningResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

visibilityPruningResponse::~visibilityPruningResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.visibilityPruningResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void visibilityPruningResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void visibilityPruningResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void visibilityPruningResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.visibilityPruningResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* visibilityPruningResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* visibilityPruningResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.visibilityPruningResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.visibilityPruningResponse)
  return target;
}

size_t visibilityPruningResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.visibilityPruningResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData visibilityPruningResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    visibilityPruningResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*visibilityPruningResponse::GetClassData() const { return &_class_data_; }

void visibilityPruningResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<visibilityPruningResponse *>(to)->MergeFrom(
      static_cast<const visibilityPruningResponse &>(from));
}


void visibilityPruningResponse::MergeFrom(const visibilityPruningResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.visibilityPruningResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void visibilityPruningResponse::CopyFrom(const visibilityPruningResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.visibilityPruningResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool visibilityPruningResponse::IsInitialized() const {
  return true;
}

void visibilityPruningResponse::InternalSwap(visibilityPruningResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata visibilityPruningResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[31]);
}

// ===================================================================

class saveToFileRequest::_Internal {
 public:
};

saveToFileRequest::saveToFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.saveToFileRequest)
}
saveToFileRequest::saveToFileRequest(const saveToFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.saveToFileRequest)
}

inline void saveToFileRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

saveToFileRequest::~saveToFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.saveToFileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void saveToFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void saveToFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void saveToFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.saveToFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* saveToFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.saveToFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.saveToFileRequest)
  return target;
}

size_t saveToFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.saveToFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData saveToFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    saveToFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*saveToFileRequest::GetClassData() const { return &_class_data_; }

void saveToFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<saveToFileRequest *>(to)->MergeFrom(
      static_cast<const saveToFileRequest &>(from));
}


void saveToFileRequest::MergeFrom(const saveToFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.saveToFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void saveToFileRequest::CopyFrom(const saveToFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.saveToFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileRequest::IsInitialized() const {
  return true;
}

void saveToFileRequest::InternalSwap(saveToFileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[32]);
}

// ===================================================================

class saveToFileResponse::_Internal {
 public:
};

saveToFileResponse::saveToFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.saveToFileResponse)
}
saveToFileResponse::saveToFileResponse(const saveToFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.saveToFileResponse)
}

inline void saveToFileResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

saveToFileResponse::~saveToFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.saveToFileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void saveToFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void saveToFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void saveToFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.saveToFileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* saveToFileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.saveToFileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.saveToFileResponse)
  return target;
}

size_t saveToFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.saveToFileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData saveToFileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    saveToFileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*saveToFileResponse::GetClassData() const { return &_class_data_; }

void saveToFileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<saveToFileResponse *>(to)->MergeFrom(
      static_cast<const saveToFileResponse &>(from));
}


void saveToFileResponse::MergeFrom(const saveToFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.saveToFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void saveToFileResponse::CopyFrom(const saveToFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.saveToFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileResponse::IsInitialized() const {
  return true;
}

void saveToFileResponse::InternalSwap(saveToFileResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[33]);
}

// ===================================================================

class loadFromFileRequest::_Internal {
 public:
};

loadFromFileRequest::loadFromFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.loadFromFileRequest)
}
loadFromFileRequest::loadFromFileRequest(const loadFromFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.loadFromFileRequest)
}

inline void loadFromFileRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

loadFromFileRequest::~loadFromFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.loadFromFileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void loadFromFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void loadFromFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void loadFromFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.loadFromFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* loadFromFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.loadFromFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.loadFromFileRequest)
  return target;
}

size_t loadFromFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.loadFromFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData loadFromFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    loadFromFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*loadFromFileRequest::GetClassData() const { return &_class_data_; }

void loadFromFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<loadFromFileRequest *>(to)->MergeFrom(
      static_cast<const loadFromFileRequest &>(from));
}


void loadFromFileRequest::MergeFrom(const loadFromFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.loadFromFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void loadFromFileRequest::CopyFrom(const loadFromFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.loadFromFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileRequest::IsInitialized() const {
  return true;
}

void loadFromFileRequest::InternalSwap(loadFromFileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[34]);
}

// ===================================================================

class loadFromFileResponse::_Internal {
 public:
};

loadFromFileResponse::loadFromFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.loadFromFileResponse)
}
loadFromFileResponse::loadFromFileResponse(const loadFromFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.loadFromFileResponse)
}

inline void loadFromFileResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

loadFromFileResponse::~loadFromFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.loadFromFileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void loadFromFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void loadFromFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void loadFromFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.loadFromFileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* loadFromFileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.loadFromFileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.loadFromFileResponse)
  return target;
}

size_t loadFromFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.loadFromFileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData loadFromFileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    loadFromFileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*loadFromFileResponse::GetClassData() const { return &_class_data_; }

void loadFromFileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<loadFromFileResponse *>(to)->MergeFrom(
      static_cast<const loadFromFileResponse &>(from));
}


void loadFromFileResponse::MergeFrom(const loadFromFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.loadFromFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void loadFromFileResponse::CopyFrom(const loadFromFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.loadFromFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileResponse::IsInitialized() const {
  return true;
}

void loadFromFileResponse::InternalSwap(loadFromFileResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[35]);
}

// ===================================================================

class deleteFileRequest::_Internal {
 public:
};

deleteFileRequest::deleteFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.deleteFileRequest)
}
deleteFileRequest::deleteFileRequest(const deleteFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.deleteFileRequest)
}

inline void deleteFileRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

deleteFileRequest::~deleteFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.deleteFileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void deleteFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void deleteFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void deleteFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.deleteFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* deleteFileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* deleteFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.deleteFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.deleteFileRequest)
  return target;
}

size_t deleteFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.deleteFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData deleteFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    deleteFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*deleteFileRequest::GetClassData() const { return &_class_data_; }

void deleteFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<deleteFileRequest *>(to)->MergeFrom(
      static_cast<const deleteFileRequest &>(from));
}


void deleteFileRequest::MergeFrom(const deleteFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.deleteFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void deleteFileRequest::CopyFrom(const deleteFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.deleteFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteFileRequest::IsInitialized() const {
  return true;
}

void deleteFileRequest::InternalSwap(deleteFileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata deleteFileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[36]);
}

// ===================================================================

class deleteFileResponse::_Internal {
 public:
};

deleteFileResponse::deleteFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIMapManager.deleteFileResponse)
}
deleteFileResponse::deleteFileResponse(const deleteFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapManager.deleteFileResponse)
}

inline void deleteFileResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

deleteFileResponse::~deleteFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapManager.deleteFileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void deleteFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void deleteFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void deleteFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapManager.deleteFileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* deleteFileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* deleteFileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapManager.deleteFileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapManager.deleteFileResponse)
  return target;
}

size_t deleteFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapManager.deleteFileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData deleteFileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    deleteFileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*deleteFileResponse::GetClassData() const { return &_class_data_; }

void deleteFileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<deleteFileResponse *>(to)->MergeFrom(
      static_cast<const deleteFileResponse &>(from));
}


void deleteFileResponse::MergeFrom(const deleteFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapManager.deleteFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void deleteFileResponse::CopyFrom(const deleteFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapManager.deleteFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteFileResponse::IsInitialized() const {
  return true;
}

void deleteFileResponse::InternalSwap(deleteFileResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata deleteFileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapManagerService_2eproto_getter, &descriptor_table_grpcIMapManagerService_2eproto_once,
      file_level_metadata_grpcIMapManagerService_2eproto[37]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIMapManager
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIMapManager::setMapRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::setMapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::setMapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::setMapResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::setMapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::setMapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getMapRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::getMapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getMapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getMapResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::getMapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getMapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getSubmapRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::getSubmapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getSubmapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getSubmapResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::getSubmapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getSubmapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getLocalPointCloud_grpc0Request*
Arena::CreateMaybeMessage< ::grpcIMapManager::getLocalPointCloud_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getLocalPointCloud_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getLocalPointCloud_grpc0Response*
Arena::CreateMaybeMessage< ::grpcIMapManager::getLocalPointCloud_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getLocalPointCloud_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getLocalPointCloud_grpc1Request*
Arena::CreateMaybeMessage< ::grpcIMapManager::getLocalPointCloud_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getLocalPointCloud_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getLocalPointCloud_grpc1Response*
Arena::CreateMaybeMessage< ::grpcIMapManager::getLocalPointCloud_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getLocalPointCloud_grpc1Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addCloudPointRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::addCloudPointRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addCloudPointRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addCloudPointResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::addCloudPointResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addCloudPointResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeCloudPointRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::removeCloudPointRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeCloudPointRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeCloudPointResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::removeCloudPointResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeCloudPointResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addKeyframeRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::addKeyframeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addKeyframeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addKeyframeResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::addKeyframeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addKeyframeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeKeyframeRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::removeKeyframeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeKeyframeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeKeyframeResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::removeKeyframeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeKeyframeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addCameraParametersRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::addCameraParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addCameraParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::addCameraParametersResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::addCameraParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::addCameraParametersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeCameraParametersRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::removeCameraParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeCameraParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::removeCameraParametersResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::removeCameraParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::removeCameraParametersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getCameraParameters_grpc0Request*
Arena::CreateMaybeMessage< ::grpcIMapManager::getCameraParameters_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getCameraParameters_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getCameraParameters_grpc0Response*
Arena::CreateMaybeMessage< ::grpcIMapManager::getCameraParameters_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getCameraParameters_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getCameraParameters_grpc1Request*
Arena::CreateMaybeMessage< ::grpcIMapManager::getCameraParameters_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getCameraParameters_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::getCameraParameters_grpc1Response*
Arena::CreateMaybeMessage< ::grpcIMapManager::getCameraParameters_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::getCameraParameters_grpc1Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::pointCloudPruningRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::pointCloudPruningRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::pointCloudPruningRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::pointCloudPruningResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::pointCloudPruningResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::pointCloudPruningResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::keyframePruningRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::keyframePruningRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::keyframePruningRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::keyframePruningResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::keyframePruningResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::keyframePruningResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::visibilityPruningRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::visibilityPruningRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::visibilityPruningRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::visibilityPruningResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::visibilityPruningResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::visibilityPruningResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::saveToFileRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::saveToFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::saveToFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::saveToFileResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::saveToFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::saveToFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::loadFromFileRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::loadFromFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::loadFromFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::loadFromFileResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::loadFromFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::loadFromFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::deleteFileRequest*
Arena::CreateMaybeMessage< ::grpcIMapManager::deleteFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::deleteFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapManager::deleteFileResponse*
Arena::CreateMaybeMessage< ::grpcIMapManager::deleteFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapManager::deleteFileResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
