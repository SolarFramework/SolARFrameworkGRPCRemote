// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcI2DOverlayService.proto

#include "grpcI2DOverlayService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcI2DOverlay {
constexpr drawCircleRequest::drawCircleRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : point_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , displayimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct drawCircleRequestDefaultTypeInternal {
  constexpr drawCircleRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~drawCircleRequestDefaultTypeInternal() {}
  union {
    drawCircleRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT drawCircleRequestDefaultTypeInternal _drawCircleRequest_default_instance_;
constexpr drawCircles_grpc0Request::drawCircles_grpc0Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : points_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , displayimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct drawCircles_grpc0RequestDefaultTypeInternal {
  constexpr drawCircles_grpc0RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~drawCircles_grpc0RequestDefaultTypeInternal() {}
  union {
    drawCircles_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT drawCircles_grpc0RequestDefaultTypeInternal _drawCircles_grpc0Request_default_instance_;
constexpr drawCircles_grpc1Request::drawCircles_grpc1Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keypoints_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , displayimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct drawCircles_grpc1RequestDefaultTypeInternal {
  constexpr drawCircles_grpc1RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~drawCircles_grpc1RequestDefaultTypeInternal() {}
  union {
    drawCircles_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT drawCircles_grpc1RequestDefaultTypeInternal _drawCircles_grpc1Request_default_instance_;
constexpr drawContourRequest::drawContourRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : contours_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , displayimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct drawContourRequestDefaultTypeInternal {
  constexpr drawContourRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~drawContourRequestDefaultTypeInternal() {}
  union {
    drawContourRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT drawContourRequestDefaultTypeInternal _drawContourRequest_default_instance_;
constexpr drawContoursRequest::drawContoursRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : contours_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , displayimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct drawContoursRequestDefaultTypeInternal {
  constexpr drawContoursRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~drawContoursRequestDefaultTypeInternal() {}
  union {
    drawContoursRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT drawContoursRequestDefaultTypeInternal _drawContoursRequest_default_instance_;
constexpr drawSBPatternRequest::drawSBPatternRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pattern_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , displayimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct drawSBPatternRequestDefaultTypeInternal {
  constexpr drawSBPatternRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~drawSBPatternRequestDefaultTypeInternal() {}
  union {
    drawSBPatternRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT drawSBPatternRequestDefaultTypeInternal _drawSBPatternRequest_default_instance_;
}  // namespace grpcI2DOverlay
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcI2DOverlayService_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcI2DOverlayService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcI2DOverlayService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcI2DOverlayService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawCircleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawCircleRequest, point_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawCircleRequest, displayimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawCircles_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawCircles_grpc0Request, points_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawCircles_grpc0Request, displayimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawCircles_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawCircles_grpc1Request, keypoints_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawCircles_grpc1Request, displayimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawContourRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawContourRequest, contours_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawContourRequest, displayimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawContoursRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawContoursRequest, contours_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawContoursRequest, displayimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawSBPatternRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawSBPatternRequest, pattern_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DOverlay::drawSBPatternRequest, displayimage_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcI2DOverlay::drawCircleRequest)},
  { 7, -1, sizeof(::grpcI2DOverlay::drawCircles_grpc0Request)},
  { 14, -1, sizeof(::grpcI2DOverlay::drawCircles_grpc1Request)},
  { 21, -1, sizeof(::grpcI2DOverlay::drawContourRequest)},
  { 28, -1, sizeof(::grpcI2DOverlay::drawContoursRequest)},
  { 35, -1, sizeof(::grpcI2DOverlay::drawSBPatternRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DOverlay::_drawCircleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DOverlay::_drawCircles_grpc0Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DOverlay::_drawCircles_grpc1Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DOverlay::_drawContourRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DOverlay::_drawContoursRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DOverlay::_drawSBPatternRequest_default_instance_),
};

const char descriptor_table_protodef_grpcI2DOverlayService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033grpcI2DOverlayService.proto\022\016grpcI2DOv"
  "erlay\032\033google/protobuf/empty.proto\"8\n\021dr"
  "awCircleRequest\022\r\n\005point\030\001 \001(\014\022\024\n\014displa"
  "yImage\030\002 \001(\014\"@\n\030drawCircles_grpc0Request"
  "\022\016\n\006points\030\001 \001(\014\022\024\n\014displayImage\030\002 \001(\014\"C"
  "\n\030drawCircles_grpc1Request\022\021\n\tkeypoints\030"
  "\001 \001(\014\022\024\n\014displayImage\030\002 \001(\014\"<\n\022drawConto"
  "urRequest\022\020\n\010contours\030\001 \001(\014\022\024\n\014displayIm"
  "age\030\002 \001(\014\"=\n\023drawContoursRequest\022\020\n\010cont"
  "ours\030\001 \001(\014\022\024\n\014displayImage\030\002 \001(\014\"=\n\024draw"
  "SBPatternRequest\022\017\n\007pattern\030\001 \001(\014\022\024\n\014dis"
  "playImage\030\002 \001(\0142\201\004\n\025grpcI2DOverlayServic"
  "e\022I\n\ndrawCircle\022!.grpcI2DOverlay.drawCir"
  "cleRequest\032\026.google.protobuf.Empty\"\000\022W\n\021"
  "drawCircles_grpc0\022(.grpcI2DOverlay.drawC"
  "ircles_grpc0Request\032\026.google.protobuf.Em"
  "pty\"\000\022W\n\021drawCircles_grpc1\022(.grpcI2DOver"
  "lay.drawCircles_grpc1Request\032\026.google.pr"
  "otobuf.Empty\"\000\022K\n\013drawContour\022\".grpcI2DO"
  "verlay.drawContourRequest\032\026.google.proto"
  "buf.Empty\"\000\022M\n\014drawContours\022#.grpcI2DOve"
  "rlay.drawContoursRequest\032\026.google.protob"
  "uf.Empty\"\000\022O\n\rdrawSBPattern\022$.grpcI2DOve"
  "rlay.drawSBPatternRequest\032\026.google.proto"
  "buf.Empty\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcI2DOverlayService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcI2DOverlayService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcI2DOverlayService_2eproto = {
  false, false, 979, descriptor_table_protodef_grpcI2DOverlayService_2eproto, "grpcI2DOverlayService.proto", 
  &descriptor_table_grpcI2DOverlayService_2eproto_once, descriptor_table_grpcI2DOverlayService_2eproto_deps, 1, 6,
  schemas, file_default_instances, TableStruct_grpcI2DOverlayService_2eproto::offsets,
  file_level_metadata_grpcI2DOverlayService_2eproto, file_level_enum_descriptors_grpcI2DOverlayService_2eproto, file_level_service_descriptors_grpcI2DOverlayService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_grpcI2DOverlayService_2eproto_getter() {
  return &descriptor_table_grpcI2DOverlayService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcI2DOverlayService_2eproto(&descriptor_table_grpcI2DOverlayService_2eproto);
namespace grpcI2DOverlay {

// ===================================================================

class drawCircleRequest::_Internal {
 public:
};

drawCircleRequest::drawCircleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcI2DOverlay.drawCircleRequest)
}
drawCircleRequest::drawCircleRequest(const drawCircleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  point_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_point().empty()) {
    point_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_point(), 
      GetArenaForAllocation());
  }
  displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_displayimage().empty()) {
    displayimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_displayimage(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcI2DOverlay.drawCircleRequest)
}

inline void drawCircleRequest::SharedCtor() {
point_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

drawCircleRequest::~drawCircleRequest() {
  // @@protoc_insertion_point(destructor:grpcI2DOverlay.drawCircleRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void drawCircleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  point_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  displayimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void drawCircleRequest::ArenaDtor(void* object) {
  drawCircleRequest* _this = reinterpret_cast< drawCircleRequest* >(object);
  (void)_this;
}
void drawCircleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void drawCircleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void drawCircleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DOverlay.drawCircleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.ClearToEmpty();
  displayimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* drawCircleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_point();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes displayImage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_displayimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* drawCircleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DOverlay.drawCircleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes point = 1;
  if (!this->_internal_point().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_point(), target);
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_displayimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DOverlay.drawCircleRequest)
  return target;
}

size_t drawCircleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DOverlay.drawCircleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes point = 1;
  if (!this->_internal_point().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_point());
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_displayimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData drawCircleRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    drawCircleRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*drawCircleRequest::GetClassData() const { return &_class_data_; }

void drawCircleRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<drawCircleRequest *>(to)->MergeFrom(
      static_cast<const drawCircleRequest &>(from));
}


void drawCircleRequest::MergeFrom(const drawCircleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DOverlay.drawCircleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_point().empty()) {
    _internal_set_point(from._internal_point());
  }
  if (!from._internal_displayimage().empty()) {
    _internal_set_displayimage(from._internal_displayimage());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void drawCircleRequest::CopyFrom(const drawCircleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DOverlay.drawCircleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drawCircleRequest::IsInitialized() const {
  return true;
}

void drawCircleRequest::InternalSwap(drawCircleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &point_, GetArenaForAllocation(),
      &other->point_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &displayimage_, GetArenaForAllocation(),
      &other->displayimage_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata drawCircleRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcI2DOverlayService_2eproto_getter, &descriptor_table_grpcI2DOverlayService_2eproto_once,
      file_level_metadata_grpcI2DOverlayService_2eproto[0]);
}

// ===================================================================

class drawCircles_grpc0Request::_Internal {
 public:
};

drawCircles_grpc0Request::drawCircles_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcI2DOverlay.drawCircles_grpc0Request)
}
drawCircles_grpc0Request::drawCircles_grpc0Request(const drawCircles_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  points_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_points().empty()) {
    points_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_points(), 
      GetArenaForAllocation());
  }
  displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_displayimage().empty()) {
    displayimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_displayimage(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcI2DOverlay.drawCircles_grpc0Request)
}

inline void drawCircles_grpc0Request::SharedCtor() {
points_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

drawCircles_grpc0Request::~drawCircles_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcI2DOverlay.drawCircles_grpc0Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void drawCircles_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  points_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  displayimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void drawCircles_grpc0Request::ArenaDtor(void* object) {
  drawCircles_grpc0Request* _this = reinterpret_cast< drawCircles_grpc0Request* >(object);
  (void)_this;
}
void drawCircles_grpc0Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void drawCircles_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void drawCircles_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DOverlay.drawCircles_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.ClearToEmpty();
  displayimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* drawCircles_grpc0Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes points = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_points();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes displayImage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_displayimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* drawCircles_grpc0Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DOverlay.drawCircles_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes points = 1;
  if (!this->_internal_points().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_points(), target);
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_displayimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DOverlay.drawCircles_grpc0Request)
  return target;
}

size_t drawCircles_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DOverlay.drawCircles_grpc0Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes points = 1;
  if (!this->_internal_points().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points());
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_displayimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData drawCircles_grpc0Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    drawCircles_grpc0Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*drawCircles_grpc0Request::GetClassData() const { return &_class_data_; }

void drawCircles_grpc0Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<drawCircles_grpc0Request *>(to)->MergeFrom(
      static_cast<const drawCircles_grpc0Request &>(from));
}


void drawCircles_grpc0Request::MergeFrom(const drawCircles_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DOverlay.drawCircles_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_points().empty()) {
    _internal_set_points(from._internal_points());
  }
  if (!from._internal_displayimage().empty()) {
    _internal_set_displayimage(from._internal_displayimage());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void drawCircles_grpc0Request::CopyFrom(const drawCircles_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DOverlay.drawCircles_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drawCircles_grpc0Request::IsInitialized() const {
  return true;
}

void drawCircles_grpc0Request::InternalSwap(drawCircles_grpc0Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &points_, GetArenaForAllocation(),
      &other->points_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &displayimage_, GetArenaForAllocation(),
      &other->displayimage_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata drawCircles_grpc0Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcI2DOverlayService_2eproto_getter, &descriptor_table_grpcI2DOverlayService_2eproto_once,
      file_level_metadata_grpcI2DOverlayService_2eproto[1]);
}

// ===================================================================

class drawCircles_grpc1Request::_Internal {
 public:
};

drawCircles_grpc1Request::drawCircles_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcI2DOverlay.drawCircles_grpc1Request)
}
drawCircles_grpc1Request::drawCircles_grpc1Request(const drawCircles_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keypoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keypoints().empty()) {
    keypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keypoints(), 
      GetArenaForAllocation());
  }
  displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_displayimage().empty()) {
    displayimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_displayimage(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcI2DOverlay.drawCircles_grpc1Request)
}

inline void drawCircles_grpc1Request::SharedCtor() {
keypoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

drawCircles_grpc1Request::~drawCircles_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcI2DOverlay.drawCircles_grpc1Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void drawCircles_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  keypoints_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  displayimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void drawCircles_grpc1Request::ArenaDtor(void* object) {
  drawCircles_grpc1Request* _this = reinterpret_cast< drawCircles_grpc1Request* >(object);
  (void)_this;
}
void drawCircles_grpc1Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void drawCircles_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void drawCircles_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DOverlay.drawCircles_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keypoints_.ClearToEmpty();
  displayimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* drawCircles_grpc1Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes keypoints = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_keypoints();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes displayImage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_displayimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* drawCircles_grpc1Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DOverlay.drawCircles_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes keypoints = 1;
  if (!this->_internal_keypoints().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_keypoints(), target);
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_displayimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DOverlay.drawCircles_grpc1Request)
  return target;
}

size_t drawCircles_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DOverlay.drawCircles_grpc1Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keypoints = 1;
  if (!this->_internal_keypoints().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints());
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_displayimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData drawCircles_grpc1Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    drawCircles_grpc1Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*drawCircles_grpc1Request::GetClassData() const { return &_class_data_; }

void drawCircles_grpc1Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<drawCircles_grpc1Request *>(to)->MergeFrom(
      static_cast<const drawCircles_grpc1Request &>(from));
}


void drawCircles_grpc1Request::MergeFrom(const drawCircles_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DOverlay.drawCircles_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keypoints().empty()) {
    _internal_set_keypoints(from._internal_keypoints());
  }
  if (!from._internal_displayimage().empty()) {
    _internal_set_displayimage(from._internal_displayimage());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void drawCircles_grpc1Request::CopyFrom(const drawCircles_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DOverlay.drawCircles_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drawCircles_grpc1Request::IsInitialized() const {
  return true;
}

void drawCircles_grpc1Request::InternalSwap(drawCircles_grpc1Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &keypoints_, GetArenaForAllocation(),
      &other->keypoints_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &displayimage_, GetArenaForAllocation(),
      &other->displayimage_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata drawCircles_grpc1Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcI2DOverlayService_2eproto_getter, &descriptor_table_grpcI2DOverlayService_2eproto_once,
      file_level_metadata_grpcI2DOverlayService_2eproto[2]);
}

// ===================================================================

class drawContourRequest::_Internal {
 public:
};

drawContourRequest::drawContourRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcI2DOverlay.drawContourRequest)
}
drawContourRequest::drawContourRequest(const drawContourRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  contours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contours().empty()) {
    contours_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contours(), 
      GetArenaForAllocation());
  }
  displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_displayimage().empty()) {
    displayimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_displayimage(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcI2DOverlay.drawContourRequest)
}

inline void drawContourRequest::SharedCtor() {
contours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

drawContourRequest::~drawContourRequest() {
  // @@protoc_insertion_point(destructor:grpcI2DOverlay.drawContourRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void drawContourRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  contours_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  displayimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void drawContourRequest::ArenaDtor(void* object) {
  drawContourRequest* _this = reinterpret_cast< drawContourRequest* >(object);
  (void)_this;
}
void drawContourRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void drawContourRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void drawContourRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DOverlay.drawContourRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contours_.ClearToEmpty();
  displayimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* drawContourRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes contours = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_contours();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes displayImage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_displayimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* drawContourRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DOverlay.drawContourRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes contours = 1;
  if (!this->_internal_contours().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_contours(), target);
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_displayimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DOverlay.drawContourRequest)
  return target;
}

size_t drawContourRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DOverlay.drawContourRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes contours = 1;
  if (!this->_internal_contours().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contours());
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_displayimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData drawContourRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    drawContourRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*drawContourRequest::GetClassData() const { return &_class_data_; }

void drawContourRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<drawContourRequest *>(to)->MergeFrom(
      static_cast<const drawContourRequest &>(from));
}


void drawContourRequest::MergeFrom(const drawContourRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DOverlay.drawContourRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contours().empty()) {
    _internal_set_contours(from._internal_contours());
  }
  if (!from._internal_displayimage().empty()) {
    _internal_set_displayimage(from._internal_displayimage());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void drawContourRequest::CopyFrom(const drawContourRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DOverlay.drawContourRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drawContourRequest::IsInitialized() const {
  return true;
}

void drawContourRequest::InternalSwap(drawContourRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contours_, GetArenaForAllocation(),
      &other->contours_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &displayimage_, GetArenaForAllocation(),
      &other->displayimage_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata drawContourRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcI2DOverlayService_2eproto_getter, &descriptor_table_grpcI2DOverlayService_2eproto_once,
      file_level_metadata_grpcI2DOverlayService_2eproto[3]);
}

// ===================================================================

class drawContoursRequest::_Internal {
 public:
};

drawContoursRequest::drawContoursRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcI2DOverlay.drawContoursRequest)
}
drawContoursRequest::drawContoursRequest(const drawContoursRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  contours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contours().empty()) {
    contours_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contours(), 
      GetArenaForAllocation());
  }
  displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_displayimage().empty()) {
    displayimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_displayimage(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcI2DOverlay.drawContoursRequest)
}

inline void drawContoursRequest::SharedCtor() {
contours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

drawContoursRequest::~drawContoursRequest() {
  // @@protoc_insertion_point(destructor:grpcI2DOverlay.drawContoursRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void drawContoursRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  contours_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  displayimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void drawContoursRequest::ArenaDtor(void* object) {
  drawContoursRequest* _this = reinterpret_cast< drawContoursRequest* >(object);
  (void)_this;
}
void drawContoursRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void drawContoursRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void drawContoursRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DOverlay.drawContoursRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contours_.ClearToEmpty();
  displayimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* drawContoursRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes contours = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_contours();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes displayImage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_displayimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* drawContoursRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DOverlay.drawContoursRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes contours = 1;
  if (!this->_internal_contours().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_contours(), target);
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_displayimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DOverlay.drawContoursRequest)
  return target;
}

size_t drawContoursRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DOverlay.drawContoursRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes contours = 1;
  if (!this->_internal_contours().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_contours());
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_displayimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData drawContoursRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    drawContoursRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*drawContoursRequest::GetClassData() const { return &_class_data_; }

void drawContoursRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<drawContoursRequest *>(to)->MergeFrom(
      static_cast<const drawContoursRequest &>(from));
}


void drawContoursRequest::MergeFrom(const drawContoursRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DOverlay.drawContoursRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_contours().empty()) {
    _internal_set_contours(from._internal_contours());
  }
  if (!from._internal_displayimage().empty()) {
    _internal_set_displayimage(from._internal_displayimage());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void drawContoursRequest::CopyFrom(const drawContoursRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DOverlay.drawContoursRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drawContoursRequest::IsInitialized() const {
  return true;
}

void drawContoursRequest::InternalSwap(drawContoursRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contours_, GetArenaForAllocation(),
      &other->contours_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &displayimage_, GetArenaForAllocation(),
      &other->displayimage_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata drawContoursRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcI2DOverlayService_2eproto_getter, &descriptor_table_grpcI2DOverlayService_2eproto_once,
      file_level_metadata_grpcI2DOverlayService_2eproto[4]);
}

// ===================================================================

class drawSBPatternRequest::_Internal {
 public:
};

drawSBPatternRequest::drawSBPatternRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcI2DOverlay.drawSBPatternRequest)
}
drawSBPatternRequest::drawSBPatternRequest(const drawSBPatternRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pattern().empty()) {
    pattern_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pattern(), 
      GetArenaForAllocation());
  }
  displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_displayimage().empty()) {
    displayimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_displayimage(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcI2DOverlay.drawSBPatternRequest)
}

inline void drawSBPatternRequest::SharedCtor() {
pattern_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

drawSBPatternRequest::~drawSBPatternRequest() {
  // @@protoc_insertion_point(destructor:grpcI2DOverlay.drawSBPatternRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void drawSBPatternRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pattern_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  displayimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void drawSBPatternRequest::ArenaDtor(void* object) {
  drawSBPatternRequest* _this = reinterpret_cast< drawSBPatternRequest* >(object);
  (void)_this;
}
void drawSBPatternRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void drawSBPatternRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void drawSBPatternRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DOverlay.drawSBPatternRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pattern_.ClearToEmpty();
  displayimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* drawSBPatternRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes pattern = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pattern();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes displayImage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_displayimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* drawSBPatternRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DOverlay.drawSBPatternRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pattern = 1;
  if (!this->_internal_pattern().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pattern(), target);
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_displayimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DOverlay.drawSBPatternRequest)
  return target;
}

size_t drawSBPatternRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DOverlay.drawSBPatternRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pattern = 1;
  if (!this->_internal_pattern().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pattern());
  }

  // bytes displayImage = 2;
  if (!this->_internal_displayimage().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_displayimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData drawSBPatternRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    drawSBPatternRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*drawSBPatternRequest::GetClassData() const { return &_class_data_; }

void drawSBPatternRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<drawSBPatternRequest *>(to)->MergeFrom(
      static_cast<const drawSBPatternRequest &>(from));
}


void drawSBPatternRequest::MergeFrom(const drawSBPatternRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DOverlay.drawSBPatternRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pattern().empty()) {
    _internal_set_pattern(from._internal_pattern());
  }
  if (!from._internal_displayimage().empty()) {
    _internal_set_displayimage(from._internal_displayimage());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void drawSBPatternRequest::CopyFrom(const drawSBPatternRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DOverlay.drawSBPatternRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drawSBPatternRequest::IsInitialized() const {
  return true;
}

void drawSBPatternRequest::InternalSwap(drawSBPatternRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pattern_, GetArenaForAllocation(),
      &other->pattern_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &displayimage_, GetArenaForAllocation(),
      &other->displayimage_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata drawSBPatternRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcI2DOverlayService_2eproto_getter, &descriptor_table_grpcI2DOverlayService_2eproto_once,
      file_level_metadata_grpcI2DOverlayService_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcI2DOverlay
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcI2DOverlay::drawCircleRequest* Arena::CreateMaybeMessage< ::grpcI2DOverlay::drawCircleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DOverlay::drawCircleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI2DOverlay::drawCircles_grpc0Request* Arena::CreateMaybeMessage< ::grpcI2DOverlay::drawCircles_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DOverlay::drawCircles_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI2DOverlay::drawCircles_grpc1Request* Arena::CreateMaybeMessage< ::grpcI2DOverlay::drawCircles_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DOverlay::drawCircles_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI2DOverlay::drawContourRequest* Arena::CreateMaybeMessage< ::grpcI2DOverlay::drawContourRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DOverlay::drawContourRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI2DOverlay::drawContoursRequest* Arena::CreateMaybeMessage< ::grpcI2DOverlay::drawContoursRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DOverlay::drawContoursRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI2DOverlay::drawSBPatternRequest* Arena::CreateMaybeMessage< ::grpcI2DOverlay::drawSBPatternRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DOverlay::drawSBPatternRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
