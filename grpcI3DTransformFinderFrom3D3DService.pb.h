// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcI3DTransformFinderFrom3D3DService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcI3DTransformFinderFrom3D3DService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcI3DTransformFinderFrom3D3DService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcI3DTransformFinderFrom3D3DService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcI3DTransformFinderFrom3D3DService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcI3DTransformFinderFrom3D3DService_2eproto;
namespace grpcI3DTransformFinderFrom3D3D {
class estimateRequest;
struct estimateRequestDefaultTypeInternal;
extern estimateRequestDefaultTypeInternal _estimateRequest_default_instance_;
class estimateResponse;
struct estimateResponseDefaultTypeInternal;
extern estimateResponseDefaultTypeInternal _estimateResponse_default_instance_;
}  // namespace grpcI3DTransformFinderFrom3D3D
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcI3DTransformFinderFrom3D3D::estimateRequest* Arena::CreateMaybeMessage<::grpcI3DTransformFinderFrom3D3D::estimateRequest>(Arena*);
template<> ::grpcI3DTransformFinderFrom3D3D::estimateResponse* Arena::CreateMaybeMessage<::grpcI3DTransformFinderFrom3D3D::estimateResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcI3DTransformFinderFrom3D3D {

// ===================================================================

class estimateRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformFinderFrom3D3D.estimateRequest) */ {
 public:
  inline estimateRequest() : estimateRequest(nullptr) {}
  ~estimateRequest() override;
  explicit constexpr estimateRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimateRequest(const estimateRequest& from);
  estimateRequest(estimateRequest&& from) noexcept
    : estimateRequest() {
    *this = ::std::move(from);
  }

  inline estimateRequest& operator=(const estimateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimateRequest& operator=(estimateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const estimateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimateRequest* internal_default_instance() {
    return reinterpret_cast<const estimateRequest*>(
               &_estimateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(estimateRequest& a, estimateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(estimateRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimateRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimateRequest* New() const final {
    return new estimateRequest();
  }

  estimateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimateRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const estimateRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const estimateRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformFinderFrom3D3D.estimateRequest";
  }
  protected:
  explicit estimateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcePointCloudFieldNumber = 1,
    kTargetPointCloudFieldNumber = 2,
    kInitialPoseFieldNumber = 3,
    kPoseFieldNumber = 4,
  };
  // bytes sourcePointCloud = 1;
  void clear_sourcepointcloud();
  const std::string& sourcepointcloud() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sourcepointcloud(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sourcepointcloud();
  PROTOBUF_MUST_USE_RESULT std::string* release_sourcepointcloud();
  void set_allocated_sourcepointcloud(std::string* sourcepointcloud);
  private:
  const std::string& _internal_sourcepointcloud() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sourcepointcloud(const std::string& value);
  std::string* _internal_mutable_sourcepointcloud();
  public:

  // bytes targetPointCloud = 2;
  void clear_targetpointcloud();
  const std::string& targetpointcloud() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_targetpointcloud(ArgT0&& arg0, ArgT... args);
  std::string* mutable_targetpointcloud();
  PROTOBUF_MUST_USE_RESULT std::string* release_targetpointcloud();
  void set_allocated_targetpointcloud(std::string* targetpointcloud);
  private:
  const std::string& _internal_targetpointcloud() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_targetpointcloud(const std::string& value);
  std::string* _internal_mutable_targetpointcloud();
  public:

  // bytes initialPose = 3;
  void clear_initialpose();
  const std::string& initialpose() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_initialpose(ArgT0&& arg0, ArgT... args);
  std::string* mutable_initialpose();
  PROTOBUF_MUST_USE_RESULT std::string* release_initialpose();
  void set_allocated_initialpose(std::string* initialpose);
  private:
  const std::string& _internal_initialpose() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_initialpose(const std::string& value);
  std::string* _internal_mutable_initialpose();
  public:

  // bytes pose = 4;
  void clear_pose();
  const std::string& pose() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_pose(ArgT0&& arg0, ArgT... args);
  std::string* mutable_pose();
  PROTOBUF_MUST_USE_RESULT std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformFinderFrom3D3D.estimateRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sourcepointcloud_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr targetpointcloud_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr initialpose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformFinderFrom3D3DService_2eproto;
};
// -------------------------------------------------------------------

class estimateResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformFinderFrom3D3D.estimateResponse) */ {
 public:
  inline estimateResponse() : estimateResponse(nullptr) {}
  ~estimateResponse() override;
  explicit constexpr estimateResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimateResponse(const estimateResponse& from);
  estimateResponse(estimateResponse&& from) noexcept
    : estimateResponse() {
    *this = ::std::move(from);
  }

  inline estimateResponse& operator=(const estimateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimateResponse& operator=(estimateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const estimateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimateResponse* internal_default_instance() {
    return reinterpret_cast<const estimateResponse*>(
               &_estimateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(estimateResponse& a, estimateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(estimateResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimateResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimateResponse* New() const final {
    return new estimateResponse();
  }

  estimateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimateResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const estimateResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const estimateResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformFinderFrom3D3D.estimateResponse";
  }
  protected:
  explicit estimateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoseFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes pose = 1;
  void clear_pose();
  const std::string& pose() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_pose(ArgT0&& arg0, ArgT... args);
  std::string* mutable_pose();
  PROTOBUF_MUST_USE_RESULT std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformFinderFrom3D3D.estimateResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformFinderFrom3D3DService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// estimateRequest

// bytes sourcePointCloud = 1;
inline void estimateRequest::clear_sourcepointcloud() {
  sourcepointcloud_.ClearToEmpty();
}
inline const std::string& estimateRequest::sourcepointcloud() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom3D3D.estimateRequest.sourcePointCloud)
  return _internal_sourcepointcloud();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void estimateRequest::set_sourcepointcloud(ArgT0&& arg0, ArgT... args) {
 
 sourcepointcloud_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom3D3D.estimateRequest.sourcePointCloud)
}
inline std::string* estimateRequest::mutable_sourcepointcloud() {
  std::string* _s = _internal_mutable_sourcepointcloud();
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom3D3D.estimateRequest.sourcePointCloud)
  return _s;
}
inline const std::string& estimateRequest::_internal_sourcepointcloud() const {
  return sourcepointcloud_.Get();
}
inline void estimateRequest::_internal_set_sourcepointcloud(const std::string& value) {
  
  sourcepointcloud_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* estimateRequest::_internal_mutable_sourcepointcloud() {
  
  return sourcepointcloud_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* estimateRequest::release_sourcepointcloud() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom3D3D.estimateRequest.sourcePointCloud)
  return sourcepointcloud_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void estimateRequest::set_allocated_sourcepointcloud(std::string* sourcepointcloud) {
  if (sourcepointcloud != nullptr) {
    
  } else {
    
  }
  sourcepointcloud_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sourcepointcloud,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom3D3D.estimateRequest.sourcePointCloud)
}

// bytes targetPointCloud = 2;
inline void estimateRequest::clear_targetpointcloud() {
  targetpointcloud_.ClearToEmpty();
}
inline const std::string& estimateRequest::targetpointcloud() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom3D3D.estimateRequest.targetPointCloud)
  return _internal_targetpointcloud();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void estimateRequest::set_targetpointcloud(ArgT0&& arg0, ArgT... args) {
 
 targetpointcloud_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom3D3D.estimateRequest.targetPointCloud)
}
inline std::string* estimateRequest::mutable_targetpointcloud() {
  std::string* _s = _internal_mutable_targetpointcloud();
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom3D3D.estimateRequest.targetPointCloud)
  return _s;
}
inline const std::string& estimateRequest::_internal_targetpointcloud() const {
  return targetpointcloud_.Get();
}
inline void estimateRequest::_internal_set_targetpointcloud(const std::string& value) {
  
  targetpointcloud_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* estimateRequest::_internal_mutable_targetpointcloud() {
  
  return targetpointcloud_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* estimateRequest::release_targetpointcloud() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom3D3D.estimateRequest.targetPointCloud)
  return targetpointcloud_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void estimateRequest::set_allocated_targetpointcloud(std::string* targetpointcloud) {
  if (targetpointcloud != nullptr) {
    
  } else {
    
  }
  targetpointcloud_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), targetpointcloud,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom3D3D.estimateRequest.targetPointCloud)
}

// bytes initialPose = 3;
inline void estimateRequest::clear_initialpose() {
  initialpose_.ClearToEmpty();
}
inline const std::string& estimateRequest::initialpose() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom3D3D.estimateRequest.initialPose)
  return _internal_initialpose();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void estimateRequest::set_initialpose(ArgT0&& arg0, ArgT... args) {
 
 initialpose_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom3D3D.estimateRequest.initialPose)
}
inline std::string* estimateRequest::mutable_initialpose() {
  std::string* _s = _internal_mutable_initialpose();
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom3D3D.estimateRequest.initialPose)
  return _s;
}
inline const std::string& estimateRequest::_internal_initialpose() const {
  return initialpose_.Get();
}
inline void estimateRequest::_internal_set_initialpose(const std::string& value) {
  
  initialpose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* estimateRequest::_internal_mutable_initialpose() {
  
  return initialpose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* estimateRequest::release_initialpose() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom3D3D.estimateRequest.initialPose)
  return initialpose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void estimateRequest::set_allocated_initialpose(std::string* initialpose) {
  if (initialpose != nullptr) {
    
  } else {
    
  }
  initialpose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), initialpose,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom3D3D.estimateRequest.initialPose)
}

// bytes pose = 4;
inline void estimateRequest::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& estimateRequest::pose() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom3D3D.estimateRequest.pose)
  return _internal_pose();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void estimateRequest::set_pose(ArgT0&& arg0, ArgT... args) {
 
 pose_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom3D3D.estimateRequest.pose)
}
inline std::string* estimateRequest::mutable_pose() {
  std::string* _s = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom3D3D.estimateRequest.pose)
  return _s;
}
inline const std::string& estimateRequest::_internal_pose() const {
  return pose_.Get();
}
inline void estimateRequest::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* estimateRequest::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* estimateRequest::release_pose() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom3D3D.estimateRequest.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void estimateRequest::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom3D3D.estimateRequest.pose)
}

// -------------------------------------------------------------------

// estimateResponse

// bytes pose = 1;
inline void estimateResponse::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& estimateResponse::pose() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom3D3D.estimateResponse.pose)
  return _internal_pose();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void estimateResponse::set_pose(ArgT0&& arg0, ArgT... args) {
 
 pose_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom3D3D.estimateResponse.pose)
}
inline std::string* estimateResponse::mutable_pose() {
  std::string* _s = _internal_mutable_pose();
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom3D3D.estimateResponse.pose)
  return _s;
}
inline const std::string& estimateResponse::_internal_pose() const {
  return pose_.Get();
}
inline void estimateResponse::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* estimateResponse::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* estimateResponse::release_pose() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom3D3D.estimateResponse.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void estimateResponse::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom3D3D.estimateResponse.pose)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void estimateResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimateResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimateResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom3D3D.estimateResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void estimateResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void estimateResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom3D3D.estimateResponse.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcI3DTransformFinderFrom3D3D

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcI3DTransformFinderFrom3D3DService_2eproto
