// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIKeypointsReIndexerService.proto

#include "grpcIKeypointsReIndexerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcIKeypointsReIndexer {
PROTOBUF_CONSTEXPR reindexRequest::reindexRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.keypoints1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.keypoints2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.matches_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.matchedkeypoints1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.matchedkeypoints2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct reindexRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reindexRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reindexRequestDefaultTypeInternal() {}
  union {
    reindexRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reindexRequestDefaultTypeInternal _reindexRequest_default_instance_;
PROTOBUF_CONSTEXPR reindexResponse::reindexResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.matchedkeypoints1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.matchedkeypoints2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct reindexResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR reindexResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~reindexResponseDefaultTypeInternal() {}
  union {
    reindexResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 reindexResponseDefaultTypeInternal _reindexResponse_default_instance_;
}  // namespace grpcIKeypointsReIndexer
static ::_pb::Metadata file_level_metadata_grpcIKeypointsReIndexerService_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcIKeypointsReIndexerService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcIKeypointsReIndexerService_2eproto = nullptr;

const uint32_t TableStruct_grpcIKeypointsReIndexerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexRequest, _impl_.keypoints1_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexRequest, _impl_.keypoints2_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexRequest, _impl_.matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexRequest, _impl_.matchedkeypoints1_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexRequest, _impl_.matchedkeypoints2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexResponse, _impl_.matchedkeypoints1_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexResponse, _impl_.matchedkeypoints2_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeypointsReIndexer::reindexResponse, _impl_.xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcIKeypointsReIndexer::reindexRequest)},
  { 12, -1, -1, sizeof(::grpcIKeypointsReIndexer::reindexResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcIKeypointsReIndexer::_reindexRequest_default_instance_._instance,
  &::grpcIKeypointsReIndexer::_reindexResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcIKeypointsReIndexerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$grpcIKeypointsReIndexerService.proto\022\027"
  "grpcIKeypointsReIndexer\032\033google/protobuf"
  "/empty.proto\"\244\001\n\016reindexRequest\022#\n\033grpcS"
  "erverCompressionFormat\030\001 \001(\005\022\022\n\nkeypoint"
  "s1\030\002 \001(\014\022\022\n\nkeypoints2\030\003 \001(\014\022\017\n\007matches\030"
  "\004 \001(\014\022\031\n\021matchedKeypoints1\030\005 \001(\014\022\031\n\021matc"
  "hedKeypoints2\030\006 \001(\014\"d\n\017reindexResponse\022\031"
  "\n\021matchedKeypoints1\030\001 \001(\014\022\031\n\021matchedKeyp"
  "oints2\030\002 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\003 \001("
  "\0212\200\001\n\036grpcIKeypointsReIndexerService\022^\n\007"
  "reindex\022\'.grpcIKeypointsReIndexer.reinde"
  "xRequest\032(.grpcIKeypointsReIndexer.reind"
  "exResponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcIKeypointsReIndexerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcIKeypointsReIndexerService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcIKeypointsReIndexerService_2eproto = {
    false, false, 500, descriptor_table_protodef_grpcIKeypointsReIndexerService_2eproto,
    "grpcIKeypointsReIndexerService.proto",
    &descriptor_table_grpcIKeypointsReIndexerService_2eproto_once, descriptor_table_grpcIKeypointsReIndexerService_2eproto_deps, 1, 2,
    schemas, file_default_instances, TableStruct_grpcIKeypointsReIndexerService_2eproto::offsets,
    file_level_metadata_grpcIKeypointsReIndexerService_2eproto, file_level_enum_descriptors_grpcIKeypointsReIndexerService_2eproto,
    file_level_service_descriptors_grpcIKeypointsReIndexerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcIKeypointsReIndexerService_2eproto_getter() {
  return &descriptor_table_grpcIKeypointsReIndexerService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcIKeypointsReIndexerService_2eproto(&descriptor_table_grpcIKeypointsReIndexerService_2eproto);
namespace grpcIKeypointsReIndexer {

// ===================================================================

class reindexRequest::_Internal {
 public:
};

reindexRequest::reindexRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIKeypointsReIndexer.reindexRequest)
}
reindexRequest::reindexRequest(const reindexRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reindexRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.keypoints1_){}
    , decltype(_impl_.keypoints2_){}
    , decltype(_impl_.matches_){}
    , decltype(_impl_.matchedkeypoints1_){}
    , decltype(_impl_.matchedkeypoints2_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.keypoints1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keypoints1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keypoints1().empty()) {
    _this->_impl_.keypoints1_.Set(from._internal_keypoints1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.keypoints2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keypoints2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keypoints2().empty()) {
    _this->_impl_.keypoints2_.Set(from._internal_keypoints2(), 
      _this->GetArenaForAllocation());
  }
  _impl_.matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matches().empty()) {
    _this->_impl_.matches_.Set(from._internal_matches(), 
      _this->GetArenaForAllocation());
  }
  _impl_.matchedkeypoints1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matchedkeypoints1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matchedkeypoints1().empty()) {
    _this->_impl_.matchedkeypoints1_.Set(from._internal_matchedkeypoints1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.matchedkeypoints2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matchedkeypoints2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matchedkeypoints2().empty()) {
    _this->_impl_.matchedkeypoints2_.Set(from._internal_matchedkeypoints2(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeypointsReIndexer.reindexRequest)
}

inline void reindexRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.keypoints1_){}
    , decltype(_impl_.keypoints2_){}
    , decltype(_impl_.matches_){}
    , decltype(_impl_.matchedkeypoints1_){}
    , decltype(_impl_.matchedkeypoints2_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.keypoints1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keypoints1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.keypoints2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keypoints2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.matchedkeypoints1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matchedkeypoints1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.matchedkeypoints2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matchedkeypoints2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

reindexRequest::~reindexRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeypointsReIndexer.reindexRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reindexRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.keypoints1_.Destroy();
  _impl_.keypoints2_.Destroy();
  _impl_.matches_.Destroy();
  _impl_.matchedkeypoints1_.Destroy();
  _impl_.matchedkeypoints2_.Destroy();
}

void reindexRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reindexRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeypointsReIndexer.reindexRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keypoints1_.ClearToEmpty();
  _impl_.keypoints2_.ClearToEmpty();
  _impl_.matches_.ClearToEmpty();
  _impl_.matchedkeypoints1_.ClearToEmpty();
  _impl_.matchedkeypoints2_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reindexRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keypoints1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keypoints1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keypoints2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_keypoints2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matches = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matchedKeypoints1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_matchedkeypoints1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matchedKeypoints2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_matchedkeypoints2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reindexRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeypointsReIndexer.reindexRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keypoints1 = 2;
  if (!this->_internal_keypoints1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keypoints1(), target);
  }

  // bytes keypoints2 = 3;
  if (!this->_internal_keypoints2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_keypoints2(), target);
  }

  // bytes matches = 4;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_matches(), target);
  }

  // bytes matchedKeypoints1 = 5;
  if (!this->_internal_matchedkeypoints1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_matchedkeypoints1(), target);
  }

  // bytes matchedKeypoints2 = 6;
  if (!this->_internal_matchedkeypoints2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_matchedkeypoints2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeypointsReIndexer.reindexRequest)
  return target;
}

size_t reindexRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeypointsReIndexer.reindexRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keypoints1 = 2;
  if (!this->_internal_keypoints1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints1());
  }

  // bytes keypoints2 = 3;
  if (!this->_internal_keypoints2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints2());
  }

  // bytes matches = 4;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes matchedKeypoints1 = 5;
  if (!this->_internal_matchedkeypoints1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matchedkeypoints1());
  }

  // bytes matchedKeypoints2 = 6;
  if (!this->_internal_matchedkeypoints2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matchedkeypoints2());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reindexRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reindexRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reindexRequest::GetClassData() const { return &_class_data_; }


void reindexRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reindexRequest*>(&to_msg);
  auto& from = static_cast<const reindexRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeypointsReIndexer.reindexRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keypoints1().empty()) {
    _this->_internal_set_keypoints1(from._internal_keypoints1());
  }
  if (!from._internal_keypoints2().empty()) {
    _this->_internal_set_keypoints2(from._internal_keypoints2());
  }
  if (!from._internal_matches().empty()) {
    _this->_internal_set_matches(from._internal_matches());
  }
  if (!from._internal_matchedkeypoints1().empty()) {
    _this->_internal_set_matchedkeypoints1(from._internal_matchedkeypoints1());
  }
  if (!from._internal_matchedkeypoints2().empty()) {
    _this->_internal_set_matchedkeypoints2(from._internal_matchedkeypoints2());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reindexRequest::CopyFrom(const reindexRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeypointsReIndexer.reindexRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reindexRequest::IsInitialized() const {
  return true;
}

void reindexRequest::InternalSwap(reindexRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.keypoints1_, lhs_arena,
      &other->_impl_.keypoints1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.keypoints2_, lhs_arena,
      &other->_impl_.keypoints2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.matches_, lhs_arena,
      &other->_impl_.matches_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.matchedkeypoints1_, lhs_arena,
      &other->_impl_.matchedkeypoints1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.matchedkeypoints2_, lhs_arena,
      &other->_impl_.matchedkeypoints2_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata reindexRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIKeypointsReIndexerService_2eproto_getter, &descriptor_table_grpcIKeypointsReIndexerService_2eproto_once,
      file_level_metadata_grpcIKeypointsReIndexerService_2eproto[0]);
}

// ===================================================================

class reindexResponse::_Internal {
 public:
};

reindexResponse::reindexResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIKeypointsReIndexer.reindexResponse)
}
reindexResponse::reindexResponse(const reindexResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  reindexResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.matchedkeypoints1_){}
    , decltype(_impl_.matchedkeypoints2_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.matchedkeypoints1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matchedkeypoints1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matchedkeypoints1().empty()) {
    _this->_impl_.matchedkeypoints1_.Set(from._internal_matchedkeypoints1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.matchedkeypoints2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matchedkeypoints2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matchedkeypoints2().empty()) {
    _this->_impl_.matchedkeypoints2_.Set(from._internal_matchedkeypoints2(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeypointsReIndexer.reindexResponse)
}

inline void reindexResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.matchedkeypoints1_){}
    , decltype(_impl_.matchedkeypoints2_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.matchedkeypoints1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matchedkeypoints1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.matchedkeypoints2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.matchedkeypoints2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

reindexResponse::~reindexResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeypointsReIndexer.reindexResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void reindexResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.matchedkeypoints1_.Destroy();
  _impl_.matchedkeypoints2_.Destroy();
}

void reindexResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void reindexResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeypointsReIndexer.reindexResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matchedkeypoints1_.ClearToEmpty();
  _impl_.matchedkeypoints2_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* reindexResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes matchedKeypoints1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_matchedkeypoints1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matchedKeypoints2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_matchedkeypoints2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* reindexResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeypointsReIndexer.reindexResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes matchedKeypoints1 = 1;
  if (!this->_internal_matchedkeypoints1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_matchedkeypoints1(), target);
  }

  // bytes matchedKeypoints2 = 2;
  if (!this->_internal_matchedkeypoints2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_matchedkeypoints2(), target);
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(3, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeypointsReIndexer.reindexResponse)
  return target;
}

size_t reindexResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeypointsReIndexer.reindexResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes matchedKeypoints1 = 1;
  if (!this->_internal_matchedkeypoints1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matchedkeypoints1());
  }

  // bytes matchedKeypoints2 = 2;
  if (!this->_internal_matchedkeypoints2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matchedkeypoints2());
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData reindexResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    reindexResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*reindexResponse::GetClassData() const { return &_class_data_; }


void reindexResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<reindexResponse*>(&to_msg);
  auto& from = static_cast<const reindexResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeypointsReIndexer.reindexResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_matchedkeypoints1().empty()) {
    _this->_internal_set_matchedkeypoints1(from._internal_matchedkeypoints1());
  }
  if (!from._internal_matchedkeypoints2().empty()) {
    _this->_internal_set_matchedkeypoints2(from._internal_matchedkeypoints2());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void reindexResponse::CopyFrom(const reindexResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeypointsReIndexer.reindexResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool reindexResponse::IsInitialized() const {
  return true;
}

void reindexResponse::InternalSwap(reindexResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.matchedkeypoints1_, lhs_arena,
      &other->_impl_.matchedkeypoints1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.matchedkeypoints2_, lhs_arena,
      &other->_impl_.matchedkeypoints2_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata reindexResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIKeypointsReIndexerService_2eproto_getter, &descriptor_table_grpcIKeypointsReIndexerService_2eproto_once,
      file_level_metadata_grpcIKeypointsReIndexerService_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIKeypointsReIndexer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIKeypointsReIndexer::reindexRequest*
Arena::CreateMaybeMessage< ::grpcIKeypointsReIndexer::reindexRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeypointsReIndexer::reindexRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeypointsReIndexer::reindexResponse*
Arena::CreateMaybeMessage< ::grpcIKeypointsReIndexer::reindexResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeypointsReIndexer::reindexResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
