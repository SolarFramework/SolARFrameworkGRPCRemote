// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIImageRectificationService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcIImageRectificationService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcIImageRectificationService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcIImageRectificationService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcIImageRectificationService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIImageRectificationService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcIImageRectificationService_2eproto_metadata_getter(int index);
namespace grpcIImageRectification {
class rectifyRequest;
struct rectifyRequestDefaultTypeInternal;
extern rectifyRequestDefaultTypeInternal _rectifyRequest_default_instance_;
class rectifyResponse;
struct rectifyResponseDefaultTypeInternal;
extern rectifyResponseDefaultTypeInternal _rectifyResponse_default_instance_;
}  // namespace grpcIImageRectification
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcIImageRectification::rectifyRequest* Arena::CreateMaybeMessage<::grpcIImageRectification::rectifyRequest>(Arena*);
template<> ::grpcIImageRectification::rectifyResponse* Arena::CreateMaybeMessage<::grpcIImageRectification::rectifyResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcIImageRectification {

// ===================================================================

class rectifyRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIImageRectification.rectifyRequest) */ {
 public:
  inline rectifyRequest() : rectifyRequest(nullptr) {}
  virtual ~rectifyRequest();
  explicit constexpr rectifyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  rectifyRequest(const rectifyRequest& from);
  rectifyRequest(rectifyRequest&& from) noexcept
    : rectifyRequest() {
    *this = ::std::move(from);
  }

  inline rectifyRequest& operator=(const rectifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline rectifyRequest& operator=(rectifyRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const rectifyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const rectifyRequest* internal_default_instance() {
    return reinterpret_cast<const rectifyRequest*>(
               &_rectifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(rectifyRequest& a, rectifyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(rectifyRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(rectifyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline rectifyRequest* New() const final {
    return CreateMaybeMessage<rectifyRequest>(nullptr);
  }

  rectifyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<rectifyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const rectifyRequest& from);
  void MergeFrom(const rectifyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(rectifyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIImageRectification.rectifyRequest";
  }
  protected:
  explicit rectifyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIImageRectificationService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImageFieldNumber = 1,
    kCamParamsFieldNumber = 2,
    kRectParamsFieldNumber = 3,
    kRectifiedImageFieldNumber = 4,
  };
  // bytes image = 1;
  void clear_image();
  const std::string& image() const;
  void set_image(const std::string& value);
  void set_image(std::string&& value);
  void set_image(const char* value);
  void set_image(const void* value, size_t size);
  std::string* mutable_image();
  std::string* release_image();
  void set_allocated_image(std::string* image);
  private:
  const std::string& _internal_image() const;
  void _internal_set_image(const std::string& value);
  std::string* _internal_mutable_image();
  public:

  // bytes camParams = 2;
  void clear_camparams();
  const std::string& camparams() const;
  void set_camparams(const std::string& value);
  void set_camparams(std::string&& value);
  void set_camparams(const char* value);
  void set_camparams(const void* value, size_t size);
  std::string* mutable_camparams();
  std::string* release_camparams();
  void set_allocated_camparams(std::string* camparams);
  private:
  const std::string& _internal_camparams() const;
  void _internal_set_camparams(const std::string& value);
  std::string* _internal_mutable_camparams();
  public:

  // bytes rectParams = 3;
  void clear_rectparams();
  const std::string& rectparams() const;
  void set_rectparams(const std::string& value);
  void set_rectparams(std::string&& value);
  void set_rectparams(const char* value);
  void set_rectparams(const void* value, size_t size);
  std::string* mutable_rectparams();
  std::string* release_rectparams();
  void set_allocated_rectparams(std::string* rectparams);
  private:
  const std::string& _internal_rectparams() const;
  void _internal_set_rectparams(const std::string& value);
  std::string* _internal_mutable_rectparams();
  public:

  // bytes rectifiedImage = 4;
  void clear_rectifiedimage();
  const std::string& rectifiedimage() const;
  void set_rectifiedimage(const std::string& value);
  void set_rectifiedimage(std::string&& value);
  void set_rectifiedimage(const char* value);
  void set_rectifiedimage(const void* value, size_t size);
  std::string* mutable_rectifiedimage();
  std::string* release_rectifiedimage();
  void set_allocated_rectifiedimage(std::string* rectifiedimage);
  private:
  const std::string& _internal_rectifiedimage() const;
  void _internal_set_rectifiedimage(const std::string& value);
  std::string* _internal_mutable_rectifiedimage();
  public:

  // @@protoc_insertion_point(class_scope:grpcIImageRectification.rectifyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr camparams_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rectparams_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rectifiedimage_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIImageRectificationService_2eproto;
};
// -------------------------------------------------------------------

class rectifyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIImageRectification.rectifyResponse) */ {
 public:
  inline rectifyResponse() : rectifyResponse(nullptr) {}
  virtual ~rectifyResponse();
  explicit constexpr rectifyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  rectifyResponse(const rectifyResponse& from);
  rectifyResponse(rectifyResponse&& from) noexcept
    : rectifyResponse() {
    *this = ::std::move(from);
  }

  inline rectifyResponse& operator=(const rectifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline rectifyResponse& operator=(rectifyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const rectifyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const rectifyResponse* internal_default_instance() {
    return reinterpret_cast<const rectifyResponse*>(
               &_rectifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(rectifyResponse& a, rectifyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(rectifyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(rectifyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline rectifyResponse* New() const final {
    return CreateMaybeMessage<rectifyResponse>(nullptr);
  }

  rectifyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<rectifyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const rectifyResponse& from);
  void MergeFrom(const rectifyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(rectifyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIImageRectification.rectifyResponse";
  }
  protected:
  explicit rectifyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIImageRectificationService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRectifiedImageFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes rectifiedImage = 1;
  void clear_rectifiedimage();
  const std::string& rectifiedimage() const;
  void set_rectifiedimage(const std::string& value);
  void set_rectifiedimage(std::string&& value);
  void set_rectifiedimage(const char* value);
  void set_rectifiedimage(const void* value, size_t size);
  std::string* mutable_rectifiedimage();
  std::string* release_rectifiedimage();
  void set_allocated_rectifiedimage(std::string* rectifiedimage);
  private:
  const std::string& _internal_rectifiedimage() const;
  void _internal_set_rectifiedimage(const std::string& value);
  std::string* _internal_mutable_rectifiedimage();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIImageRectification.rectifyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rectifiedimage_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIImageRectificationService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// rectifyRequest

// bytes image = 1;
inline void rectifyRequest::clear_image() {
  image_.ClearToEmpty();
}
inline const std::string& rectifyRequest::image() const {
  // @@protoc_insertion_point(field_get:grpcIImageRectification.rectifyRequest.image)
  return _internal_image();
}
inline void rectifyRequest::set_image(const std::string& value) {
  _internal_set_image(value);
  // @@protoc_insertion_point(field_set:grpcIImageRectification.rectifyRequest.image)
}
inline std::string* rectifyRequest::mutable_image() {
  // @@protoc_insertion_point(field_mutable:grpcIImageRectification.rectifyRequest.image)
  return _internal_mutable_image();
}
inline const std::string& rectifyRequest::_internal_image() const {
  return image_.Get();
}
inline void rectifyRequest::_internal_set_image(const std::string& value) {
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void rectifyRequest::set_image(std::string&& value) {
  
  image_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIImageRectification.rectifyRequest.image)
}
inline void rectifyRequest::set_image(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIImageRectification.rectifyRequest.image)
}
inline void rectifyRequest::set_image(const void* value,
    size_t size) {
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIImageRectification.rectifyRequest.image)
}
inline std::string* rectifyRequest::_internal_mutable_image() {
  
  return image_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* rectifyRequest::release_image() {
  // @@protoc_insertion_point(field_release:grpcIImageRectification.rectifyRequest.image)
  return image_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void rectifyRequest::set_allocated_image(std::string* image) {
  if (image != nullptr) {
    
  } else {
    
  }
  image_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIImageRectification.rectifyRequest.image)
}

// bytes camParams = 2;
inline void rectifyRequest::clear_camparams() {
  camparams_.ClearToEmpty();
}
inline const std::string& rectifyRequest::camparams() const {
  // @@protoc_insertion_point(field_get:grpcIImageRectification.rectifyRequest.camParams)
  return _internal_camparams();
}
inline void rectifyRequest::set_camparams(const std::string& value) {
  _internal_set_camparams(value);
  // @@protoc_insertion_point(field_set:grpcIImageRectification.rectifyRequest.camParams)
}
inline std::string* rectifyRequest::mutable_camparams() {
  // @@protoc_insertion_point(field_mutable:grpcIImageRectification.rectifyRequest.camParams)
  return _internal_mutable_camparams();
}
inline const std::string& rectifyRequest::_internal_camparams() const {
  return camparams_.Get();
}
inline void rectifyRequest::_internal_set_camparams(const std::string& value) {
  
  camparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void rectifyRequest::set_camparams(std::string&& value) {
  
  camparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIImageRectification.rectifyRequest.camParams)
}
inline void rectifyRequest::set_camparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  camparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIImageRectification.rectifyRequest.camParams)
}
inline void rectifyRequest::set_camparams(const void* value,
    size_t size) {
  
  camparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIImageRectification.rectifyRequest.camParams)
}
inline std::string* rectifyRequest::_internal_mutable_camparams() {
  
  return camparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* rectifyRequest::release_camparams() {
  // @@protoc_insertion_point(field_release:grpcIImageRectification.rectifyRequest.camParams)
  return camparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void rectifyRequest::set_allocated_camparams(std::string* camparams) {
  if (camparams != nullptr) {
    
  } else {
    
  }
  camparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), camparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIImageRectification.rectifyRequest.camParams)
}

// bytes rectParams = 3;
inline void rectifyRequest::clear_rectparams() {
  rectparams_.ClearToEmpty();
}
inline const std::string& rectifyRequest::rectparams() const {
  // @@protoc_insertion_point(field_get:grpcIImageRectification.rectifyRequest.rectParams)
  return _internal_rectparams();
}
inline void rectifyRequest::set_rectparams(const std::string& value) {
  _internal_set_rectparams(value);
  // @@protoc_insertion_point(field_set:grpcIImageRectification.rectifyRequest.rectParams)
}
inline std::string* rectifyRequest::mutable_rectparams() {
  // @@protoc_insertion_point(field_mutable:grpcIImageRectification.rectifyRequest.rectParams)
  return _internal_mutable_rectparams();
}
inline const std::string& rectifyRequest::_internal_rectparams() const {
  return rectparams_.Get();
}
inline void rectifyRequest::_internal_set_rectparams(const std::string& value) {
  
  rectparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void rectifyRequest::set_rectparams(std::string&& value) {
  
  rectparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIImageRectification.rectifyRequest.rectParams)
}
inline void rectifyRequest::set_rectparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rectparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIImageRectification.rectifyRequest.rectParams)
}
inline void rectifyRequest::set_rectparams(const void* value,
    size_t size) {
  
  rectparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIImageRectification.rectifyRequest.rectParams)
}
inline std::string* rectifyRequest::_internal_mutable_rectparams() {
  
  return rectparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* rectifyRequest::release_rectparams() {
  // @@protoc_insertion_point(field_release:grpcIImageRectification.rectifyRequest.rectParams)
  return rectparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void rectifyRequest::set_allocated_rectparams(std::string* rectparams) {
  if (rectparams != nullptr) {
    
  } else {
    
  }
  rectparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rectparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIImageRectification.rectifyRequest.rectParams)
}

// bytes rectifiedImage = 4;
inline void rectifyRequest::clear_rectifiedimage() {
  rectifiedimage_.ClearToEmpty();
}
inline const std::string& rectifyRequest::rectifiedimage() const {
  // @@protoc_insertion_point(field_get:grpcIImageRectification.rectifyRequest.rectifiedImage)
  return _internal_rectifiedimage();
}
inline void rectifyRequest::set_rectifiedimage(const std::string& value) {
  _internal_set_rectifiedimage(value);
  // @@protoc_insertion_point(field_set:grpcIImageRectification.rectifyRequest.rectifiedImage)
}
inline std::string* rectifyRequest::mutable_rectifiedimage() {
  // @@protoc_insertion_point(field_mutable:grpcIImageRectification.rectifyRequest.rectifiedImage)
  return _internal_mutable_rectifiedimage();
}
inline const std::string& rectifyRequest::_internal_rectifiedimage() const {
  return rectifiedimage_.Get();
}
inline void rectifyRequest::_internal_set_rectifiedimage(const std::string& value) {
  
  rectifiedimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void rectifyRequest::set_rectifiedimage(std::string&& value) {
  
  rectifiedimage_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIImageRectification.rectifyRequest.rectifiedImage)
}
inline void rectifyRequest::set_rectifiedimage(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rectifiedimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIImageRectification.rectifyRequest.rectifiedImage)
}
inline void rectifyRequest::set_rectifiedimage(const void* value,
    size_t size) {
  
  rectifiedimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIImageRectification.rectifyRequest.rectifiedImage)
}
inline std::string* rectifyRequest::_internal_mutable_rectifiedimage() {
  
  return rectifiedimage_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* rectifyRequest::release_rectifiedimage() {
  // @@protoc_insertion_point(field_release:grpcIImageRectification.rectifyRequest.rectifiedImage)
  return rectifiedimage_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void rectifyRequest::set_allocated_rectifiedimage(std::string* rectifiedimage) {
  if (rectifiedimage != nullptr) {
    
  } else {
    
  }
  rectifiedimage_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rectifiedimage,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIImageRectification.rectifyRequest.rectifiedImage)
}

// -------------------------------------------------------------------

// rectifyResponse

// bytes rectifiedImage = 1;
inline void rectifyResponse::clear_rectifiedimage() {
  rectifiedimage_.ClearToEmpty();
}
inline const std::string& rectifyResponse::rectifiedimage() const {
  // @@protoc_insertion_point(field_get:grpcIImageRectification.rectifyResponse.rectifiedImage)
  return _internal_rectifiedimage();
}
inline void rectifyResponse::set_rectifiedimage(const std::string& value) {
  _internal_set_rectifiedimage(value);
  // @@protoc_insertion_point(field_set:grpcIImageRectification.rectifyResponse.rectifiedImage)
}
inline std::string* rectifyResponse::mutable_rectifiedimage() {
  // @@protoc_insertion_point(field_mutable:grpcIImageRectification.rectifyResponse.rectifiedImage)
  return _internal_mutable_rectifiedimage();
}
inline const std::string& rectifyResponse::_internal_rectifiedimage() const {
  return rectifiedimage_.Get();
}
inline void rectifyResponse::_internal_set_rectifiedimage(const std::string& value) {
  
  rectifiedimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void rectifyResponse::set_rectifiedimage(std::string&& value) {
  
  rectifiedimage_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIImageRectification.rectifyResponse.rectifiedImage)
}
inline void rectifyResponse::set_rectifiedimage(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rectifiedimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIImageRectification.rectifyResponse.rectifiedImage)
}
inline void rectifyResponse::set_rectifiedimage(const void* value,
    size_t size) {
  
  rectifiedimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIImageRectification.rectifyResponse.rectifiedImage)
}
inline std::string* rectifyResponse::_internal_mutable_rectifiedimage() {
  
  return rectifiedimage_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* rectifyResponse::release_rectifiedimage() {
  // @@protoc_insertion_point(field_release:grpcIImageRectification.rectifyResponse.rectifiedImage)
  return rectifiedimage_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void rectifyResponse::set_allocated_rectifiedimage(std::string* rectifiedimage) {
  if (rectifiedimage != nullptr) {
    
  } else {
    
  }
  rectifiedimage_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rectifiedimage,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIImageRectification.rectifyResponse.rectifiedImage)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void rectifyResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 rectifyResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 rectifyResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIImageRectification.rectifyResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void rectifyResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void rectifyResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIImageRectification.rectifyResponse.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcIImageRectification

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcIImageRectificationService_2eproto
