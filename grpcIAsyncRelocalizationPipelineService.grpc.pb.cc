// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: grpcIAsyncRelocalizationPipelineService.proto

#include "grpcIAsyncRelocalizationPipelineService.pb.h"
#include "grpcIAsyncRelocalizationPipelineService.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace grpcIAsyncRelocalizationPipeline {

static const char* grpcIAsyncRelocalizationPipelineService_method_names[] = {
  "/grpcIAsyncRelocalizationPipeline.grpcIAsyncRelocalizationPipelineService/init",
  "/grpcIAsyncRelocalizationPipeline.grpcIAsyncRelocalizationPipelineService/start",
  "/grpcIAsyncRelocalizationPipeline.grpcIAsyncRelocalizationPipelineService/stop",
  "/grpcIAsyncRelocalizationPipeline.grpcIAsyncRelocalizationPipelineService/initProcessingMode",
  "/grpcIAsyncRelocalizationPipeline.grpcIAsyncRelocalizationPipelineService/setCameraParameters",
  "/grpcIAsyncRelocalizationPipeline.grpcIAsyncRelocalizationPipelineService/getCameraParameters",
  "/grpcIAsyncRelocalizationPipeline.grpcIAsyncRelocalizationPipelineService/relocalizeProcessRequest",
  "/grpcIAsyncRelocalizationPipeline.grpcIAsyncRelocalizationPipelineService/get3DTransformRequest",
  "/grpcIAsyncRelocalizationPipeline.grpcIAsyncRelocalizationPipelineService/getLastPose",
};

std::unique_ptr< grpcIAsyncRelocalizationPipelineService::Stub> grpcIAsyncRelocalizationPipelineService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< grpcIAsyncRelocalizationPipelineService::Stub> stub(new grpcIAsyncRelocalizationPipelineService::Stub(channel));
  return stub;
}

grpcIAsyncRelocalizationPipelineService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_init_(grpcIAsyncRelocalizationPipelineService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_start_(grpcIAsyncRelocalizationPipelineService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_stop_(grpcIAsyncRelocalizationPipelineService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_initProcessingMode_(grpcIAsyncRelocalizationPipelineService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setCameraParameters_(grpcIAsyncRelocalizationPipelineService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getCameraParameters_(grpcIAsyncRelocalizationPipelineService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_relocalizeProcessRequest_(grpcIAsyncRelocalizationPipelineService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_get3DTransformRequest_(grpcIAsyncRelocalizationPipelineService_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getLastPose_(grpcIAsyncRelocalizationPipelineService_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Stub::init(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initRequest& request, ::grpcIAsyncRelocalizationPipeline::initResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIAsyncRelocalizationPipeline::initRequest, ::grpcIAsyncRelocalizationPipeline::initResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_init_, context, request, response);
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::init(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initRequest* request, ::grpcIAsyncRelocalizationPipeline::initResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIAsyncRelocalizationPipeline::initRequest, ::grpcIAsyncRelocalizationPipeline::initResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_, context, request, response, std::move(f));
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::init(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initRequest* request, ::grpcIAsyncRelocalizationPipeline::initResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::initResponse>* grpcIAsyncRelocalizationPipelineService::Stub::PrepareAsyncinitRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIAsyncRelocalizationPipeline::initResponse, ::grpcIAsyncRelocalizationPipeline::initRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_init_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::initResponse>* grpcIAsyncRelocalizationPipelineService::Stub::AsyncinitRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinitRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Stub::start(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::startRequest& request, ::grpcIAsyncRelocalizationPipeline::startResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIAsyncRelocalizationPipeline::startRequest, ::grpcIAsyncRelocalizationPipeline::startResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_start_, context, request, response);
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::start(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::startRequest* request, ::grpcIAsyncRelocalizationPipeline::startResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIAsyncRelocalizationPipeline::startRequest, ::grpcIAsyncRelocalizationPipeline::startResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_start_, context, request, response, std::move(f));
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::start(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::startRequest* request, ::grpcIAsyncRelocalizationPipeline::startResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_start_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::startResponse>* grpcIAsyncRelocalizationPipelineService::Stub::PrepareAsyncstartRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::startRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIAsyncRelocalizationPipeline::startResponse, ::grpcIAsyncRelocalizationPipeline::startRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_start_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::startResponse>* grpcIAsyncRelocalizationPipelineService::Stub::AsyncstartRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::startRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstartRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Stub::stop(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::stopRequest& request, ::grpcIAsyncRelocalizationPipeline::stopResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIAsyncRelocalizationPipeline::stopRequest, ::grpcIAsyncRelocalizationPipeline::stopResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_stop_, context, request, response);
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::stop(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::stopRequest* request, ::grpcIAsyncRelocalizationPipeline::stopResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIAsyncRelocalizationPipeline::stopRequest, ::grpcIAsyncRelocalizationPipeline::stopResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stop_, context, request, response, std::move(f));
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::stop(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::stopRequest* request, ::grpcIAsyncRelocalizationPipeline::stopResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stop_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::stopResponse>* grpcIAsyncRelocalizationPipelineService::Stub::PrepareAsyncstopRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::stopRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIAsyncRelocalizationPipeline::stopResponse, ::grpcIAsyncRelocalizationPipeline::stopRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_stop_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::stopResponse>* grpcIAsyncRelocalizationPipelineService::Stub::AsyncstopRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::stopRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstopRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Stub::initProcessingMode(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest& request, ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest, ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_initProcessingMode_, context, request, response);
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::initProcessingMode(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest* request, ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest, ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_initProcessingMode_, context, request, response, std::move(f));
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::initProcessingMode(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest* request, ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_initProcessingMode_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse>* grpcIAsyncRelocalizationPipelineService::Stub::PrepareAsyncinitProcessingModeRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse, ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_initProcessingMode_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse>* grpcIAsyncRelocalizationPipelineService::Stub::AsyncinitProcessingModeRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinitProcessingModeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Stub::setCameraParameters(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest& request, ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest, ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setCameraParameters_, context, request, response);
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::setCameraParameters(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest* request, ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest, ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCameraParameters_, context, request, response, std::move(f));
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::setCameraParameters(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest* request, ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCameraParameters_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse>* grpcIAsyncRelocalizationPipelineService::Stub::PrepareAsyncsetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse, ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setCameraParameters_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse>* grpcIAsyncRelocalizationPipelineService::Stub::AsyncsetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetCameraParametersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Stub::getCameraParameters(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest& request, ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest, ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getCameraParameters_, context, request, response);
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::getCameraParameters(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest* request, ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest, ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCameraParameters_, context, request, response, std::move(f));
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::getCameraParameters(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest* request, ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCameraParameters_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse>* grpcIAsyncRelocalizationPipelineService::Stub::PrepareAsyncgetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse, ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getCameraParameters_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse>* grpcIAsyncRelocalizationPipelineService::Stub::AsyncgetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetCameraParametersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Stub::relocalizeProcessRequest(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest& request, ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest, ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_relocalizeProcessRequest_, context, request, response);
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::relocalizeProcessRequest(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest* request, ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest, ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_, context, request, response, std::move(f));
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::relocalizeProcessRequest(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest* request, ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse>* grpcIAsyncRelocalizationPipelineService::Stub::PrepareAsyncrelocalizeProcessRequestRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse, ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_relocalizeProcessRequest_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse>* grpcIAsyncRelocalizationPipelineService::Stub::AsyncrelocalizeProcessRequestRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrelocalizeProcessRequestRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Stub::get3DTransformRequest(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest& request, ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest, ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_get3DTransformRequest_, context, request, response);
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::get3DTransformRequest(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest* request, ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest, ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_get3DTransformRequest_, context, request, response, std::move(f));
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::get3DTransformRequest(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest* request, ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_get3DTransformRequest_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse>* grpcIAsyncRelocalizationPipelineService::Stub::PrepareAsyncget3DTransformRequestRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse, ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_get3DTransformRequest_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse>* grpcIAsyncRelocalizationPipelineService::Stub::Asyncget3DTransformRequestRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncget3DTransformRequestRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Stub::getLastPose(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest& request, ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest, ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getLastPose_, context, request, response);
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::getLastPose(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest* request, ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest, ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getLastPose_, context, request, response, std::move(f));
}

void grpcIAsyncRelocalizationPipelineService::Stub::experimental_async::getLastPose(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest* request, ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getLastPose_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse>* grpcIAsyncRelocalizationPipelineService::Stub::PrepareAsyncgetLastPoseRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse, ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getLastPose_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse>* grpcIAsyncRelocalizationPipelineService::Stub::AsyncgetLastPoseRaw(::grpc::ClientContext* context, const ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetLastPoseRaw(context, request, cq);
  result->StartCall();
  return result;
}

grpcIAsyncRelocalizationPipelineService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIAsyncRelocalizationPipelineService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIAsyncRelocalizationPipelineService::Service, ::grpcIAsyncRelocalizationPipeline::initRequest, ::grpcIAsyncRelocalizationPipeline::initResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIAsyncRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIAsyncRelocalizationPipeline::initRequest* req,
             ::grpcIAsyncRelocalizationPipeline::initResponse* resp) {
               return service->init(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIAsyncRelocalizationPipelineService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIAsyncRelocalizationPipelineService::Service, ::grpcIAsyncRelocalizationPipeline::startRequest, ::grpcIAsyncRelocalizationPipeline::startResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIAsyncRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIAsyncRelocalizationPipeline::startRequest* req,
             ::grpcIAsyncRelocalizationPipeline::startResponse* resp) {
               return service->start(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIAsyncRelocalizationPipelineService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIAsyncRelocalizationPipelineService::Service, ::grpcIAsyncRelocalizationPipeline::stopRequest, ::grpcIAsyncRelocalizationPipeline::stopResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIAsyncRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIAsyncRelocalizationPipeline::stopRequest* req,
             ::grpcIAsyncRelocalizationPipeline::stopResponse* resp) {
               return service->stop(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIAsyncRelocalizationPipelineService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIAsyncRelocalizationPipelineService::Service, ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest, ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIAsyncRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest* req,
             ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse* resp) {
               return service->initProcessingMode(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIAsyncRelocalizationPipelineService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIAsyncRelocalizationPipelineService::Service, ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest, ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIAsyncRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest* req,
             ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse* resp) {
               return service->setCameraParameters(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIAsyncRelocalizationPipelineService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIAsyncRelocalizationPipelineService::Service, ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest, ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIAsyncRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest* req,
             ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse* resp) {
               return service->getCameraParameters(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIAsyncRelocalizationPipelineService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIAsyncRelocalizationPipelineService::Service, ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest, ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIAsyncRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest* req,
             ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse* resp) {
               return service->relocalizeProcessRequest(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIAsyncRelocalizationPipelineService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIAsyncRelocalizationPipelineService::Service, ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest, ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIAsyncRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest* req,
             ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse* resp) {
               return service->get3DTransformRequest(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIAsyncRelocalizationPipelineService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIAsyncRelocalizationPipelineService::Service, ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest, ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIAsyncRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest* req,
             ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse* resp) {
               return service->getLastPose(ctx, req, resp);
             }, this)));
}

grpcIAsyncRelocalizationPipelineService::Service::~Service() {
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Service::init(::grpc::ServerContext* context, const ::grpcIAsyncRelocalizationPipeline::initRequest* request, ::grpcIAsyncRelocalizationPipeline::initResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Service::start(::grpc::ServerContext* context, const ::grpcIAsyncRelocalizationPipeline::startRequest* request, ::grpcIAsyncRelocalizationPipeline::startResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Service::stop(::grpc::ServerContext* context, const ::grpcIAsyncRelocalizationPipeline::stopRequest* request, ::grpcIAsyncRelocalizationPipeline::stopResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Service::initProcessingMode(::grpc::ServerContext* context, const ::grpcIAsyncRelocalizationPipeline::initProcessingModeRequest* request, ::grpcIAsyncRelocalizationPipeline::initProcessingModeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Service::setCameraParameters(::grpc::ServerContext* context, const ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest* request, ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Service::getCameraParameters(::grpc::ServerContext* context, const ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest* request, ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Service::relocalizeProcessRequest(::grpc::ServerContext* context, const ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest* request, ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Service::get3DTransformRequest(::grpc::ServerContext* context, const ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest* request, ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIAsyncRelocalizationPipelineService::Service::getLastPose(::grpc::ServerContext* context, const ::grpcIAsyncRelocalizationPipeline::getLastPoseRequest* request, ::grpcIAsyncRelocalizationPipeline::getLastPoseResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace grpcIAsyncRelocalizationPipeline

