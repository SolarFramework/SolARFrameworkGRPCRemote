// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIRegressionService.proto

#include "grpcIRegressionService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcIRegression {
PROTOBUF_CONSTEXPR setCameraParametersRequest::setCameraParametersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.intrinsicparams_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.distorsionparams_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct setCameraParametersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setCameraParametersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~setCameraParametersRequestDefaultTypeInternal() {}
  union {
    setCameraParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setCameraParametersRequestDefaultTypeInternal _setCameraParametersRequest_default_instance_;
PROTOBUF_CONSTEXPR addRequest::addRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.descriptors_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.points3d_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addRequestDefaultTypeInternal() {}
  union {
    addRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addRequestDefaultTypeInternal _addRequest_default_instance_;
PROTOBUF_CONSTEXPR addResponse::addResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addResponseDefaultTypeInternal() {}
  union {
    addResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addResponseDefaultTypeInternal _addResponse_default_instance_;
PROTOBUF_CONSTEXPR regressRequest::regressRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.frame_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.points2d_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.points3d_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct regressRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR regressRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~regressRequestDefaultTypeInternal() {}
  union {
    regressRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 regressRequestDefaultTypeInternal _regressRequest_default_instance_;
PROTOBUF_CONSTEXPR regressResponse::regressResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.points2d_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.points3d_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct regressResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR regressResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~regressResponseDefaultTypeInternal() {}
  union {
    regressResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 regressResponseDefaultTypeInternal _regressResponse_default_instance_;
PROTOBUF_CONSTEXPR updateRequest::updateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.inliers_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.camerapose_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct updateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR updateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~updateRequestDefaultTypeInternal() {}
  union {
    updateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 updateRequestDefaultTypeInternal _updateRequest_default_instance_;
PROTOBUF_CONSTEXPR updateResponse::updateResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.inliers_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.camerapose_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct updateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR updateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~updateResponseDefaultTypeInternal() {}
  union {
    updateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 updateResponseDefaultTypeInternal _updateResponse_default_instance_;
PROTOBUF_CONSTEXPR loadModelRequest::loadModelRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct loadModelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR loadModelRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~loadModelRequestDefaultTypeInternal() {}
  union {
    loadModelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 loadModelRequestDefaultTypeInternal _loadModelRequest_default_instance_;
PROTOBUF_CONSTEXPR loadModelResponse::loadModelResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct loadModelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR loadModelResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~loadModelResponseDefaultTypeInternal() {}
  union {
    loadModelResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 loadModelResponseDefaultTypeInternal _loadModelResponse_default_instance_;
PROTOBUF_CONSTEXPR getTrainingStatusRequest::getTrainingStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getTrainingStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getTrainingStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getTrainingStatusRequestDefaultTypeInternal() {}
  union {
    getTrainingStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getTrainingStatusRequestDefaultTypeInternal _getTrainingStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR getTrainingStatusResponse::getTrainingStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getTrainingStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getTrainingStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getTrainingStatusResponseDefaultTypeInternal() {}
  union {
    getTrainingStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getTrainingStatusResponseDefaultTypeInternal _getTrainingStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR getNumActiveLeavesRequest::getNumActiveLeavesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getNumActiveLeavesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getNumActiveLeavesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getNumActiveLeavesRequestDefaultTypeInternal() {}
  union {
    getNumActiveLeavesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getNumActiveLeavesRequestDefaultTypeInternal _getNumActiveLeavesRequest_default_instance_;
PROTOBUF_CONSTEXPR getNumActiveLeavesResponse::getNumActiveLeavesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getNumActiveLeavesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getNumActiveLeavesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getNumActiveLeavesResponseDefaultTypeInternal() {}
  union {
    getNumActiveLeavesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getNumActiveLeavesResponseDefaultTypeInternal _getNumActiveLeavesResponse_default_instance_;
PROTOBUF_CONSTEXPR getNumPassiveLeavesRequest::getNumPassiveLeavesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getNumPassiveLeavesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getNumPassiveLeavesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getNumPassiveLeavesRequestDefaultTypeInternal() {}
  union {
    getNumPassiveLeavesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getNumPassiveLeavesRequestDefaultTypeInternal _getNumPassiveLeavesRequest_default_instance_;
PROTOBUF_CONSTEXPR getNumPassiveLeavesResponse::getNumPassiveLeavesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getNumPassiveLeavesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getNumPassiveLeavesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getNumPassiveLeavesResponseDefaultTypeInternal() {}
  union {
    getNumPassiveLeavesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getNumPassiveLeavesResponseDefaultTypeInternal _getNumPassiveLeavesResponse_default_instance_;
}  // namespace grpcIRegression
static ::_pb::Metadata file_level_metadata_grpcIRegressionService_2eproto[15];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcIRegressionService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcIRegressionService_2eproto = nullptr;

const uint32_t TableStruct_grpcIRegressionService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::setCameraParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::setCameraParametersRequest, _impl_.intrinsicparams_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::setCameraParametersRequest, _impl_.distorsionparams_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::addRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::addRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::addRequest, _impl_.descriptors_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::addRequest, _impl_.points3d_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::addResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::addResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::regressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::regressRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::regressRequest, _impl_.frame_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::regressRequest, _impl_.points2d_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::regressRequest, _impl_.points3d_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::regressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::regressResponse, _impl_.points2d_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::regressResponse, _impl_.points3d_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::regressResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::updateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::updateRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::updateRequest, _impl_.inliers_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::updateRequest, _impl_.camerapose_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::updateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::updateResponse, _impl_.inliers_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::updateResponse, _impl_.camerapose_),
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::updateResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::loadModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::loadModelRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::loadModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::loadModelResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getTrainingStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getTrainingStatusRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getTrainingStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getTrainingStatusResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getNumActiveLeavesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getNumActiveLeavesRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getNumActiveLeavesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getNumActiveLeavesResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getNumPassiveLeavesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getNumPassiveLeavesRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getNumPassiveLeavesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIRegression::getNumPassiveLeavesResponse, _impl_.xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcIRegression::setCameraParametersRequest)},
  { 8, -1, -1, sizeof(::grpcIRegression::addRequest)},
  { 17, -1, -1, sizeof(::grpcIRegression::addResponse)},
  { 24, -1, -1, sizeof(::grpcIRegression::regressRequest)},
  { 34, -1, -1, sizeof(::grpcIRegression::regressResponse)},
  { 43, -1, -1, sizeof(::grpcIRegression::updateRequest)},
  { 52, -1, -1, sizeof(::grpcIRegression::updateResponse)},
  { 61, -1, -1, sizeof(::grpcIRegression::loadModelRequest)},
  { 68, -1, -1, sizeof(::grpcIRegression::loadModelResponse)},
  { 75, -1, -1, sizeof(::grpcIRegression::getTrainingStatusRequest)},
  { 82, -1, -1, sizeof(::grpcIRegression::getTrainingStatusResponse)},
  { 89, -1, -1, sizeof(::grpcIRegression::getNumActiveLeavesRequest)},
  { 96, -1, -1, sizeof(::grpcIRegression::getNumActiveLeavesResponse)},
  { 103, -1, -1, sizeof(::grpcIRegression::getNumPassiveLeavesRequest)},
  { 110, -1, -1, sizeof(::grpcIRegression::getNumPassiveLeavesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcIRegression::_setCameraParametersRequest_default_instance_._instance,
  &::grpcIRegression::_addRequest_default_instance_._instance,
  &::grpcIRegression::_addResponse_default_instance_._instance,
  &::grpcIRegression::_regressRequest_default_instance_._instance,
  &::grpcIRegression::_regressResponse_default_instance_._instance,
  &::grpcIRegression::_updateRequest_default_instance_._instance,
  &::grpcIRegression::_updateResponse_default_instance_._instance,
  &::grpcIRegression::_loadModelRequest_default_instance_._instance,
  &::grpcIRegression::_loadModelResponse_default_instance_._instance,
  &::grpcIRegression::_getTrainingStatusRequest_default_instance_._instance,
  &::grpcIRegression::_getTrainingStatusResponse_default_instance_._instance,
  &::grpcIRegression::_getNumActiveLeavesRequest_default_instance_._instance,
  &::grpcIRegression::_getNumActiveLeavesResponse_default_instance_._instance,
  &::grpcIRegression::_getNumPassiveLeavesRequest_default_instance_._instance,
  &::grpcIRegression::_getNumPassiveLeavesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcIRegressionService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034grpcIRegressionService.proto\022\017grpcIReg"
  "ression\032\033google/protobuf/empty.proto\"O\n\032"
  "setCameraParametersRequest\022\027\n\017intrinsicP"
  "arams\030\001 \001(\014\022\030\n\020distorsionParams\030\002 \001(\014\"X\n"
  "\naddRequest\022#\n\033grpcServerCompressionForm"
  "at\030\001 \001(\005\022\023\n\013descriptors\030\002 \001(\014\022\020\n\010points3"
  "D\030\003 \001(\014\"*\n\013addResponse\022\033\n\023xpcfGrpcReturn"
  "Value\030\001 \001(\021\"h\n\016regressRequest\022#\n\033grpcSer"
  "verCompressionFormat\030\001 \001(\005\022\r\n\005frame\030\002 \001("
  "\014\022\020\n\010points2D\030\003 \001(\014\022\020\n\010points3D\030\004 \001(\014\"R\n"
  "\017regressResponse\022\020\n\010points2D\030\001 \001(\014\022\020\n\010po"
  "ints3D\030\002 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\003 \001("
  "\021\"Y\n\rupdateRequest\022#\n\033grpcServerCompress"
  "ionFormat\030\001 \001(\005\022\017\n\007inliers\030\002 \001(\014\022\022\n\ncame"
  "raPose\030\003 \001(\014\"R\n\016updateResponse\022\017\n\007inlier"
  "s\030\001 \001(\014\022\022\n\ncameraPose\030\002 \001(\014\022\033\n\023xpcfGrpcR"
  "eturnValue\030\003 \001(\021\"7\n\020loadModelRequest\022#\n\033"
  "grpcServerCompressionFormat\030\001 \001(\005\"0\n\021loa"
  "dModelResponse\022\033\n\023xpcfGrpcReturnValue\030\001 "
  "\001(\021\"\?\n\030getTrainingStatusRequest\022#\n\033grpcS"
  "erverCompressionFormat\030\001 \001(\005\"8\n\031getTrain"
  "ingStatusResponse\022\033\n\023xpcfGrpcReturnValue"
  "\030\001 \001(\014\"@\n\031getNumActiveLeavesRequest\022#\n\033g"
  "rpcServerCompressionFormat\030\001 \001(\005\"9\n\032getN"
  "umActiveLeavesResponse\022\033\n\023xpcfGrpcReturn"
  "Value\030\001 \001(\021\"A\n\032getNumPassiveLeavesReques"
  "t\022#\n\033grpcServerCompressionFormat\030\001 \001(\005\":"
  "\n\033getNumPassiveLeavesResponse\022\033\n\023xpcfGrp"
  "cReturnValue\030\001 \001(\0212\200\006\n\026grpcIRegressionSe"
  "rvice\022\\\n\023setCameraParameters\022+.grpcIRegr"
  "ession.setCameraParametersRequest\032\026.goog"
  "le.protobuf.Empty\"\000\022B\n\003add\022\033.grpcIRegres"
  "sion.addRequest\032\034.grpcIRegression.addRes"
  "ponse\"\000\022N\n\007regress\022\037.grpcIRegression.reg"
  "ressRequest\032 .grpcIRegression.regressRes"
  "ponse\"\000\022K\n\006update\022\036.grpcIRegression.upda"
  "teRequest\032\037.grpcIRegression.updateRespon"
  "se\"\000\022T\n\tloadModel\022!.grpcIRegression.load"
  "ModelRequest\032\".grpcIRegression.loadModel"
  "Response\"\000\022l\n\021getTrainingStatus\022).grpcIR"
  "egression.getTrainingStatusRequest\032*.grp"
  "cIRegression.getTrainingStatusResponse\"\000"
  "\022o\n\022getNumActiveLeaves\022*.grpcIRegression"
  ".getNumActiveLeavesRequest\032+.grpcIRegres"
  "sion.getNumActiveLeavesResponse\"\000\022r\n\023get"
  "NumPassiveLeaves\022+.grpcIRegression.getNu"
  "mPassiveLeavesRequest\032,.grpcIRegression."
  "getNumPassiveLeavesResponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcIRegressionService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcIRegressionService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcIRegressionService_2eproto = {
    false, false, 1917, descriptor_table_protodef_grpcIRegressionService_2eproto,
    "grpcIRegressionService.proto",
    &descriptor_table_grpcIRegressionService_2eproto_once, descriptor_table_grpcIRegressionService_2eproto_deps, 1, 15,
    schemas, file_default_instances, TableStruct_grpcIRegressionService_2eproto::offsets,
    file_level_metadata_grpcIRegressionService_2eproto, file_level_enum_descriptors_grpcIRegressionService_2eproto,
    file_level_service_descriptors_grpcIRegressionService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcIRegressionService_2eproto_getter() {
  return &descriptor_table_grpcIRegressionService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcIRegressionService_2eproto(&descriptor_table_grpcIRegressionService_2eproto);
namespace grpcIRegression {

// ===================================================================

class setCameraParametersRequest::_Internal {
 public:
};

setCameraParametersRequest::setCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.setCameraParametersRequest)
}
setCameraParametersRequest::setCameraParametersRequest(const setCameraParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  setCameraParametersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.intrinsicparams_){}
    , decltype(_impl_.distorsionparams_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.intrinsicparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.intrinsicparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_intrinsicparams().empty()) {
    _this->_impl_.intrinsicparams_.Set(from._internal_intrinsicparams(), 
      _this->GetArenaForAllocation());
  }
  _impl_.distorsionparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.distorsionparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_distorsionparams().empty()) {
    _this->_impl_.distorsionparams_.Set(from._internal_distorsionparams(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.setCameraParametersRequest)
}

inline void setCameraParametersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.intrinsicparams_){}
    , decltype(_impl_.distorsionparams_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.intrinsicparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.intrinsicparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.distorsionparams_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.distorsionparams_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

setCameraParametersRequest::~setCameraParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcIRegression.setCameraParametersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void setCameraParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.intrinsicparams_.Destroy();
  _impl_.distorsionparams_.Destroy();
}

void setCameraParametersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void setCameraParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.setCameraParametersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.intrinsicparams_.ClearToEmpty();
  _impl_.distorsionparams_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setCameraParametersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes intrinsicParams = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_intrinsicparams();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes distorsionParams = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_distorsionparams();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* setCameraParametersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.setCameraParametersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes intrinsicParams = 1;
  if (!this->_internal_intrinsicparams().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_intrinsicparams(), target);
  }

  // bytes distorsionParams = 2;
  if (!this->_internal_distorsionparams().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_distorsionparams(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.setCameraParametersRequest)
  return target;
}

size_t setCameraParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.setCameraParametersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes intrinsicParams = 1;
  if (!this->_internal_intrinsicparams().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_intrinsicparams());
  }

  // bytes distorsionParams = 2;
  if (!this->_internal_distorsionparams().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_distorsionparams());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setCameraParametersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    setCameraParametersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setCameraParametersRequest::GetClassData() const { return &_class_data_; }


void setCameraParametersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<setCameraParametersRequest*>(&to_msg);
  auto& from = static_cast<const setCameraParametersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.setCameraParametersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_intrinsicparams().empty()) {
    _this->_internal_set_intrinsicparams(from._internal_intrinsicparams());
  }
  if (!from._internal_distorsionparams().empty()) {
    _this->_internal_set_distorsionparams(from._internal_distorsionparams());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setCameraParametersRequest::CopyFrom(const setCameraParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.setCameraParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setCameraParametersRequest::IsInitialized() const {
  return true;
}

void setCameraParametersRequest::InternalSwap(setCameraParametersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.intrinsicparams_, lhs_arena,
      &other->_impl_.intrinsicparams_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.distorsionparams_, lhs_arena,
      &other->_impl_.distorsionparams_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata setCameraParametersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[0]);
}

// ===================================================================

class addRequest::_Internal {
 public:
};

addRequest::addRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.addRequest)
}
addRequest::addRequest(const addRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.descriptors_){}
    , decltype(_impl_.points3d_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.descriptors_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.descriptors_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_descriptors().empty()) {
    _this->_impl_.descriptors_.Set(from._internal_descriptors(), 
      _this->GetArenaForAllocation());
  }
  _impl_.points3d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points3d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_points3d().empty()) {
    _this->_impl_.points3d_.Set(from._internal_points3d(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.addRequest)
}

inline void addRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.descriptors_){}
    , decltype(_impl_.points3d_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.descriptors_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.descriptors_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.points3d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points3d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

addRequest::~addRequest() {
  // @@protoc_insertion_point(destructor:grpcIRegression.addRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.descriptors_.Destroy();
  _impl_.points3d_.Destroy();
}

void addRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.addRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.descriptors_.ClearToEmpty();
  _impl_.points3d_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes descriptors = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_descriptors();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes points3D = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_points3d();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.addRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes descriptors = 2;
  if (!this->_internal_descriptors().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_descriptors(), target);
  }

  // bytes points3D = 3;
  if (!this->_internal_points3d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_points3d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.addRequest)
  return target;
}

size_t addRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.addRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes descriptors = 2;
  if (!this->_internal_descriptors().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors());
  }

  // bytes points3D = 3;
  if (!this->_internal_points3d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points3d());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addRequest::GetClassData() const { return &_class_data_; }


void addRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addRequest*>(&to_msg);
  auto& from = static_cast<const addRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.addRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_descriptors().empty()) {
    _this->_internal_set_descriptors(from._internal_descriptors());
  }
  if (!from._internal_points3d().empty()) {
    _this->_internal_set_points3d(from._internal_points3d());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addRequest::CopyFrom(const addRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.addRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addRequest::IsInitialized() const {
  return true;
}

void addRequest::InternalSwap(addRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.descriptors_, lhs_arena,
      &other->_impl_.descriptors_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.points3d_, lhs_arena,
      &other->_impl_.points3d_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[1]);
}

// ===================================================================

class addResponse::_Internal {
 public:
};

addResponse::addResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.addResponse)
}
addResponse::addResponse(const addResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.addResponse)
}

inline void addResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

addResponse::~addResponse() {
  // @@protoc_insertion_point(destructor:grpcIRegression.addResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void addResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.addResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.addResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.addResponse)
  return target;
}

size_t addResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.addResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addResponse::GetClassData() const { return &_class_data_; }


void addResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addResponse*>(&to_msg);
  auto& from = static_cast<const addResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.addResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addResponse::CopyFrom(const addResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.addResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addResponse::IsInitialized() const {
  return true;
}

void addResponse::InternalSwap(addResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[2]);
}

// ===================================================================

class regressRequest::_Internal {
 public:
};

regressRequest::regressRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.regressRequest)
}
regressRequest::regressRequest(const regressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  regressRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.frame_){}
    , decltype(_impl_.points2d_){}
    , decltype(_impl_.points3d_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.frame_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.frame_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_frame().empty()) {
    _this->_impl_.frame_.Set(from._internal_frame(), 
      _this->GetArenaForAllocation());
  }
  _impl_.points2d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points2d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_points2d().empty()) {
    _this->_impl_.points2d_.Set(from._internal_points2d(), 
      _this->GetArenaForAllocation());
  }
  _impl_.points3d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points3d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_points3d().empty()) {
    _this->_impl_.points3d_.Set(from._internal_points3d(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.regressRequest)
}

inline void regressRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.frame_){}
    , decltype(_impl_.points2d_){}
    , decltype(_impl_.points3d_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.frame_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.frame_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.points2d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points2d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.points3d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points3d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

regressRequest::~regressRequest() {
  // @@protoc_insertion_point(destructor:grpcIRegression.regressRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void regressRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.frame_.Destroy();
  _impl_.points2d_.Destroy();
  _impl_.points3d_.Destroy();
}

void regressRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void regressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.regressRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.frame_.ClearToEmpty();
  _impl_.points2d_.ClearToEmpty();
  _impl_.points3d_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* regressRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes frame = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_frame();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes points2D = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_points2d();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes points3D = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_points3d();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* regressRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.regressRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes frame = 2;
  if (!this->_internal_frame().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_frame(), target);
  }

  // bytes points2D = 3;
  if (!this->_internal_points2d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_points2d(), target);
  }

  // bytes points3D = 4;
  if (!this->_internal_points3d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_points3d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.regressRequest)
  return target;
}

size_t regressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.regressRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frame = 2;
  if (!this->_internal_frame().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frame());
  }

  // bytes points2D = 3;
  if (!this->_internal_points2d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points2d());
  }

  // bytes points3D = 4;
  if (!this->_internal_points3d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points3d());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData regressRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    regressRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*regressRequest::GetClassData() const { return &_class_data_; }


void regressRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<regressRequest*>(&to_msg);
  auto& from = static_cast<const regressRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.regressRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_frame().empty()) {
    _this->_internal_set_frame(from._internal_frame());
  }
  if (!from._internal_points2d().empty()) {
    _this->_internal_set_points2d(from._internal_points2d());
  }
  if (!from._internal_points3d().empty()) {
    _this->_internal_set_points3d(from._internal_points3d());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void regressRequest::CopyFrom(const regressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.regressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool regressRequest::IsInitialized() const {
  return true;
}

void regressRequest::InternalSwap(regressRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.frame_, lhs_arena,
      &other->_impl_.frame_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.points2d_, lhs_arena,
      &other->_impl_.points2d_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.points3d_, lhs_arena,
      &other->_impl_.points3d_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata regressRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[3]);
}

// ===================================================================

class regressResponse::_Internal {
 public:
};

regressResponse::regressResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.regressResponse)
}
regressResponse::regressResponse(const regressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  regressResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.points2d_){}
    , decltype(_impl_.points3d_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.points2d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points2d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_points2d().empty()) {
    _this->_impl_.points2d_.Set(from._internal_points2d(), 
      _this->GetArenaForAllocation());
  }
  _impl_.points3d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points3d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_points3d().empty()) {
    _this->_impl_.points3d_.Set(from._internal_points3d(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.regressResponse)
}

inline void regressResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.points2d_){}
    , decltype(_impl_.points3d_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.points2d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points2d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.points3d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.points3d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

regressResponse::~regressResponse() {
  // @@protoc_insertion_point(destructor:grpcIRegression.regressResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void regressResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.points2d_.Destroy();
  _impl_.points3d_.Destroy();
}

void regressResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void regressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.regressResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points2d_.ClearToEmpty();
  _impl_.points3d_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* regressResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes points2D = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_points2d();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes points3D = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_points3d();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* regressResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.regressResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes points2D = 1;
  if (!this->_internal_points2d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_points2d(), target);
  }

  // bytes points3D = 2;
  if (!this->_internal_points3d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_points3d(), target);
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(3, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.regressResponse)
  return target;
}

size_t regressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.regressResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes points2D = 1;
  if (!this->_internal_points2d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points2d());
  }

  // bytes points3D = 2;
  if (!this->_internal_points3d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points3d());
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData regressResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    regressResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*regressResponse::GetClassData() const { return &_class_data_; }


void regressResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<regressResponse*>(&to_msg);
  auto& from = static_cast<const regressResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.regressResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_points2d().empty()) {
    _this->_internal_set_points2d(from._internal_points2d());
  }
  if (!from._internal_points3d().empty()) {
    _this->_internal_set_points3d(from._internal_points3d());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void regressResponse::CopyFrom(const regressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.regressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool regressResponse::IsInitialized() const {
  return true;
}

void regressResponse::InternalSwap(regressResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.points2d_, lhs_arena,
      &other->_impl_.points2d_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.points3d_, lhs_arena,
      &other->_impl_.points3d_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata regressResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[4]);
}

// ===================================================================

class updateRequest::_Internal {
 public:
};

updateRequest::updateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.updateRequest)
}
updateRequest::updateRequest(const updateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  updateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.inliers_){}
    , decltype(_impl_.camerapose_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.inliers_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.inliers_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_inliers().empty()) {
    _this->_impl_.inliers_.Set(from._internal_inliers(), 
      _this->GetArenaForAllocation());
  }
  _impl_.camerapose_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.camerapose_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camerapose().empty()) {
    _this->_impl_.camerapose_.Set(from._internal_camerapose(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.updateRequest)
}

inline void updateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.inliers_){}
    , decltype(_impl_.camerapose_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.inliers_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.inliers_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.camerapose_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.camerapose_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

updateRequest::~updateRequest() {
  // @@protoc_insertion_point(destructor:grpcIRegression.updateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void updateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.inliers_.Destroy();
  _impl_.camerapose_.Destroy();
}

void updateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void updateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.updateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inliers_.ClearToEmpty();
  _impl_.camerapose_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* updateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes inliers = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_inliers();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes cameraPose = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_camerapose();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* updateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.updateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes inliers = 2;
  if (!this->_internal_inliers().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_inliers(), target);
  }

  // bytes cameraPose = 3;
  if (!this->_internal_camerapose().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_camerapose(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.updateRequest)
  return target;
}

size_t updateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.updateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes inliers = 2;
  if (!this->_internal_inliers().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_inliers());
  }

  // bytes cameraPose = 3;
  if (!this->_internal_camerapose().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camerapose());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData updateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    updateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*updateRequest::GetClassData() const { return &_class_data_; }


void updateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<updateRequest*>(&to_msg);
  auto& from = static_cast<const updateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.updateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_inliers().empty()) {
    _this->_internal_set_inliers(from._internal_inliers());
  }
  if (!from._internal_camerapose().empty()) {
    _this->_internal_set_camerapose(from._internal_camerapose());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void updateRequest::CopyFrom(const updateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.updateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool updateRequest::IsInitialized() const {
  return true;
}

void updateRequest::InternalSwap(updateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.inliers_, lhs_arena,
      &other->_impl_.inliers_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.camerapose_, lhs_arena,
      &other->_impl_.camerapose_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata updateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[5]);
}

// ===================================================================

class updateResponse::_Internal {
 public:
};

updateResponse::updateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.updateResponse)
}
updateResponse::updateResponse(const updateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  updateResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.inliers_){}
    , decltype(_impl_.camerapose_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.inliers_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.inliers_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_inliers().empty()) {
    _this->_impl_.inliers_.Set(from._internal_inliers(), 
      _this->GetArenaForAllocation());
  }
  _impl_.camerapose_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.camerapose_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camerapose().empty()) {
    _this->_impl_.camerapose_.Set(from._internal_camerapose(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.updateResponse)
}

inline void updateResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.inliers_){}
    , decltype(_impl_.camerapose_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.inliers_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.inliers_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.camerapose_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.camerapose_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

updateResponse::~updateResponse() {
  // @@protoc_insertion_point(destructor:grpcIRegression.updateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void updateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.inliers_.Destroy();
  _impl_.camerapose_.Destroy();
}

void updateResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void updateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.updateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inliers_.ClearToEmpty();
  _impl_.camerapose_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* updateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes inliers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_inliers();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes cameraPose = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_camerapose();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* updateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.updateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes inliers = 1;
  if (!this->_internal_inliers().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_inliers(), target);
  }

  // bytes cameraPose = 2;
  if (!this->_internal_camerapose().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_camerapose(), target);
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(3, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.updateResponse)
  return target;
}

size_t updateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.updateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes inliers = 1;
  if (!this->_internal_inliers().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_inliers());
  }

  // bytes cameraPose = 2;
  if (!this->_internal_camerapose().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camerapose());
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData updateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    updateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*updateResponse::GetClassData() const { return &_class_data_; }


void updateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<updateResponse*>(&to_msg);
  auto& from = static_cast<const updateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.updateResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_inliers().empty()) {
    _this->_internal_set_inliers(from._internal_inliers());
  }
  if (!from._internal_camerapose().empty()) {
    _this->_internal_set_camerapose(from._internal_camerapose());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void updateResponse::CopyFrom(const updateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.updateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool updateResponse::IsInitialized() const {
  return true;
}

void updateResponse::InternalSwap(updateResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.inliers_, lhs_arena,
      &other->_impl_.inliers_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.camerapose_, lhs_arena,
      &other->_impl_.camerapose_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata updateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[6]);
}

// ===================================================================

class loadModelRequest::_Internal {
 public:
};

loadModelRequest::loadModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.loadModelRequest)
}
loadModelRequest::loadModelRequest(const loadModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  loadModelRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.loadModelRequest)
}

inline void loadModelRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

loadModelRequest::~loadModelRequest() {
  // @@protoc_insertion_point(destructor:grpcIRegression.loadModelRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void loadModelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void loadModelRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void loadModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.loadModelRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadModelRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* loadModelRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.loadModelRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.loadModelRequest)
  return target;
}

size_t loadModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.loadModelRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData loadModelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    loadModelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*loadModelRequest::GetClassData() const { return &_class_data_; }


void loadModelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<loadModelRequest*>(&to_msg);
  auto& from = static_cast<const loadModelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.loadModelRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void loadModelRequest::CopyFrom(const loadModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.loadModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadModelRequest::IsInitialized() const {
  return true;
}

void loadModelRequest::InternalSwap(loadModelRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadModelRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[7]);
}

// ===================================================================

class loadModelResponse::_Internal {
 public:
};

loadModelResponse::loadModelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.loadModelResponse)
}
loadModelResponse::loadModelResponse(const loadModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  loadModelResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.loadModelResponse)
}

inline void loadModelResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

loadModelResponse::~loadModelResponse() {
  // @@protoc_insertion_point(destructor:grpcIRegression.loadModelResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void loadModelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void loadModelResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void loadModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.loadModelResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadModelResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* loadModelResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.loadModelResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.loadModelResponse)
  return target;
}

size_t loadModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.loadModelResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData loadModelResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    loadModelResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*loadModelResponse::GetClassData() const { return &_class_data_; }


void loadModelResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<loadModelResponse*>(&to_msg);
  auto& from = static_cast<const loadModelResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.loadModelResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void loadModelResponse::CopyFrom(const loadModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.loadModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadModelResponse::IsInitialized() const {
  return true;
}

void loadModelResponse::InternalSwap(loadModelResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadModelResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[8]);
}

// ===================================================================

class getTrainingStatusRequest::_Internal {
 public:
};

getTrainingStatusRequest::getTrainingStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.getTrainingStatusRequest)
}
getTrainingStatusRequest::getTrainingStatusRequest(const getTrainingStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getTrainingStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.getTrainingStatusRequest)
}

inline void getTrainingStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getTrainingStatusRequest::~getTrainingStatusRequest() {
  // @@protoc_insertion_point(destructor:grpcIRegression.getTrainingStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getTrainingStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getTrainingStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getTrainingStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.getTrainingStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTrainingStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getTrainingStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.getTrainingStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.getTrainingStatusRequest)
  return target;
}

size_t getTrainingStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.getTrainingStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getTrainingStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getTrainingStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getTrainingStatusRequest::GetClassData() const { return &_class_data_; }


void getTrainingStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getTrainingStatusRequest*>(&to_msg);
  auto& from = static_cast<const getTrainingStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.getTrainingStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getTrainingStatusRequest::CopyFrom(const getTrainingStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.getTrainingStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTrainingStatusRequest::IsInitialized() const {
  return true;
}

void getTrainingStatusRequest::InternalSwap(getTrainingStatusRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getTrainingStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[9]);
}

// ===================================================================

class getTrainingStatusResponse::_Internal {
 public:
};

getTrainingStatusResponse::getTrainingStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.getTrainingStatusResponse)
}
getTrainingStatusResponse::getTrainingStatusResponse(const getTrainingStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getTrainingStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_impl_.xpcfgrpcreturnvalue_.Set(from._internal_xpcfgrpcreturnvalue(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.getTrainingStatusResponse)
}

inline void getTrainingStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getTrainingStatusResponse::~getTrainingStatusResponse() {
  // @@protoc_insertion_point(destructor:grpcIRegression.getTrainingStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getTrainingStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.xpcfgrpcreturnvalue_.Destroy();
}

void getTrainingStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getTrainingStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.getTrainingStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTrainingStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getTrainingStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.getTrainingStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.getTrainingStatusResponse)
  return target;
}

size_t getTrainingStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.getTrainingStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getTrainingStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getTrainingStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getTrainingStatusResponse::GetClassData() const { return &_class_data_; }


void getTrainingStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getTrainingStatusResponse*>(&to_msg);
  auto& from = static_cast<const getTrainingStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.getTrainingStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getTrainingStatusResponse::CopyFrom(const getTrainingStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.getTrainingStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTrainingStatusResponse::IsInitialized() const {
  return true;
}

void getTrainingStatusResponse::InternalSwap(getTrainingStatusResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.xpcfgrpcreturnvalue_, lhs_arena,
      &other->_impl_.xpcfgrpcreturnvalue_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata getTrainingStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[10]);
}

// ===================================================================

class getNumActiveLeavesRequest::_Internal {
 public:
};

getNumActiveLeavesRequest::getNumActiveLeavesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.getNumActiveLeavesRequest)
}
getNumActiveLeavesRequest::getNumActiveLeavesRequest(const getNumActiveLeavesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getNumActiveLeavesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.getNumActiveLeavesRequest)
}

inline void getNumActiveLeavesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getNumActiveLeavesRequest::~getNumActiveLeavesRequest() {
  // @@protoc_insertion_point(destructor:grpcIRegression.getNumActiveLeavesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getNumActiveLeavesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getNumActiveLeavesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getNumActiveLeavesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.getNumActiveLeavesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNumActiveLeavesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getNumActiveLeavesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.getNumActiveLeavesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.getNumActiveLeavesRequest)
  return target;
}

size_t getNumActiveLeavesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.getNumActiveLeavesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getNumActiveLeavesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getNumActiveLeavesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getNumActiveLeavesRequest::GetClassData() const { return &_class_data_; }


void getNumActiveLeavesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getNumActiveLeavesRequest*>(&to_msg);
  auto& from = static_cast<const getNumActiveLeavesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.getNumActiveLeavesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getNumActiveLeavesRequest::CopyFrom(const getNumActiveLeavesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.getNumActiveLeavesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNumActiveLeavesRequest::IsInitialized() const {
  return true;
}

void getNumActiveLeavesRequest::InternalSwap(getNumActiveLeavesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNumActiveLeavesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[11]);
}

// ===================================================================

class getNumActiveLeavesResponse::_Internal {
 public:
};

getNumActiveLeavesResponse::getNumActiveLeavesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.getNumActiveLeavesResponse)
}
getNumActiveLeavesResponse::getNumActiveLeavesResponse(const getNumActiveLeavesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getNumActiveLeavesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.getNumActiveLeavesResponse)
}

inline void getNumActiveLeavesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getNumActiveLeavesResponse::~getNumActiveLeavesResponse() {
  // @@protoc_insertion_point(destructor:grpcIRegression.getNumActiveLeavesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getNumActiveLeavesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getNumActiveLeavesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getNumActiveLeavesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.getNumActiveLeavesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNumActiveLeavesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getNumActiveLeavesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.getNumActiveLeavesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.getNumActiveLeavesResponse)
  return target;
}

size_t getNumActiveLeavesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.getNumActiveLeavesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getNumActiveLeavesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getNumActiveLeavesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getNumActiveLeavesResponse::GetClassData() const { return &_class_data_; }


void getNumActiveLeavesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getNumActiveLeavesResponse*>(&to_msg);
  auto& from = static_cast<const getNumActiveLeavesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.getNumActiveLeavesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getNumActiveLeavesResponse::CopyFrom(const getNumActiveLeavesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.getNumActiveLeavesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNumActiveLeavesResponse::IsInitialized() const {
  return true;
}

void getNumActiveLeavesResponse::InternalSwap(getNumActiveLeavesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNumActiveLeavesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[12]);
}

// ===================================================================

class getNumPassiveLeavesRequest::_Internal {
 public:
};

getNumPassiveLeavesRequest::getNumPassiveLeavesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.getNumPassiveLeavesRequest)
}
getNumPassiveLeavesRequest::getNumPassiveLeavesRequest(const getNumPassiveLeavesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getNumPassiveLeavesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.getNumPassiveLeavesRequest)
}

inline void getNumPassiveLeavesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getNumPassiveLeavesRequest::~getNumPassiveLeavesRequest() {
  // @@protoc_insertion_point(destructor:grpcIRegression.getNumPassiveLeavesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getNumPassiveLeavesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getNumPassiveLeavesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getNumPassiveLeavesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.getNumPassiveLeavesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNumPassiveLeavesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getNumPassiveLeavesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.getNumPassiveLeavesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.getNumPassiveLeavesRequest)
  return target;
}

size_t getNumPassiveLeavesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.getNumPassiveLeavesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getNumPassiveLeavesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getNumPassiveLeavesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getNumPassiveLeavesRequest::GetClassData() const { return &_class_data_; }


void getNumPassiveLeavesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getNumPassiveLeavesRequest*>(&to_msg);
  auto& from = static_cast<const getNumPassiveLeavesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.getNumPassiveLeavesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getNumPassiveLeavesRequest::CopyFrom(const getNumPassiveLeavesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.getNumPassiveLeavesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNumPassiveLeavesRequest::IsInitialized() const {
  return true;
}

void getNumPassiveLeavesRequest::InternalSwap(getNumPassiveLeavesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNumPassiveLeavesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[13]);
}

// ===================================================================

class getNumPassiveLeavesResponse::_Internal {
 public:
};

getNumPassiveLeavesResponse::getNumPassiveLeavesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIRegression.getNumPassiveLeavesResponse)
}
getNumPassiveLeavesResponse::getNumPassiveLeavesResponse(const getNumPassiveLeavesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getNumPassiveLeavesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIRegression.getNumPassiveLeavesResponse)
}

inline void getNumPassiveLeavesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getNumPassiveLeavesResponse::~getNumPassiveLeavesResponse() {
  // @@protoc_insertion_point(destructor:grpcIRegression.getNumPassiveLeavesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getNumPassiveLeavesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getNumPassiveLeavesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getNumPassiveLeavesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIRegression.getNumPassiveLeavesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNumPassiveLeavesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getNumPassiveLeavesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIRegression.getNumPassiveLeavesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIRegression.getNumPassiveLeavesResponse)
  return target;
}

size_t getNumPassiveLeavesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIRegression.getNumPassiveLeavesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getNumPassiveLeavesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getNumPassiveLeavesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getNumPassiveLeavesResponse::GetClassData() const { return &_class_data_; }


void getNumPassiveLeavesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getNumPassiveLeavesResponse*>(&to_msg);
  auto& from = static_cast<const getNumPassiveLeavesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIRegression.getNumPassiveLeavesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getNumPassiveLeavesResponse::CopyFrom(const getNumPassiveLeavesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIRegression.getNumPassiveLeavesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNumPassiveLeavesResponse::IsInitialized() const {
  return true;
}

void getNumPassiveLeavesResponse::InternalSwap(getNumPassiveLeavesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNumPassiveLeavesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIRegressionService_2eproto_getter, &descriptor_table_grpcIRegressionService_2eproto_once,
      file_level_metadata_grpcIRegressionService_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIRegression
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIRegression::setCameraParametersRequest*
Arena::CreateMaybeMessage< ::grpcIRegression::setCameraParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::setCameraParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::addRequest*
Arena::CreateMaybeMessage< ::grpcIRegression::addRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::addRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::addResponse*
Arena::CreateMaybeMessage< ::grpcIRegression::addResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::addResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::regressRequest*
Arena::CreateMaybeMessage< ::grpcIRegression::regressRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::regressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::regressResponse*
Arena::CreateMaybeMessage< ::grpcIRegression::regressResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::regressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::updateRequest*
Arena::CreateMaybeMessage< ::grpcIRegression::updateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::updateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::updateResponse*
Arena::CreateMaybeMessage< ::grpcIRegression::updateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::updateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::loadModelRequest*
Arena::CreateMaybeMessage< ::grpcIRegression::loadModelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::loadModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::loadModelResponse*
Arena::CreateMaybeMessage< ::grpcIRegression::loadModelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::loadModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::getTrainingStatusRequest*
Arena::CreateMaybeMessage< ::grpcIRegression::getTrainingStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::getTrainingStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::getTrainingStatusResponse*
Arena::CreateMaybeMessage< ::grpcIRegression::getTrainingStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::getTrainingStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::getNumActiveLeavesRequest*
Arena::CreateMaybeMessage< ::grpcIRegression::getNumActiveLeavesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::getNumActiveLeavesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::getNumActiveLeavesResponse*
Arena::CreateMaybeMessage< ::grpcIRegression::getNumActiveLeavesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::getNumActiveLeavesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::getNumPassiveLeavesRequest*
Arena::CreateMaybeMessage< ::grpcIRegression::getNumPassiveLeavesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::getNumPassiveLeavesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIRegression::getNumPassiveLeavesResponse*
Arena::CreateMaybeMessage< ::grpcIRegression::getNumPassiveLeavesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIRegression::getNumPassiveLeavesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
