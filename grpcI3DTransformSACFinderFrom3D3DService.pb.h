// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcI3DTransformSACFinderFrom3D3DService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcI3DTransformSACFinderFrom3D3DService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcI3DTransformSACFinderFrom3D3DService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcI3DTransformSACFinderFrom3D3DService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcI3DTransformSACFinderFrom3D3DService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcI3DTransformSACFinderFrom3D3DService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcI3DTransformSACFinderFrom3D3DService_2eproto_metadata_getter(int index);
namespace grpcI3DTransformSACFinderFrom3D3D {
class estimate_grpc0Request;
struct estimate_grpc0RequestDefaultTypeInternal;
extern estimate_grpc0RequestDefaultTypeInternal _estimate_grpc0Request_default_instance_;
class estimate_grpc0Response;
struct estimate_grpc0ResponseDefaultTypeInternal;
extern estimate_grpc0ResponseDefaultTypeInternal _estimate_grpc0Response_default_instance_;
class estimate_grpc1Request;
struct estimate_grpc1RequestDefaultTypeInternal;
extern estimate_grpc1RequestDefaultTypeInternal _estimate_grpc1Request_default_instance_;
class estimate_grpc1Response;
struct estimate_grpc1ResponseDefaultTypeInternal;
extern estimate_grpc1ResponseDefaultTypeInternal _estimate_grpc1Response_default_instance_;
}  // namespace grpcI3DTransformSACFinderFrom3D3D
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcI3DTransformSACFinderFrom3D3D::estimate_grpc0Request* Arena::CreateMaybeMessage<::grpcI3DTransformSACFinderFrom3D3D::estimate_grpc0Request>(Arena*);
template<> ::grpcI3DTransformSACFinderFrom3D3D::estimate_grpc0Response* Arena::CreateMaybeMessage<::grpcI3DTransformSACFinderFrom3D3D::estimate_grpc0Response>(Arena*);
template<> ::grpcI3DTransformSACFinderFrom3D3D::estimate_grpc1Request* Arena::CreateMaybeMessage<::grpcI3DTransformSACFinderFrom3D3D::estimate_grpc1Request>(Arena*);
template<> ::grpcI3DTransformSACFinderFrom3D3D::estimate_grpc1Response* Arena::CreateMaybeMessage<::grpcI3DTransformSACFinderFrom3D3D::estimate_grpc1Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcI3DTransformSACFinderFrom3D3D {

// ===================================================================

class estimate_grpc0Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request) */ {
 public:
  inline estimate_grpc0Request() : estimate_grpc0Request(nullptr) {}
  virtual ~estimate_grpc0Request();
  explicit constexpr estimate_grpc0Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimate_grpc0Request(const estimate_grpc0Request& from);
  estimate_grpc0Request(estimate_grpc0Request&& from) noexcept
    : estimate_grpc0Request() {
    *this = ::std::move(from);
  }

  inline estimate_grpc0Request& operator=(const estimate_grpc0Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimate_grpc0Request& operator=(estimate_grpc0Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const estimate_grpc0Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimate_grpc0Request* internal_default_instance() {
    return reinterpret_cast<const estimate_grpc0Request*>(
               &_estimate_grpc0Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(estimate_grpc0Request& a, estimate_grpc0Request& b) {
    a.Swap(&b);
  }
  inline void Swap(estimate_grpc0Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimate_grpc0Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimate_grpc0Request* New() const final {
    return CreateMaybeMessage<estimate_grpc0Request>(nullptr);
  }

  estimate_grpc0Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimate_grpc0Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const estimate_grpc0Request& from);
  void MergeFrom(const estimate_grpc0Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimate_grpc0Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request";
  }
  protected:
  explicit estimate_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DTransformSACFinderFrom3D3DService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstPoints3DFieldNumber = 2,
    kSecondPoints3DFieldNumber = 3,
    kPoseFieldNumber = 4,
    kInliersFieldNumber = 5,
    kGrpcServerCompressionFormatFieldNumber = 1,
  };
  // bytes firstPoints3D = 2;
  void clear_firstpoints3d();
  const std::string& firstpoints3d() const;
  void set_firstpoints3d(const std::string& value);
  void set_firstpoints3d(std::string&& value);
  void set_firstpoints3d(const char* value);
  void set_firstpoints3d(const void* value, size_t size);
  std::string* mutable_firstpoints3d();
  std::string* release_firstpoints3d();
  void set_allocated_firstpoints3d(std::string* firstpoints3d);
  private:
  const std::string& _internal_firstpoints3d() const;
  void _internal_set_firstpoints3d(const std::string& value);
  std::string* _internal_mutable_firstpoints3d();
  public:

  // bytes secondPoints3D = 3;
  void clear_secondpoints3d();
  const std::string& secondpoints3d() const;
  void set_secondpoints3d(const std::string& value);
  void set_secondpoints3d(std::string&& value);
  void set_secondpoints3d(const char* value);
  void set_secondpoints3d(const void* value, size_t size);
  std::string* mutable_secondpoints3d();
  std::string* release_secondpoints3d();
  void set_allocated_secondpoints3d(std::string* secondpoints3d);
  private:
  const std::string& _internal_secondpoints3d() const;
  void _internal_set_secondpoints3d(const std::string& value);
  std::string* _internal_mutable_secondpoints3d();
  public:

  // bytes pose = 4;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes inliers = 5;
  void clear_inliers();
  const std::string& inliers() const;
  void set_inliers(const std::string& value);
  void set_inliers(std::string&& value);
  void set_inliers(const char* value);
  void set_inliers(const void* value, size_t size);
  std::string* mutable_inliers();
  std::string* release_inliers();
  void set_allocated_inliers(std::string* inliers);
  private:
  const std::string& _internal_inliers() const;
  void _internal_set_inliers(const std::string& value);
  std::string* _internal_mutable_inliers();
  public:

  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat();
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstpoints3d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondpoints3d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inliers_;
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformSACFinderFrom3D3DService_2eproto;
};
// -------------------------------------------------------------------

class estimate_grpc0Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response) */ {
 public:
  inline estimate_grpc0Response() : estimate_grpc0Response(nullptr) {}
  virtual ~estimate_grpc0Response();
  explicit constexpr estimate_grpc0Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimate_grpc0Response(const estimate_grpc0Response& from);
  estimate_grpc0Response(estimate_grpc0Response&& from) noexcept
    : estimate_grpc0Response() {
    *this = ::std::move(from);
  }

  inline estimate_grpc0Response& operator=(const estimate_grpc0Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimate_grpc0Response& operator=(estimate_grpc0Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const estimate_grpc0Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimate_grpc0Response* internal_default_instance() {
    return reinterpret_cast<const estimate_grpc0Response*>(
               &_estimate_grpc0Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(estimate_grpc0Response& a, estimate_grpc0Response& b) {
    a.Swap(&b);
  }
  inline void Swap(estimate_grpc0Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimate_grpc0Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimate_grpc0Response* New() const final {
    return CreateMaybeMessage<estimate_grpc0Response>(nullptr);
  }

  estimate_grpc0Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimate_grpc0Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const estimate_grpc0Response& from);
  void MergeFrom(const estimate_grpc0Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimate_grpc0Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response";
  }
  protected:
  explicit estimate_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DTransformSACFinderFrom3D3DService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoseFieldNumber = 1,
    kInliersFieldNumber = 2,
    kXpcfGrpcReturnValueFieldNumber = 3,
  };
  // bytes pose = 1;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes inliers = 2;
  void clear_inliers();
  const std::string& inliers() const;
  void set_inliers(const std::string& value);
  void set_inliers(std::string&& value);
  void set_inliers(const char* value);
  void set_inliers(const void* value, size_t size);
  std::string* mutable_inliers();
  std::string* release_inliers();
  void set_allocated_inliers(std::string* inliers);
  private:
  const std::string& _internal_inliers() const;
  void _internal_set_inliers(const std::string& value);
  std::string* _internal_mutable_inliers();
  public:

  // sint32 xpcfGrpcReturnValue = 3;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inliers_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformSACFinderFrom3D3DService_2eproto;
};
// -------------------------------------------------------------------

class estimate_grpc1Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request) */ {
 public:
  inline estimate_grpc1Request() : estimate_grpc1Request(nullptr) {}
  virtual ~estimate_grpc1Request();
  explicit constexpr estimate_grpc1Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimate_grpc1Request(const estimate_grpc1Request& from);
  estimate_grpc1Request(estimate_grpc1Request&& from) noexcept
    : estimate_grpc1Request() {
    *this = ::std::move(from);
  }

  inline estimate_grpc1Request& operator=(const estimate_grpc1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimate_grpc1Request& operator=(estimate_grpc1Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const estimate_grpc1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimate_grpc1Request* internal_default_instance() {
    return reinterpret_cast<const estimate_grpc1Request*>(
               &_estimate_grpc1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(estimate_grpc1Request& a, estimate_grpc1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(estimate_grpc1Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimate_grpc1Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimate_grpc1Request* New() const final {
    return CreateMaybeMessage<estimate_grpc1Request>(nullptr);
  }

  estimate_grpc1Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimate_grpc1Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const estimate_grpc1Request& from);
  void MergeFrom(const estimate_grpc1Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimate_grpc1Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request";
  }
  protected:
  explicit estimate_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DTransformSACFinderFrom3D3DService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFirstKeyframeFieldNumber = 2,
    kSecondKeyframeFieldNumber = 3,
    kFirstCameraParametersFieldNumber = 4,
    kSecondCameraParametersFieldNumber = 5,
    kMatchesFieldNumber = 6,
    kFirstPoints3DFieldNumber = 7,
    kSecondPoints3DFieldNumber = 8,
    kPoseFieldNumber = 9,
    kInliersFieldNumber = 10,
    kGrpcServerCompressionFormatFieldNumber = 1,
  };
  // bytes firstKeyframe = 2;
  void clear_firstkeyframe();
  const std::string& firstkeyframe() const;
  void set_firstkeyframe(const std::string& value);
  void set_firstkeyframe(std::string&& value);
  void set_firstkeyframe(const char* value);
  void set_firstkeyframe(const void* value, size_t size);
  std::string* mutable_firstkeyframe();
  std::string* release_firstkeyframe();
  void set_allocated_firstkeyframe(std::string* firstkeyframe);
  private:
  const std::string& _internal_firstkeyframe() const;
  void _internal_set_firstkeyframe(const std::string& value);
  std::string* _internal_mutable_firstkeyframe();
  public:

  // bytes secondKeyframe = 3;
  void clear_secondkeyframe();
  const std::string& secondkeyframe() const;
  void set_secondkeyframe(const std::string& value);
  void set_secondkeyframe(std::string&& value);
  void set_secondkeyframe(const char* value);
  void set_secondkeyframe(const void* value, size_t size);
  std::string* mutable_secondkeyframe();
  std::string* release_secondkeyframe();
  void set_allocated_secondkeyframe(std::string* secondkeyframe);
  private:
  const std::string& _internal_secondkeyframe() const;
  void _internal_set_secondkeyframe(const std::string& value);
  std::string* _internal_mutable_secondkeyframe();
  public:

  // bytes firstCameraParameters = 4;
  void clear_firstcameraparameters();
  const std::string& firstcameraparameters() const;
  void set_firstcameraparameters(const std::string& value);
  void set_firstcameraparameters(std::string&& value);
  void set_firstcameraparameters(const char* value);
  void set_firstcameraparameters(const void* value, size_t size);
  std::string* mutable_firstcameraparameters();
  std::string* release_firstcameraparameters();
  void set_allocated_firstcameraparameters(std::string* firstcameraparameters);
  private:
  const std::string& _internal_firstcameraparameters() const;
  void _internal_set_firstcameraparameters(const std::string& value);
  std::string* _internal_mutable_firstcameraparameters();
  public:

  // bytes secondCameraParameters = 5;
  void clear_secondcameraparameters();
  const std::string& secondcameraparameters() const;
  void set_secondcameraparameters(const std::string& value);
  void set_secondcameraparameters(std::string&& value);
  void set_secondcameraparameters(const char* value);
  void set_secondcameraparameters(const void* value, size_t size);
  std::string* mutable_secondcameraparameters();
  std::string* release_secondcameraparameters();
  void set_allocated_secondcameraparameters(std::string* secondcameraparameters);
  private:
  const std::string& _internal_secondcameraparameters() const;
  void _internal_set_secondcameraparameters(const std::string& value);
  std::string* _internal_mutable_secondcameraparameters();
  public:

  // bytes matches = 6;
  void clear_matches();
  const std::string& matches() const;
  void set_matches(const std::string& value);
  void set_matches(std::string&& value);
  void set_matches(const char* value);
  void set_matches(const void* value, size_t size);
  std::string* mutable_matches();
  std::string* release_matches();
  void set_allocated_matches(std::string* matches);
  private:
  const std::string& _internal_matches() const;
  void _internal_set_matches(const std::string& value);
  std::string* _internal_mutable_matches();
  public:

  // bytes firstPoints3D = 7;
  void clear_firstpoints3d();
  const std::string& firstpoints3d() const;
  void set_firstpoints3d(const std::string& value);
  void set_firstpoints3d(std::string&& value);
  void set_firstpoints3d(const char* value);
  void set_firstpoints3d(const void* value, size_t size);
  std::string* mutable_firstpoints3d();
  std::string* release_firstpoints3d();
  void set_allocated_firstpoints3d(std::string* firstpoints3d);
  private:
  const std::string& _internal_firstpoints3d() const;
  void _internal_set_firstpoints3d(const std::string& value);
  std::string* _internal_mutable_firstpoints3d();
  public:

  // bytes secondPoints3D = 8;
  void clear_secondpoints3d();
  const std::string& secondpoints3d() const;
  void set_secondpoints3d(const std::string& value);
  void set_secondpoints3d(std::string&& value);
  void set_secondpoints3d(const char* value);
  void set_secondpoints3d(const void* value, size_t size);
  std::string* mutable_secondpoints3d();
  std::string* release_secondpoints3d();
  void set_allocated_secondpoints3d(std::string* secondpoints3d);
  private:
  const std::string& _internal_secondpoints3d() const;
  void _internal_set_secondpoints3d(const std::string& value);
  std::string* _internal_mutable_secondpoints3d();
  public:

  // bytes pose = 9;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes inliers = 10;
  void clear_inliers();
  const std::string& inliers() const;
  void set_inliers(const std::string& value);
  void set_inliers(std::string&& value);
  void set_inliers(const char* value);
  void set_inliers(const void* value, size_t size);
  std::string* mutable_inliers();
  std::string* release_inliers();
  void set_allocated_inliers(std::string* inliers);
  private:
  const std::string& _internal_inliers() const;
  void _internal_set_inliers(const std::string& value);
  std::string* _internal_mutable_inliers();
  public:

  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat();
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstkeyframe_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondkeyframe_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstcameraparameters_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondcameraparameters_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr matches_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr firstpoints3d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secondpoints3d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inliers_;
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformSACFinderFrom3D3DService_2eproto;
};
// -------------------------------------------------------------------

class estimate_grpc1Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response) */ {
 public:
  inline estimate_grpc1Response() : estimate_grpc1Response(nullptr) {}
  virtual ~estimate_grpc1Response();
  explicit constexpr estimate_grpc1Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimate_grpc1Response(const estimate_grpc1Response& from);
  estimate_grpc1Response(estimate_grpc1Response&& from) noexcept
    : estimate_grpc1Response() {
    *this = ::std::move(from);
  }

  inline estimate_grpc1Response& operator=(const estimate_grpc1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimate_grpc1Response& operator=(estimate_grpc1Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const estimate_grpc1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimate_grpc1Response* internal_default_instance() {
    return reinterpret_cast<const estimate_grpc1Response*>(
               &_estimate_grpc1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(estimate_grpc1Response& a, estimate_grpc1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(estimate_grpc1Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimate_grpc1Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimate_grpc1Response* New() const final {
    return CreateMaybeMessage<estimate_grpc1Response>(nullptr);
  }

  estimate_grpc1Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimate_grpc1Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const estimate_grpc1Response& from);
  void MergeFrom(const estimate_grpc1Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimate_grpc1Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response";
  }
  protected:
  explicit estimate_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DTransformSACFinderFrom3D3DService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoseFieldNumber = 1,
    kInliersFieldNumber = 2,
    kXpcfGrpcReturnValueFieldNumber = 3,
  };
  // bytes pose = 1;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes inliers = 2;
  void clear_inliers();
  const std::string& inliers() const;
  void set_inliers(const std::string& value);
  void set_inliers(std::string&& value);
  void set_inliers(const char* value);
  void set_inliers(const void* value, size_t size);
  std::string* mutable_inliers();
  std::string* release_inliers();
  void set_allocated_inliers(std::string* inliers);
  private:
  const std::string& _internal_inliers() const;
  void _internal_set_inliers(const std::string& value);
  std::string* _internal_mutable_inliers();
  public:

  // sint32 xpcfGrpcReturnValue = 3;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inliers_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformSACFinderFrom3D3DService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// estimate_grpc0Request

// int32 grpcServerCompressionFormat = 1;
inline void estimate_grpc0Request::clear_grpcservercompressionformat() {
  grpcservercompressionformat_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc0Request::_internal_grpcservercompressionformat() const {
  return grpcservercompressionformat_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc0Request::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void estimate_grpc0Request::_internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  grpcservercompressionformat_ = value;
}
inline void estimate_grpc0Request::set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.grpcServerCompressionFormat)
}

// bytes firstPoints3D = 2;
inline void estimate_grpc0Request::clear_firstpoints3d() {
  firstpoints3d_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Request::firstpoints3d() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.firstPoints3D)
  return _internal_firstpoints3d();
}
inline void estimate_grpc0Request::set_firstpoints3d(const std::string& value) {
  _internal_set_firstpoints3d(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.firstPoints3D)
}
inline std::string* estimate_grpc0Request::mutable_firstpoints3d() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.firstPoints3D)
  return _internal_mutable_firstpoints3d();
}
inline const std::string& estimate_grpc0Request::_internal_firstpoints3d() const {
  return firstpoints3d_.Get();
}
inline void estimate_grpc0Request::_internal_set_firstpoints3d(const std::string& value) {
  
  firstpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Request::set_firstpoints3d(std::string&& value) {
  
  firstpoints3d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.firstPoints3D)
}
inline void estimate_grpc0Request::set_firstpoints3d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.firstPoints3D)
}
inline void estimate_grpc0Request::set_firstpoints3d(const void* value,
    size_t size) {
  
  firstpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.firstPoints3D)
}
inline std::string* estimate_grpc0Request::_internal_mutable_firstpoints3d() {
  
  return firstpoints3d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Request::release_firstpoints3d() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.firstPoints3D)
  return firstpoints3d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Request::set_allocated_firstpoints3d(std::string* firstpoints3d) {
  if (firstpoints3d != nullptr) {
    
  } else {
    
  }
  firstpoints3d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstpoints3d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.firstPoints3D)
}

// bytes secondPoints3D = 3;
inline void estimate_grpc0Request::clear_secondpoints3d() {
  secondpoints3d_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Request::secondpoints3d() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.secondPoints3D)
  return _internal_secondpoints3d();
}
inline void estimate_grpc0Request::set_secondpoints3d(const std::string& value) {
  _internal_set_secondpoints3d(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.secondPoints3D)
}
inline std::string* estimate_grpc0Request::mutable_secondpoints3d() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.secondPoints3D)
  return _internal_mutable_secondpoints3d();
}
inline const std::string& estimate_grpc0Request::_internal_secondpoints3d() const {
  return secondpoints3d_.Get();
}
inline void estimate_grpc0Request::_internal_set_secondpoints3d(const std::string& value) {
  
  secondpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Request::set_secondpoints3d(std::string&& value) {
  
  secondpoints3d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.secondPoints3D)
}
inline void estimate_grpc0Request::set_secondpoints3d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.secondPoints3D)
}
inline void estimate_grpc0Request::set_secondpoints3d(const void* value,
    size_t size) {
  
  secondpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.secondPoints3D)
}
inline std::string* estimate_grpc0Request::_internal_mutable_secondpoints3d() {
  
  return secondpoints3d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Request::release_secondpoints3d() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.secondPoints3D)
  return secondpoints3d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Request::set_allocated_secondpoints3d(std::string* secondpoints3d) {
  if (secondpoints3d != nullptr) {
    
  } else {
    
  }
  secondpoints3d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondpoints3d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.secondPoints3D)
}

// bytes pose = 4;
inline void estimate_grpc0Request::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Request::pose() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.pose)
  return _internal_pose();
}
inline void estimate_grpc0Request::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.pose)
}
inline std::string* estimate_grpc0Request::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.pose)
  return _internal_mutable_pose();
}
inline const std::string& estimate_grpc0Request::_internal_pose() const {
  return pose_.Get();
}
inline void estimate_grpc0Request::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Request::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.pose)
}
inline void estimate_grpc0Request::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.pose)
}
inline void estimate_grpc0Request::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.pose)
}
inline std::string* estimate_grpc0Request::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Request::release_pose() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Request::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.pose)
}

// bytes inliers = 5;
inline void estimate_grpc0Request::clear_inliers() {
  inliers_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Request::inliers() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.inliers)
  return _internal_inliers();
}
inline void estimate_grpc0Request::set_inliers(const std::string& value) {
  _internal_set_inliers(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.inliers)
}
inline std::string* estimate_grpc0Request::mutable_inliers() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.inliers)
  return _internal_mutable_inliers();
}
inline const std::string& estimate_grpc0Request::_internal_inliers() const {
  return inliers_.Get();
}
inline void estimate_grpc0Request::_internal_set_inliers(const std::string& value) {
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Request::set_inliers(std::string&& value) {
  
  inliers_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.inliers)
}
inline void estimate_grpc0Request::set_inliers(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.inliers)
}
inline void estimate_grpc0Request::set_inliers(const void* value,
    size_t size) {
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.inliers)
}
inline std::string* estimate_grpc0Request::_internal_mutable_inliers() {
  
  return inliers_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Request::release_inliers() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.inliers)
  return inliers_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Request::set_allocated_inliers(std::string* inliers) {
  if (inliers != nullptr) {
    
  } else {
    
  }
  inliers_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inliers,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Request.inliers)
}

// -------------------------------------------------------------------

// estimate_grpc0Response

// bytes pose = 1;
inline void estimate_grpc0Response::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Response::pose() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.pose)
  return _internal_pose();
}
inline void estimate_grpc0Response::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.pose)
}
inline std::string* estimate_grpc0Response::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.pose)
  return _internal_mutable_pose();
}
inline const std::string& estimate_grpc0Response::_internal_pose() const {
  return pose_.Get();
}
inline void estimate_grpc0Response::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Response::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.pose)
}
inline void estimate_grpc0Response::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.pose)
}
inline void estimate_grpc0Response::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.pose)
}
inline std::string* estimate_grpc0Response::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Response::release_pose() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Response::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.pose)
}

// bytes inliers = 2;
inline void estimate_grpc0Response::clear_inliers() {
  inliers_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Response::inliers() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.inliers)
  return _internal_inliers();
}
inline void estimate_grpc0Response::set_inliers(const std::string& value) {
  _internal_set_inliers(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.inliers)
}
inline std::string* estimate_grpc0Response::mutable_inliers() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.inliers)
  return _internal_mutable_inliers();
}
inline const std::string& estimate_grpc0Response::_internal_inliers() const {
  return inliers_.Get();
}
inline void estimate_grpc0Response::_internal_set_inliers(const std::string& value) {
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Response::set_inliers(std::string&& value) {
  
  inliers_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.inliers)
}
inline void estimate_grpc0Response::set_inliers(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.inliers)
}
inline void estimate_grpc0Response::set_inliers(const void* value,
    size_t size) {
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.inliers)
}
inline std::string* estimate_grpc0Response::_internal_mutable_inliers() {
  
  return inliers_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Response::release_inliers() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.inliers)
  return inliers_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Response::set_allocated_inliers(std::string* inliers) {
  if (inliers != nullptr) {
    
  } else {
    
  }
  inliers_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inliers,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.inliers)
}

// sint32 xpcfGrpcReturnValue = 3;
inline void estimate_grpc0Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc0Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc0Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void estimate_grpc0Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void estimate_grpc0Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc0Response.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// estimate_grpc1Request

// int32 grpcServerCompressionFormat = 1;
inline void estimate_grpc1Request::clear_grpcservercompressionformat() {
  grpcservercompressionformat_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc1Request::_internal_grpcservercompressionformat() const {
  return grpcservercompressionformat_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc1Request::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void estimate_grpc1Request::_internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  grpcservercompressionformat_ = value;
}
inline void estimate_grpc1Request::set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.grpcServerCompressionFormat)
}

// bytes firstKeyframe = 2;
inline void estimate_grpc1Request::clear_firstkeyframe() {
  firstkeyframe_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::firstkeyframe() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstKeyframe)
  return _internal_firstkeyframe();
}
inline void estimate_grpc1Request::set_firstkeyframe(const std::string& value) {
  _internal_set_firstkeyframe(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstKeyframe)
}
inline std::string* estimate_grpc1Request::mutable_firstkeyframe() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstKeyframe)
  return _internal_mutable_firstkeyframe();
}
inline const std::string& estimate_grpc1Request::_internal_firstkeyframe() const {
  return firstkeyframe_.Get();
}
inline void estimate_grpc1Request::_internal_set_firstkeyframe(const std::string& value) {
  
  firstkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_firstkeyframe(std::string&& value) {
  
  firstkeyframe_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstKeyframe)
}
inline void estimate_grpc1Request::set_firstkeyframe(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstKeyframe)
}
inline void estimate_grpc1Request::set_firstkeyframe(const void* value,
    size_t size) {
  
  firstkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstKeyframe)
}
inline std::string* estimate_grpc1Request::_internal_mutable_firstkeyframe() {
  
  return firstkeyframe_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_firstkeyframe() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstKeyframe)
  return firstkeyframe_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_firstkeyframe(std::string* firstkeyframe) {
  if (firstkeyframe != nullptr) {
    
  } else {
    
  }
  firstkeyframe_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstkeyframe,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstKeyframe)
}

// bytes secondKeyframe = 3;
inline void estimate_grpc1Request::clear_secondkeyframe() {
  secondkeyframe_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::secondkeyframe() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondKeyframe)
  return _internal_secondkeyframe();
}
inline void estimate_grpc1Request::set_secondkeyframe(const std::string& value) {
  _internal_set_secondkeyframe(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondKeyframe)
}
inline std::string* estimate_grpc1Request::mutable_secondkeyframe() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondKeyframe)
  return _internal_mutable_secondkeyframe();
}
inline const std::string& estimate_grpc1Request::_internal_secondkeyframe() const {
  return secondkeyframe_.Get();
}
inline void estimate_grpc1Request::_internal_set_secondkeyframe(const std::string& value) {
  
  secondkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_secondkeyframe(std::string&& value) {
  
  secondkeyframe_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondKeyframe)
}
inline void estimate_grpc1Request::set_secondkeyframe(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondKeyframe)
}
inline void estimate_grpc1Request::set_secondkeyframe(const void* value,
    size_t size) {
  
  secondkeyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondKeyframe)
}
inline std::string* estimate_grpc1Request::_internal_mutable_secondkeyframe() {
  
  return secondkeyframe_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_secondkeyframe() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondKeyframe)
  return secondkeyframe_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_secondkeyframe(std::string* secondkeyframe) {
  if (secondkeyframe != nullptr) {
    
  } else {
    
  }
  secondkeyframe_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondkeyframe,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondKeyframe)
}

// bytes firstCameraParameters = 4;
inline void estimate_grpc1Request::clear_firstcameraparameters() {
  firstcameraparameters_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::firstcameraparameters() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstCameraParameters)
  return _internal_firstcameraparameters();
}
inline void estimate_grpc1Request::set_firstcameraparameters(const std::string& value) {
  _internal_set_firstcameraparameters(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstCameraParameters)
}
inline std::string* estimate_grpc1Request::mutable_firstcameraparameters() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstCameraParameters)
  return _internal_mutable_firstcameraparameters();
}
inline const std::string& estimate_grpc1Request::_internal_firstcameraparameters() const {
  return firstcameraparameters_.Get();
}
inline void estimate_grpc1Request::_internal_set_firstcameraparameters(const std::string& value) {
  
  firstcameraparameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_firstcameraparameters(std::string&& value) {
  
  firstcameraparameters_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstCameraParameters)
}
inline void estimate_grpc1Request::set_firstcameraparameters(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstcameraparameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstCameraParameters)
}
inline void estimate_grpc1Request::set_firstcameraparameters(const void* value,
    size_t size) {
  
  firstcameraparameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstCameraParameters)
}
inline std::string* estimate_grpc1Request::_internal_mutable_firstcameraparameters() {
  
  return firstcameraparameters_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_firstcameraparameters() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstCameraParameters)
  return firstcameraparameters_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_firstcameraparameters(std::string* firstcameraparameters) {
  if (firstcameraparameters != nullptr) {
    
  } else {
    
  }
  firstcameraparameters_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstcameraparameters,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstCameraParameters)
}

// bytes secondCameraParameters = 5;
inline void estimate_grpc1Request::clear_secondcameraparameters() {
  secondcameraparameters_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::secondcameraparameters() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondCameraParameters)
  return _internal_secondcameraparameters();
}
inline void estimate_grpc1Request::set_secondcameraparameters(const std::string& value) {
  _internal_set_secondcameraparameters(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondCameraParameters)
}
inline std::string* estimate_grpc1Request::mutable_secondcameraparameters() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondCameraParameters)
  return _internal_mutable_secondcameraparameters();
}
inline const std::string& estimate_grpc1Request::_internal_secondcameraparameters() const {
  return secondcameraparameters_.Get();
}
inline void estimate_grpc1Request::_internal_set_secondcameraparameters(const std::string& value) {
  
  secondcameraparameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_secondcameraparameters(std::string&& value) {
  
  secondcameraparameters_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondCameraParameters)
}
inline void estimate_grpc1Request::set_secondcameraparameters(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondcameraparameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondCameraParameters)
}
inline void estimate_grpc1Request::set_secondcameraparameters(const void* value,
    size_t size) {
  
  secondcameraparameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondCameraParameters)
}
inline std::string* estimate_grpc1Request::_internal_mutable_secondcameraparameters() {
  
  return secondcameraparameters_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_secondcameraparameters() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondCameraParameters)
  return secondcameraparameters_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_secondcameraparameters(std::string* secondcameraparameters) {
  if (secondcameraparameters != nullptr) {
    
  } else {
    
  }
  secondcameraparameters_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondcameraparameters,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondCameraParameters)
}

// bytes matches = 6;
inline void estimate_grpc1Request::clear_matches() {
  matches_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::matches() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.matches)
  return _internal_matches();
}
inline void estimate_grpc1Request::set_matches(const std::string& value) {
  _internal_set_matches(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.matches)
}
inline std::string* estimate_grpc1Request::mutable_matches() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.matches)
  return _internal_mutable_matches();
}
inline const std::string& estimate_grpc1Request::_internal_matches() const {
  return matches_.Get();
}
inline void estimate_grpc1Request::_internal_set_matches(const std::string& value) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_matches(std::string&& value) {
  
  matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.matches)
}
inline void estimate_grpc1Request::set_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.matches)
}
inline void estimate_grpc1Request::set_matches(const void* value,
    size_t size) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.matches)
}
inline std::string* estimate_grpc1Request::_internal_mutable_matches() {
  
  return matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_matches() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.matches)
  return matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_matches(std::string* matches) {
  if (matches != nullptr) {
    
  } else {
    
  }
  matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.matches)
}

// bytes firstPoints3D = 7;
inline void estimate_grpc1Request::clear_firstpoints3d() {
  firstpoints3d_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::firstpoints3d() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstPoints3D)
  return _internal_firstpoints3d();
}
inline void estimate_grpc1Request::set_firstpoints3d(const std::string& value) {
  _internal_set_firstpoints3d(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstPoints3D)
}
inline std::string* estimate_grpc1Request::mutable_firstpoints3d() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstPoints3D)
  return _internal_mutable_firstpoints3d();
}
inline const std::string& estimate_grpc1Request::_internal_firstpoints3d() const {
  return firstpoints3d_.Get();
}
inline void estimate_grpc1Request::_internal_set_firstpoints3d(const std::string& value) {
  
  firstpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_firstpoints3d(std::string&& value) {
  
  firstpoints3d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstPoints3D)
}
inline void estimate_grpc1Request::set_firstpoints3d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  firstpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstPoints3D)
}
inline void estimate_grpc1Request::set_firstpoints3d(const void* value,
    size_t size) {
  
  firstpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstPoints3D)
}
inline std::string* estimate_grpc1Request::_internal_mutable_firstpoints3d() {
  
  return firstpoints3d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_firstpoints3d() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstPoints3D)
  return firstpoints3d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_firstpoints3d(std::string* firstpoints3d) {
  if (firstpoints3d != nullptr) {
    
  } else {
    
  }
  firstpoints3d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), firstpoints3d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.firstPoints3D)
}

// bytes secondPoints3D = 8;
inline void estimate_grpc1Request::clear_secondpoints3d() {
  secondpoints3d_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::secondpoints3d() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondPoints3D)
  return _internal_secondpoints3d();
}
inline void estimate_grpc1Request::set_secondpoints3d(const std::string& value) {
  _internal_set_secondpoints3d(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondPoints3D)
}
inline std::string* estimate_grpc1Request::mutable_secondpoints3d() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondPoints3D)
  return _internal_mutable_secondpoints3d();
}
inline const std::string& estimate_grpc1Request::_internal_secondpoints3d() const {
  return secondpoints3d_.Get();
}
inline void estimate_grpc1Request::_internal_set_secondpoints3d(const std::string& value) {
  
  secondpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_secondpoints3d(std::string&& value) {
  
  secondpoints3d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondPoints3D)
}
inline void estimate_grpc1Request::set_secondpoints3d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secondpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondPoints3D)
}
inline void estimate_grpc1Request::set_secondpoints3d(const void* value,
    size_t size) {
  
  secondpoints3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondPoints3D)
}
inline std::string* estimate_grpc1Request::_internal_mutable_secondpoints3d() {
  
  return secondpoints3d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_secondpoints3d() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondPoints3D)
  return secondpoints3d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_secondpoints3d(std::string* secondpoints3d) {
  if (secondpoints3d != nullptr) {
    
  } else {
    
  }
  secondpoints3d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secondpoints3d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.secondPoints3D)
}

// bytes pose = 9;
inline void estimate_grpc1Request::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::pose() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.pose)
  return _internal_pose();
}
inline void estimate_grpc1Request::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.pose)
}
inline std::string* estimate_grpc1Request::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.pose)
  return _internal_mutable_pose();
}
inline const std::string& estimate_grpc1Request::_internal_pose() const {
  return pose_.Get();
}
inline void estimate_grpc1Request::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.pose)
}
inline void estimate_grpc1Request::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.pose)
}
inline void estimate_grpc1Request::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.pose)
}
inline std::string* estimate_grpc1Request::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_pose() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.pose)
}

// bytes inliers = 10;
inline void estimate_grpc1Request::clear_inliers() {
  inliers_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::inliers() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.inliers)
  return _internal_inliers();
}
inline void estimate_grpc1Request::set_inliers(const std::string& value) {
  _internal_set_inliers(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.inliers)
}
inline std::string* estimate_grpc1Request::mutable_inliers() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.inliers)
  return _internal_mutable_inliers();
}
inline const std::string& estimate_grpc1Request::_internal_inliers() const {
  return inliers_.Get();
}
inline void estimate_grpc1Request::_internal_set_inliers(const std::string& value) {
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_inliers(std::string&& value) {
  
  inliers_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.inliers)
}
inline void estimate_grpc1Request::set_inliers(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.inliers)
}
inline void estimate_grpc1Request::set_inliers(const void* value,
    size_t size) {
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.inliers)
}
inline std::string* estimate_grpc1Request::_internal_mutable_inliers() {
  
  return inliers_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_inliers() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.inliers)
  return inliers_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_inliers(std::string* inliers) {
  if (inliers != nullptr) {
    
  } else {
    
  }
  inliers_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inliers,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Request.inliers)
}

// -------------------------------------------------------------------

// estimate_grpc1Response

// bytes pose = 1;
inline void estimate_grpc1Response::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Response::pose() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.pose)
  return _internal_pose();
}
inline void estimate_grpc1Response::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.pose)
}
inline std::string* estimate_grpc1Response::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.pose)
  return _internal_mutable_pose();
}
inline const std::string& estimate_grpc1Response::_internal_pose() const {
  return pose_.Get();
}
inline void estimate_grpc1Response::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Response::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.pose)
}
inline void estimate_grpc1Response::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.pose)
}
inline void estimate_grpc1Response::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.pose)
}
inline std::string* estimate_grpc1Response::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Response::release_pose() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Response::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.pose)
}

// bytes inliers = 2;
inline void estimate_grpc1Response::clear_inliers() {
  inliers_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Response::inliers() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.inliers)
  return _internal_inliers();
}
inline void estimate_grpc1Response::set_inliers(const std::string& value) {
  _internal_set_inliers(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.inliers)
}
inline std::string* estimate_grpc1Response::mutable_inliers() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.inliers)
  return _internal_mutable_inliers();
}
inline const std::string& estimate_grpc1Response::_internal_inliers() const {
  return inliers_.Get();
}
inline void estimate_grpc1Response::_internal_set_inliers(const std::string& value) {
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Response::set_inliers(std::string&& value) {
  
  inliers_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.inliers)
}
inline void estimate_grpc1Response::set_inliers(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.inliers)
}
inline void estimate_grpc1Response::set_inliers(const void* value,
    size_t size) {
  
  inliers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.inliers)
}
inline std::string* estimate_grpc1Response::_internal_mutable_inliers() {
  
  return inliers_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Response::release_inliers() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.inliers)
  return inliers_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Response::set_allocated_inliers(std::string* inliers) {
  if (inliers != nullptr) {
    
  } else {
    
  }
  inliers_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inliers,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.inliers)
}

// sint32 xpcfGrpcReturnValue = 3;
inline void estimate_grpc1Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc1Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc1Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void estimate_grpc1Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void estimate_grpc1Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformSACFinderFrom3D3D.estimate_grpc1Response.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcI3DTransformSACFinderFrom3D3D

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcI3DTransformSACFinderFrom3D3DService_2eproto
