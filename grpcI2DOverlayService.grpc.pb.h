// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: grpcI2DOverlayService.proto
#ifndef GRPC_grpcI2DOverlayService_2eproto__INCLUDED
#define GRPC_grpcI2DOverlayService_2eproto__INCLUDED

#include "grpcI2DOverlayService.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpcI2DOverlay {

class grpcI2DOverlayService final {
 public:
  static constexpr char const* service_full_name() {
    return "grpcI2DOverlay.grpcI2DOverlayService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status drawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncdrawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdrawCircleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdrawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdrawCircleRaw(context, request, cq));
    }
    virtual ::grpc::Status drawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncdrawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdrawCircles_grpc0Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdrawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdrawCircles_grpc0Raw(context, request, cq));
    }
    virtual ::grpc::Status drawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncdrawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdrawCircles_grpc1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdrawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdrawCircles_grpc1Raw(context, request, cq));
    }
    virtual ::grpc::Status drawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncdrawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdrawContourRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdrawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdrawContourRaw(context, request, cq));
    }
    virtual ::grpc::Status drawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncdrawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdrawContoursRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdrawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdrawContoursRaw(context, request, cq));
    }
    virtual ::grpc::Status drawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncdrawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncdrawSBPatternRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncdrawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncdrawSBPatternRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void drawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void drawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void drawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void drawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void drawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void drawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void drawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void drawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void drawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void drawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void drawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void drawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdrawCircleRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdrawCircleRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdrawCircles_grpc0Raw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdrawCircles_grpc0Raw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdrawCircles_grpc1Raw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdrawCircles_grpc1Raw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdrawContourRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdrawContourRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdrawContoursRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdrawContoursRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncdrawSBPatternRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncdrawSBPatternRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status drawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncdrawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdrawCircleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdrawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdrawCircleRaw(context, request, cq));
    }
    ::grpc::Status drawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncdrawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdrawCircles_grpc0Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdrawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdrawCircles_grpc0Raw(context, request, cq));
    }
    ::grpc::Status drawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncdrawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdrawCircles_grpc1Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdrawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdrawCircles_grpc1Raw(context, request, cq));
    }
    ::grpc::Status drawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncdrawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdrawContourRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdrawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdrawContourRaw(context, request, cq));
    }
    ::grpc::Status drawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncdrawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdrawContoursRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdrawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdrawContoursRaw(context, request, cq));
    }
    ::grpc::Status drawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncdrawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncdrawSBPatternRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncdrawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncdrawSBPatternRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void drawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void drawCircle(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void drawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void drawCircles_grpc0(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void drawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void drawCircles_grpc1(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void drawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void drawContour(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void drawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void drawContours(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void drawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void drawSBPattern(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdrawCircleRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdrawCircleRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircleRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdrawCircles_grpc0Raw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdrawCircles_grpc0Raw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdrawCircles_grpc1Raw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdrawCircles_grpc1Raw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdrawContourRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdrawContourRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContourRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdrawContoursRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdrawContoursRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawContoursRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncdrawSBPatternRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncdrawSBPatternRaw(::grpc::ClientContext* context, const ::grpcI2DOverlay::drawSBPatternRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_drawCircle_;
    const ::grpc::internal::RpcMethod rpcmethod_drawCircles_grpc0_;
    const ::grpc::internal::RpcMethod rpcmethod_drawCircles_grpc1_;
    const ::grpc::internal::RpcMethod rpcmethod_drawContour_;
    const ::grpc::internal::RpcMethod rpcmethod_drawContours_;
    const ::grpc::internal::RpcMethod rpcmethod_drawSBPattern_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status drawCircle(::grpc::ServerContext* context, const ::grpcI2DOverlay::drawCircleRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status drawCircles_grpc0(::grpc::ServerContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status drawCircles_grpc1(::grpc::ServerContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status drawContour(::grpc::ServerContext* context, const ::grpcI2DOverlay::drawContourRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status drawContours(::grpc::ServerContext* context, const ::grpcI2DOverlay::drawContoursRequest* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status drawSBPattern(::grpc::ServerContext* context, const ::grpcI2DOverlay::drawSBPatternRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_drawCircle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_drawCircle() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_drawCircle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircle(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawCircle(::grpc::ServerContext* context, ::grpcI2DOverlay::drawCircleRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_drawCircles_grpc0 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_drawCircles_grpc0() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_drawCircles_grpc0() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc0(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc0Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawCircles_grpc0(::grpc::ServerContext* context, ::grpcI2DOverlay::drawCircles_grpc0Request* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_drawCircles_grpc1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_drawCircles_grpc1() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_drawCircles_grpc1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc1(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawCircles_grpc1(::grpc::ServerContext* context, ::grpcI2DOverlay::drawCircles_grpc1Request* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_drawContour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_drawContour() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_drawContour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContour(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContourRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawContour(::grpc::ServerContext* context, ::grpcI2DOverlay::drawContourRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_drawContours : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_drawContours() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_drawContours() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContours(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContoursRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawContours(::grpc::ServerContext* context, ::grpcI2DOverlay::drawContoursRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_drawSBPattern : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_drawSBPattern() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_drawSBPattern() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawSBPattern(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawSBPatternRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawSBPattern(::grpc::ServerContext* context, ::grpcI2DOverlay::drawSBPatternRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_drawCircle<WithAsyncMethod_drawCircles_grpc0<WithAsyncMethod_drawCircles_grpc1<WithAsyncMethod_drawContour<WithAsyncMethod_drawContours<WithAsyncMethod_drawSBPattern<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_drawCircle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_drawCircle() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawCircleRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpcI2DOverlay::drawCircleRequest* request, ::google::protobuf::Empty* response) { return this->drawCircle(context, request, response); }));}
    void SetMessageAllocatorFor_drawCircle(
        ::grpc::MessageAllocator< ::grpcI2DOverlay::drawCircleRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawCircleRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_drawCircle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircle(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawCircle(
      ::grpc::CallbackServerContext* /*context*/, const ::grpcI2DOverlay::drawCircleRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_drawCircles_grpc0 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_drawCircles_grpc0() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawCircles_grpc0Request, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpcI2DOverlay::drawCircles_grpc0Request* request, ::google::protobuf::Empty* response) { return this->drawCircles_grpc0(context, request, response); }));}
    void SetMessageAllocatorFor_drawCircles_grpc0(
        ::grpc::MessageAllocator< ::grpcI2DOverlay::drawCircles_grpc0Request, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawCircles_grpc0Request, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_drawCircles_grpc0() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc0(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc0Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawCircles_grpc0(
      ::grpc::CallbackServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc0Request* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_drawCircles_grpc1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_drawCircles_grpc1() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawCircles_grpc1Request, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpcI2DOverlay::drawCircles_grpc1Request* request, ::google::protobuf::Empty* response) { return this->drawCircles_grpc1(context, request, response); }));}
    void SetMessageAllocatorFor_drawCircles_grpc1(
        ::grpc::MessageAllocator< ::grpcI2DOverlay::drawCircles_grpc1Request, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawCircles_grpc1Request, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_drawCircles_grpc1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc1(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawCircles_grpc1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc1Request* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_drawContour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_drawContour() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawContourRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpcI2DOverlay::drawContourRequest* request, ::google::protobuf::Empty* response) { return this->drawContour(context, request, response); }));}
    void SetMessageAllocatorFor_drawContour(
        ::grpc::MessageAllocator< ::grpcI2DOverlay::drawContourRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawContourRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_drawContour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContour(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContourRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawContour(
      ::grpc::CallbackServerContext* /*context*/, const ::grpcI2DOverlay::drawContourRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_drawContours : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_drawContours() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawContoursRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpcI2DOverlay::drawContoursRequest* request, ::google::protobuf::Empty* response) { return this->drawContours(context, request, response); }));}
    void SetMessageAllocatorFor_drawContours(
        ::grpc::MessageAllocator< ::grpcI2DOverlay::drawContoursRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawContoursRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_drawContours() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContours(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContoursRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawContours(
      ::grpc::CallbackServerContext* /*context*/, const ::grpcI2DOverlay::drawContoursRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_drawSBPattern : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_drawSBPattern() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawSBPatternRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpcI2DOverlay::drawSBPatternRequest* request, ::google::protobuf::Empty* response) { return this->drawSBPattern(context, request, response); }));}
    void SetMessageAllocatorFor_drawSBPattern(
        ::grpc::MessageAllocator< ::grpcI2DOverlay::drawSBPatternRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::grpcI2DOverlay::drawSBPatternRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_drawSBPattern() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawSBPattern(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawSBPatternRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawSBPattern(
      ::grpc::CallbackServerContext* /*context*/, const ::grpcI2DOverlay::drawSBPatternRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_drawCircle<WithCallbackMethod_drawCircles_grpc0<WithCallbackMethod_drawCircles_grpc1<WithCallbackMethod_drawContour<WithCallbackMethod_drawContours<WithCallbackMethod_drawSBPattern<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_drawCircle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_drawCircle() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_drawCircle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircle(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_drawCircles_grpc0 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_drawCircles_grpc0() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_drawCircles_grpc0() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc0(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc0Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_drawCircles_grpc1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_drawCircles_grpc1() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_drawCircles_grpc1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc1(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_drawContour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_drawContour() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_drawContour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContour(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContourRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_drawContours : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_drawContours() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_drawContours() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContours(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContoursRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_drawSBPattern : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_drawSBPattern() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_drawSBPattern() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawSBPattern(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawSBPatternRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_drawCircle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_drawCircle() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_drawCircle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircle(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawCircle(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_drawCircles_grpc0 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_drawCircles_grpc0() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_drawCircles_grpc0() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc0(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc0Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawCircles_grpc0(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_drawCircles_grpc1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_drawCircles_grpc1() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_drawCircles_grpc1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc1(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawCircles_grpc1(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_drawContour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_drawContour() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_drawContour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContour(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContourRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawContour(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_drawContours : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_drawContours() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_drawContours() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContours(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContoursRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawContours(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_drawSBPattern : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_drawSBPattern() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_drawSBPattern() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawSBPattern(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawSBPatternRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdrawSBPattern(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_drawCircle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_drawCircle() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->drawCircle(context, request, response); }));
    }
    ~WithRawCallbackMethod_drawCircle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircle(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawCircle(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_drawCircles_grpc0 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_drawCircles_grpc0() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->drawCircles_grpc0(context, request, response); }));
    }
    ~WithRawCallbackMethod_drawCircles_grpc0() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc0(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc0Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawCircles_grpc0(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_drawCircles_grpc1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_drawCircles_grpc1() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->drawCircles_grpc1(context, request, response); }));
    }
    ~WithRawCallbackMethod_drawCircles_grpc1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawCircles_grpc1(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawCircles_grpc1(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_drawContour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_drawContour() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->drawContour(context, request, response); }));
    }
    ~WithRawCallbackMethod_drawContour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContour(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContourRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawContour(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_drawContours : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_drawContours() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->drawContours(context, request, response); }));
    }
    ~WithRawCallbackMethod_drawContours() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawContours(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContoursRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawContours(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_drawSBPattern : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_drawSBPattern() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->drawSBPattern(context, request, response); }));
    }
    ~WithRawCallbackMethod_drawSBPattern() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status drawSBPattern(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawSBPatternRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* drawSBPattern(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_drawCircle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_drawCircle() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::grpcI2DOverlay::drawCircleRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::grpcI2DOverlay::drawCircleRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreameddrawCircle(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_drawCircle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status drawCircle(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircleRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddrawCircle(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::grpcI2DOverlay::drawCircleRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_drawCircles_grpc0 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_drawCircles_grpc0() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::grpcI2DOverlay::drawCircles_grpc0Request, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::grpcI2DOverlay::drawCircles_grpc0Request, ::google::protobuf::Empty>* streamer) {
                       return this->StreameddrawCircles_grpc0(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_drawCircles_grpc0() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status drawCircles_grpc0(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc0Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddrawCircles_grpc0(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::grpcI2DOverlay::drawCircles_grpc0Request,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_drawCircles_grpc1 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_drawCircles_grpc1() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::grpcI2DOverlay::drawCircles_grpc1Request, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::grpcI2DOverlay::drawCircles_grpc1Request, ::google::protobuf::Empty>* streamer) {
                       return this->StreameddrawCircles_grpc1(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_drawCircles_grpc1() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status drawCircles_grpc1(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawCircles_grpc1Request* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddrawCircles_grpc1(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::grpcI2DOverlay::drawCircles_grpc1Request,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_drawContour : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_drawContour() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::grpcI2DOverlay::drawContourRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::grpcI2DOverlay::drawContourRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreameddrawContour(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_drawContour() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status drawContour(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContourRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddrawContour(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::grpcI2DOverlay::drawContourRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_drawContours : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_drawContours() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::grpcI2DOverlay::drawContoursRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::grpcI2DOverlay::drawContoursRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreameddrawContours(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_drawContours() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status drawContours(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawContoursRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddrawContours(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::grpcI2DOverlay::drawContoursRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_drawSBPattern : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_drawSBPattern() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::grpcI2DOverlay::drawSBPatternRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::grpcI2DOverlay::drawSBPatternRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreameddrawSBPattern(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_drawSBPattern() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status drawSBPattern(::grpc::ServerContext* /*context*/, const ::grpcI2DOverlay::drawSBPatternRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddrawSBPattern(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::grpcI2DOverlay::drawSBPatternRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_drawCircle<WithStreamedUnaryMethod_drawCircles_grpc0<WithStreamedUnaryMethod_drawCircles_grpc1<WithStreamedUnaryMethod_drawContour<WithStreamedUnaryMethod_drawContours<WithStreamedUnaryMethod_drawSBPattern<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_drawCircle<WithStreamedUnaryMethod_drawCircles_grpc0<WithStreamedUnaryMethod_drawCircles_grpc1<WithStreamedUnaryMethod_drawContour<WithStreamedUnaryMethod_drawContours<WithStreamedUnaryMethod_drawSBPattern<Service > > > > > > StreamedService;
};

}  // namespace grpcI2DOverlay


#endif  // GRPC_grpcI2DOverlayService_2eproto__INCLUDED
