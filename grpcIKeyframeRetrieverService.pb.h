// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIKeyframeRetrieverService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcIKeyframeRetrieverService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcIKeyframeRetrieverService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcIKeyframeRetrieverService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcIKeyframeRetrieverService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIKeyframeRetrieverService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(int index);
namespace grpcIKeyframeRetriever {
class addKeyframeRequest;
struct addKeyframeRequestDefaultTypeInternal;
extern addKeyframeRequestDefaultTypeInternal _addKeyframeRequest_default_instance_;
class addKeyframeResponse;
struct addKeyframeResponseDefaultTypeInternal;
extern addKeyframeResponseDefaultTypeInternal _addKeyframeResponse_default_instance_;
class loadFromFileRequest;
struct loadFromFileRequestDefaultTypeInternal;
extern loadFromFileRequestDefaultTypeInternal _loadFromFileRequest_default_instance_;
class loadFromFileResponse;
struct loadFromFileResponseDefaultTypeInternal;
extern loadFromFileResponseDefaultTypeInternal _loadFromFileResponse_default_instance_;
class match_grpc0Request;
struct match_grpc0RequestDefaultTypeInternal;
extern match_grpc0RequestDefaultTypeInternal _match_grpc0Request_default_instance_;
class match_grpc0Response;
struct match_grpc0ResponseDefaultTypeInternal;
extern match_grpc0ResponseDefaultTypeInternal _match_grpc0Response_default_instance_;
class match_grpc1Request;
struct match_grpc1RequestDefaultTypeInternal;
extern match_grpc1RequestDefaultTypeInternal _match_grpc1Request_default_instance_;
class match_grpc1Response;
struct match_grpc1ResponseDefaultTypeInternal;
extern match_grpc1ResponseDefaultTypeInternal _match_grpc1Response_default_instance_;
class retrieve_grpc0Request;
struct retrieve_grpc0RequestDefaultTypeInternal;
extern retrieve_grpc0RequestDefaultTypeInternal _retrieve_grpc0Request_default_instance_;
class retrieve_grpc0Response;
struct retrieve_grpc0ResponseDefaultTypeInternal;
extern retrieve_grpc0ResponseDefaultTypeInternal _retrieve_grpc0Response_default_instance_;
class retrieve_grpc1Request;
struct retrieve_grpc1RequestDefaultTypeInternal;
extern retrieve_grpc1RequestDefaultTypeInternal _retrieve_grpc1Request_default_instance_;
class retrieve_grpc1Response;
struct retrieve_grpc1ResponseDefaultTypeInternal;
extern retrieve_grpc1ResponseDefaultTypeInternal _retrieve_grpc1Response_default_instance_;
class saveToFileRequest;
struct saveToFileRequestDefaultTypeInternal;
extern saveToFileRequestDefaultTypeInternal _saveToFileRequest_default_instance_;
class saveToFileResponse;
struct saveToFileResponseDefaultTypeInternal;
extern saveToFileResponseDefaultTypeInternal _saveToFileResponse_default_instance_;
class suppressKeyframeRequest;
struct suppressKeyframeRequestDefaultTypeInternal;
extern suppressKeyframeRequestDefaultTypeInternal _suppressKeyframeRequest_default_instance_;
class suppressKeyframeResponse;
struct suppressKeyframeResponseDefaultTypeInternal;
extern suppressKeyframeResponseDefaultTypeInternal _suppressKeyframeResponse_default_instance_;
}  // namespace grpcIKeyframeRetriever
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcIKeyframeRetriever::addKeyframeRequest* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::addKeyframeRequest>(Arena*);
template<> ::grpcIKeyframeRetriever::addKeyframeResponse* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::addKeyframeResponse>(Arena*);
template<> ::grpcIKeyframeRetriever::loadFromFileRequest* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::loadFromFileRequest>(Arena*);
template<> ::grpcIKeyframeRetriever::loadFromFileResponse* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::loadFromFileResponse>(Arena*);
template<> ::grpcIKeyframeRetriever::match_grpc0Request* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::match_grpc0Request>(Arena*);
template<> ::grpcIKeyframeRetriever::match_grpc0Response* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::match_grpc0Response>(Arena*);
template<> ::grpcIKeyframeRetriever::match_grpc1Request* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::match_grpc1Request>(Arena*);
template<> ::grpcIKeyframeRetriever::match_grpc1Response* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::match_grpc1Response>(Arena*);
template<> ::grpcIKeyframeRetriever::retrieve_grpc0Request* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::retrieve_grpc0Request>(Arena*);
template<> ::grpcIKeyframeRetriever::retrieve_grpc0Response* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::retrieve_grpc0Response>(Arena*);
template<> ::grpcIKeyframeRetriever::retrieve_grpc1Request* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::retrieve_grpc1Request>(Arena*);
template<> ::grpcIKeyframeRetriever::retrieve_grpc1Response* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::retrieve_grpc1Response>(Arena*);
template<> ::grpcIKeyframeRetriever::saveToFileRequest* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::saveToFileRequest>(Arena*);
template<> ::grpcIKeyframeRetriever::saveToFileResponse* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::saveToFileResponse>(Arena*);
template<> ::grpcIKeyframeRetriever::suppressKeyframeRequest* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::suppressKeyframeRequest>(Arena*);
template<> ::grpcIKeyframeRetriever::suppressKeyframeResponse* Arena::CreateMaybeMessage<::grpcIKeyframeRetriever::suppressKeyframeResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcIKeyframeRetriever {

// ===================================================================

class addKeyframeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.addKeyframeRequest) */ {
 public:
  inline addKeyframeRequest() : addKeyframeRequest(nullptr) {}
  virtual ~addKeyframeRequest();
  explicit constexpr addKeyframeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  addKeyframeRequest(const addKeyframeRequest& from);
  addKeyframeRequest(addKeyframeRequest&& from) noexcept
    : addKeyframeRequest() {
    *this = ::std::move(from);
  }

  inline addKeyframeRequest& operator=(const addKeyframeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline addKeyframeRequest& operator=(addKeyframeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const addKeyframeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const addKeyframeRequest* internal_default_instance() {
    return reinterpret_cast<const addKeyframeRequest*>(
               &_addKeyframeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(addKeyframeRequest& a, addKeyframeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(addKeyframeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(addKeyframeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline addKeyframeRequest* New() const final {
    return CreateMaybeMessage<addKeyframeRequest>(nullptr);
  }

  addKeyframeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<addKeyframeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const addKeyframeRequest& from);
  void MergeFrom(const addKeyframeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(addKeyframeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.addKeyframeRequest";
  }
  protected:
  explicit addKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyframeFieldNumber = 1,
  };
  // bytes keyframe = 1;
  void clear_keyframe();
  const std::string& keyframe() const;
  void set_keyframe(const std::string& value);
  void set_keyframe(std::string&& value);
  void set_keyframe(const char* value);
  void set_keyframe(const void* value, size_t size);
  std::string* mutable_keyframe();
  std::string* release_keyframe();
  void set_allocated_keyframe(std::string* keyframe);
  private:
  const std::string& _internal_keyframe() const;
  void _internal_set_keyframe(const std::string& value);
  std::string* _internal_mutable_keyframe();
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.addKeyframeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keyframe_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class addKeyframeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.addKeyframeResponse) */ {
 public:
  inline addKeyframeResponse() : addKeyframeResponse(nullptr) {}
  virtual ~addKeyframeResponse();
  explicit constexpr addKeyframeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  addKeyframeResponse(const addKeyframeResponse& from);
  addKeyframeResponse(addKeyframeResponse&& from) noexcept
    : addKeyframeResponse() {
    *this = ::std::move(from);
  }

  inline addKeyframeResponse& operator=(const addKeyframeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline addKeyframeResponse& operator=(addKeyframeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const addKeyframeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const addKeyframeResponse* internal_default_instance() {
    return reinterpret_cast<const addKeyframeResponse*>(
               &_addKeyframeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(addKeyframeResponse& a, addKeyframeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(addKeyframeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(addKeyframeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline addKeyframeResponse* New() const final {
    return CreateMaybeMessage<addKeyframeResponse>(nullptr);
  }

  addKeyframeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<addKeyframeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const addKeyframeResponse& from);
  void MergeFrom(const addKeyframeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(addKeyframeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.addKeyframeResponse";
  }
  protected:
  explicit addKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.addKeyframeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class suppressKeyframeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.suppressKeyframeRequest) */ {
 public:
  inline suppressKeyframeRequest() : suppressKeyframeRequest(nullptr) {}
  virtual ~suppressKeyframeRequest();
  explicit constexpr suppressKeyframeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  suppressKeyframeRequest(const suppressKeyframeRequest& from);
  suppressKeyframeRequest(suppressKeyframeRequest&& from) noexcept
    : suppressKeyframeRequest() {
    *this = ::std::move(from);
  }

  inline suppressKeyframeRequest& operator=(const suppressKeyframeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline suppressKeyframeRequest& operator=(suppressKeyframeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const suppressKeyframeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const suppressKeyframeRequest* internal_default_instance() {
    return reinterpret_cast<const suppressKeyframeRequest*>(
               &_suppressKeyframeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(suppressKeyframeRequest& a, suppressKeyframeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(suppressKeyframeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(suppressKeyframeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline suppressKeyframeRequest* New() const final {
    return CreateMaybeMessage<suppressKeyframeRequest>(nullptr);
  }

  suppressKeyframeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<suppressKeyframeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const suppressKeyframeRequest& from);
  void MergeFrom(const suppressKeyframeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(suppressKeyframeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.suppressKeyframeRequest";
  }
  protected:
  explicit suppressKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyframeIdFieldNumber = 1,
  };
  // uint32 keyframe_id = 1;
  void clear_keyframe_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 keyframe_id() const;
  void set_keyframe_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keyframe_id() const;
  void _internal_set_keyframe_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.suppressKeyframeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 keyframe_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class suppressKeyframeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.suppressKeyframeResponse) */ {
 public:
  inline suppressKeyframeResponse() : suppressKeyframeResponse(nullptr) {}
  virtual ~suppressKeyframeResponse();
  explicit constexpr suppressKeyframeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  suppressKeyframeResponse(const suppressKeyframeResponse& from);
  suppressKeyframeResponse(suppressKeyframeResponse&& from) noexcept
    : suppressKeyframeResponse() {
    *this = ::std::move(from);
  }

  inline suppressKeyframeResponse& operator=(const suppressKeyframeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline suppressKeyframeResponse& operator=(suppressKeyframeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const suppressKeyframeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const suppressKeyframeResponse* internal_default_instance() {
    return reinterpret_cast<const suppressKeyframeResponse*>(
               &_suppressKeyframeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(suppressKeyframeResponse& a, suppressKeyframeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(suppressKeyframeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(suppressKeyframeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline suppressKeyframeResponse* New() const final {
    return CreateMaybeMessage<suppressKeyframeResponse>(nullptr);
  }

  suppressKeyframeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<suppressKeyframeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const suppressKeyframeResponse& from);
  void MergeFrom(const suppressKeyframeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(suppressKeyframeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.suppressKeyframeResponse";
  }
  protected:
  explicit suppressKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.suppressKeyframeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class retrieve_grpc0Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.retrieve_grpc0Request) */ {
 public:
  inline retrieve_grpc0Request() : retrieve_grpc0Request(nullptr) {}
  virtual ~retrieve_grpc0Request();
  explicit constexpr retrieve_grpc0Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  retrieve_grpc0Request(const retrieve_grpc0Request& from);
  retrieve_grpc0Request(retrieve_grpc0Request&& from) noexcept
    : retrieve_grpc0Request() {
    *this = ::std::move(from);
  }

  inline retrieve_grpc0Request& operator=(const retrieve_grpc0Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline retrieve_grpc0Request& operator=(retrieve_grpc0Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const retrieve_grpc0Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const retrieve_grpc0Request* internal_default_instance() {
    return reinterpret_cast<const retrieve_grpc0Request*>(
               &_retrieve_grpc0Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(retrieve_grpc0Request& a, retrieve_grpc0Request& b) {
    a.Swap(&b);
  }
  inline void Swap(retrieve_grpc0Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(retrieve_grpc0Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline retrieve_grpc0Request* New() const final {
    return CreateMaybeMessage<retrieve_grpc0Request>(nullptr);
  }

  retrieve_grpc0Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<retrieve_grpc0Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const retrieve_grpc0Request& from);
  void MergeFrom(const retrieve_grpc0Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(retrieve_grpc0Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.retrieve_grpc0Request";
  }
  protected:
  explicit retrieve_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameFieldNumber = 1,
    kRetKeyframesIdFieldNumber = 2,
  };
  // bytes frame = 1;
  void clear_frame();
  const std::string& frame() const;
  void set_frame(const std::string& value);
  void set_frame(std::string&& value);
  void set_frame(const char* value);
  void set_frame(const void* value, size_t size);
  std::string* mutable_frame();
  std::string* release_frame();
  void set_allocated_frame(std::string* frame);
  private:
  const std::string& _internal_frame() const;
  void _internal_set_frame(const std::string& value);
  std::string* _internal_mutable_frame();
  public:

  // bytes retKeyframes_id = 2;
  void clear_retkeyframes_id();
  const std::string& retkeyframes_id() const;
  void set_retkeyframes_id(const std::string& value);
  void set_retkeyframes_id(std::string&& value);
  void set_retkeyframes_id(const char* value);
  void set_retkeyframes_id(const void* value, size_t size);
  std::string* mutable_retkeyframes_id();
  std::string* release_retkeyframes_id();
  void set_allocated_retkeyframes_id(std::string* retkeyframes_id);
  private:
  const std::string& _internal_retkeyframes_id() const;
  void _internal_set_retkeyframes_id(const std::string& value);
  std::string* _internal_mutable_retkeyframes_id();
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.retrieve_grpc0Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frame_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr retkeyframes_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class retrieve_grpc0Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.retrieve_grpc0Response) */ {
 public:
  inline retrieve_grpc0Response() : retrieve_grpc0Response(nullptr) {}
  virtual ~retrieve_grpc0Response();
  explicit constexpr retrieve_grpc0Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  retrieve_grpc0Response(const retrieve_grpc0Response& from);
  retrieve_grpc0Response(retrieve_grpc0Response&& from) noexcept
    : retrieve_grpc0Response() {
    *this = ::std::move(from);
  }

  inline retrieve_grpc0Response& operator=(const retrieve_grpc0Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline retrieve_grpc0Response& operator=(retrieve_grpc0Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const retrieve_grpc0Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const retrieve_grpc0Response* internal_default_instance() {
    return reinterpret_cast<const retrieve_grpc0Response*>(
               &_retrieve_grpc0Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(retrieve_grpc0Response& a, retrieve_grpc0Response& b) {
    a.Swap(&b);
  }
  inline void Swap(retrieve_grpc0Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(retrieve_grpc0Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline retrieve_grpc0Response* New() const final {
    return CreateMaybeMessage<retrieve_grpc0Response>(nullptr);
  }

  retrieve_grpc0Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<retrieve_grpc0Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const retrieve_grpc0Response& from);
  void MergeFrom(const retrieve_grpc0Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(retrieve_grpc0Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.retrieve_grpc0Response";
  }
  protected:
  explicit retrieve_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetKeyframesIdFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes retKeyframes_id = 1;
  void clear_retkeyframes_id();
  const std::string& retkeyframes_id() const;
  void set_retkeyframes_id(const std::string& value);
  void set_retkeyframes_id(std::string&& value);
  void set_retkeyframes_id(const char* value);
  void set_retkeyframes_id(const void* value, size_t size);
  std::string* mutable_retkeyframes_id();
  std::string* release_retkeyframes_id();
  void set_allocated_retkeyframes_id(std::string* retkeyframes_id);
  private:
  const std::string& _internal_retkeyframes_id() const;
  void _internal_set_retkeyframes_id(const std::string& value);
  std::string* _internal_mutable_retkeyframes_id();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.retrieve_grpc0Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr retkeyframes_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class retrieve_grpc1Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.retrieve_grpc1Request) */ {
 public:
  inline retrieve_grpc1Request() : retrieve_grpc1Request(nullptr) {}
  virtual ~retrieve_grpc1Request();
  explicit constexpr retrieve_grpc1Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  retrieve_grpc1Request(const retrieve_grpc1Request& from);
  retrieve_grpc1Request(retrieve_grpc1Request&& from) noexcept
    : retrieve_grpc1Request() {
    *this = ::std::move(from);
  }

  inline retrieve_grpc1Request& operator=(const retrieve_grpc1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline retrieve_grpc1Request& operator=(retrieve_grpc1Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const retrieve_grpc1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const retrieve_grpc1Request* internal_default_instance() {
    return reinterpret_cast<const retrieve_grpc1Request*>(
               &_retrieve_grpc1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(retrieve_grpc1Request& a, retrieve_grpc1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(retrieve_grpc1Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(retrieve_grpc1Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline retrieve_grpc1Request* New() const final {
    return CreateMaybeMessage<retrieve_grpc1Request>(nullptr);
  }

  retrieve_grpc1Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<retrieve_grpc1Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const retrieve_grpc1Request& from);
  void MergeFrom(const retrieve_grpc1Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(retrieve_grpc1Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.retrieve_grpc1Request";
  }
  protected:
  explicit retrieve_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameFieldNumber = 1,
    kCanKeyframesIdFieldNumber = 2,
    kRetKeyframesIdFieldNumber = 3,
  };
  // bytes frame = 1;
  void clear_frame();
  const std::string& frame() const;
  void set_frame(const std::string& value);
  void set_frame(std::string&& value);
  void set_frame(const char* value);
  void set_frame(const void* value, size_t size);
  std::string* mutable_frame();
  std::string* release_frame();
  void set_allocated_frame(std::string* frame);
  private:
  const std::string& _internal_frame() const;
  void _internal_set_frame(const std::string& value);
  std::string* _internal_mutable_frame();
  public:

  // bytes canKeyframes_id = 2;
  void clear_cankeyframes_id();
  const std::string& cankeyframes_id() const;
  void set_cankeyframes_id(const std::string& value);
  void set_cankeyframes_id(std::string&& value);
  void set_cankeyframes_id(const char* value);
  void set_cankeyframes_id(const void* value, size_t size);
  std::string* mutable_cankeyframes_id();
  std::string* release_cankeyframes_id();
  void set_allocated_cankeyframes_id(std::string* cankeyframes_id);
  private:
  const std::string& _internal_cankeyframes_id() const;
  void _internal_set_cankeyframes_id(const std::string& value);
  std::string* _internal_mutable_cankeyframes_id();
  public:

  // bytes retKeyframes_id = 3;
  void clear_retkeyframes_id();
  const std::string& retkeyframes_id() const;
  void set_retkeyframes_id(const std::string& value);
  void set_retkeyframes_id(std::string&& value);
  void set_retkeyframes_id(const char* value);
  void set_retkeyframes_id(const void* value, size_t size);
  std::string* mutable_retkeyframes_id();
  std::string* release_retkeyframes_id();
  void set_allocated_retkeyframes_id(std::string* retkeyframes_id);
  private:
  const std::string& _internal_retkeyframes_id() const;
  void _internal_set_retkeyframes_id(const std::string& value);
  std::string* _internal_mutable_retkeyframes_id();
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.retrieve_grpc1Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frame_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cankeyframes_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr retkeyframes_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class retrieve_grpc1Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.retrieve_grpc1Response) */ {
 public:
  inline retrieve_grpc1Response() : retrieve_grpc1Response(nullptr) {}
  virtual ~retrieve_grpc1Response();
  explicit constexpr retrieve_grpc1Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  retrieve_grpc1Response(const retrieve_grpc1Response& from);
  retrieve_grpc1Response(retrieve_grpc1Response&& from) noexcept
    : retrieve_grpc1Response() {
    *this = ::std::move(from);
  }

  inline retrieve_grpc1Response& operator=(const retrieve_grpc1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline retrieve_grpc1Response& operator=(retrieve_grpc1Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const retrieve_grpc1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const retrieve_grpc1Response* internal_default_instance() {
    return reinterpret_cast<const retrieve_grpc1Response*>(
               &_retrieve_grpc1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(retrieve_grpc1Response& a, retrieve_grpc1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(retrieve_grpc1Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(retrieve_grpc1Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline retrieve_grpc1Response* New() const final {
    return CreateMaybeMessage<retrieve_grpc1Response>(nullptr);
  }

  retrieve_grpc1Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<retrieve_grpc1Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const retrieve_grpc1Response& from);
  void MergeFrom(const retrieve_grpc1Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(retrieve_grpc1Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.retrieve_grpc1Response";
  }
  protected:
  explicit retrieve_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetKeyframesIdFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes retKeyframes_id = 1;
  void clear_retkeyframes_id();
  const std::string& retkeyframes_id() const;
  void set_retkeyframes_id(const std::string& value);
  void set_retkeyframes_id(std::string&& value);
  void set_retkeyframes_id(const char* value);
  void set_retkeyframes_id(const void* value, size_t size);
  std::string* mutable_retkeyframes_id();
  std::string* release_retkeyframes_id();
  void set_allocated_retkeyframes_id(std::string* retkeyframes_id);
  private:
  const std::string& _internal_retkeyframes_id() const;
  void _internal_set_retkeyframes_id(const std::string& value);
  std::string* _internal_mutable_retkeyframes_id();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.retrieve_grpc1Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr retkeyframes_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class saveToFileRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.saveToFileRequest) */ {
 public:
  inline saveToFileRequest() : saveToFileRequest(nullptr) {}
  virtual ~saveToFileRequest();
  explicit constexpr saveToFileRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  saveToFileRequest(const saveToFileRequest& from);
  saveToFileRequest(saveToFileRequest&& from) noexcept
    : saveToFileRequest() {
    *this = ::std::move(from);
  }

  inline saveToFileRequest& operator=(const saveToFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline saveToFileRequest& operator=(saveToFileRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const saveToFileRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const saveToFileRequest* internal_default_instance() {
    return reinterpret_cast<const saveToFileRequest*>(
               &_saveToFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(saveToFileRequest& a, saveToFileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(saveToFileRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(saveToFileRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline saveToFileRequest* New() const final {
    return CreateMaybeMessage<saveToFileRequest>(nullptr);
  }

  saveToFileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<saveToFileRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const saveToFileRequest& from);
  void MergeFrom(const saveToFileRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(saveToFileRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.saveToFileRequest";
  }
  protected:
  explicit saveToFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFieldNumber = 1,
  };
  // string file = 1;
  void clear_file();
  const std::string& file() const;
  void set_file(const std::string& value);
  void set_file(std::string&& value);
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  std::string* mutable_file();
  std::string* release_file();
  void set_allocated_file(std::string* file);
  private:
  const std::string& _internal_file() const;
  void _internal_set_file(const std::string& value);
  std::string* _internal_mutable_file();
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.saveToFileRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class saveToFileResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.saveToFileResponse) */ {
 public:
  inline saveToFileResponse() : saveToFileResponse(nullptr) {}
  virtual ~saveToFileResponse();
  explicit constexpr saveToFileResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  saveToFileResponse(const saveToFileResponse& from);
  saveToFileResponse(saveToFileResponse&& from) noexcept
    : saveToFileResponse() {
    *this = ::std::move(from);
  }

  inline saveToFileResponse& operator=(const saveToFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline saveToFileResponse& operator=(saveToFileResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const saveToFileResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const saveToFileResponse* internal_default_instance() {
    return reinterpret_cast<const saveToFileResponse*>(
               &_saveToFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(saveToFileResponse& a, saveToFileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(saveToFileResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(saveToFileResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline saveToFileResponse* New() const final {
    return CreateMaybeMessage<saveToFileResponse>(nullptr);
  }

  saveToFileResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<saveToFileResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const saveToFileResponse& from);
  void MergeFrom(const saveToFileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(saveToFileResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.saveToFileResponse";
  }
  protected:
  explicit saveToFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.saveToFileResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class loadFromFileRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.loadFromFileRequest) */ {
 public:
  inline loadFromFileRequest() : loadFromFileRequest(nullptr) {}
  virtual ~loadFromFileRequest();
  explicit constexpr loadFromFileRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  loadFromFileRequest(const loadFromFileRequest& from);
  loadFromFileRequest(loadFromFileRequest&& from) noexcept
    : loadFromFileRequest() {
    *this = ::std::move(from);
  }

  inline loadFromFileRequest& operator=(const loadFromFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline loadFromFileRequest& operator=(loadFromFileRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const loadFromFileRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const loadFromFileRequest* internal_default_instance() {
    return reinterpret_cast<const loadFromFileRequest*>(
               &_loadFromFileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(loadFromFileRequest& a, loadFromFileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(loadFromFileRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(loadFromFileRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline loadFromFileRequest* New() const final {
    return CreateMaybeMessage<loadFromFileRequest>(nullptr);
  }

  loadFromFileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<loadFromFileRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const loadFromFileRequest& from);
  void MergeFrom(const loadFromFileRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(loadFromFileRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.loadFromFileRequest";
  }
  protected:
  explicit loadFromFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFieldNumber = 1,
  };
  // string file = 1;
  void clear_file();
  const std::string& file() const;
  void set_file(const std::string& value);
  void set_file(std::string&& value);
  void set_file(const char* value);
  void set_file(const char* value, size_t size);
  std::string* mutable_file();
  std::string* release_file();
  void set_allocated_file(std::string* file);
  private:
  const std::string& _internal_file() const;
  void _internal_set_file(const std::string& value);
  std::string* _internal_mutable_file();
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.loadFromFileRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class loadFromFileResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.loadFromFileResponse) */ {
 public:
  inline loadFromFileResponse() : loadFromFileResponse(nullptr) {}
  virtual ~loadFromFileResponse();
  explicit constexpr loadFromFileResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  loadFromFileResponse(const loadFromFileResponse& from);
  loadFromFileResponse(loadFromFileResponse&& from) noexcept
    : loadFromFileResponse() {
    *this = ::std::move(from);
  }

  inline loadFromFileResponse& operator=(const loadFromFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline loadFromFileResponse& operator=(loadFromFileResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const loadFromFileResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const loadFromFileResponse* internal_default_instance() {
    return reinterpret_cast<const loadFromFileResponse*>(
               &_loadFromFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(loadFromFileResponse& a, loadFromFileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(loadFromFileResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(loadFromFileResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline loadFromFileResponse* New() const final {
    return CreateMaybeMessage<loadFromFileResponse>(nullptr);
  }

  loadFromFileResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<loadFromFileResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const loadFromFileResponse& from);
  void MergeFrom(const loadFromFileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(loadFromFileResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.loadFromFileResponse";
  }
  protected:
  explicit loadFromFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.loadFromFileResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class match_grpc0Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.match_grpc0Request) */ {
 public:
  inline match_grpc0Request() : match_grpc0Request(nullptr) {}
  virtual ~match_grpc0Request();
  explicit constexpr match_grpc0Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  match_grpc0Request(const match_grpc0Request& from);
  match_grpc0Request(match_grpc0Request&& from) noexcept
    : match_grpc0Request() {
    *this = ::std::move(from);
  }

  inline match_grpc0Request& operator=(const match_grpc0Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline match_grpc0Request& operator=(match_grpc0Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const match_grpc0Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const match_grpc0Request* internal_default_instance() {
    return reinterpret_cast<const match_grpc0Request*>(
               &_match_grpc0Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(match_grpc0Request& a, match_grpc0Request& b) {
    a.Swap(&b);
  }
  inline void Swap(match_grpc0Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(match_grpc0Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline match_grpc0Request* New() const final {
    return CreateMaybeMessage<match_grpc0Request>(nullptr);
  }

  match_grpc0Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<match_grpc0Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const match_grpc0Request& from);
  void MergeFrom(const match_grpc0Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(match_grpc0Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.match_grpc0Request";
  }
  protected:
  explicit match_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameFieldNumber = 1,
    kKeyframeFieldNumber = 2,
    kMatchesFieldNumber = 3,
  };
  // bytes frame = 1;
  void clear_frame();
  const std::string& frame() const;
  void set_frame(const std::string& value);
  void set_frame(std::string&& value);
  void set_frame(const char* value);
  void set_frame(const void* value, size_t size);
  std::string* mutable_frame();
  std::string* release_frame();
  void set_allocated_frame(std::string* frame);
  private:
  const std::string& _internal_frame() const;
  void _internal_set_frame(const std::string& value);
  std::string* _internal_mutable_frame();
  public:

  // bytes keyframe = 2;
  void clear_keyframe();
  const std::string& keyframe() const;
  void set_keyframe(const std::string& value);
  void set_keyframe(std::string&& value);
  void set_keyframe(const char* value);
  void set_keyframe(const void* value, size_t size);
  std::string* mutable_keyframe();
  std::string* release_keyframe();
  void set_allocated_keyframe(std::string* keyframe);
  private:
  const std::string& _internal_keyframe() const;
  void _internal_set_keyframe(const std::string& value);
  std::string* _internal_mutable_keyframe();
  public:

  // bytes matches = 3;
  void clear_matches();
  const std::string& matches() const;
  void set_matches(const std::string& value);
  void set_matches(std::string&& value);
  void set_matches(const char* value);
  void set_matches(const void* value, size_t size);
  std::string* mutable_matches();
  std::string* release_matches();
  void set_allocated_matches(std::string* matches);
  private:
  const std::string& _internal_matches() const;
  void _internal_set_matches(const std::string& value);
  std::string* _internal_mutable_matches();
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.match_grpc0Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frame_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keyframe_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr matches_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class match_grpc0Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.match_grpc0Response) */ {
 public:
  inline match_grpc0Response() : match_grpc0Response(nullptr) {}
  virtual ~match_grpc0Response();
  explicit constexpr match_grpc0Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  match_grpc0Response(const match_grpc0Response& from);
  match_grpc0Response(match_grpc0Response&& from) noexcept
    : match_grpc0Response() {
    *this = ::std::move(from);
  }

  inline match_grpc0Response& operator=(const match_grpc0Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline match_grpc0Response& operator=(match_grpc0Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const match_grpc0Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const match_grpc0Response* internal_default_instance() {
    return reinterpret_cast<const match_grpc0Response*>(
               &_match_grpc0Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(match_grpc0Response& a, match_grpc0Response& b) {
    a.Swap(&b);
  }
  inline void Swap(match_grpc0Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(match_grpc0Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline match_grpc0Response* New() const final {
    return CreateMaybeMessage<match_grpc0Response>(nullptr);
  }

  match_grpc0Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<match_grpc0Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const match_grpc0Response& from);
  void MergeFrom(const match_grpc0Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(match_grpc0Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.match_grpc0Response";
  }
  protected:
  explicit match_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchesFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes matches = 1;
  void clear_matches();
  const std::string& matches() const;
  void set_matches(const std::string& value);
  void set_matches(std::string&& value);
  void set_matches(const char* value);
  void set_matches(const void* value, size_t size);
  std::string* mutable_matches();
  std::string* release_matches();
  void set_allocated_matches(std::string* matches);
  private:
  const std::string& _internal_matches() const;
  void _internal_set_matches(const std::string& value);
  std::string* _internal_mutable_matches();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.match_grpc0Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr matches_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class match_grpc1Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.match_grpc1Request) */ {
 public:
  inline match_grpc1Request() : match_grpc1Request(nullptr) {}
  virtual ~match_grpc1Request();
  explicit constexpr match_grpc1Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  match_grpc1Request(const match_grpc1Request& from);
  match_grpc1Request(match_grpc1Request&& from) noexcept
    : match_grpc1Request() {
    *this = ::std::move(from);
  }

  inline match_grpc1Request& operator=(const match_grpc1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline match_grpc1Request& operator=(match_grpc1Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const match_grpc1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const match_grpc1Request* internal_default_instance() {
    return reinterpret_cast<const match_grpc1Request*>(
               &_match_grpc1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(match_grpc1Request& a, match_grpc1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(match_grpc1Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(match_grpc1Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline match_grpc1Request* New() const final {
    return CreateMaybeMessage<match_grpc1Request>(nullptr);
  }

  match_grpc1Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<match_grpc1Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const match_grpc1Request& from);
  void MergeFrom(const match_grpc1Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(match_grpc1Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.match_grpc1Request";
  }
  protected:
  explicit match_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexDescriptorsFieldNumber = 1,
    kDescriptorsFieldNumber = 2,
    kKeyframeFieldNumber = 3,
    kMatchesFieldNumber = 4,
  };
  // bytes indexDescriptors = 1;
  void clear_indexdescriptors();
  const std::string& indexdescriptors() const;
  void set_indexdescriptors(const std::string& value);
  void set_indexdescriptors(std::string&& value);
  void set_indexdescriptors(const char* value);
  void set_indexdescriptors(const void* value, size_t size);
  std::string* mutable_indexdescriptors();
  std::string* release_indexdescriptors();
  void set_allocated_indexdescriptors(std::string* indexdescriptors);
  private:
  const std::string& _internal_indexdescriptors() const;
  void _internal_set_indexdescriptors(const std::string& value);
  std::string* _internal_mutable_indexdescriptors();
  public:

  // bytes descriptors = 2;
  void clear_descriptors();
  const std::string& descriptors() const;
  void set_descriptors(const std::string& value);
  void set_descriptors(std::string&& value);
  void set_descriptors(const char* value);
  void set_descriptors(const void* value, size_t size);
  std::string* mutable_descriptors();
  std::string* release_descriptors();
  void set_allocated_descriptors(std::string* descriptors);
  private:
  const std::string& _internal_descriptors() const;
  void _internal_set_descriptors(const std::string& value);
  std::string* _internal_mutable_descriptors();
  public:

  // bytes keyframe = 3;
  void clear_keyframe();
  const std::string& keyframe() const;
  void set_keyframe(const std::string& value);
  void set_keyframe(std::string&& value);
  void set_keyframe(const char* value);
  void set_keyframe(const void* value, size_t size);
  std::string* mutable_keyframe();
  std::string* release_keyframe();
  void set_allocated_keyframe(std::string* keyframe);
  private:
  const std::string& _internal_keyframe() const;
  void _internal_set_keyframe(const std::string& value);
  std::string* _internal_mutable_keyframe();
  public:

  // bytes matches = 4;
  void clear_matches();
  const std::string& matches() const;
  void set_matches(const std::string& value);
  void set_matches(std::string&& value);
  void set_matches(const char* value);
  void set_matches(const void* value, size_t size);
  std::string* mutable_matches();
  std::string* release_matches();
  void set_allocated_matches(std::string* matches);
  private:
  const std::string& _internal_matches() const;
  void _internal_set_matches(const std::string& value);
  std::string* _internal_mutable_matches();
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.match_grpc1Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr indexdescriptors_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr descriptors_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keyframe_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr matches_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// -------------------------------------------------------------------

class match_grpc1Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIKeyframeRetriever.match_grpc1Response) */ {
 public:
  inline match_grpc1Response() : match_grpc1Response(nullptr) {}
  virtual ~match_grpc1Response();
  explicit constexpr match_grpc1Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  match_grpc1Response(const match_grpc1Response& from);
  match_grpc1Response(match_grpc1Response&& from) noexcept
    : match_grpc1Response() {
    *this = ::std::move(from);
  }

  inline match_grpc1Response& operator=(const match_grpc1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline match_grpc1Response& operator=(match_grpc1Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const match_grpc1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const match_grpc1Response* internal_default_instance() {
    return reinterpret_cast<const match_grpc1Response*>(
               &_match_grpc1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(match_grpc1Response& a, match_grpc1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(match_grpc1Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(match_grpc1Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline match_grpc1Response* New() const final {
    return CreateMaybeMessage<match_grpc1Response>(nullptr);
  }

  match_grpc1Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<match_grpc1Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const match_grpc1Response& from);
  void MergeFrom(const match_grpc1Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(match_grpc1Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIKeyframeRetriever.match_grpc1Response";
  }
  protected:
  explicit match_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIKeyframeRetrieverService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchesFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes matches = 1;
  void clear_matches();
  const std::string& matches() const;
  void set_matches(const std::string& value);
  void set_matches(std::string&& value);
  void set_matches(const char* value);
  void set_matches(const void* value, size_t size);
  std::string* mutable_matches();
  std::string* release_matches();
  void set_allocated_matches(std::string* matches);
  private:
  const std::string& _internal_matches() const;
  void _internal_set_matches(const std::string& value);
  std::string* _internal_mutable_matches();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIKeyframeRetriever.match_grpc1Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr matches_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIKeyframeRetrieverService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// addKeyframeRequest

// bytes keyframe = 1;
inline void addKeyframeRequest::clear_keyframe() {
  keyframe_.ClearToEmpty();
}
inline const std::string& addKeyframeRequest::keyframe() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.addKeyframeRequest.keyframe)
  return _internal_keyframe();
}
inline void addKeyframeRequest::set_keyframe(const std::string& value) {
  _internal_set_keyframe(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.addKeyframeRequest.keyframe)
}
inline std::string* addKeyframeRequest::mutable_keyframe() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.addKeyframeRequest.keyframe)
  return _internal_mutable_keyframe();
}
inline const std::string& addKeyframeRequest::_internal_keyframe() const {
  return keyframe_.Get();
}
inline void addKeyframeRequest::_internal_set_keyframe(const std::string& value) {
  
  keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void addKeyframeRequest::set_keyframe(std::string&& value) {
  
  keyframe_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.addKeyframeRequest.keyframe)
}
inline void addKeyframeRequest::set_keyframe(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.addKeyframeRequest.keyframe)
}
inline void addKeyframeRequest::set_keyframe(const void* value,
    size_t size) {
  
  keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.addKeyframeRequest.keyframe)
}
inline std::string* addKeyframeRequest::_internal_mutable_keyframe() {
  
  return keyframe_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* addKeyframeRequest::release_keyframe() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.addKeyframeRequest.keyframe)
  return keyframe_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void addKeyframeRequest::set_allocated_keyframe(std::string* keyframe) {
  if (keyframe != nullptr) {
    
  } else {
    
  }
  keyframe_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keyframe,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.addKeyframeRequest.keyframe)
}

// -------------------------------------------------------------------

// addKeyframeResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void addKeyframeResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 addKeyframeResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 addKeyframeResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.addKeyframeResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void addKeyframeResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void addKeyframeResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.addKeyframeResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// suppressKeyframeRequest

// uint32 keyframe_id = 1;
inline void suppressKeyframeRequest::clear_keyframe_id() {
  keyframe_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 suppressKeyframeRequest::_internal_keyframe_id() const {
  return keyframe_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 suppressKeyframeRequest::keyframe_id() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.suppressKeyframeRequest.keyframe_id)
  return _internal_keyframe_id();
}
inline void suppressKeyframeRequest::_internal_set_keyframe_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  keyframe_id_ = value;
}
inline void suppressKeyframeRequest::set_keyframe_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_keyframe_id(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.suppressKeyframeRequest.keyframe_id)
}

// -------------------------------------------------------------------

// suppressKeyframeResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void suppressKeyframeResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 suppressKeyframeResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 suppressKeyframeResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.suppressKeyframeResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void suppressKeyframeResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void suppressKeyframeResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.suppressKeyframeResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// retrieve_grpc0Request

// bytes frame = 1;
inline void retrieve_grpc0Request::clear_frame() {
  frame_.ClearToEmpty();
}
inline const std::string& retrieve_grpc0Request::frame() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.retrieve_grpc0Request.frame)
  return _internal_frame();
}
inline void retrieve_grpc0Request::set_frame(const std::string& value) {
  _internal_set_frame(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.retrieve_grpc0Request.frame)
}
inline std::string* retrieve_grpc0Request::mutable_frame() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.retrieve_grpc0Request.frame)
  return _internal_mutable_frame();
}
inline const std::string& retrieve_grpc0Request::_internal_frame() const {
  return frame_.Get();
}
inline void retrieve_grpc0Request::_internal_set_frame(const std::string& value) {
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void retrieve_grpc0Request::set_frame(std::string&& value) {
  
  frame_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.retrieve_grpc0Request.frame)
}
inline void retrieve_grpc0Request::set_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.retrieve_grpc0Request.frame)
}
inline void retrieve_grpc0Request::set_frame(const void* value,
    size_t size) {
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.retrieve_grpc0Request.frame)
}
inline std::string* retrieve_grpc0Request::_internal_mutable_frame() {
  
  return frame_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* retrieve_grpc0Request::release_frame() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.retrieve_grpc0Request.frame)
  return frame_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void retrieve_grpc0Request::set_allocated_frame(std::string* frame) {
  if (frame != nullptr) {
    
  } else {
    
  }
  frame_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frame,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.retrieve_grpc0Request.frame)
}

// bytes retKeyframes_id = 2;
inline void retrieve_grpc0Request::clear_retkeyframes_id() {
  retkeyframes_id_.ClearToEmpty();
}
inline const std::string& retrieve_grpc0Request::retkeyframes_id() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.retrieve_grpc0Request.retKeyframes_id)
  return _internal_retkeyframes_id();
}
inline void retrieve_grpc0Request::set_retkeyframes_id(const std::string& value) {
  _internal_set_retkeyframes_id(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.retrieve_grpc0Request.retKeyframes_id)
}
inline std::string* retrieve_grpc0Request::mutable_retkeyframes_id() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.retrieve_grpc0Request.retKeyframes_id)
  return _internal_mutable_retkeyframes_id();
}
inline const std::string& retrieve_grpc0Request::_internal_retkeyframes_id() const {
  return retkeyframes_id_.Get();
}
inline void retrieve_grpc0Request::_internal_set_retkeyframes_id(const std::string& value) {
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void retrieve_grpc0Request::set_retkeyframes_id(std::string&& value) {
  
  retkeyframes_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.retrieve_grpc0Request.retKeyframes_id)
}
inline void retrieve_grpc0Request::set_retkeyframes_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.retrieve_grpc0Request.retKeyframes_id)
}
inline void retrieve_grpc0Request::set_retkeyframes_id(const void* value,
    size_t size) {
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.retrieve_grpc0Request.retKeyframes_id)
}
inline std::string* retrieve_grpc0Request::_internal_mutable_retkeyframes_id() {
  
  return retkeyframes_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* retrieve_grpc0Request::release_retkeyframes_id() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.retrieve_grpc0Request.retKeyframes_id)
  return retkeyframes_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void retrieve_grpc0Request::set_allocated_retkeyframes_id(std::string* retkeyframes_id) {
  if (retkeyframes_id != nullptr) {
    
  } else {
    
  }
  retkeyframes_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), retkeyframes_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.retrieve_grpc0Request.retKeyframes_id)
}

// -------------------------------------------------------------------

// retrieve_grpc0Response

// bytes retKeyframes_id = 1;
inline void retrieve_grpc0Response::clear_retkeyframes_id() {
  retkeyframes_id_.ClearToEmpty();
}
inline const std::string& retrieve_grpc0Response::retkeyframes_id() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.retrieve_grpc0Response.retKeyframes_id)
  return _internal_retkeyframes_id();
}
inline void retrieve_grpc0Response::set_retkeyframes_id(const std::string& value) {
  _internal_set_retkeyframes_id(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.retrieve_grpc0Response.retKeyframes_id)
}
inline std::string* retrieve_grpc0Response::mutable_retkeyframes_id() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.retrieve_grpc0Response.retKeyframes_id)
  return _internal_mutable_retkeyframes_id();
}
inline const std::string& retrieve_grpc0Response::_internal_retkeyframes_id() const {
  return retkeyframes_id_.Get();
}
inline void retrieve_grpc0Response::_internal_set_retkeyframes_id(const std::string& value) {
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void retrieve_grpc0Response::set_retkeyframes_id(std::string&& value) {
  
  retkeyframes_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.retrieve_grpc0Response.retKeyframes_id)
}
inline void retrieve_grpc0Response::set_retkeyframes_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.retrieve_grpc0Response.retKeyframes_id)
}
inline void retrieve_grpc0Response::set_retkeyframes_id(const void* value,
    size_t size) {
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.retrieve_grpc0Response.retKeyframes_id)
}
inline std::string* retrieve_grpc0Response::_internal_mutable_retkeyframes_id() {
  
  return retkeyframes_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* retrieve_grpc0Response::release_retkeyframes_id() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.retrieve_grpc0Response.retKeyframes_id)
  return retkeyframes_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void retrieve_grpc0Response::set_allocated_retkeyframes_id(std::string* retkeyframes_id) {
  if (retkeyframes_id != nullptr) {
    
  } else {
    
  }
  retkeyframes_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), retkeyframes_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.retrieve_grpc0Response.retKeyframes_id)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void retrieve_grpc0Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 retrieve_grpc0Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 retrieve_grpc0Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.retrieve_grpc0Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void retrieve_grpc0Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void retrieve_grpc0Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.retrieve_grpc0Response.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// retrieve_grpc1Request

// bytes frame = 1;
inline void retrieve_grpc1Request::clear_frame() {
  frame_.ClearToEmpty();
}
inline const std::string& retrieve_grpc1Request::frame() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.retrieve_grpc1Request.frame)
  return _internal_frame();
}
inline void retrieve_grpc1Request::set_frame(const std::string& value) {
  _internal_set_frame(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.retrieve_grpc1Request.frame)
}
inline std::string* retrieve_grpc1Request::mutable_frame() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.retrieve_grpc1Request.frame)
  return _internal_mutable_frame();
}
inline const std::string& retrieve_grpc1Request::_internal_frame() const {
  return frame_.Get();
}
inline void retrieve_grpc1Request::_internal_set_frame(const std::string& value) {
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void retrieve_grpc1Request::set_frame(std::string&& value) {
  
  frame_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.retrieve_grpc1Request.frame)
}
inline void retrieve_grpc1Request::set_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.retrieve_grpc1Request.frame)
}
inline void retrieve_grpc1Request::set_frame(const void* value,
    size_t size) {
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.retrieve_grpc1Request.frame)
}
inline std::string* retrieve_grpc1Request::_internal_mutable_frame() {
  
  return frame_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* retrieve_grpc1Request::release_frame() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.retrieve_grpc1Request.frame)
  return frame_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void retrieve_grpc1Request::set_allocated_frame(std::string* frame) {
  if (frame != nullptr) {
    
  } else {
    
  }
  frame_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frame,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.retrieve_grpc1Request.frame)
}

// bytes canKeyframes_id = 2;
inline void retrieve_grpc1Request::clear_cankeyframes_id() {
  cankeyframes_id_.ClearToEmpty();
}
inline const std::string& retrieve_grpc1Request::cankeyframes_id() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.retrieve_grpc1Request.canKeyframes_id)
  return _internal_cankeyframes_id();
}
inline void retrieve_grpc1Request::set_cankeyframes_id(const std::string& value) {
  _internal_set_cankeyframes_id(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.retrieve_grpc1Request.canKeyframes_id)
}
inline std::string* retrieve_grpc1Request::mutable_cankeyframes_id() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.retrieve_grpc1Request.canKeyframes_id)
  return _internal_mutable_cankeyframes_id();
}
inline const std::string& retrieve_grpc1Request::_internal_cankeyframes_id() const {
  return cankeyframes_id_.Get();
}
inline void retrieve_grpc1Request::_internal_set_cankeyframes_id(const std::string& value) {
  
  cankeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void retrieve_grpc1Request::set_cankeyframes_id(std::string&& value) {
  
  cankeyframes_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.retrieve_grpc1Request.canKeyframes_id)
}
inline void retrieve_grpc1Request::set_cankeyframes_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cankeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.retrieve_grpc1Request.canKeyframes_id)
}
inline void retrieve_grpc1Request::set_cankeyframes_id(const void* value,
    size_t size) {
  
  cankeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.retrieve_grpc1Request.canKeyframes_id)
}
inline std::string* retrieve_grpc1Request::_internal_mutable_cankeyframes_id() {
  
  return cankeyframes_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* retrieve_grpc1Request::release_cankeyframes_id() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.retrieve_grpc1Request.canKeyframes_id)
  return cankeyframes_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void retrieve_grpc1Request::set_allocated_cankeyframes_id(std::string* cankeyframes_id) {
  if (cankeyframes_id != nullptr) {
    
  } else {
    
  }
  cankeyframes_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cankeyframes_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.retrieve_grpc1Request.canKeyframes_id)
}

// bytes retKeyframes_id = 3;
inline void retrieve_grpc1Request::clear_retkeyframes_id() {
  retkeyframes_id_.ClearToEmpty();
}
inline const std::string& retrieve_grpc1Request::retkeyframes_id() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.retrieve_grpc1Request.retKeyframes_id)
  return _internal_retkeyframes_id();
}
inline void retrieve_grpc1Request::set_retkeyframes_id(const std::string& value) {
  _internal_set_retkeyframes_id(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.retrieve_grpc1Request.retKeyframes_id)
}
inline std::string* retrieve_grpc1Request::mutable_retkeyframes_id() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.retrieve_grpc1Request.retKeyframes_id)
  return _internal_mutable_retkeyframes_id();
}
inline const std::string& retrieve_grpc1Request::_internal_retkeyframes_id() const {
  return retkeyframes_id_.Get();
}
inline void retrieve_grpc1Request::_internal_set_retkeyframes_id(const std::string& value) {
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void retrieve_grpc1Request::set_retkeyframes_id(std::string&& value) {
  
  retkeyframes_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.retrieve_grpc1Request.retKeyframes_id)
}
inline void retrieve_grpc1Request::set_retkeyframes_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.retrieve_grpc1Request.retKeyframes_id)
}
inline void retrieve_grpc1Request::set_retkeyframes_id(const void* value,
    size_t size) {
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.retrieve_grpc1Request.retKeyframes_id)
}
inline std::string* retrieve_grpc1Request::_internal_mutable_retkeyframes_id() {
  
  return retkeyframes_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* retrieve_grpc1Request::release_retkeyframes_id() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.retrieve_grpc1Request.retKeyframes_id)
  return retkeyframes_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void retrieve_grpc1Request::set_allocated_retkeyframes_id(std::string* retkeyframes_id) {
  if (retkeyframes_id != nullptr) {
    
  } else {
    
  }
  retkeyframes_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), retkeyframes_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.retrieve_grpc1Request.retKeyframes_id)
}

// -------------------------------------------------------------------

// retrieve_grpc1Response

// bytes retKeyframes_id = 1;
inline void retrieve_grpc1Response::clear_retkeyframes_id() {
  retkeyframes_id_.ClearToEmpty();
}
inline const std::string& retrieve_grpc1Response::retkeyframes_id() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.retrieve_grpc1Response.retKeyframes_id)
  return _internal_retkeyframes_id();
}
inline void retrieve_grpc1Response::set_retkeyframes_id(const std::string& value) {
  _internal_set_retkeyframes_id(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.retrieve_grpc1Response.retKeyframes_id)
}
inline std::string* retrieve_grpc1Response::mutable_retkeyframes_id() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.retrieve_grpc1Response.retKeyframes_id)
  return _internal_mutable_retkeyframes_id();
}
inline const std::string& retrieve_grpc1Response::_internal_retkeyframes_id() const {
  return retkeyframes_id_.Get();
}
inline void retrieve_grpc1Response::_internal_set_retkeyframes_id(const std::string& value) {
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void retrieve_grpc1Response::set_retkeyframes_id(std::string&& value) {
  
  retkeyframes_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.retrieve_grpc1Response.retKeyframes_id)
}
inline void retrieve_grpc1Response::set_retkeyframes_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.retrieve_grpc1Response.retKeyframes_id)
}
inline void retrieve_grpc1Response::set_retkeyframes_id(const void* value,
    size_t size) {
  
  retkeyframes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.retrieve_grpc1Response.retKeyframes_id)
}
inline std::string* retrieve_grpc1Response::_internal_mutable_retkeyframes_id() {
  
  return retkeyframes_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* retrieve_grpc1Response::release_retkeyframes_id() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.retrieve_grpc1Response.retKeyframes_id)
  return retkeyframes_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void retrieve_grpc1Response::set_allocated_retkeyframes_id(std::string* retkeyframes_id) {
  if (retkeyframes_id != nullptr) {
    
  } else {
    
  }
  retkeyframes_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), retkeyframes_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.retrieve_grpc1Response.retKeyframes_id)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void retrieve_grpc1Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 retrieve_grpc1Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 retrieve_grpc1Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.retrieve_grpc1Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void retrieve_grpc1Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void retrieve_grpc1Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.retrieve_grpc1Response.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// saveToFileRequest

// string file = 1;
inline void saveToFileRequest::clear_file() {
  file_.ClearToEmpty();
}
inline const std::string& saveToFileRequest::file() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.saveToFileRequest.file)
  return _internal_file();
}
inline void saveToFileRequest::set_file(const std::string& value) {
  _internal_set_file(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.saveToFileRequest.file)
}
inline std::string* saveToFileRequest::mutable_file() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.saveToFileRequest.file)
  return _internal_mutable_file();
}
inline const std::string& saveToFileRequest::_internal_file() const {
  return file_.Get();
}
inline void saveToFileRequest::_internal_set_file(const std::string& value) {
  
  file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void saveToFileRequest::set_file(std::string&& value) {
  
  file_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.saveToFileRequest.file)
}
inline void saveToFileRequest::set_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.saveToFileRequest.file)
}
inline void saveToFileRequest::set_file(const char* value,
    size_t size) {
  
  file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.saveToFileRequest.file)
}
inline std::string* saveToFileRequest::_internal_mutable_file() {
  
  return file_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* saveToFileRequest::release_file() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.saveToFileRequest.file)
  return file_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void saveToFileRequest::set_allocated_file(std::string* file) {
  if (file != nullptr) {
    
  } else {
    
  }
  file_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.saveToFileRequest.file)
}

// -------------------------------------------------------------------

// saveToFileResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void saveToFileResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 saveToFileResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 saveToFileResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.saveToFileResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void saveToFileResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void saveToFileResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.saveToFileResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// loadFromFileRequest

// string file = 1;
inline void loadFromFileRequest::clear_file() {
  file_.ClearToEmpty();
}
inline const std::string& loadFromFileRequest::file() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.loadFromFileRequest.file)
  return _internal_file();
}
inline void loadFromFileRequest::set_file(const std::string& value) {
  _internal_set_file(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.loadFromFileRequest.file)
}
inline std::string* loadFromFileRequest::mutable_file() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.loadFromFileRequest.file)
  return _internal_mutable_file();
}
inline const std::string& loadFromFileRequest::_internal_file() const {
  return file_.Get();
}
inline void loadFromFileRequest::_internal_set_file(const std::string& value) {
  
  file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void loadFromFileRequest::set_file(std::string&& value) {
  
  file_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.loadFromFileRequest.file)
}
inline void loadFromFileRequest::set_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.loadFromFileRequest.file)
}
inline void loadFromFileRequest::set_file(const char* value,
    size_t size) {
  
  file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.loadFromFileRequest.file)
}
inline std::string* loadFromFileRequest::_internal_mutable_file() {
  
  return file_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* loadFromFileRequest::release_file() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.loadFromFileRequest.file)
  return file_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void loadFromFileRequest::set_allocated_file(std::string* file) {
  if (file != nullptr) {
    
  } else {
    
  }
  file_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.loadFromFileRequest.file)
}

// -------------------------------------------------------------------

// loadFromFileResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void loadFromFileResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 loadFromFileResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 loadFromFileResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.loadFromFileResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void loadFromFileResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void loadFromFileResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.loadFromFileResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// match_grpc0Request

// bytes frame = 1;
inline void match_grpc0Request::clear_frame() {
  frame_.ClearToEmpty();
}
inline const std::string& match_grpc0Request::frame() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc0Request.frame)
  return _internal_frame();
}
inline void match_grpc0Request::set_frame(const std::string& value) {
  _internal_set_frame(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc0Request.frame)
}
inline std::string* match_grpc0Request::mutable_frame() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.match_grpc0Request.frame)
  return _internal_mutable_frame();
}
inline const std::string& match_grpc0Request::_internal_frame() const {
  return frame_.Get();
}
inline void match_grpc0Request::_internal_set_frame(const std::string& value) {
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void match_grpc0Request::set_frame(std::string&& value) {
  
  frame_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.match_grpc0Request.frame)
}
inline void match_grpc0Request::set_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.match_grpc0Request.frame)
}
inline void match_grpc0Request::set_frame(const void* value,
    size_t size) {
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.match_grpc0Request.frame)
}
inline std::string* match_grpc0Request::_internal_mutable_frame() {
  
  return frame_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* match_grpc0Request::release_frame() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.match_grpc0Request.frame)
  return frame_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void match_grpc0Request::set_allocated_frame(std::string* frame) {
  if (frame != nullptr) {
    
  } else {
    
  }
  frame_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frame,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.match_grpc0Request.frame)
}

// bytes keyframe = 2;
inline void match_grpc0Request::clear_keyframe() {
  keyframe_.ClearToEmpty();
}
inline const std::string& match_grpc0Request::keyframe() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc0Request.keyframe)
  return _internal_keyframe();
}
inline void match_grpc0Request::set_keyframe(const std::string& value) {
  _internal_set_keyframe(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc0Request.keyframe)
}
inline std::string* match_grpc0Request::mutable_keyframe() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.match_grpc0Request.keyframe)
  return _internal_mutable_keyframe();
}
inline const std::string& match_grpc0Request::_internal_keyframe() const {
  return keyframe_.Get();
}
inline void match_grpc0Request::_internal_set_keyframe(const std::string& value) {
  
  keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void match_grpc0Request::set_keyframe(std::string&& value) {
  
  keyframe_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.match_grpc0Request.keyframe)
}
inline void match_grpc0Request::set_keyframe(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.match_grpc0Request.keyframe)
}
inline void match_grpc0Request::set_keyframe(const void* value,
    size_t size) {
  
  keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.match_grpc0Request.keyframe)
}
inline std::string* match_grpc0Request::_internal_mutable_keyframe() {
  
  return keyframe_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* match_grpc0Request::release_keyframe() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.match_grpc0Request.keyframe)
  return keyframe_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void match_grpc0Request::set_allocated_keyframe(std::string* keyframe) {
  if (keyframe != nullptr) {
    
  } else {
    
  }
  keyframe_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keyframe,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.match_grpc0Request.keyframe)
}

// bytes matches = 3;
inline void match_grpc0Request::clear_matches() {
  matches_.ClearToEmpty();
}
inline const std::string& match_grpc0Request::matches() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc0Request.matches)
  return _internal_matches();
}
inline void match_grpc0Request::set_matches(const std::string& value) {
  _internal_set_matches(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc0Request.matches)
}
inline std::string* match_grpc0Request::mutable_matches() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.match_grpc0Request.matches)
  return _internal_mutable_matches();
}
inline const std::string& match_grpc0Request::_internal_matches() const {
  return matches_.Get();
}
inline void match_grpc0Request::_internal_set_matches(const std::string& value) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void match_grpc0Request::set_matches(std::string&& value) {
  
  matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.match_grpc0Request.matches)
}
inline void match_grpc0Request::set_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.match_grpc0Request.matches)
}
inline void match_grpc0Request::set_matches(const void* value,
    size_t size) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.match_grpc0Request.matches)
}
inline std::string* match_grpc0Request::_internal_mutable_matches() {
  
  return matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* match_grpc0Request::release_matches() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.match_grpc0Request.matches)
  return matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void match_grpc0Request::set_allocated_matches(std::string* matches) {
  if (matches != nullptr) {
    
  } else {
    
  }
  matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.match_grpc0Request.matches)
}

// -------------------------------------------------------------------

// match_grpc0Response

// bytes matches = 1;
inline void match_grpc0Response::clear_matches() {
  matches_.ClearToEmpty();
}
inline const std::string& match_grpc0Response::matches() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc0Response.matches)
  return _internal_matches();
}
inline void match_grpc0Response::set_matches(const std::string& value) {
  _internal_set_matches(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc0Response.matches)
}
inline std::string* match_grpc0Response::mutable_matches() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.match_grpc0Response.matches)
  return _internal_mutable_matches();
}
inline const std::string& match_grpc0Response::_internal_matches() const {
  return matches_.Get();
}
inline void match_grpc0Response::_internal_set_matches(const std::string& value) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void match_grpc0Response::set_matches(std::string&& value) {
  
  matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.match_grpc0Response.matches)
}
inline void match_grpc0Response::set_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.match_grpc0Response.matches)
}
inline void match_grpc0Response::set_matches(const void* value,
    size_t size) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.match_grpc0Response.matches)
}
inline std::string* match_grpc0Response::_internal_mutable_matches() {
  
  return matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* match_grpc0Response::release_matches() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.match_grpc0Response.matches)
  return matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void match_grpc0Response::set_allocated_matches(std::string* matches) {
  if (matches != nullptr) {
    
  } else {
    
  }
  matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.match_grpc0Response.matches)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void match_grpc0Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 match_grpc0Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 match_grpc0Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc0Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void match_grpc0Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void match_grpc0Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc0Response.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// match_grpc1Request

// bytes indexDescriptors = 1;
inline void match_grpc1Request::clear_indexdescriptors() {
  indexdescriptors_.ClearToEmpty();
}
inline const std::string& match_grpc1Request::indexdescriptors() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc1Request.indexDescriptors)
  return _internal_indexdescriptors();
}
inline void match_grpc1Request::set_indexdescriptors(const std::string& value) {
  _internal_set_indexdescriptors(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc1Request.indexDescriptors)
}
inline std::string* match_grpc1Request::mutable_indexdescriptors() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.match_grpc1Request.indexDescriptors)
  return _internal_mutable_indexdescriptors();
}
inline const std::string& match_grpc1Request::_internal_indexdescriptors() const {
  return indexdescriptors_.Get();
}
inline void match_grpc1Request::_internal_set_indexdescriptors(const std::string& value) {
  
  indexdescriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void match_grpc1Request::set_indexdescriptors(std::string&& value) {
  
  indexdescriptors_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.match_grpc1Request.indexDescriptors)
}
inline void match_grpc1Request::set_indexdescriptors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  indexdescriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.match_grpc1Request.indexDescriptors)
}
inline void match_grpc1Request::set_indexdescriptors(const void* value,
    size_t size) {
  
  indexdescriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.match_grpc1Request.indexDescriptors)
}
inline std::string* match_grpc1Request::_internal_mutable_indexdescriptors() {
  
  return indexdescriptors_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* match_grpc1Request::release_indexdescriptors() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.match_grpc1Request.indexDescriptors)
  return indexdescriptors_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void match_grpc1Request::set_allocated_indexdescriptors(std::string* indexdescriptors) {
  if (indexdescriptors != nullptr) {
    
  } else {
    
  }
  indexdescriptors_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), indexdescriptors,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.match_grpc1Request.indexDescriptors)
}

// bytes descriptors = 2;
inline void match_grpc1Request::clear_descriptors() {
  descriptors_.ClearToEmpty();
}
inline const std::string& match_grpc1Request::descriptors() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc1Request.descriptors)
  return _internal_descriptors();
}
inline void match_grpc1Request::set_descriptors(const std::string& value) {
  _internal_set_descriptors(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc1Request.descriptors)
}
inline std::string* match_grpc1Request::mutable_descriptors() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.match_grpc1Request.descriptors)
  return _internal_mutable_descriptors();
}
inline const std::string& match_grpc1Request::_internal_descriptors() const {
  return descriptors_.Get();
}
inline void match_grpc1Request::_internal_set_descriptors(const std::string& value) {
  
  descriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void match_grpc1Request::set_descriptors(std::string&& value) {
  
  descriptors_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.match_grpc1Request.descriptors)
}
inline void match_grpc1Request::set_descriptors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  descriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.match_grpc1Request.descriptors)
}
inline void match_grpc1Request::set_descriptors(const void* value,
    size_t size) {
  
  descriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.match_grpc1Request.descriptors)
}
inline std::string* match_grpc1Request::_internal_mutable_descriptors() {
  
  return descriptors_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* match_grpc1Request::release_descriptors() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.match_grpc1Request.descriptors)
  return descriptors_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void match_grpc1Request::set_allocated_descriptors(std::string* descriptors) {
  if (descriptors != nullptr) {
    
  } else {
    
  }
  descriptors_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), descriptors,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.match_grpc1Request.descriptors)
}

// bytes keyframe = 3;
inline void match_grpc1Request::clear_keyframe() {
  keyframe_.ClearToEmpty();
}
inline const std::string& match_grpc1Request::keyframe() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc1Request.keyframe)
  return _internal_keyframe();
}
inline void match_grpc1Request::set_keyframe(const std::string& value) {
  _internal_set_keyframe(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc1Request.keyframe)
}
inline std::string* match_grpc1Request::mutable_keyframe() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.match_grpc1Request.keyframe)
  return _internal_mutable_keyframe();
}
inline const std::string& match_grpc1Request::_internal_keyframe() const {
  return keyframe_.Get();
}
inline void match_grpc1Request::_internal_set_keyframe(const std::string& value) {
  
  keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void match_grpc1Request::set_keyframe(std::string&& value) {
  
  keyframe_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.match_grpc1Request.keyframe)
}
inline void match_grpc1Request::set_keyframe(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.match_grpc1Request.keyframe)
}
inline void match_grpc1Request::set_keyframe(const void* value,
    size_t size) {
  
  keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.match_grpc1Request.keyframe)
}
inline std::string* match_grpc1Request::_internal_mutable_keyframe() {
  
  return keyframe_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* match_grpc1Request::release_keyframe() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.match_grpc1Request.keyframe)
  return keyframe_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void match_grpc1Request::set_allocated_keyframe(std::string* keyframe) {
  if (keyframe != nullptr) {
    
  } else {
    
  }
  keyframe_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keyframe,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.match_grpc1Request.keyframe)
}

// bytes matches = 4;
inline void match_grpc1Request::clear_matches() {
  matches_.ClearToEmpty();
}
inline const std::string& match_grpc1Request::matches() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc1Request.matches)
  return _internal_matches();
}
inline void match_grpc1Request::set_matches(const std::string& value) {
  _internal_set_matches(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc1Request.matches)
}
inline std::string* match_grpc1Request::mutable_matches() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.match_grpc1Request.matches)
  return _internal_mutable_matches();
}
inline const std::string& match_grpc1Request::_internal_matches() const {
  return matches_.Get();
}
inline void match_grpc1Request::_internal_set_matches(const std::string& value) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void match_grpc1Request::set_matches(std::string&& value) {
  
  matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.match_grpc1Request.matches)
}
inline void match_grpc1Request::set_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.match_grpc1Request.matches)
}
inline void match_grpc1Request::set_matches(const void* value,
    size_t size) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.match_grpc1Request.matches)
}
inline std::string* match_grpc1Request::_internal_mutable_matches() {
  
  return matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* match_grpc1Request::release_matches() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.match_grpc1Request.matches)
  return matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void match_grpc1Request::set_allocated_matches(std::string* matches) {
  if (matches != nullptr) {
    
  } else {
    
  }
  matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.match_grpc1Request.matches)
}

// -------------------------------------------------------------------

// match_grpc1Response

// bytes matches = 1;
inline void match_grpc1Response::clear_matches() {
  matches_.ClearToEmpty();
}
inline const std::string& match_grpc1Response::matches() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc1Response.matches)
  return _internal_matches();
}
inline void match_grpc1Response::set_matches(const std::string& value) {
  _internal_set_matches(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc1Response.matches)
}
inline std::string* match_grpc1Response::mutable_matches() {
  // @@protoc_insertion_point(field_mutable:grpcIKeyframeRetriever.match_grpc1Response.matches)
  return _internal_mutable_matches();
}
inline const std::string& match_grpc1Response::_internal_matches() const {
  return matches_.Get();
}
inline void match_grpc1Response::_internal_set_matches(const std::string& value) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void match_grpc1Response::set_matches(std::string&& value) {
  
  matches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIKeyframeRetriever.match_grpc1Response.matches)
}
inline void match_grpc1Response::set_matches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIKeyframeRetriever.match_grpc1Response.matches)
}
inline void match_grpc1Response::set_matches(const void* value,
    size_t size) {
  
  matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIKeyframeRetriever.match_grpc1Response.matches)
}
inline std::string* match_grpc1Response::_internal_mutable_matches() {
  
  return matches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* match_grpc1Response::release_matches() {
  // @@protoc_insertion_point(field_release:grpcIKeyframeRetriever.match_grpc1Response.matches)
  return matches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void match_grpc1Response::set_allocated_matches(std::string* matches) {
  if (matches != nullptr) {
    
  } else {
    
  }
  matches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), matches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIKeyframeRetriever.match_grpc1Response.matches)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void match_grpc1Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 match_grpc1Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 match_grpc1Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIKeyframeRetriever.match_grpc1Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void match_grpc1Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void match_grpc1Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIKeyframeRetriever.match_grpc1Response.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcIKeyframeRetriever

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcIKeyframeRetrieverService_2eproto
