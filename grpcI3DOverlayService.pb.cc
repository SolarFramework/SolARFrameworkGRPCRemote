// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcI3DOverlayService.proto

#include "grpcI3DOverlayService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcI3DOverlay {
constexpr setCameraParametersRequest::setCameraParametersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : intrinsic_parameters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , distorsion_parameters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setCameraParametersRequestDefaultTypeInternal {
  constexpr setCameraParametersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setCameraParametersRequestDefaultTypeInternal() {}
  union {
    setCameraParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setCameraParametersRequestDefaultTypeInternal _setCameraParametersRequest_default_instance_;
constexpr drawRequest::drawRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pose_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , displayimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct drawRequestDefaultTypeInternal {
  constexpr drawRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~drawRequestDefaultTypeInternal() {}
  union {
    drawRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT drawRequestDefaultTypeInternal _drawRequest_default_instance_;
}  // namespace grpcI3DOverlay
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcI3DOverlayService_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcI3DOverlayService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcI3DOverlayService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcI3DOverlayService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI3DOverlay::setCameraParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI3DOverlay::setCameraParametersRequest, intrinsic_parameters_),
  PROTOBUF_FIELD_OFFSET(::grpcI3DOverlay::setCameraParametersRequest, distorsion_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI3DOverlay::drawRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI3DOverlay::drawRequest, pose_),
  PROTOBUF_FIELD_OFFSET(::grpcI3DOverlay::drawRequest, displayimage_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcI3DOverlay::setCameraParametersRequest)},
  { 7, -1, sizeof(::grpcI3DOverlay::drawRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI3DOverlay::_setCameraParametersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI3DOverlay::_drawRequest_default_instance_),
};

const char descriptor_table_protodef_grpcI3DOverlayService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033grpcI3DOverlayService.proto\022\016grpcI3DOv"
  "erlay\032\033google/protobuf/empty.proto\"Y\n\032se"
  "tCameraParametersRequest\022\034\n\024intrinsic_pa"
  "rameters\030\001 \001(\014\022\035\n\025distorsion_parameters\030"
  "\002 \001(\014\"1\n\013drawRequest\022\014\n\004pose\030\001 \001(\014\022\024\n\014di"
  "splayImage\030\002 \001(\0142\263\001\n\025grpcI3DOverlayServi"
  "ce\022[\n\023setCameraParameters\022*.grpcI3DOverl"
  "ay.setCameraParametersRequest\032\026.google.p"
  "rotobuf.Empty\"\000\022=\n\004draw\022\033.grpcI3DOverlay"
  ".drawRequest\032\026.google.protobuf.Empty\"\000b\006"
  "proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcI3DOverlayService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcI3DOverlayService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcI3DOverlayService_2eproto = {
  false, false, 406, descriptor_table_protodef_grpcI3DOverlayService_2eproto, "grpcI3DOverlayService.proto", 
  &descriptor_table_grpcI3DOverlayService_2eproto_once, descriptor_table_grpcI3DOverlayService_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_grpcI3DOverlayService_2eproto::offsets,
  file_level_metadata_grpcI3DOverlayService_2eproto, file_level_enum_descriptors_grpcI3DOverlayService_2eproto, file_level_service_descriptors_grpcI3DOverlayService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcI3DOverlayService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcI3DOverlayService_2eproto);
  return descriptor_table_grpcI3DOverlayService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcI3DOverlayService_2eproto(&descriptor_table_grpcI3DOverlayService_2eproto);
namespace grpcI3DOverlay {

// ===================================================================

class setCameraParametersRequest::_Internal {
 public:
};

setCameraParametersRequest::setCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcI3DOverlay.setCameraParametersRequest)
}
setCameraParametersRequest::setCameraParametersRequest(const setCameraParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  intrinsic_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_intrinsic_parameters().empty()) {
    intrinsic_parameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_intrinsic_parameters(), 
      GetArena());
  }
  distorsion_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_distorsion_parameters().empty()) {
    distorsion_parameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_distorsion_parameters(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcI3DOverlay.setCameraParametersRequest)
}

void setCameraParametersRequest::SharedCtor() {
intrinsic_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
distorsion_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setCameraParametersRequest::~setCameraParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcI3DOverlay.setCameraParametersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setCameraParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  intrinsic_parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  distorsion_parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setCameraParametersRequest::ArenaDtor(void* object) {
  setCameraParametersRequest* _this = reinterpret_cast< setCameraParametersRequest* >(object);
  (void)_this;
}
void setCameraParametersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setCameraParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setCameraParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI3DOverlay.setCameraParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intrinsic_parameters_.ClearToEmpty();
  distorsion_parameters_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setCameraParametersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes intrinsic_parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_intrinsic_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes distorsion_parameters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_distorsion_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setCameraParametersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI3DOverlay.setCameraParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes intrinsic_parameters = 1;
  if (this->intrinsic_parameters().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_intrinsic_parameters(), target);
  }

  // bytes distorsion_parameters = 2;
  if (this->distorsion_parameters().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_distorsion_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI3DOverlay.setCameraParametersRequest)
  return target;
}

size_t setCameraParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI3DOverlay.setCameraParametersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes intrinsic_parameters = 1;
  if (this->intrinsic_parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_intrinsic_parameters());
  }

  // bytes distorsion_parameters = 2;
  if (this->distorsion_parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_distorsion_parameters());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setCameraParametersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcI3DOverlay.setCameraParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setCameraParametersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setCameraParametersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcI3DOverlay.setCameraParametersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcI3DOverlay.setCameraParametersRequest)
    MergeFrom(*source);
  }
}

void setCameraParametersRequest::MergeFrom(const setCameraParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI3DOverlay.setCameraParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.intrinsic_parameters().size() > 0) {
    _internal_set_intrinsic_parameters(from._internal_intrinsic_parameters());
  }
  if (from.distorsion_parameters().size() > 0) {
    _internal_set_distorsion_parameters(from._internal_distorsion_parameters());
  }
}

void setCameraParametersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcI3DOverlay.setCameraParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setCameraParametersRequest::CopyFrom(const setCameraParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI3DOverlay.setCameraParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setCameraParametersRequest::IsInitialized() const {
  return true;
}

void setCameraParametersRequest::InternalSwap(setCameraParametersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  intrinsic_parameters_.Swap(&other->intrinsic_parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  distorsion_parameters_.Swap(&other->distorsion_parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setCameraParametersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class drawRequest::_Internal {
 public:
};

drawRequest::drawRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcI3DOverlay.drawRequest)
}
drawRequest::drawRequest(const drawRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pose_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pose().empty()) {
    pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pose(), 
      GetArena());
  }
  displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_displayimage().empty()) {
    displayimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_displayimage(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcI3DOverlay.drawRequest)
}

void drawRequest::SharedCtor() {
pose_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
displayimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

drawRequest::~drawRequest() {
  // @@protoc_insertion_point(destructor:grpcI3DOverlay.drawRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void drawRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pose_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  displayimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void drawRequest::ArenaDtor(void* object) {
  drawRequest* _this = reinterpret_cast< drawRequest* >(object);
  (void)_this;
}
void drawRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void drawRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void drawRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI3DOverlay.drawRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pose_.ClearToEmpty();
  displayimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* drawRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes pose = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pose();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes displayImage = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_displayimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* drawRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI3DOverlay.drawRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pose = 1;
  if (this->pose().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pose(), target);
  }

  // bytes displayImage = 2;
  if (this->displayimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_displayimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI3DOverlay.drawRequest)
  return target;
}

size_t drawRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI3DOverlay.drawRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pose = 1;
  if (this->pose().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pose());
  }

  // bytes displayImage = 2;
  if (this->displayimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_displayimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void drawRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcI3DOverlay.drawRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const drawRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<drawRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcI3DOverlay.drawRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcI3DOverlay.drawRequest)
    MergeFrom(*source);
  }
}

void drawRequest::MergeFrom(const drawRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI3DOverlay.drawRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pose().size() > 0) {
    _internal_set_pose(from._internal_pose());
  }
  if (from.displayimage().size() > 0) {
    _internal_set_displayimage(from._internal_displayimage());
  }
}

void drawRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcI3DOverlay.drawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void drawRequest::CopyFrom(const drawRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI3DOverlay.drawRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drawRequest::IsInitialized() const {
  return true;
}

void drawRequest::InternalSwap(drawRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pose_.Swap(&other->pose_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  displayimage_.Swap(&other->displayimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata drawRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcI3DOverlay
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcI3DOverlay::setCameraParametersRequest* Arena::CreateMaybeMessage< ::grpcI3DOverlay::setCameraParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI3DOverlay::setCameraParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI3DOverlay::drawRequest* Arena::CreateMaybeMessage< ::grpcI3DOverlay::drawRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI3DOverlay::drawRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
