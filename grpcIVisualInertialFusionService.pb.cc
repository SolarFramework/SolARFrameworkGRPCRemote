// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIVisualInertialFusionService.proto

#include "grpcIVisualInertialFusionService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIVisualInertialFusion {
constexpr initRequest::initRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : initialvisiondata_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct initRequestDefaultTypeInternal {
  constexpr initRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~initRequestDefaultTypeInternal() {}
  union {
    initRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT initRequestDefaultTypeInternal _initRequest_default_instance_;
constexpr addInertialDataRequest::addInertialDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : inertialdata_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct addInertialDataRequestDefaultTypeInternal {
  constexpr addInertialDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addInertialDataRequestDefaultTypeInternal() {}
  union {
    addInertialDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addInertialDataRequestDefaultTypeInternal _addInertialDataRequest_default_instance_;
constexpr addVisionDataRequest::addVisionDataRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : visiondata_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct addVisionDataRequestDefaultTypeInternal {
  constexpr addVisionDataRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addVisionDataRequestDefaultTypeInternal() {}
  union {
    addVisionDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addVisionDataRequestDefaultTypeInternal _addVisionDataRequest_default_instance_;
constexpr processRequest::processRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : outputdata_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct processRequestDefaultTypeInternal {
  constexpr processRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~processRequestDefaultTypeInternal() {}
  union {
    processRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT processRequestDefaultTypeInternal _processRequest_default_instance_;
constexpr processResponse::processResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : outputdata_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct processResponseDefaultTypeInternal {
  constexpr processResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~processResponseDefaultTypeInternal() {}
  union {
    processResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT processResponseDefaultTypeInternal _processResponse_default_instance_;
}  // namespace grpcIVisualInertialFusion
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIVisualInertialFusionService_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIVisualInertialFusionService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIVisualInertialFusionService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIVisualInertialFusionService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::initRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::initRequest, initialvisiondata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::addInertialDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::addInertialDataRequest, inertialdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::addVisionDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::addVisionDataRequest, visiondata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::processRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::processRequest, outputdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::processResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::processResponse, outputdata_),
  PROTOBUF_FIELD_OFFSET(::grpcIVisualInertialFusion::processResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIVisualInertialFusion::initRequest)},
  { 6, -1, sizeof(::grpcIVisualInertialFusion::addInertialDataRequest)},
  { 12, -1, sizeof(::grpcIVisualInertialFusion::addVisionDataRequest)},
  { 18, -1, sizeof(::grpcIVisualInertialFusion::processRequest)},
  { 24, -1, sizeof(::grpcIVisualInertialFusion::processResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIVisualInertialFusion::_initRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIVisualInertialFusion::_addInertialDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIVisualInertialFusion::_addVisionDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIVisualInertialFusion::_processRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIVisualInertialFusion::_processResponse_default_instance_),
};

const char descriptor_table_protodef_grpcIVisualInertialFusionService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&grpcIVisualInertialFusionService.proto"
  "\022\031grpcIVisualInertialFusion\032\033google/prot"
  "obuf/empty.proto\"(\n\013initRequest\022\031\n\021initi"
  "alVisionData\030\001 \001(\014\".\n\026addInertialDataReq"
  "uest\022\024\n\014inertialData\030\001 \001(\014\"*\n\024addVisionD"
  "ataRequest\022\022\n\nvisionData\030\001 \001(\014\"$\n\016proces"
  "sRequest\022\022\n\noutputData\030\001 \001(\014\"B\n\017processR"
  "esponse\022\022\n\noutputData\030\001 \001(\014\022\033\n\023xpcfGrpcR"
  "eturnValue\030\002 \001(\0212\214\003\n grpcIVisualInertial"
  "FusionService\022H\n\004init\022&.grpcIVisualInert"
  "ialFusion.initRequest\032\026.google.protobuf."
  "Empty\"\000\022^\n\017addInertialData\0221.grpcIVisual"
  "InertialFusion.addInertialDataRequest\032\026."
  "google.protobuf.Empty\"\000\022Z\n\raddVisionData"
  "\022/.grpcIVisualInertialFusion.addVisionDa"
  "taRequest\032\026.google.protobuf.Empty\"\000\022b\n\007p"
  "rocess\022).grpcIVisualInertialFusion.proce"
  "ssRequest\032*.grpcIVisualInertialFusion.pr"
  "ocessResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIVisualInertialFusionService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIVisualInertialFusionService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIVisualInertialFusionService_2eproto = {
  false, false, 743, descriptor_table_protodef_grpcIVisualInertialFusionService_2eproto, "grpcIVisualInertialFusionService.proto", 
  &descriptor_table_grpcIVisualInertialFusionService_2eproto_once, descriptor_table_grpcIVisualInertialFusionService_2eproto_deps, 1, 5,
  schemas, file_default_instances, TableStruct_grpcIVisualInertialFusionService_2eproto::offsets,
  file_level_metadata_grpcIVisualInertialFusionService_2eproto, file_level_enum_descriptors_grpcIVisualInertialFusionService_2eproto, file_level_service_descriptors_grpcIVisualInertialFusionService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_grpcIVisualInertialFusionService_2eproto_getter() {
  return &descriptor_table_grpcIVisualInertialFusionService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIVisualInertialFusionService_2eproto(&descriptor_table_grpcIVisualInertialFusionService_2eproto);
namespace grpcIVisualInertialFusion {

// ===================================================================

class initRequest::_Internal {
 public:
};

initRequest::initRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIVisualInertialFusion.initRequest)
}
initRequest::initRequest(const initRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  initialvisiondata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_initialvisiondata().empty()) {
    initialvisiondata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_initialvisiondata(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIVisualInertialFusion.initRequest)
}

inline void initRequest::SharedCtor() {
initialvisiondata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

initRequest::~initRequest() {
  // @@protoc_insertion_point(destructor:grpcIVisualInertialFusion.initRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void initRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  initialvisiondata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void initRequest::ArenaDtor(void* object) {
  initRequest* _this = reinterpret_cast< initRequest* >(object);
  (void)_this;
}
void initRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void initRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void initRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIVisualInertialFusion.initRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initialvisiondata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* initRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes initialVisionData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_initialvisiondata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* initRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIVisualInertialFusion.initRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes initialVisionData = 1;
  if (!this->_internal_initialvisiondata().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_initialvisiondata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIVisualInertialFusion.initRequest)
  return target;
}

size_t initRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIVisualInertialFusion.initRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes initialVisionData = 1;
  if (!this->_internal_initialvisiondata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_initialvisiondata());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData initRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    initRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*initRequest::GetClassData() const { return &_class_data_; }

void initRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<initRequest *>(to)->MergeFrom(
      static_cast<const initRequest &>(from));
}


void initRequest::MergeFrom(const initRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIVisualInertialFusion.initRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_initialvisiondata().empty()) {
    _internal_set_initialvisiondata(from._internal_initialvisiondata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void initRequest::CopyFrom(const initRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIVisualInertialFusion.initRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool initRequest::IsInitialized() const {
  return true;
}

void initRequest::InternalSwap(initRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &initialvisiondata_, GetArenaForAllocation(),
      &other->initialvisiondata_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata initRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIVisualInertialFusionService_2eproto_getter, &descriptor_table_grpcIVisualInertialFusionService_2eproto_once,
      file_level_metadata_grpcIVisualInertialFusionService_2eproto[0]);
}

// ===================================================================

class addInertialDataRequest::_Internal {
 public:
};

addInertialDataRequest::addInertialDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIVisualInertialFusion.addInertialDataRequest)
}
addInertialDataRequest::addInertialDataRequest(const addInertialDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  inertialdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_inertialdata().empty()) {
    inertialdata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_inertialdata(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIVisualInertialFusion.addInertialDataRequest)
}

inline void addInertialDataRequest::SharedCtor() {
inertialdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

addInertialDataRequest::~addInertialDataRequest() {
  // @@protoc_insertion_point(destructor:grpcIVisualInertialFusion.addInertialDataRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void addInertialDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  inertialdata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void addInertialDataRequest::ArenaDtor(void* object) {
  addInertialDataRequest* _this = reinterpret_cast< addInertialDataRequest* >(object);
  (void)_this;
}
void addInertialDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addInertialDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addInertialDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIVisualInertialFusion.addInertialDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inertialdata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addInertialDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes inertialData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_inertialdata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addInertialDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIVisualInertialFusion.addInertialDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes inertialData = 1;
  if (!this->_internal_inertialdata().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_inertialdata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIVisualInertialFusion.addInertialDataRequest)
  return target;
}

size_t addInertialDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIVisualInertialFusion.addInertialDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes inertialData = 1;
  if (!this->_internal_inertialdata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_inertialdata());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addInertialDataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addInertialDataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addInertialDataRequest::GetClassData() const { return &_class_data_; }

void addInertialDataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<addInertialDataRequest *>(to)->MergeFrom(
      static_cast<const addInertialDataRequest &>(from));
}


void addInertialDataRequest::MergeFrom(const addInertialDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIVisualInertialFusion.addInertialDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_inertialdata().empty()) {
    _internal_set_inertialdata(from._internal_inertialdata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addInertialDataRequest::CopyFrom(const addInertialDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIVisualInertialFusion.addInertialDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addInertialDataRequest::IsInitialized() const {
  return true;
}

void addInertialDataRequest::InternalSwap(addInertialDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &inertialdata_, GetArenaForAllocation(),
      &other->inertialdata_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata addInertialDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIVisualInertialFusionService_2eproto_getter, &descriptor_table_grpcIVisualInertialFusionService_2eproto_once,
      file_level_metadata_grpcIVisualInertialFusionService_2eproto[1]);
}

// ===================================================================

class addVisionDataRequest::_Internal {
 public:
};

addVisionDataRequest::addVisionDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIVisualInertialFusion.addVisionDataRequest)
}
addVisionDataRequest::addVisionDataRequest(const addVisionDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  visiondata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_visiondata().empty()) {
    visiondata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_visiondata(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIVisualInertialFusion.addVisionDataRequest)
}

inline void addVisionDataRequest::SharedCtor() {
visiondata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

addVisionDataRequest::~addVisionDataRequest() {
  // @@protoc_insertion_point(destructor:grpcIVisualInertialFusion.addVisionDataRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void addVisionDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  visiondata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void addVisionDataRequest::ArenaDtor(void* object) {
  addVisionDataRequest* _this = reinterpret_cast< addVisionDataRequest* >(object);
  (void)_this;
}
void addVisionDataRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addVisionDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addVisionDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIVisualInertialFusion.addVisionDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  visiondata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addVisionDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes visionData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_visiondata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addVisionDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIVisualInertialFusion.addVisionDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes visionData = 1;
  if (!this->_internal_visiondata().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_visiondata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIVisualInertialFusion.addVisionDataRequest)
  return target;
}

size_t addVisionDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIVisualInertialFusion.addVisionDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes visionData = 1;
  if (!this->_internal_visiondata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_visiondata());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addVisionDataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    addVisionDataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addVisionDataRequest::GetClassData() const { return &_class_data_; }

void addVisionDataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<addVisionDataRequest *>(to)->MergeFrom(
      static_cast<const addVisionDataRequest &>(from));
}


void addVisionDataRequest::MergeFrom(const addVisionDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIVisualInertialFusion.addVisionDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_visiondata().empty()) {
    _internal_set_visiondata(from._internal_visiondata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addVisionDataRequest::CopyFrom(const addVisionDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIVisualInertialFusion.addVisionDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addVisionDataRequest::IsInitialized() const {
  return true;
}

void addVisionDataRequest::InternalSwap(addVisionDataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &visiondata_, GetArenaForAllocation(),
      &other->visiondata_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata addVisionDataRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIVisualInertialFusionService_2eproto_getter, &descriptor_table_grpcIVisualInertialFusionService_2eproto_once,
      file_level_metadata_grpcIVisualInertialFusionService_2eproto[2]);
}

// ===================================================================

class processRequest::_Internal {
 public:
};

processRequest::processRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIVisualInertialFusion.processRequest)
}
processRequest::processRequest(const processRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  outputdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outputdata().empty()) {
    outputdata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outputdata(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIVisualInertialFusion.processRequest)
}

inline void processRequest::SharedCtor() {
outputdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

processRequest::~processRequest() {
  // @@protoc_insertion_point(destructor:grpcIVisualInertialFusion.processRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void processRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  outputdata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void processRequest::ArenaDtor(void* object) {
  processRequest* _this = reinterpret_cast< processRequest* >(object);
  (void)_this;
}
void processRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void processRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void processRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIVisualInertialFusion.processRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputdata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* processRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes outputData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_outputdata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* processRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIVisualInertialFusion.processRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes outputData = 1;
  if (!this->_internal_outputdata().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_outputdata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIVisualInertialFusion.processRequest)
  return target;
}

size_t processRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIVisualInertialFusion.processRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes outputData = 1;
  if (!this->_internal_outputdata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outputdata());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData processRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    processRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*processRequest::GetClassData() const { return &_class_data_; }

void processRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<processRequest *>(to)->MergeFrom(
      static_cast<const processRequest &>(from));
}


void processRequest::MergeFrom(const processRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIVisualInertialFusion.processRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_outputdata().empty()) {
    _internal_set_outputdata(from._internal_outputdata());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void processRequest::CopyFrom(const processRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIVisualInertialFusion.processRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool processRequest::IsInitialized() const {
  return true;
}

void processRequest::InternalSwap(processRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &outputdata_, GetArenaForAllocation(),
      &other->outputdata_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata processRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIVisualInertialFusionService_2eproto_getter, &descriptor_table_grpcIVisualInertialFusionService_2eproto_once,
      file_level_metadata_grpcIVisualInertialFusionService_2eproto[3]);
}

// ===================================================================

class processResponse::_Internal {
 public:
};

processResponse::processResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIVisualInertialFusion.processResponse)
}
processResponse::processResponse(const processResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  outputdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outputdata().empty()) {
    outputdata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outputdata(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIVisualInertialFusion.processResponse)
}

inline void processResponse::SharedCtor() {
outputdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

processResponse::~processResponse() {
  // @@protoc_insertion_point(destructor:grpcIVisualInertialFusion.processResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void processResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  outputdata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void processResponse::ArenaDtor(void* object) {
  processResponse* _this = reinterpret_cast< processResponse* >(object);
  (void)_this;
}
void processResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void processResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void processResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIVisualInertialFusion.processResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputdata_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* processResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes outputData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_outputdata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* processResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIVisualInertialFusion.processResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes outputData = 1;
  if (!this->_internal_outputdata().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_outputdata(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIVisualInertialFusion.processResponse)
  return target;
}

size_t processResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIVisualInertialFusion.processResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes outputData = 1;
  if (!this->_internal_outputdata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outputdata());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData processResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    processResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*processResponse::GetClassData() const { return &_class_data_; }

void processResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<processResponse *>(to)->MergeFrom(
      static_cast<const processResponse &>(from));
}


void processResponse::MergeFrom(const processResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIVisualInertialFusion.processResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_outputdata().empty()) {
    _internal_set_outputdata(from._internal_outputdata());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void processResponse::CopyFrom(const processResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIVisualInertialFusion.processResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool processResponse::IsInitialized() const {
  return true;
}

void processResponse::InternalSwap(processResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &outputdata_, GetArenaForAllocation(),
      &other->outputdata_, other->GetArenaForAllocation()
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata processResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIVisualInertialFusionService_2eproto_getter, &descriptor_table_grpcIVisualInertialFusionService_2eproto_once,
      file_level_metadata_grpcIVisualInertialFusionService_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIVisualInertialFusion
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIVisualInertialFusion::initRequest* Arena::CreateMaybeMessage< ::grpcIVisualInertialFusion::initRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIVisualInertialFusion::initRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIVisualInertialFusion::addInertialDataRequest* Arena::CreateMaybeMessage< ::grpcIVisualInertialFusion::addInertialDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIVisualInertialFusion::addInertialDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIVisualInertialFusion::addVisionDataRequest* Arena::CreateMaybeMessage< ::grpcIVisualInertialFusion::addVisionDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIVisualInertialFusion::addVisionDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIVisualInertialFusion::processRequest* Arena::CreateMaybeMessage< ::grpcIVisualInertialFusion::processRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIVisualInertialFusion::processRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIVisualInertialFusion::processResponse* Arena::CreateMaybeMessage< ::grpcIVisualInertialFusion::processResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIVisualInertialFusion::processResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
