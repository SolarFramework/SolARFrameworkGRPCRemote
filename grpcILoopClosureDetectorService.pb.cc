// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcILoopClosureDetectorService.proto

#include "grpcILoopClosureDetectorService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcILoopClosureDetector {
PROTOBUF_CONSTEXPR detectRequest::detectRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.querykeyframe_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.detectedloopkeyframe_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sim3transform_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.duplicatedpointsindices_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct detectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR detectRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~detectRequestDefaultTypeInternal() {}
  union {
    detectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 detectRequestDefaultTypeInternal _detectRequest_default_instance_;
PROTOBUF_CONSTEXPR detectResponse::detectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.detectedloopkeyframe_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sim3transform_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.duplicatedpointsindices_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct detectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR detectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~detectResponseDefaultTypeInternal() {}
  union {
    detectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 detectResponseDefaultTypeInternal _detectResponse_default_instance_;
}  // namespace grpcILoopClosureDetector
static ::_pb::Metadata file_level_metadata_grpcILoopClosureDetectorService_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcILoopClosureDetectorService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcILoopClosureDetectorService_2eproto = nullptr;

const uint32_t TableStruct_grpcILoopClosureDetectorService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectRequest, _impl_.querykeyframe_),
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectRequest, _impl_.detectedloopkeyframe_),
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectRequest, _impl_.sim3transform_),
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectRequest, _impl_.duplicatedpointsindices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectResponse, _impl_.detectedloopkeyframe_),
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectResponse, _impl_.sim3transform_),
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectResponse, _impl_.duplicatedpointsindices_),
  PROTOBUF_FIELD_OFFSET(::grpcILoopClosureDetector::detectResponse, _impl_.xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcILoopClosureDetector::detectRequest)},
  { 11, -1, -1, sizeof(::grpcILoopClosureDetector::detectResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcILoopClosureDetector::_detectRequest_default_instance_._instance,
  &::grpcILoopClosureDetector::_detectResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcILoopClosureDetectorService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%grpcILoopClosureDetectorService.proto\022"
  "\030grpcILoopClosureDetector\032\033google/protob"
  "uf/empty.proto\"\241\001\n\rdetectRequest\022#\n\033grpc"
  "ServerCompressionFormat\030\001 \001(\005\022\025\n\rqueryKe"
  "yframe\030\002 \001(\014\022\034\n\024detectedLoopKeyframe\030\003 \001"
  "(\014\022\025\n\rsim3Transform\030\004 \001(\014\022\037\n\027duplicatedP"
  "ointsIndices\030\005 \001(\014\"\203\001\n\016detectResponse\022\034\n"
  "\024detectedLoopKeyframe\030\001 \001(\014\022\025\n\rsim3Trans"
  "form\030\002 \001(\014\022\037\n\027duplicatedPointsIndices\030\003 "
  "\001(\014\022\033\n\023xpcfGrpcReturnValue\030\004 \001(\0212\200\001\n\037grp"
  "cILoopClosureDetectorService\022]\n\006detect\022\'"
  ".grpcILoopClosureDetector.detectRequest\032"
  "(.grpcILoopClosureDetector.detectRespons"
  "e\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcILoopClosureDetectorService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcILoopClosureDetectorService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcILoopClosureDetectorService_2eproto = {
    false, false, 531, descriptor_table_protodef_grpcILoopClosureDetectorService_2eproto,
    "grpcILoopClosureDetectorService.proto",
    &descriptor_table_grpcILoopClosureDetectorService_2eproto_once, descriptor_table_grpcILoopClosureDetectorService_2eproto_deps, 1, 2,
    schemas, file_default_instances, TableStruct_grpcILoopClosureDetectorService_2eproto::offsets,
    file_level_metadata_grpcILoopClosureDetectorService_2eproto, file_level_enum_descriptors_grpcILoopClosureDetectorService_2eproto,
    file_level_service_descriptors_grpcILoopClosureDetectorService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcILoopClosureDetectorService_2eproto_getter() {
  return &descriptor_table_grpcILoopClosureDetectorService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcILoopClosureDetectorService_2eproto(&descriptor_table_grpcILoopClosureDetectorService_2eproto);
namespace grpcILoopClosureDetector {

// ===================================================================

class detectRequest::_Internal {
 public:
};

detectRequest::detectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcILoopClosureDetector.detectRequest)
}
detectRequest::detectRequest(const detectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  detectRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.querykeyframe_){}
    , decltype(_impl_.detectedloopkeyframe_){}
    , decltype(_impl_.sim3transform_){}
    , decltype(_impl_.duplicatedpointsindices_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.querykeyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.querykeyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_querykeyframe().empty()) {
    _this->_impl_.querykeyframe_.Set(from._internal_querykeyframe(), 
      _this->GetArenaForAllocation());
  }
  _impl_.detectedloopkeyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detectedloopkeyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_detectedloopkeyframe().empty()) {
    _this->_impl_.detectedloopkeyframe_.Set(from._internal_detectedloopkeyframe(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sim3transform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sim3transform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sim3transform().empty()) {
    _this->_impl_.sim3transform_.Set(from._internal_sim3transform(), 
      _this->GetArenaForAllocation());
  }
  _impl_.duplicatedpointsindices_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.duplicatedpointsindices_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_duplicatedpointsindices().empty()) {
    _this->_impl_.duplicatedpointsindices_.Set(from._internal_duplicatedpointsindices(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcILoopClosureDetector.detectRequest)
}

inline void detectRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.querykeyframe_){}
    , decltype(_impl_.detectedloopkeyframe_){}
    , decltype(_impl_.sim3transform_){}
    , decltype(_impl_.duplicatedpointsindices_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.querykeyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.querykeyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.detectedloopkeyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detectedloopkeyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sim3transform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sim3transform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.duplicatedpointsindices_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.duplicatedpointsindices_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

detectRequest::~detectRequest() {
  // @@protoc_insertion_point(destructor:grpcILoopClosureDetector.detectRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void detectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.querykeyframe_.Destroy();
  _impl_.detectedloopkeyframe_.Destroy();
  _impl_.sim3transform_.Destroy();
  _impl_.duplicatedpointsindices_.Destroy();
}

void detectRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void detectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcILoopClosureDetector.detectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.querykeyframe_.ClearToEmpty();
  _impl_.detectedloopkeyframe_.ClearToEmpty();
  _impl_.sim3transform_.ClearToEmpty();
  _impl_.duplicatedpointsindices_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* detectRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes queryKeyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_querykeyframe();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes detectedLoopKeyframe = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_detectedloopkeyframe();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes sim3Transform = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sim3transform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes duplicatedPointsIndices = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_duplicatedpointsindices();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* detectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcILoopClosureDetector.detectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes queryKeyframe = 2;
  if (!this->_internal_querykeyframe().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_querykeyframe(), target);
  }

  // bytes detectedLoopKeyframe = 3;
  if (!this->_internal_detectedloopkeyframe().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_detectedloopkeyframe(), target);
  }

  // bytes sim3Transform = 4;
  if (!this->_internal_sim3transform().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_sim3transform(), target);
  }

  // bytes duplicatedPointsIndices = 5;
  if (!this->_internal_duplicatedpointsindices().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_duplicatedpointsindices(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcILoopClosureDetector.detectRequest)
  return target;
}

size_t detectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcILoopClosureDetector.detectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes queryKeyframe = 2;
  if (!this->_internal_querykeyframe().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_querykeyframe());
  }

  // bytes detectedLoopKeyframe = 3;
  if (!this->_internal_detectedloopkeyframe().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_detectedloopkeyframe());
  }

  // bytes sim3Transform = 4;
  if (!this->_internal_sim3transform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sim3transform());
  }

  // bytes duplicatedPointsIndices = 5;
  if (!this->_internal_duplicatedpointsindices().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_duplicatedpointsindices());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData detectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    detectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*detectRequest::GetClassData() const { return &_class_data_; }


void detectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<detectRequest*>(&to_msg);
  auto& from = static_cast<const detectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcILoopClosureDetector.detectRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_querykeyframe().empty()) {
    _this->_internal_set_querykeyframe(from._internal_querykeyframe());
  }
  if (!from._internal_detectedloopkeyframe().empty()) {
    _this->_internal_set_detectedloopkeyframe(from._internal_detectedloopkeyframe());
  }
  if (!from._internal_sim3transform().empty()) {
    _this->_internal_set_sim3transform(from._internal_sim3transform());
  }
  if (!from._internal_duplicatedpointsindices().empty()) {
    _this->_internal_set_duplicatedpointsindices(from._internal_duplicatedpointsindices());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void detectRequest::CopyFrom(const detectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcILoopClosureDetector.detectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool detectRequest::IsInitialized() const {
  return true;
}

void detectRequest::InternalSwap(detectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.querykeyframe_, lhs_arena,
      &other->_impl_.querykeyframe_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.detectedloopkeyframe_, lhs_arena,
      &other->_impl_.detectedloopkeyframe_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sim3transform_, lhs_arena,
      &other->_impl_.sim3transform_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.duplicatedpointsindices_, lhs_arena,
      &other->_impl_.duplicatedpointsindices_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata detectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcILoopClosureDetectorService_2eproto_getter, &descriptor_table_grpcILoopClosureDetectorService_2eproto_once,
      file_level_metadata_grpcILoopClosureDetectorService_2eproto[0]);
}

// ===================================================================

class detectResponse::_Internal {
 public:
};

detectResponse::detectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcILoopClosureDetector.detectResponse)
}
detectResponse::detectResponse(const detectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  detectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.detectedloopkeyframe_){}
    , decltype(_impl_.sim3transform_){}
    , decltype(_impl_.duplicatedpointsindices_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.detectedloopkeyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detectedloopkeyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_detectedloopkeyframe().empty()) {
    _this->_impl_.detectedloopkeyframe_.Set(from._internal_detectedloopkeyframe(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sim3transform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sim3transform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sim3transform().empty()) {
    _this->_impl_.sim3transform_.Set(from._internal_sim3transform(), 
      _this->GetArenaForAllocation());
  }
  _impl_.duplicatedpointsindices_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.duplicatedpointsindices_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_duplicatedpointsindices().empty()) {
    _this->_impl_.duplicatedpointsindices_.Set(from._internal_duplicatedpointsindices(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcILoopClosureDetector.detectResponse)
}

inline void detectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.detectedloopkeyframe_){}
    , decltype(_impl_.sim3transform_){}
    , decltype(_impl_.duplicatedpointsindices_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.detectedloopkeyframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.detectedloopkeyframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sim3transform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sim3transform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.duplicatedpointsindices_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.duplicatedpointsindices_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

detectResponse::~detectResponse() {
  // @@protoc_insertion_point(destructor:grpcILoopClosureDetector.detectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void detectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.detectedloopkeyframe_.Destroy();
  _impl_.sim3transform_.Destroy();
  _impl_.duplicatedpointsindices_.Destroy();
}

void detectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void detectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcILoopClosureDetector.detectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.detectedloopkeyframe_.ClearToEmpty();
  _impl_.sim3transform_.ClearToEmpty();
  _impl_.duplicatedpointsindices_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* detectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes detectedLoopKeyframe = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_detectedloopkeyframe();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes sim3Transform = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sim3transform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes duplicatedPointsIndices = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_duplicatedpointsindices();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* detectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcILoopClosureDetector.detectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes detectedLoopKeyframe = 1;
  if (!this->_internal_detectedloopkeyframe().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_detectedloopkeyframe(), target);
  }

  // bytes sim3Transform = 2;
  if (!this->_internal_sim3transform().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_sim3transform(), target);
  }

  // bytes duplicatedPointsIndices = 3;
  if (!this->_internal_duplicatedpointsindices().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_duplicatedpointsindices(), target);
  }

  // sint32 xpcfGrpcReturnValue = 4;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(4, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcILoopClosureDetector.detectResponse)
  return target;
}

size_t detectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcILoopClosureDetector.detectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes detectedLoopKeyframe = 1;
  if (!this->_internal_detectedloopkeyframe().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_detectedloopkeyframe());
  }

  // bytes sim3Transform = 2;
  if (!this->_internal_sim3transform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_sim3transform());
  }

  // bytes duplicatedPointsIndices = 3;
  if (!this->_internal_duplicatedpointsindices().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_duplicatedpointsindices());
  }

  // sint32 xpcfGrpcReturnValue = 4;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData detectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    detectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*detectResponse::GetClassData() const { return &_class_data_; }


void detectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<detectResponse*>(&to_msg);
  auto& from = static_cast<const detectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcILoopClosureDetector.detectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_detectedloopkeyframe().empty()) {
    _this->_internal_set_detectedloopkeyframe(from._internal_detectedloopkeyframe());
  }
  if (!from._internal_sim3transform().empty()) {
    _this->_internal_set_sim3transform(from._internal_sim3transform());
  }
  if (!from._internal_duplicatedpointsindices().empty()) {
    _this->_internal_set_duplicatedpointsindices(from._internal_duplicatedpointsindices());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void detectResponse::CopyFrom(const detectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcILoopClosureDetector.detectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool detectResponse::IsInitialized() const {
  return true;
}

void detectResponse::InternalSwap(detectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.detectedloopkeyframe_, lhs_arena,
      &other->_impl_.detectedloopkeyframe_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sim3transform_, lhs_arena,
      &other->_impl_.sim3transform_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.duplicatedpointsindices_, lhs_arena,
      &other->_impl_.duplicatedpointsindices_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata detectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcILoopClosureDetectorService_2eproto_getter, &descriptor_table_grpcILoopClosureDetectorService_2eproto_once,
      file_level_metadata_grpcILoopClosureDetectorService_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcILoopClosureDetector
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcILoopClosureDetector::detectRequest*
Arena::CreateMaybeMessage< ::grpcILoopClosureDetector::detectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcILoopClosureDetector::detectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcILoopClosureDetector::detectResponse*
Arena::CreateMaybeMessage< ::grpcILoopClosureDetector::detectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcILoopClosureDetector::detectResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
