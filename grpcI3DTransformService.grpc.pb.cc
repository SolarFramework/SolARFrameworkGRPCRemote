// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: grpcI3DTransformService.proto

#include "grpcI3DTransformService.pb.h"
#include "grpcI3DTransformService.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace grpcI3DTransform {

static const char* grpcI3DTransformService_method_names[] = {
  "/grpcI3DTransform.grpcI3DTransformService/transform",
  "/grpcI3DTransform.grpcI3DTransformService/transformInPlace_grpc0",
  "/grpcI3DTransform.grpcI3DTransformService/transformInPlace_grpc1",
  "/grpcI3DTransform.grpcI3DTransformService/transformInPlace_grpc2",
  "/grpcI3DTransform.grpcI3DTransformService/transformInPlace_grpc3",
  "/grpcI3DTransform.grpcI3DTransformService/transformInPlace_grpc4",
};

std::unique_ptr< grpcI3DTransformService::Stub> grpcI3DTransformService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< grpcI3DTransformService::Stub> stub(new grpcI3DTransformService::Stub(channel, options));
  return stub;
}

grpcI3DTransformService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_transform_(grpcI3DTransformService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_transformInPlace_grpc0_(grpcI3DTransformService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_transformInPlace_grpc1_(grpcI3DTransformService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_transformInPlace_grpc2_(grpcI3DTransformService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_transformInPlace_grpc3_(grpcI3DTransformService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_transformInPlace_grpc4_(grpcI3DTransformService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status grpcI3DTransformService::Stub::transform(::grpc::ClientContext* context, const ::grpcI3DTransform::transformRequest& request, ::grpcI3DTransform::transformResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcI3DTransform::transformRequest, ::grpcI3DTransform::transformResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_transform_, context, request, response);
}

void grpcI3DTransformService::Stub::async::transform(::grpc::ClientContext* context, const ::grpcI3DTransform::transformRequest* request, ::grpcI3DTransform::transformResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcI3DTransform::transformRequest, ::grpcI3DTransform::transformResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transform_, context, request, response, std::move(f));
}

void grpcI3DTransformService::Stub::async::transform(::grpc::ClientContext* context, const ::grpcI3DTransform::transformRequest* request, ::grpcI3DTransform::transformResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transform_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformResponse>* grpcI3DTransformService::Stub::PrepareAsynctransformRaw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcI3DTransform::transformResponse, ::grpcI3DTransform::transformRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_transform_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformResponse>* grpcI3DTransformService::Stub::AsynctransformRaw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctransformRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcI3DTransformService::Stub::transformInPlace_grpc0(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc0Request& request, ::grpcI3DTransform::transformInPlace_grpc0Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcI3DTransform::transformInPlace_grpc0Request, ::grpcI3DTransform::transformInPlace_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_transformInPlace_grpc0_, context, request, response);
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc0(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc0Request* request, ::grpcI3DTransform::transformInPlace_grpc0Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcI3DTransform::transformInPlace_grpc0Request, ::grpcI3DTransform::transformInPlace_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc0_, context, request, response, std::move(f));
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc0(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc0Request* request, ::grpcI3DTransform::transformInPlace_grpc0Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc0_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc0Response>* grpcI3DTransformService::Stub::PrepareAsynctransformInPlace_grpc0Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcI3DTransform::transformInPlace_grpc0Response, ::grpcI3DTransform::transformInPlace_grpc0Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_transformInPlace_grpc0_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc0Response>* grpcI3DTransformService::Stub::AsynctransformInPlace_grpc0Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctransformInPlace_grpc0Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcI3DTransformService::Stub::transformInPlace_grpc1(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc1Request& request, ::grpcI3DTransform::transformInPlace_grpc1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcI3DTransform::transformInPlace_grpc1Request, ::grpcI3DTransform::transformInPlace_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_transformInPlace_grpc1_, context, request, response);
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc1(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc1Request* request, ::grpcI3DTransform::transformInPlace_grpc1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcI3DTransform::transformInPlace_grpc1Request, ::grpcI3DTransform::transformInPlace_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc1_, context, request, response, std::move(f));
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc1(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc1Request* request, ::grpcI3DTransform::transformInPlace_grpc1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc1Response>* grpcI3DTransformService::Stub::PrepareAsynctransformInPlace_grpc1Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcI3DTransform::transformInPlace_grpc1Response, ::grpcI3DTransform::transformInPlace_grpc1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_transformInPlace_grpc1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc1Response>* grpcI3DTransformService::Stub::AsynctransformInPlace_grpc1Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctransformInPlace_grpc1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcI3DTransformService::Stub::transformInPlace_grpc2(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc2Request& request, ::grpcI3DTransform::transformInPlace_grpc2Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcI3DTransform::transformInPlace_grpc2Request, ::grpcI3DTransform::transformInPlace_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_transformInPlace_grpc2_, context, request, response);
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc2(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc2Request* request, ::grpcI3DTransform::transformInPlace_grpc2Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcI3DTransform::transformInPlace_grpc2Request, ::grpcI3DTransform::transformInPlace_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc2_, context, request, response, std::move(f));
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc2(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc2Request* request, ::grpcI3DTransform::transformInPlace_grpc2Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc2Response>* grpcI3DTransformService::Stub::PrepareAsynctransformInPlace_grpc2Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcI3DTransform::transformInPlace_grpc2Response, ::grpcI3DTransform::transformInPlace_grpc2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_transformInPlace_grpc2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc2Response>* grpcI3DTransformService::Stub::AsynctransformInPlace_grpc2Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctransformInPlace_grpc2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcI3DTransformService::Stub::transformInPlace_grpc3(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc3Request& request, ::grpcI3DTransform::transformInPlace_grpc3Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcI3DTransform::transformInPlace_grpc3Request, ::grpcI3DTransform::transformInPlace_grpc3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_transformInPlace_grpc3_, context, request, response);
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc3(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc3Request* request, ::grpcI3DTransform::transformInPlace_grpc3Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcI3DTransform::transformInPlace_grpc3Request, ::grpcI3DTransform::transformInPlace_grpc3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc3_, context, request, response, std::move(f));
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc3(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc3Request* request, ::grpcI3DTransform::transformInPlace_grpc3Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc3_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc3Response>* grpcI3DTransformService::Stub::PrepareAsynctransformInPlace_grpc3Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc3Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcI3DTransform::transformInPlace_grpc3Response, ::grpcI3DTransform::transformInPlace_grpc3Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_transformInPlace_grpc3_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc3Response>* grpcI3DTransformService::Stub::AsynctransformInPlace_grpc3Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc3Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctransformInPlace_grpc3Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcI3DTransformService::Stub::transformInPlace_grpc4(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc4Request& request, ::grpcI3DTransform::transformInPlace_grpc4Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcI3DTransform::transformInPlace_grpc4Request, ::grpcI3DTransform::transformInPlace_grpc4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_transformInPlace_grpc4_, context, request, response);
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc4(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc4Request* request, ::grpcI3DTransform::transformInPlace_grpc4Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcI3DTransform::transformInPlace_grpc4Request, ::grpcI3DTransform::transformInPlace_grpc4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc4_, context, request, response, std::move(f));
}

void grpcI3DTransformService::Stub::async::transformInPlace_grpc4(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc4Request* request, ::grpcI3DTransform::transformInPlace_grpc4Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_transformInPlace_grpc4_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc4Response>* grpcI3DTransformService::Stub::PrepareAsynctransformInPlace_grpc4Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc4Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcI3DTransform::transformInPlace_grpc4Response, ::grpcI3DTransform::transformInPlace_grpc4Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_transformInPlace_grpc4_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcI3DTransform::transformInPlace_grpc4Response>* grpcI3DTransformService::Stub::AsynctransformInPlace_grpc4Raw(::grpc::ClientContext* context, const ::grpcI3DTransform::transformInPlace_grpc4Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctransformInPlace_grpc4Raw(context, request, cq);
  result->StartCall();
  return result;
}

grpcI3DTransformService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcI3DTransformService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcI3DTransformService::Service, ::grpcI3DTransform::transformRequest, ::grpcI3DTransform::transformResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcI3DTransformService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcI3DTransform::transformRequest* req,
             ::grpcI3DTransform::transformResponse* resp) {
               return service->transform(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcI3DTransformService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcI3DTransformService::Service, ::grpcI3DTransform::transformInPlace_grpc0Request, ::grpcI3DTransform::transformInPlace_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcI3DTransformService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcI3DTransform::transformInPlace_grpc0Request* req,
             ::grpcI3DTransform::transformInPlace_grpc0Response* resp) {
               return service->transformInPlace_grpc0(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcI3DTransformService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcI3DTransformService::Service, ::grpcI3DTransform::transformInPlace_grpc1Request, ::grpcI3DTransform::transformInPlace_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcI3DTransformService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcI3DTransform::transformInPlace_grpc1Request* req,
             ::grpcI3DTransform::transformInPlace_grpc1Response* resp) {
               return service->transformInPlace_grpc1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcI3DTransformService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcI3DTransformService::Service, ::grpcI3DTransform::transformInPlace_grpc2Request, ::grpcI3DTransform::transformInPlace_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcI3DTransformService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcI3DTransform::transformInPlace_grpc2Request* req,
             ::grpcI3DTransform::transformInPlace_grpc2Response* resp) {
               return service->transformInPlace_grpc2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcI3DTransformService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcI3DTransformService::Service, ::grpcI3DTransform::transformInPlace_grpc3Request, ::grpcI3DTransform::transformInPlace_grpc3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcI3DTransformService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcI3DTransform::transformInPlace_grpc3Request* req,
             ::grpcI3DTransform::transformInPlace_grpc3Response* resp) {
               return service->transformInPlace_grpc3(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcI3DTransformService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcI3DTransformService::Service, ::grpcI3DTransform::transformInPlace_grpc4Request, ::grpcI3DTransform::transformInPlace_grpc4Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcI3DTransformService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcI3DTransform::transformInPlace_grpc4Request* req,
             ::grpcI3DTransform::transformInPlace_grpc4Response* resp) {
               return service->transformInPlace_grpc4(ctx, req, resp);
             }, this)));
}

grpcI3DTransformService::Service::~Service() {
}

::grpc::Status grpcI3DTransformService::Service::transform(::grpc::ServerContext* context, const ::grpcI3DTransform::transformRequest* request, ::grpcI3DTransform::transformResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcI3DTransformService::Service::transformInPlace_grpc0(::grpc::ServerContext* context, const ::grpcI3DTransform::transformInPlace_grpc0Request* request, ::grpcI3DTransform::transformInPlace_grpc0Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcI3DTransformService::Service::transformInPlace_grpc1(::grpc::ServerContext* context, const ::grpcI3DTransform::transformInPlace_grpc1Request* request, ::grpcI3DTransform::transformInPlace_grpc1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcI3DTransformService::Service::transformInPlace_grpc2(::grpc::ServerContext* context, const ::grpcI3DTransform::transformInPlace_grpc2Request* request, ::grpcI3DTransform::transformInPlace_grpc2Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcI3DTransformService::Service::transformInPlace_grpc3(::grpc::ServerContext* context, const ::grpcI3DTransform::transformInPlace_grpc3Request* request, ::grpcI3DTransform::transformInPlace_grpc3Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcI3DTransformService::Service::transformInPlace_grpc4(::grpc::ServerContext* context, const ::grpcI3DTransform::transformInPlace_grpc4Request* request, ::grpcI3DTransform::transformInPlace_grpc4Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace grpcI3DTransform

