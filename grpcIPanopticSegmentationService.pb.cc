// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIPanopticSegmentationService.proto

#include "grpcIPanopticSegmentationService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIPanopticSegmentation {
constexpr segmentRequest::segmentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , labelmap_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , classobjectids_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , scores_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct segmentRequestDefaultTypeInternal {
  constexpr segmentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~segmentRequestDefaultTypeInternal() {}
  union {
    segmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT segmentRequestDefaultTypeInternal _segmentRequest_default_instance_;
constexpr segmentResponse::segmentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : labelmap_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , boxes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , classobjectids_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , scores_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct segmentResponseDefaultTypeInternal {
  constexpr segmentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~segmentResponseDefaultTypeInternal() {}
  union {
    segmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT segmentResponseDefaultTypeInternal _segmentResponse_default_instance_;
}  // namespace grpcIPanopticSegmentation
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIPanopticSegmentationService_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIPanopticSegmentationService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIPanopticSegmentationService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIPanopticSegmentationService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentRequest, image_),
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentRequest, labelmap_),
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentRequest, boxes_),
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentRequest, classobjectids_),
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentRequest, scores_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentResponse, labelmap_),
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentResponse, boxes_),
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentResponse, classobjectids_),
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentResponse, scores_),
  PROTOBUF_FIELD_OFFSET(::grpcIPanopticSegmentation::segmentResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIPanopticSegmentation::segmentRequest)},
  { 11, -1, sizeof(::grpcIPanopticSegmentation::segmentResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIPanopticSegmentation::_segmentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIPanopticSegmentation::_segmentResponse_default_instance_),
};

const char descriptor_table_protodef_grpcIPanopticSegmentationService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&grpcIPanopticSegmentationService.proto"
  "\022\031grpcIPanopticSegmentation\032\033google/prot"
  "obuf/empty.proto\"\215\001\n\016segmentRequest\022#\n\033g"
  "rpcServerCompressionFormat\030\001 \001(\005\022\r\n\005imag"
  "e\030\002 \001(\014\022\020\n\010labelMap\030\003 \001(\014\022\r\n\005boxes\030\004 \001(\014"
  "\022\026\n\016classObjectIds\030\005 \001(\014\022\016\n\006scores\030\006 \001(\014"
  "\"w\n\017segmentResponse\022\020\n\010labelMap\030\001 \001(\014\022\r\n"
  "\005boxes\030\002 \001(\014\022\026\n\016classObjectIds\030\003 \001(\014\022\016\n\006"
  "scores\030\004 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\005 \001("
  "\0212\206\001\n grpcIPanopticSegmentationService\022b"
  "\n\007segment\022).grpcIPanopticSegmentation.se"
  "gmentRequest\032*.grpcIPanopticSegmentation"
  ".segmentResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIPanopticSegmentationService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIPanopticSegmentationService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIPanopticSegmentationService_2eproto = {
  false, false, 506, descriptor_table_protodef_grpcIPanopticSegmentationService_2eproto, "grpcIPanopticSegmentationService.proto", 
  &descriptor_table_grpcIPanopticSegmentationService_2eproto_once, descriptor_table_grpcIPanopticSegmentationService_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_grpcIPanopticSegmentationService_2eproto::offsets,
  file_level_metadata_grpcIPanopticSegmentationService_2eproto, file_level_enum_descriptors_grpcIPanopticSegmentationService_2eproto, file_level_service_descriptors_grpcIPanopticSegmentationService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIPanopticSegmentationService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIPanopticSegmentationService_2eproto);
  return descriptor_table_grpcIPanopticSegmentationService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIPanopticSegmentationService_2eproto(&descriptor_table_grpcIPanopticSegmentationService_2eproto);
namespace grpcIPanopticSegmentation {

// ===================================================================

class segmentRequest::_Internal {
 public:
};

segmentRequest::segmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIPanopticSegmentation.segmentRequest)
}
segmentRequest::segmentRequest(const segmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArena());
  }
  labelmap_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_labelmap().empty()) {
    labelmap_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_labelmap(), 
      GetArena());
  }
  boxes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_boxes().empty()) {
    boxes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxes(), 
      GetArena());
  }
  classobjectids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_classobjectids().empty()) {
    classobjectids_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_classobjectids(), 
      GetArena());
  }
  scores_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scores().empty()) {
    scores_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_scores(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIPanopticSegmentation.segmentRequest)
}

void segmentRequest::SharedCtor() {
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
labelmap_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
boxes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
classobjectids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
scores_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

segmentRequest::~segmentRequest() {
  // @@protoc_insertion_point(destructor:grpcIPanopticSegmentation.segmentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void segmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  labelmap_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  classobjectids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scores_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void segmentRequest::ArenaDtor(void* object) {
  segmentRequest* _this = reinterpret_cast< segmentRequest* >(object);
  (void)_this;
}
void segmentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void segmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void segmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIPanopticSegmentation.segmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_.ClearToEmpty();
  labelmap_.ClearToEmpty();
  boxes_.ClearToEmpty();
  classobjectids_.ClearToEmpty();
  scores_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* segmentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes labelMap = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_labelmap();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes boxes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_boxes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes classObjectIds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_classobjectids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes scores = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_scores();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* segmentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIPanopticSegmentation.segmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image(), target);
  }

  // bytes labelMap = 3;
  if (this->labelmap().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_labelmap(), target);
  }

  // bytes boxes = 4;
  if (this->boxes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_boxes(), target);
  }

  // bytes classObjectIds = 5;
  if (this->classobjectids().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_classobjectids(), target);
  }

  // bytes scores = 6;
  if (this->scores().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_scores(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIPanopticSegmentation.segmentRequest)
  return target;
}

size_t segmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIPanopticSegmentation.segmentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image());
  }

  // bytes labelMap = 3;
  if (this->labelmap().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_labelmap());
  }

  // bytes boxes = 4;
  if (this->boxes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_boxes());
  }

  // bytes classObjectIds = 5;
  if (this->classobjectids().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_classobjectids());
  }

  // bytes scores = 6;
  if (this->scores().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_scores());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void segmentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIPanopticSegmentation.segmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const segmentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<segmentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIPanopticSegmentation.segmentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIPanopticSegmentation.segmentRequest)
    MergeFrom(*source);
  }
}

void segmentRequest::MergeFrom(const segmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIPanopticSegmentation.segmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image().size() > 0) {
    _internal_set_image(from._internal_image());
  }
  if (from.labelmap().size() > 0) {
    _internal_set_labelmap(from._internal_labelmap());
  }
  if (from.boxes().size() > 0) {
    _internal_set_boxes(from._internal_boxes());
  }
  if (from.classobjectids().size() > 0) {
    _internal_set_classobjectids(from._internal_classobjectids());
  }
  if (from.scores().size() > 0) {
    _internal_set_scores(from._internal_scores());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void segmentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIPanopticSegmentation.segmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void segmentRequest::CopyFrom(const segmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIPanopticSegmentation.segmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool segmentRequest::IsInitialized() const {
  return true;
}

void segmentRequest::InternalSwap(segmentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_.Swap(&other->image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  labelmap_.Swap(&other->labelmap_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  boxes_.Swap(&other->boxes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  classobjectids_.Swap(&other->classobjectids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scores_.Swap(&other->scores_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata segmentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class segmentResponse::_Internal {
 public:
};

segmentResponse::segmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIPanopticSegmentation.segmentResponse)
}
segmentResponse::segmentResponse(const segmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  labelmap_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_labelmap().empty()) {
    labelmap_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_labelmap(), 
      GetArena());
  }
  boxes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_boxes().empty()) {
    boxes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_boxes(), 
      GetArena());
  }
  classobjectids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_classobjectids().empty()) {
    classobjectids_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_classobjectids(), 
      GetArena());
  }
  scores_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scores().empty()) {
    scores_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_scores(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIPanopticSegmentation.segmentResponse)
}

void segmentResponse::SharedCtor() {
labelmap_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
boxes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
classobjectids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
scores_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

segmentResponse::~segmentResponse() {
  // @@protoc_insertion_point(destructor:grpcIPanopticSegmentation.segmentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void segmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  labelmap_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  boxes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  classobjectids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scores_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void segmentResponse::ArenaDtor(void* object) {
  segmentResponse* _this = reinterpret_cast< segmentResponse* >(object);
  (void)_this;
}
void segmentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void segmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void segmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIPanopticSegmentation.segmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labelmap_.ClearToEmpty();
  boxes_.ClearToEmpty();
  classobjectids_.ClearToEmpty();
  scores_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* segmentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes labelMap = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_labelmap();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes boxes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_boxes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes classObjectIds = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_classobjectids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes scores = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_scores();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* segmentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIPanopticSegmentation.segmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes labelMap = 1;
  if (this->labelmap().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_labelmap(), target);
  }

  // bytes boxes = 2;
  if (this->boxes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_boxes(), target);
  }

  // bytes classObjectIds = 3;
  if (this->classobjectids().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_classobjectids(), target);
  }

  // bytes scores = 4;
  if (this->scores().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_scores(), target);
  }

  // sint32 xpcfGrpcReturnValue = 5;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(5, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIPanopticSegmentation.segmentResponse)
  return target;
}

size_t segmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIPanopticSegmentation.segmentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes labelMap = 1;
  if (this->labelmap().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_labelmap());
  }

  // bytes boxes = 2;
  if (this->boxes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_boxes());
  }

  // bytes classObjectIds = 3;
  if (this->classobjectids().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_classobjectids());
  }

  // bytes scores = 4;
  if (this->scores().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_scores());
  }

  // sint32 xpcfGrpcReturnValue = 5;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void segmentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIPanopticSegmentation.segmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const segmentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<segmentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIPanopticSegmentation.segmentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIPanopticSegmentation.segmentResponse)
    MergeFrom(*source);
  }
}

void segmentResponse::MergeFrom(const segmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIPanopticSegmentation.segmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.labelmap().size() > 0) {
    _internal_set_labelmap(from._internal_labelmap());
  }
  if (from.boxes().size() > 0) {
    _internal_set_boxes(from._internal_boxes());
  }
  if (from.classobjectids().size() > 0) {
    _internal_set_classobjectids(from._internal_classobjectids());
  }
  if (from.scores().size() > 0) {
    _internal_set_scores(from._internal_scores());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void segmentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIPanopticSegmentation.segmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void segmentResponse::CopyFrom(const segmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIPanopticSegmentation.segmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool segmentResponse::IsInitialized() const {
  return true;
}

void segmentResponse::InternalSwap(segmentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  labelmap_.Swap(&other->labelmap_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  boxes_.Swap(&other->boxes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  classobjectids_.Swap(&other->classobjectids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  scores_.Swap(&other->scores_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata segmentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIPanopticSegmentation
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIPanopticSegmentation::segmentRequest* Arena::CreateMaybeMessage< ::grpcIPanopticSegmentation::segmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIPanopticSegmentation::segmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIPanopticSegmentation::segmentResponse* Arena::CreateMaybeMessage< ::grpcIPanopticSegmentation::segmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIPanopticSegmentation::segmentResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
