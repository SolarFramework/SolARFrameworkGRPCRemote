// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIDeviceService.proto

#include "grpcIDeviceService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcIDevice {
PROTOBUF_CONSTEXPR startRequest::startRequest(
    ::_pbi::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct startRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR startRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~startRequestDefaultTypeInternal() {}
  union {
    startRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 startRequestDefaultTypeInternal _startRequest_default_instance_;
PROTOBUF_CONSTEXPR startResponse::startResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct startResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR startResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~startResponseDefaultTypeInternal() {}
  union {
    startResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 startResponseDefaultTypeInternal _startResponse_default_instance_;
PROTOBUF_CONSTEXPR stopRequest::stopRequest(
    ::_pbi::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct stopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR stopRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~stopRequestDefaultTypeInternal() {}
  union {
    stopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 stopRequestDefaultTypeInternal _stopRequest_default_instance_;
PROTOBUF_CONSTEXPR stopResponse::stopResponse(
    ::_pbi::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct stopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR stopResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~stopResponseDefaultTypeInternal() {}
  union {
    stopResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 stopResponseDefaultTypeInternal _stopResponse_default_instance_;
}  // namespace grpcIDevice
static ::_pb::Metadata file_level_metadata_grpcIDeviceService_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcIDeviceService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcIDeviceService_2eproto = nullptr;

const uint32_t TableStruct_grpcIDeviceService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDevice::startRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDevice::startRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDevice::startResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDevice::startResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDevice::stopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDevice::stopRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDevice::stopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDevice::stopResponse, xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcIDevice::startRequest)},
  { 7, -1, -1, sizeof(::grpcIDevice::startResponse)},
  { 14, -1, -1, sizeof(::grpcIDevice::stopRequest)},
  { 21, -1, -1, sizeof(::grpcIDevice::stopResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcIDevice::_startRequest_default_instance_._instance,
  &::grpcIDevice::_startResponse_default_instance_._instance,
  &::grpcIDevice::_stopRequest_default_instance_._instance,
  &::grpcIDevice::_stopResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcIDeviceService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030grpcIDeviceService.proto\022\013grpcIDevice\032"
  "\033google/protobuf/empty.proto\"3\n\014startReq"
  "uest\022#\n\033grpcServerCompressionFormat\030\001 \001("
  "\005\",\n\rstartResponse\022\033\n\023xpcfGrpcReturnValu"
  "e\030\001 \001(\021\"2\n\013stopRequest\022#\n\033grpcServerComp"
  "ressionFormat\030\001 \001(\005\"+\n\014stopResponse\022\033\n\023x"
  "pcfGrpcReturnValue\030\001 \001(\0212\225\001\n\022grpcIDevice"
  "Service\022@\n\005start\022\031.grpcIDevice.startRequ"
  "est\032\032.grpcIDevice.startResponse\"\000\022=\n\004sto"
  "p\022\030.grpcIDevice.stopRequest\032\031.grpcIDevic"
  "e.stopResponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcIDeviceService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcIDeviceService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcIDeviceService_2eproto = {
    false, false, 424, descriptor_table_protodef_grpcIDeviceService_2eproto,
    "grpcIDeviceService.proto",
    &descriptor_table_grpcIDeviceService_2eproto_once, descriptor_table_grpcIDeviceService_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_grpcIDeviceService_2eproto::offsets,
    file_level_metadata_grpcIDeviceService_2eproto, file_level_enum_descriptors_grpcIDeviceService_2eproto,
    file_level_service_descriptors_grpcIDeviceService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcIDeviceService_2eproto_getter() {
  return &descriptor_table_grpcIDeviceService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcIDeviceService_2eproto(&descriptor_table_grpcIDeviceService_2eproto);
namespace grpcIDevice {

// ===================================================================

class startRequest::_Internal {
 public:
};

startRequest::startRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIDevice.startRequest)
}
startRequest::startRequest(const startRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIDevice.startRequest)
}

inline void startRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

startRequest::~startRequest() {
  // @@protoc_insertion_point(destructor:grpcIDevice.startRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void startRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void startRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void startRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDevice.startRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* startRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* startRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDevice.startRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDevice.startRequest)
  return target;
}

size_t startRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDevice.startRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData startRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    startRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*startRequest::GetClassData() const { return &_class_data_; }

void startRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<startRequest *>(to)->MergeFrom(
      static_cast<const startRequest &>(from));
}


void startRequest::MergeFrom(const startRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDevice.startRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void startRequest::CopyFrom(const startRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDevice.startRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool startRequest::IsInitialized() const {
  return true;
}

void startRequest::InternalSwap(startRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata startRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDeviceService_2eproto_getter, &descriptor_table_grpcIDeviceService_2eproto_once,
      file_level_metadata_grpcIDeviceService_2eproto[0]);
}

// ===================================================================

class startResponse::_Internal {
 public:
};

startResponse::startResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIDevice.startResponse)
}
startResponse::startResponse(const startResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDevice.startResponse)
}

inline void startResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

startResponse::~startResponse() {
  // @@protoc_insertion_point(destructor:grpcIDevice.startResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void startResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void startResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void startResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDevice.startResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* startResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* startResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDevice.startResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDevice.startResponse)
  return target;
}

size_t startResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDevice.startResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData startResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    startResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*startResponse::GetClassData() const { return &_class_data_; }

void startResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<startResponse *>(to)->MergeFrom(
      static_cast<const startResponse &>(from));
}


void startResponse::MergeFrom(const startResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDevice.startResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void startResponse::CopyFrom(const startResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDevice.startResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool startResponse::IsInitialized() const {
  return true;
}

void startResponse::InternalSwap(startResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata startResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDeviceService_2eproto_getter, &descriptor_table_grpcIDeviceService_2eproto_once,
      file_level_metadata_grpcIDeviceService_2eproto[1]);
}

// ===================================================================

class stopRequest::_Internal {
 public:
};

stopRequest::stopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIDevice.stopRequest)
}
stopRequest::stopRequest(const stopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIDevice.stopRequest)
}

inline void stopRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

stopRequest::~stopRequest() {
  // @@protoc_insertion_point(destructor:grpcIDevice.stopRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void stopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void stopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void stopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDevice.stopRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* stopRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* stopRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDevice.stopRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDevice.stopRequest)
  return target;
}

size_t stopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDevice.stopRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData stopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    stopRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*stopRequest::GetClassData() const { return &_class_data_; }

void stopRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<stopRequest *>(to)->MergeFrom(
      static_cast<const stopRequest &>(from));
}


void stopRequest::MergeFrom(const stopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDevice.stopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void stopRequest::CopyFrom(const stopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDevice.stopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stopRequest::IsInitialized() const {
  return true;
}

void stopRequest::InternalSwap(stopRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata stopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDeviceService_2eproto_getter, &descriptor_table_grpcIDeviceService_2eproto_once,
      file_level_metadata_grpcIDeviceService_2eproto[2]);
}

// ===================================================================

class stopResponse::_Internal {
 public:
};

stopResponse::stopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIDevice.stopResponse)
}
stopResponse::stopResponse(const stopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDevice.stopResponse)
}

inline void stopResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

stopResponse::~stopResponse() {
  // @@protoc_insertion_point(destructor:grpcIDevice.stopResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void stopResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void stopResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void stopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDevice.stopResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* stopResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* stopResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDevice.stopResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDevice.stopResponse)
  return target;
}

size_t stopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDevice.stopResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData stopResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    stopResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*stopResponse::GetClassData() const { return &_class_data_; }

void stopResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<stopResponse *>(to)->MergeFrom(
      static_cast<const stopResponse &>(from));
}


void stopResponse::MergeFrom(const stopResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDevice.stopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void stopResponse::CopyFrom(const stopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDevice.stopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stopResponse::IsInitialized() const {
  return true;
}

void stopResponse::InternalSwap(stopResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata stopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDeviceService_2eproto_getter, &descriptor_table_grpcIDeviceService_2eproto_once,
      file_level_metadata_grpcIDeviceService_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIDevice
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIDevice::startRequest*
Arena::CreateMaybeMessage< ::grpcIDevice::startRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDevice::startRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDevice::startResponse*
Arena::CreateMaybeMessage< ::grpcIDevice::startResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDevice::startResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDevice::stopRequest*
Arena::CreateMaybeMessage< ::grpcIDevice::stopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDevice::stopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDevice::stopResponse*
Arena::CreateMaybeMessage< ::grpcIDevice::stopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDevice::stopResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
