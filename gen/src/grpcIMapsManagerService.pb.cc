// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIMapsManagerService.proto

#include "grpcIMapsManagerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcIMapsManager {
PROTOBUF_CONSTEXPR createMapRequest::createMapRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct createMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR createMapRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~createMapRequestDefaultTypeInternal() {}
  union {
    createMapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 createMapRequestDefaultTypeInternal _createMapRequest_default_instance_;
PROTOBUF_CONSTEXPR createMapResponse::createMapResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct createMapResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR createMapResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~createMapResponseDefaultTypeInternal() {}
  union {
    createMapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 createMapResponseDefaultTypeInternal _createMapResponse_default_instance_;
PROTOBUF_CONSTEXPR deleteMapRequest::deleteMapRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct deleteMapRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR deleteMapRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~deleteMapRequestDefaultTypeInternal() {}
  union {
    deleteMapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 deleteMapRequestDefaultTypeInternal _deleteMapRequest_default_instance_;
PROTOBUF_CONSTEXPR deleteMapResponse::deleteMapResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct deleteMapResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR deleteMapResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~deleteMapResponseDefaultTypeInternal() {}
  union {
    deleteMapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 deleteMapResponseDefaultTypeInternal _deleteMapResponse_default_instance_;
PROTOBUF_CONSTEXPR getAllMapsRequest::getAllMapsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuidlist_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getAllMapsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getAllMapsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getAllMapsRequestDefaultTypeInternal() {}
  union {
    getAllMapsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getAllMapsRequestDefaultTypeInternal _getAllMapsRequest_default_instance_;
PROTOBUF_CONSTEXPR getAllMapsResponse::getAllMapsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuidlist_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getAllMapsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getAllMapsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getAllMapsResponseDefaultTypeInternal() {}
  union {
    getAllMapsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getAllMapsResponseDefaultTypeInternal _getAllMapsResponse_default_instance_;
PROTOBUF_CONSTEXPR increaseMapClientsRequest::increaseMapClientsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.serviceurl_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct increaseMapClientsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR increaseMapClientsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~increaseMapClientsRequestDefaultTypeInternal() {}
  union {
    increaseMapClientsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 increaseMapClientsRequestDefaultTypeInternal _increaseMapClientsRequest_default_instance_;
PROTOBUF_CONSTEXPR increaseMapClientsResponse::increaseMapClientsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.serviceurl_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct increaseMapClientsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR increaseMapClientsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~increaseMapClientsResponseDefaultTypeInternal() {}
  union {
    increaseMapClientsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 increaseMapClientsResponseDefaultTypeInternal _increaseMapClientsResponse_default_instance_;
PROTOBUF_CONSTEXPR decreaseMapClientsRequest::decreaseMapClientsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct decreaseMapClientsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR decreaseMapClientsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~decreaseMapClientsRequestDefaultTypeInternal() {}
  union {
    decreaseMapClientsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 decreaseMapClientsRequestDefaultTypeInternal _decreaseMapClientsRequest_default_instance_;
PROTOBUF_CONSTEXPR decreaseMapClientsResponse::decreaseMapClientsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct decreaseMapClientsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR decreaseMapClientsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~decreaseMapClientsResponseDefaultTypeInternal() {}
  union {
    decreaseMapClientsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 decreaseMapClientsResponseDefaultTypeInternal _decreaseMapClientsResponse_default_instance_;
PROTOBUF_CONSTEXPR getMapRequestRequest::getMapRequestRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.map_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getMapRequestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMapRequestRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMapRequestRequestDefaultTypeInternal() {}
  union {
    getMapRequestRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMapRequestRequestDefaultTypeInternal _getMapRequestRequest_default_instance_;
PROTOBUF_CONSTEXPR getMapRequestResponse::getMapRequestResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.map_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getMapRequestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMapRequestResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMapRequestResponseDefaultTypeInternal() {}
  union {
    getMapRequestResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMapRequestResponseDefaultTypeInternal _getMapRequestResponse_default_instance_;
PROTOBUF_CONSTEXPR setMapRequestRequest::setMapRequestRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.mapdatastructure_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct setMapRequestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setMapRequestRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~setMapRequestRequestDefaultTypeInternal() {}
  union {
    setMapRequestRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setMapRequestRequestDefaultTypeInternal _setMapRequestRequest_default_instance_;
PROTOBUF_CONSTEXPR setMapRequestResponse::setMapRequestResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct setMapRequestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setMapRequestResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~setMapRequestResponseDefaultTypeInternal() {}
  union {
    setMapRequestResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setMapRequestResponseDefaultTypeInternal _setMapRequestResponse_default_instance_;
PROTOBUF_CONSTEXPR getPointCloudRequestRequest::getPointCloudRequestRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pointcloud_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getPointCloudRequestRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getPointCloudRequestRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getPointCloudRequestRequestDefaultTypeInternal() {}
  union {
    getPointCloudRequestRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getPointCloudRequestRequestDefaultTypeInternal _getPointCloudRequestRequest_default_instance_;
PROTOBUF_CONSTEXPR getPointCloudRequestResponse::getPointCloudRequestResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pointcloud_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getPointCloudRequestResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getPointCloudRequestResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getPointCloudRequestResponseDefaultTypeInternal() {}
  union {
    getPointCloudRequestResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getPointCloudRequestResponseDefaultTypeInternal _getPointCloudRequestResponse_default_instance_;
PROTOBUF_CONSTEXPR requestMapProcessingRequest::requestMapProcessingRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_.processingtype_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct requestMapProcessingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR requestMapProcessingRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~requestMapProcessingRequestDefaultTypeInternal() {}
  union {
    requestMapProcessingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 requestMapProcessingRequestDefaultTypeInternal _requestMapProcessingRequest_default_instance_;
PROTOBUF_CONSTEXPR requestMapProcessingResponse::requestMapProcessingResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct requestMapProcessingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR requestMapProcessingResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~requestMapProcessingResponseDefaultTypeInternal() {}
  union {
    requestMapProcessingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 requestMapProcessingResponseDefaultTypeInternal _requestMapProcessingResponse_default_instance_;
PROTOBUF_CONSTEXPR getMapProcessingStatusRequest::getMapProcessingStatusRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.resultingmapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_.progress_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getMapProcessingStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMapProcessingStatusRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMapProcessingStatusRequestDefaultTypeInternal() {}
  union {
    getMapProcessingStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMapProcessingStatusRequestDefaultTypeInternal _getMapProcessingStatusRequest_default_instance_;
PROTOBUF_CONSTEXPR getMapProcessingStatusResponse::getMapProcessingStatusResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resultingmapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_.progress_)*/0
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getMapProcessingStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMapProcessingStatusResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMapProcessingStatusResponseDefaultTypeInternal() {}
  union {
    getMapProcessingStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMapProcessingStatusResponseDefaultTypeInternal _getMapProcessingStatusResponse_default_instance_;
PROTOBUF_CONSTEXPR getMapProcessingDataRequest::getMapProcessingDataRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.mapuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pointcloud_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.keyframeposes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getMapProcessingDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMapProcessingDataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMapProcessingDataRequestDefaultTypeInternal() {}
  union {
    getMapProcessingDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMapProcessingDataRequestDefaultTypeInternal _getMapProcessingDataRequest_default_instance_;
PROTOBUF_CONSTEXPR getMapProcessingDataResponse::getMapProcessingDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pointcloud_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.keyframeposes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getMapProcessingDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getMapProcessingDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getMapProcessingDataResponseDefaultTypeInternal() {}
  union {
    getMapProcessingDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getMapProcessingDataResponseDefaultTypeInternal _getMapProcessingDataResponse_default_instance_;
}  // namespace grpcIMapsManager
static ::_pb::Metadata file_level_metadata_grpcIMapsManagerService_2eproto[22];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcIMapsManagerService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcIMapsManagerService_2eproto = nullptr;

const uint32_t TableStruct_grpcIMapsManagerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::createMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::createMapRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::createMapRequest, _impl_.mapuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::createMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::createMapResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::deleteMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::deleteMapRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::deleteMapRequest, _impl_.mapuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::deleteMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::deleteMapResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getAllMapsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getAllMapsRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getAllMapsRequest, _impl_.mapuuidlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getAllMapsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getAllMapsResponse, _impl_.mapuuidlist_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getAllMapsResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::increaseMapClientsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::increaseMapClientsRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::increaseMapClientsRequest, _impl_.mapuuid_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::increaseMapClientsRequest, _impl_.serviceurl_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::increaseMapClientsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::increaseMapClientsResponse, _impl_.serviceurl_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::increaseMapClientsResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::decreaseMapClientsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::decreaseMapClientsRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::decreaseMapClientsRequest, _impl_.mapuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::decreaseMapClientsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::decreaseMapClientsResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapRequestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapRequestRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapRequestRequest, _impl_.mapuuid_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapRequestRequest, _impl_.map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapRequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapRequestResponse, _impl_.map_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapRequestResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::setMapRequestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::setMapRequestRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::setMapRequestRequest, _impl_.mapuuid_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::setMapRequestRequest, _impl_.mapdatastructure_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::setMapRequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::setMapRequestResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getPointCloudRequestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getPointCloudRequestRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getPointCloudRequestRequest, _impl_.mapuuid_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getPointCloudRequestRequest, _impl_.pointcloud_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getPointCloudRequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getPointCloudRequestResponse, _impl_.pointcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getPointCloudRequestResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::requestMapProcessingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::requestMapProcessingRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::requestMapProcessingRequest, _impl_.mapuuid_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::requestMapProcessingRequest, _impl_.processingtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::requestMapProcessingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::requestMapProcessingResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusRequest, _impl_.mapuuid_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusRequest, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusRequest, _impl_.progress_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusRequest, _impl_.resultingmapuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusResponse, _impl_.progress_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusResponse, _impl_.resultingmapuuid_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingStatusResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingDataRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingDataRequest, _impl_.mapuuid_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingDataRequest, _impl_.pointcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingDataRequest, _impl_.keyframeposes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingDataResponse, _impl_.pointcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingDataResponse, _impl_.keyframeposes_),
  PROTOBUF_FIELD_OFFSET(::grpcIMapsManager::getMapProcessingDataResponse, _impl_.xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcIMapsManager::createMapRequest)},
  { 8, -1, -1, sizeof(::grpcIMapsManager::createMapResponse)},
  { 15, -1, -1, sizeof(::grpcIMapsManager::deleteMapRequest)},
  { 23, -1, -1, sizeof(::grpcIMapsManager::deleteMapResponse)},
  { 30, -1, -1, sizeof(::grpcIMapsManager::getAllMapsRequest)},
  { 38, -1, -1, sizeof(::grpcIMapsManager::getAllMapsResponse)},
  { 46, -1, -1, sizeof(::grpcIMapsManager::increaseMapClientsRequest)},
  { 55, -1, -1, sizeof(::grpcIMapsManager::increaseMapClientsResponse)},
  { 63, -1, -1, sizeof(::grpcIMapsManager::decreaseMapClientsRequest)},
  { 71, -1, -1, sizeof(::grpcIMapsManager::decreaseMapClientsResponse)},
  { 78, -1, -1, sizeof(::grpcIMapsManager::getMapRequestRequest)},
  { 87, -1, -1, sizeof(::grpcIMapsManager::getMapRequestResponse)},
  { 95, -1, -1, sizeof(::grpcIMapsManager::setMapRequestRequest)},
  { 104, -1, -1, sizeof(::grpcIMapsManager::setMapRequestResponse)},
  { 111, -1, -1, sizeof(::grpcIMapsManager::getPointCloudRequestRequest)},
  { 120, -1, -1, sizeof(::grpcIMapsManager::getPointCloudRequestResponse)},
  { 128, -1, -1, sizeof(::grpcIMapsManager::requestMapProcessingRequest)},
  { 137, -1, -1, sizeof(::grpcIMapsManager::requestMapProcessingResponse)},
  { 144, -1, -1, sizeof(::grpcIMapsManager::getMapProcessingStatusRequest)},
  { 155, -1, -1, sizeof(::grpcIMapsManager::getMapProcessingStatusResponse)},
  { 165, -1, -1, sizeof(::grpcIMapsManager::getMapProcessingDataRequest)},
  { 175, -1, -1, sizeof(::grpcIMapsManager::getMapProcessingDataResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcIMapsManager::_createMapRequest_default_instance_._instance,
  &::grpcIMapsManager::_createMapResponse_default_instance_._instance,
  &::grpcIMapsManager::_deleteMapRequest_default_instance_._instance,
  &::grpcIMapsManager::_deleteMapResponse_default_instance_._instance,
  &::grpcIMapsManager::_getAllMapsRequest_default_instance_._instance,
  &::grpcIMapsManager::_getAllMapsResponse_default_instance_._instance,
  &::grpcIMapsManager::_increaseMapClientsRequest_default_instance_._instance,
  &::grpcIMapsManager::_increaseMapClientsResponse_default_instance_._instance,
  &::grpcIMapsManager::_decreaseMapClientsRequest_default_instance_._instance,
  &::grpcIMapsManager::_decreaseMapClientsResponse_default_instance_._instance,
  &::grpcIMapsManager::_getMapRequestRequest_default_instance_._instance,
  &::grpcIMapsManager::_getMapRequestResponse_default_instance_._instance,
  &::grpcIMapsManager::_setMapRequestRequest_default_instance_._instance,
  &::grpcIMapsManager::_setMapRequestResponse_default_instance_._instance,
  &::grpcIMapsManager::_getPointCloudRequestRequest_default_instance_._instance,
  &::grpcIMapsManager::_getPointCloudRequestResponse_default_instance_._instance,
  &::grpcIMapsManager::_requestMapProcessingRequest_default_instance_._instance,
  &::grpcIMapsManager::_requestMapProcessingResponse_default_instance_._instance,
  &::grpcIMapsManager::_getMapProcessingStatusRequest_default_instance_._instance,
  &::grpcIMapsManager::_getMapProcessingStatusResponse_default_instance_._instance,
  &::grpcIMapsManager::_getMapProcessingDataRequest_default_instance_._instance,
  &::grpcIMapsManager::_getMapProcessingDataResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcIMapsManagerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035grpcIMapsManagerService.proto\022\020grpcIMa"
  "psManager\032\033google/protobuf/empty.proto\"H"
  "\n\020createMapRequest\022#\n\033grpcServerCompress"
  "ionFormat\030\001 \001(\005\022\017\n\007mapUUID\030\002 \001(\t\"0\n\021crea"
  "teMapResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001"
  "(\021\"H\n\020deleteMapRequest\022#\n\033grpcServerComp"
  "ressionFormat\030\001 \001(\005\022\017\n\007mapUUID\030\002 \001(\t\"0\n\021"
  "deleteMapResponse\022\033\n\023xpcfGrpcReturnValue"
  "\030\001 \001(\021\"M\n\021getAllMapsRequest\022#\n\033grpcServe"
  "rCompressionFormat\030\001 \001(\005\022\023\n\013mapUUIDList\030"
  "\002 \001(\014\"F\n\022getAllMapsResponse\022\023\n\013mapUUIDLi"
  "st\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\"e\n"
  "\031increaseMapClientsRequest\022#\n\033grpcServer"
  "CompressionFormat\030\001 \001(\005\022\017\n\007mapUUID\030\002 \001(\t"
  "\022\022\n\nserviceURL\030\003 \001(\t\"M\n\032increaseMapClien"
  "tsResponse\022\022\n\nserviceURL\030\001 \001(\t\022\033\n\023xpcfGr"
  "pcReturnValue\030\002 \001(\021\"Q\n\031decreaseMapClient"
  "sRequest\022#\n\033grpcServerCompressionFormat\030"
  "\001 \001(\005\022\017\n\007mapUUID\030\002 \001(\t\"9\n\032decreaseMapCli"
  "entsResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001("
  "\021\"Y\n\024getMapRequestRequest\022#\n\033grpcServerC"
  "ompressionFormat\030\001 \001(\005\022\017\n\007mapUUID\030\002 \001(\t\022"
  "\013\n\003map\030\003 \001(\014\"A\n\025getMapRequestResponse\022\013\n"
  "\003map\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\""
  "f\n\024setMapRequestRequest\022#\n\033grpcServerCom"
  "pressionFormat\030\001 \001(\005\022\017\n\007mapUUID\030\002 \001(\t\022\030\n"
  "\020mapDatastructure\030\003 \001(\014\"4\n\025setMapRequest"
  "Response\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"g\n"
  "\033getPointCloudRequestRequest\022#\n\033grpcServ"
  "erCompressionFormat\030\001 \001(\005\022\017\n\007mapUUID\030\002 \001"
  "(\t\022\022\n\npointCloud\030\003 \001(\014\"O\n\034getPointCloudR"
  "equestResponse\022\022\n\npointCloud\030\001 \001(\014\022\033\n\023xp"
  "cfGrpcReturnValue\030\002 \001(\021\"k\n\033requestMapPro"
  "cessingRequest\022#\n\033grpcServerCompressionF"
  "ormat\030\001 \001(\005\022\017\n\007mapUUID\030\002 \001(\t\022\026\n\016processi"
  "ngType\030\003 \001(\021\";\n\034requestMapProcessingResp"
  "onse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"\221\001\n\035ge"
  "tMapProcessingStatusRequest\022#\n\033grpcServe"
  "rCompressionFormat\030\001 \001(\005\022\017\n\007mapUUID\030\002 \001("
  "\t\022\016\n\006status\030\003 \001(\021\022\020\n\010progress\030\004 \001(\002\022\030\n\020r"
  "esultingMapUUID\030\005 \001(\t\"y\n\036getMapProcessin"
  "gStatusResponse\022\016\n\006status\030\001 \001(\021\022\020\n\010progr"
  "ess\030\002 \001(\002\022\030\n\020resultingMapUUID\030\003 \001(\t\022\033\n\023x"
  "pcfGrpcReturnValue\030\004 \001(\021\"~\n\033getMapProces"
  "singDataRequest\022#\n\033grpcServerCompression"
  "Format\030\001 \001(\005\022\017\n\007mapUUID\030\002 \001(\t\022\022\n\npointCl"
  "oud\030\003 \001(\014\022\025\n\rkeyframePoses\030\004 \001(\014\"f\n\034getM"
  "apProcessingDataResponse\022\022\n\npointCloud\030\001"
  " \001(\014\022\025\n\rkeyframePoses\030\002 \001(\014\022\033\n\023xpcfGrpcR"
  "eturnValue\030\003 \001(\0212\274\t\n\027grpcIMapsManagerSer"
  "vice\022V\n\tcreateMap\022\".grpcIMapsManager.cre"
  "ateMapRequest\032#.grpcIMapsManager.createM"
  "apResponse\"\000\022V\n\tdeleteMap\022\".grpcIMapsMan"
  "ager.deleteMapRequest\032#.grpcIMapsManager"
  ".deleteMapResponse\"\000\022Y\n\ngetAllMaps\022#.grp"
  "cIMapsManager.getAllMapsRequest\032$.grpcIM"
  "apsManager.getAllMapsResponse\"\000\022q\n\022incre"
  "aseMapClients\022+.grpcIMapsManager.increas"
  "eMapClientsRequest\032,.grpcIMapsManager.in"
  "creaseMapClientsResponse\"\000\022q\n\022decreaseMa"
  "pClients\022+.grpcIMapsManager.decreaseMapC"
  "lientsRequest\032,.grpcIMapsManager.decreas"
  "eMapClientsResponse\"\000\022b\n\rgetMapRequest\022&"
  ".grpcIMapsManager.getMapRequestRequest\032\'"
  ".grpcIMapsManager.getMapRequestResponse\""
  "\000\022b\n\rsetMapRequest\022&.grpcIMapsManager.se"
  "tMapRequestRequest\032\'.grpcIMapsManager.se"
  "tMapRequestResponse\"\000\022w\n\024getPointCloudRe"
  "quest\022-.grpcIMapsManager.getPointCloudRe"
  "questRequest\032..grpcIMapsManager.getPoint"
  "CloudRequestResponse\"\000\022w\n\024requestMapProc"
  "essing\022-.grpcIMapsManager.requestMapProc"
  "essingRequest\032..grpcIMapsManager.request"
  "MapProcessingResponse\"\000\022}\n\026getMapProcess"
  "ingStatus\022/.grpcIMapsManager.getMapProce"
  "ssingStatusRequest\0320.grpcIMapsManager.ge"
  "tMapProcessingStatusResponse\"\000\022w\n\024getMap"
  "ProcessingData\022-.grpcIMapsManager.getMap"
  "ProcessingDataRequest\032..grpcIMapsManager"
  ".getMapProcessingDataResponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcIMapsManagerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcIMapsManagerService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcIMapsManagerService_2eproto = {
    false, false, 3199, descriptor_table_protodef_grpcIMapsManagerService_2eproto,
    "grpcIMapsManagerService.proto",
    &descriptor_table_grpcIMapsManagerService_2eproto_once, descriptor_table_grpcIMapsManagerService_2eproto_deps, 1, 22,
    schemas, file_default_instances, TableStruct_grpcIMapsManagerService_2eproto::offsets,
    file_level_metadata_grpcIMapsManagerService_2eproto, file_level_enum_descriptors_grpcIMapsManagerService_2eproto,
    file_level_service_descriptors_grpcIMapsManagerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcIMapsManagerService_2eproto_getter() {
  return &descriptor_table_grpcIMapsManagerService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcIMapsManagerService_2eproto(&descriptor_table_grpcIMapsManagerService_2eproto);
namespace grpcIMapsManager {

// ===================================================================

class createMapRequest::_Internal {
 public:
};

createMapRequest::createMapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.createMapRequest)
}
createMapRequest::createMapRequest(const createMapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  createMapRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.createMapRequest)
}

inline void createMapRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

createMapRequest::~createMapRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.createMapRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void createMapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
}

void createMapRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void createMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.createMapRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* createMapRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.createMapRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* createMapRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.createMapRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.createMapRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.createMapRequest)
  return target;
}

size_t createMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.createMapRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData createMapRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    createMapRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*createMapRequest::GetClassData() const { return &_class_data_; }


void createMapRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<createMapRequest*>(&to_msg);
  auto& from = static_cast<const createMapRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.createMapRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void createMapRequest::CopyFrom(const createMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.createMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool createMapRequest::IsInitialized() const {
  return true;
}

void createMapRequest::InternalSwap(createMapRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata createMapRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[0]);
}

// ===================================================================

class createMapResponse::_Internal {
 public:
};

createMapResponse::createMapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.createMapResponse)
}
createMapResponse::createMapResponse(const createMapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  createMapResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.createMapResponse)
}

inline void createMapResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

createMapResponse::~createMapResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.createMapResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void createMapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void createMapResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void createMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.createMapResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* createMapResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* createMapResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.createMapResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.createMapResponse)
  return target;
}

size_t createMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.createMapResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData createMapResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    createMapResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*createMapResponse::GetClassData() const { return &_class_data_; }


void createMapResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<createMapResponse*>(&to_msg);
  auto& from = static_cast<const createMapResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.createMapResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void createMapResponse::CopyFrom(const createMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.createMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool createMapResponse::IsInitialized() const {
  return true;
}

void createMapResponse::InternalSwap(createMapResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata createMapResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[1]);
}

// ===================================================================

class deleteMapRequest::_Internal {
 public:
};

deleteMapRequest::deleteMapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.deleteMapRequest)
}
deleteMapRequest::deleteMapRequest(const deleteMapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  deleteMapRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.deleteMapRequest)
}

inline void deleteMapRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

deleteMapRequest::~deleteMapRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.deleteMapRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void deleteMapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
}

void deleteMapRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void deleteMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.deleteMapRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* deleteMapRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.deleteMapRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* deleteMapRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.deleteMapRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.deleteMapRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.deleteMapRequest)
  return target;
}

size_t deleteMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.deleteMapRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData deleteMapRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    deleteMapRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*deleteMapRequest::GetClassData() const { return &_class_data_; }


void deleteMapRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<deleteMapRequest*>(&to_msg);
  auto& from = static_cast<const deleteMapRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.deleteMapRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void deleteMapRequest::CopyFrom(const deleteMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.deleteMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteMapRequest::IsInitialized() const {
  return true;
}

void deleteMapRequest::InternalSwap(deleteMapRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata deleteMapRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[2]);
}

// ===================================================================

class deleteMapResponse::_Internal {
 public:
};

deleteMapResponse::deleteMapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.deleteMapResponse)
}
deleteMapResponse::deleteMapResponse(const deleteMapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  deleteMapResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.deleteMapResponse)
}

inline void deleteMapResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

deleteMapResponse::~deleteMapResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.deleteMapResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void deleteMapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void deleteMapResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void deleteMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.deleteMapResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* deleteMapResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* deleteMapResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.deleteMapResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.deleteMapResponse)
  return target;
}

size_t deleteMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.deleteMapResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData deleteMapResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    deleteMapResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*deleteMapResponse::GetClassData() const { return &_class_data_; }


void deleteMapResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<deleteMapResponse*>(&to_msg);
  auto& from = static_cast<const deleteMapResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.deleteMapResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void deleteMapResponse::CopyFrom(const deleteMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.deleteMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteMapResponse::IsInitialized() const {
  return true;
}

void deleteMapResponse::InternalSwap(deleteMapResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata deleteMapResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[3]);
}

// ===================================================================

class getAllMapsRequest::_Internal {
 public:
};

getAllMapsRequest::getAllMapsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getAllMapsRequest)
}
getAllMapsRequest::getAllMapsRequest(const getAllMapsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getAllMapsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuidlist_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuidlist_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuidlist_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuidlist().empty()) {
    _this->_impl_.mapuuidlist_.Set(from._internal_mapuuidlist(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getAllMapsRequest)
}

inline void getAllMapsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuidlist_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuidlist_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuidlist_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getAllMapsRequest::~getAllMapsRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getAllMapsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getAllMapsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuidlist_.Destroy();
}

void getAllMapsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getAllMapsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getAllMapsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuidlist_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getAllMapsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes mapUUIDList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuidlist();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getAllMapsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getAllMapsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes mapUUIDList = 2;
  if (!this->_internal_mapuuidlist().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_mapuuidlist(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getAllMapsRequest)
  return target;
}

size_t getAllMapsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getAllMapsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes mapUUIDList = 2;
  if (!this->_internal_mapuuidlist().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mapuuidlist());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getAllMapsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getAllMapsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getAllMapsRequest::GetClassData() const { return &_class_data_; }


void getAllMapsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getAllMapsRequest*>(&to_msg);
  auto& from = static_cast<const getAllMapsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getAllMapsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuidlist().empty()) {
    _this->_internal_set_mapuuidlist(from._internal_mapuuidlist());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getAllMapsRequest::CopyFrom(const getAllMapsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getAllMapsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getAllMapsRequest::IsInitialized() const {
  return true;
}

void getAllMapsRequest::InternalSwap(getAllMapsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuidlist_, lhs_arena,
      &other->_impl_.mapuuidlist_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getAllMapsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[4]);
}

// ===================================================================

class getAllMapsResponse::_Internal {
 public:
};

getAllMapsResponse::getAllMapsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getAllMapsResponse)
}
getAllMapsResponse::getAllMapsResponse(const getAllMapsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getAllMapsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuidlist_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuidlist_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuidlist_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuidlist().empty()) {
    _this->_impl_.mapuuidlist_.Set(from._internal_mapuuidlist(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getAllMapsResponse)
}

inline void getAllMapsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuidlist_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuidlist_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuidlist_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getAllMapsResponse::~getAllMapsResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getAllMapsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getAllMapsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuidlist_.Destroy();
}

void getAllMapsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getAllMapsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getAllMapsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuidlist_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getAllMapsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes mapUUIDList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_mapuuidlist();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getAllMapsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getAllMapsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes mapUUIDList = 1;
  if (!this->_internal_mapuuidlist().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_mapuuidlist(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getAllMapsResponse)
  return target;
}

size_t getAllMapsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getAllMapsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes mapUUIDList = 1;
  if (!this->_internal_mapuuidlist().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mapuuidlist());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getAllMapsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getAllMapsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getAllMapsResponse::GetClassData() const { return &_class_data_; }


void getAllMapsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getAllMapsResponse*>(&to_msg);
  auto& from = static_cast<const getAllMapsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getAllMapsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuidlist().empty()) {
    _this->_internal_set_mapuuidlist(from._internal_mapuuidlist());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getAllMapsResponse::CopyFrom(const getAllMapsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getAllMapsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getAllMapsResponse::IsInitialized() const {
  return true;
}

void getAllMapsResponse::InternalSwap(getAllMapsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuidlist_, lhs_arena,
      &other->_impl_.mapuuidlist_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getAllMapsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[5]);
}

// ===================================================================

class increaseMapClientsRequest::_Internal {
 public:
};

increaseMapClientsRequest::increaseMapClientsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.increaseMapClientsRequest)
}
increaseMapClientsRequest::increaseMapClientsRequest(const increaseMapClientsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  increaseMapClientsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.serviceurl_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.serviceurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.serviceurl_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_serviceurl().empty()) {
    _this->_impl_.serviceurl_.Set(from._internal_serviceurl(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.increaseMapClientsRequest)
}

inline void increaseMapClientsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.serviceurl_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.serviceurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.serviceurl_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

increaseMapClientsRequest::~increaseMapClientsRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.increaseMapClientsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void increaseMapClientsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
  _impl_.serviceurl_.Destroy();
}

void increaseMapClientsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void increaseMapClientsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.increaseMapClientsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  _impl_.serviceurl_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* increaseMapClientsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.increaseMapClientsRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      // string serviceURL = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_serviceurl();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.increaseMapClientsRequest.serviceURL"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* increaseMapClientsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.increaseMapClientsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.increaseMapClientsRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  // string serviceURL = 3;
  if (!this->_internal_serviceurl().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serviceurl().data(), static_cast<int>(this->_internal_serviceurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.increaseMapClientsRequest.serviceURL");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_serviceurl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.increaseMapClientsRequest)
  return target;
}

size_t increaseMapClientsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.increaseMapClientsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // string serviceURL = 3;
  if (!this->_internal_serviceurl().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serviceurl());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData increaseMapClientsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    increaseMapClientsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*increaseMapClientsRequest::GetClassData() const { return &_class_data_; }


void increaseMapClientsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<increaseMapClientsRequest*>(&to_msg);
  auto& from = static_cast<const increaseMapClientsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.increaseMapClientsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (!from._internal_serviceurl().empty()) {
    _this->_internal_set_serviceurl(from._internal_serviceurl());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void increaseMapClientsRequest::CopyFrom(const increaseMapClientsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.increaseMapClientsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool increaseMapClientsRequest::IsInitialized() const {
  return true;
}

void increaseMapClientsRequest::InternalSwap(increaseMapClientsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.serviceurl_, lhs_arena,
      &other->_impl_.serviceurl_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata increaseMapClientsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[6]);
}

// ===================================================================

class increaseMapClientsResponse::_Internal {
 public:
};

increaseMapClientsResponse::increaseMapClientsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.increaseMapClientsResponse)
}
increaseMapClientsResponse::increaseMapClientsResponse(const increaseMapClientsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  increaseMapClientsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.serviceurl_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.serviceurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.serviceurl_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_serviceurl().empty()) {
    _this->_impl_.serviceurl_.Set(from._internal_serviceurl(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.increaseMapClientsResponse)
}

inline void increaseMapClientsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.serviceurl_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.serviceurl_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.serviceurl_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

increaseMapClientsResponse::~increaseMapClientsResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.increaseMapClientsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void increaseMapClientsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.serviceurl_.Destroy();
}

void increaseMapClientsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void increaseMapClientsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.increaseMapClientsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.serviceurl_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* increaseMapClientsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string serviceURL = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_serviceurl();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.increaseMapClientsResponse.serviceURL"));
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* increaseMapClientsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.increaseMapClientsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string serviceURL = 1;
  if (!this->_internal_serviceurl().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serviceurl().data(), static_cast<int>(this->_internal_serviceurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.increaseMapClientsResponse.serviceURL");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_serviceurl(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.increaseMapClientsResponse)
  return target;
}

size_t increaseMapClientsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.increaseMapClientsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string serviceURL = 1;
  if (!this->_internal_serviceurl().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serviceurl());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData increaseMapClientsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    increaseMapClientsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*increaseMapClientsResponse::GetClassData() const { return &_class_data_; }


void increaseMapClientsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<increaseMapClientsResponse*>(&to_msg);
  auto& from = static_cast<const increaseMapClientsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.increaseMapClientsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_serviceurl().empty()) {
    _this->_internal_set_serviceurl(from._internal_serviceurl());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void increaseMapClientsResponse::CopyFrom(const increaseMapClientsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.increaseMapClientsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool increaseMapClientsResponse::IsInitialized() const {
  return true;
}

void increaseMapClientsResponse::InternalSwap(increaseMapClientsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.serviceurl_, lhs_arena,
      &other->_impl_.serviceurl_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata increaseMapClientsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[7]);
}

// ===================================================================

class decreaseMapClientsRequest::_Internal {
 public:
};

decreaseMapClientsRequest::decreaseMapClientsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.decreaseMapClientsRequest)
}
decreaseMapClientsRequest::decreaseMapClientsRequest(const decreaseMapClientsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  decreaseMapClientsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.decreaseMapClientsRequest)
}

inline void decreaseMapClientsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

decreaseMapClientsRequest::~decreaseMapClientsRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.decreaseMapClientsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void decreaseMapClientsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
}

void decreaseMapClientsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void decreaseMapClientsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.decreaseMapClientsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* decreaseMapClientsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.decreaseMapClientsRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* decreaseMapClientsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.decreaseMapClientsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.decreaseMapClientsRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.decreaseMapClientsRequest)
  return target;
}

size_t decreaseMapClientsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.decreaseMapClientsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData decreaseMapClientsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    decreaseMapClientsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*decreaseMapClientsRequest::GetClassData() const { return &_class_data_; }


void decreaseMapClientsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<decreaseMapClientsRequest*>(&to_msg);
  auto& from = static_cast<const decreaseMapClientsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.decreaseMapClientsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void decreaseMapClientsRequest::CopyFrom(const decreaseMapClientsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.decreaseMapClientsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool decreaseMapClientsRequest::IsInitialized() const {
  return true;
}

void decreaseMapClientsRequest::InternalSwap(decreaseMapClientsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata decreaseMapClientsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[8]);
}

// ===================================================================

class decreaseMapClientsResponse::_Internal {
 public:
};

decreaseMapClientsResponse::decreaseMapClientsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.decreaseMapClientsResponse)
}
decreaseMapClientsResponse::decreaseMapClientsResponse(const decreaseMapClientsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  decreaseMapClientsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.decreaseMapClientsResponse)
}

inline void decreaseMapClientsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

decreaseMapClientsResponse::~decreaseMapClientsResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.decreaseMapClientsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void decreaseMapClientsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void decreaseMapClientsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void decreaseMapClientsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.decreaseMapClientsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* decreaseMapClientsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* decreaseMapClientsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.decreaseMapClientsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.decreaseMapClientsResponse)
  return target;
}

size_t decreaseMapClientsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.decreaseMapClientsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData decreaseMapClientsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    decreaseMapClientsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*decreaseMapClientsResponse::GetClassData() const { return &_class_data_; }


void decreaseMapClientsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<decreaseMapClientsResponse*>(&to_msg);
  auto& from = static_cast<const decreaseMapClientsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.decreaseMapClientsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void decreaseMapClientsResponse::CopyFrom(const decreaseMapClientsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.decreaseMapClientsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool decreaseMapClientsResponse::IsInitialized() const {
  return true;
}

void decreaseMapClientsResponse::InternalSwap(decreaseMapClientsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata decreaseMapClientsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[9]);
}

// ===================================================================

class getMapRequestRequest::_Internal {
 public:
};

getMapRequestRequest::getMapRequestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getMapRequestRequest)
}
getMapRequestRequest::getMapRequestRequest(const getMapRequestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getMapRequestRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.map_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.map_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.map_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_map().empty()) {
    _this->_impl_.map_.Set(from._internal_map(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getMapRequestRequest)
}

inline void getMapRequestRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.map_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.map_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.map_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getMapRequestRequest::~getMapRequestRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getMapRequestRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMapRequestRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
  _impl_.map_.Destroy();
}

void getMapRequestRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getMapRequestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getMapRequestRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  _impl_.map_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapRequestRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.getMapRequestRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      // bytes map = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_map();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMapRequestRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getMapRequestRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.getMapRequestRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  // bytes map = 3;
  if (!this->_internal_map().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_map(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getMapRequestRequest)
  return target;
}

size_t getMapRequestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getMapRequestRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // bytes map = 3;
  if (!this->_internal_map().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMapRequestRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getMapRequestRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMapRequestRequest::GetClassData() const { return &_class_data_; }


void getMapRequestRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getMapRequestRequest*>(&to_msg);
  auto& from = static_cast<const getMapRequestRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getMapRequestRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (!from._internal_map().empty()) {
    _this->_internal_set_map(from._internal_map());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMapRequestRequest::CopyFrom(const getMapRequestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getMapRequestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapRequestRequest::IsInitialized() const {
  return true;
}

void getMapRequestRequest::InternalSwap(getMapRequestRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.map_, lhs_arena,
      &other->_impl_.map_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapRequestRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[10]);
}

// ===================================================================

class getMapRequestResponse::_Internal {
 public:
};

getMapRequestResponse::getMapRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getMapRequestResponse)
}
getMapRequestResponse::getMapRequestResponse(const getMapRequestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getMapRequestResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.map_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.map_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.map_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_map().empty()) {
    _this->_impl_.map_.Set(from._internal_map(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getMapRequestResponse)
}

inline void getMapRequestResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.map_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.map_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.map_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getMapRequestResponse::~getMapRequestResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getMapRequestResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMapRequestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.map_.Destroy();
}

void getMapRequestResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getMapRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getMapRequestResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.map_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapRequestResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_map();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMapRequestResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getMapRequestResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes map = 1;
  if (!this->_internal_map().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_map(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getMapRequestResponse)
  return target;
}

size_t getMapRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getMapRequestResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes map = 1;
  if (!this->_internal_map().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMapRequestResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getMapRequestResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMapRequestResponse::GetClassData() const { return &_class_data_; }


void getMapRequestResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getMapRequestResponse*>(&to_msg);
  auto& from = static_cast<const getMapRequestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getMapRequestResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_map().empty()) {
    _this->_internal_set_map(from._internal_map());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMapRequestResponse::CopyFrom(const getMapRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getMapRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapRequestResponse::IsInitialized() const {
  return true;
}

void getMapRequestResponse::InternalSwap(getMapRequestResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.map_, lhs_arena,
      &other->_impl_.map_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapRequestResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[11]);
}

// ===================================================================

class setMapRequestRequest::_Internal {
 public:
};

setMapRequestRequest::setMapRequestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.setMapRequestRequest)
}
setMapRequestRequest::setMapRequestRequest(const setMapRequestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  setMapRequestRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.mapdatastructure_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.mapdatastructure_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapdatastructure_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapdatastructure().empty()) {
    _this->_impl_.mapdatastructure_.Set(from._internal_mapdatastructure(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.setMapRequestRequest)
}

inline void setMapRequestRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.mapdatastructure_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.mapdatastructure_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapdatastructure_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

setMapRequestRequest::~setMapRequestRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.setMapRequestRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void setMapRequestRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
  _impl_.mapdatastructure_.Destroy();
}

void setMapRequestRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void setMapRequestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.setMapRequestRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  _impl_.mapdatastructure_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapRequestRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.setMapRequestRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      // bytes mapDatastructure = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_mapdatastructure();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* setMapRequestRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.setMapRequestRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.setMapRequestRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  // bytes mapDatastructure = 3;
  if (!this->_internal_mapdatastructure().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_mapdatastructure(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.setMapRequestRequest)
  return target;
}

size_t setMapRequestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.setMapRequestRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // bytes mapDatastructure = 3;
  if (!this->_internal_mapdatastructure().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mapdatastructure());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setMapRequestRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    setMapRequestRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setMapRequestRequest::GetClassData() const { return &_class_data_; }


void setMapRequestRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<setMapRequestRequest*>(&to_msg);
  auto& from = static_cast<const setMapRequestRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.setMapRequestRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (!from._internal_mapdatastructure().empty()) {
    _this->_internal_set_mapdatastructure(from._internal_mapdatastructure());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setMapRequestRequest::CopyFrom(const setMapRequestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.setMapRequestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapRequestRequest::IsInitialized() const {
  return true;
}

void setMapRequestRequest::InternalSwap(setMapRequestRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapdatastructure_, lhs_arena,
      &other->_impl_.mapdatastructure_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapRequestRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[12]);
}

// ===================================================================

class setMapRequestResponse::_Internal {
 public:
};

setMapRequestResponse::setMapRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.setMapRequestResponse)
}
setMapRequestResponse::setMapRequestResponse(const setMapRequestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  setMapRequestResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.setMapRequestResponse)
}

inline void setMapRequestResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

setMapRequestResponse::~setMapRequestResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.setMapRequestResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void setMapRequestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void setMapRequestResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void setMapRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.setMapRequestResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapRequestResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* setMapRequestResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.setMapRequestResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.setMapRequestResponse)
  return target;
}

size_t setMapRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.setMapRequestResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setMapRequestResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    setMapRequestResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setMapRequestResponse::GetClassData() const { return &_class_data_; }


void setMapRequestResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<setMapRequestResponse*>(&to_msg);
  auto& from = static_cast<const setMapRequestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.setMapRequestResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setMapRequestResponse::CopyFrom(const setMapRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.setMapRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapRequestResponse::IsInitialized() const {
  return true;
}

void setMapRequestResponse::InternalSwap(setMapRequestResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapRequestResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[13]);
}

// ===================================================================

class getPointCloudRequestRequest::_Internal {
 public:
};

getPointCloudRequestRequest::getPointCloudRequestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getPointCloudRequestRequest)
}
getPointCloudRequestRequest::getPointCloudRequestRequest(const getPointCloudRequestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getPointCloudRequestRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.pointcloud_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.pointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pointcloud().empty()) {
    _this->_impl_.pointcloud_.Set(from._internal_pointcloud(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getPointCloudRequestRequest)
}

inline void getPointCloudRequestRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.pointcloud_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getPointCloudRequestRequest::~getPointCloudRequestRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getPointCloudRequestRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getPointCloudRequestRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
  _impl_.pointcloud_.Destroy();
}

void getPointCloudRequestRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getPointCloudRequestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getPointCloudRequestRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  _impl_.pointcloud_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getPointCloudRequestRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.getPointCloudRequestRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      // bytes pointCloud = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_pointcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getPointCloudRequestRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getPointCloudRequestRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.getPointCloudRequestRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  // bytes pointCloud = 3;
  if (!this->_internal_pointcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_pointcloud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getPointCloudRequestRequest)
  return target;
}

size_t getPointCloudRequestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getPointCloudRequestRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // bytes pointCloud = 3;
  if (!this->_internal_pointcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pointcloud());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getPointCloudRequestRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getPointCloudRequestRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getPointCloudRequestRequest::GetClassData() const { return &_class_data_; }


void getPointCloudRequestRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getPointCloudRequestRequest*>(&to_msg);
  auto& from = static_cast<const getPointCloudRequestRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getPointCloudRequestRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (!from._internal_pointcloud().empty()) {
    _this->_internal_set_pointcloud(from._internal_pointcloud());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getPointCloudRequestRequest::CopyFrom(const getPointCloudRequestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getPointCloudRequestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getPointCloudRequestRequest::IsInitialized() const {
  return true;
}

void getPointCloudRequestRequest::InternalSwap(getPointCloudRequestRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pointcloud_, lhs_arena,
      &other->_impl_.pointcloud_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getPointCloudRequestRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[14]);
}

// ===================================================================

class getPointCloudRequestResponse::_Internal {
 public:
};

getPointCloudRequestResponse::getPointCloudRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getPointCloudRequestResponse)
}
getPointCloudRequestResponse::getPointCloudRequestResponse(const getPointCloudRequestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getPointCloudRequestResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pointcloud_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.pointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pointcloud().empty()) {
    _this->_impl_.pointcloud_.Set(from._internal_pointcloud(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getPointCloudRequestResponse)
}

inline void getPointCloudRequestResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pointcloud_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.pointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getPointCloudRequestResponse::~getPointCloudRequestResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getPointCloudRequestResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getPointCloudRequestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pointcloud_.Destroy();
}

void getPointCloudRequestResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getPointCloudRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getPointCloudRequestResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pointcloud_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getPointCloudRequestResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes pointCloud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pointcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getPointCloudRequestResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getPointCloudRequestResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pointCloud = 1;
  if (!this->_internal_pointcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pointcloud(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getPointCloudRequestResponse)
  return target;
}

size_t getPointCloudRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getPointCloudRequestResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pointCloud = 1;
  if (!this->_internal_pointcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pointcloud());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getPointCloudRequestResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getPointCloudRequestResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getPointCloudRequestResponse::GetClassData() const { return &_class_data_; }


void getPointCloudRequestResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getPointCloudRequestResponse*>(&to_msg);
  auto& from = static_cast<const getPointCloudRequestResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getPointCloudRequestResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pointcloud().empty()) {
    _this->_internal_set_pointcloud(from._internal_pointcloud());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getPointCloudRequestResponse::CopyFrom(const getPointCloudRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getPointCloudRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getPointCloudRequestResponse::IsInitialized() const {
  return true;
}

void getPointCloudRequestResponse::InternalSwap(getPointCloudRequestResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pointcloud_, lhs_arena,
      &other->_impl_.pointcloud_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getPointCloudRequestResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[15]);
}

// ===================================================================

class requestMapProcessingRequest::_Internal {
 public:
};

requestMapProcessingRequest::requestMapProcessingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.requestMapProcessingRequest)
}
requestMapProcessingRequest::requestMapProcessingRequest(const requestMapProcessingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  requestMapProcessingRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , decltype(_impl_.processingtype_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.grpcservercompressionformat_, &from._impl_.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.processingtype_) -
    reinterpret_cast<char*>(&_impl_.grpcservercompressionformat_)) + sizeof(_impl_.processingtype_));
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.requestMapProcessingRequest)
}

inline void requestMapProcessingRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , decltype(_impl_.processingtype_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

requestMapProcessingRequest::~requestMapProcessingRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.requestMapProcessingRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void requestMapProcessingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
}

void requestMapProcessingRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void requestMapProcessingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.requestMapProcessingRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  ::memset(&_impl_.grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.processingtype_) -
      reinterpret_cast<char*>(&_impl_.grpcservercompressionformat_)) + sizeof(_impl_.processingtype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* requestMapProcessingRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.requestMapProcessingRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      // sint32 processingType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.processingtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* requestMapProcessingRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.requestMapProcessingRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.requestMapProcessingRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  // sint32 processingType = 3;
  if (this->_internal_processingtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(3, this->_internal_processingtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.requestMapProcessingRequest)
  return target;
}

size_t requestMapProcessingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.requestMapProcessingRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  // sint32 processingType = 3;
  if (this->_internal_processingtype() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_processingtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData requestMapProcessingRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    requestMapProcessingRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*requestMapProcessingRequest::GetClassData() const { return &_class_data_; }


void requestMapProcessingRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<requestMapProcessingRequest*>(&to_msg);
  auto& from = static_cast<const requestMapProcessingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.requestMapProcessingRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from._internal_processingtype() != 0) {
    _this->_internal_set_processingtype(from._internal_processingtype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void requestMapProcessingRequest::CopyFrom(const requestMapProcessingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.requestMapProcessingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool requestMapProcessingRequest::IsInitialized() const {
  return true;
}

void requestMapProcessingRequest::InternalSwap(requestMapProcessingRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(requestMapProcessingRequest, _impl_.processingtype_)
      + sizeof(requestMapProcessingRequest::_impl_.processingtype_)
      - PROTOBUF_FIELD_OFFSET(requestMapProcessingRequest, _impl_.grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&_impl_.grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->_impl_.grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata requestMapProcessingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[16]);
}

// ===================================================================

class requestMapProcessingResponse::_Internal {
 public:
};

requestMapProcessingResponse::requestMapProcessingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.requestMapProcessingResponse)
}
requestMapProcessingResponse::requestMapProcessingResponse(const requestMapProcessingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  requestMapProcessingResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.requestMapProcessingResponse)
}

inline void requestMapProcessingResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

requestMapProcessingResponse::~requestMapProcessingResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.requestMapProcessingResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void requestMapProcessingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void requestMapProcessingResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void requestMapProcessingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.requestMapProcessingResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* requestMapProcessingResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* requestMapProcessingResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.requestMapProcessingResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.requestMapProcessingResponse)
  return target;
}

size_t requestMapProcessingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.requestMapProcessingResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData requestMapProcessingResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    requestMapProcessingResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*requestMapProcessingResponse::GetClassData() const { return &_class_data_; }


void requestMapProcessingResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<requestMapProcessingResponse*>(&to_msg);
  auto& from = static_cast<const requestMapProcessingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.requestMapProcessingResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void requestMapProcessingResponse::CopyFrom(const requestMapProcessingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.requestMapProcessingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool requestMapProcessingResponse::IsInitialized() const {
  return true;
}

void requestMapProcessingResponse::InternalSwap(requestMapProcessingResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata requestMapProcessingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[17]);
}

// ===================================================================

class getMapProcessingStatusRequest::_Internal {
 public:
};

getMapProcessingStatusRequest::getMapProcessingStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getMapProcessingStatusRequest)
}
getMapProcessingStatusRequest::getMapProcessingStatusRequest(const getMapProcessingStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getMapProcessingStatusRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.resultingmapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , decltype(_impl_.status_){}
    , decltype(_impl_.progress_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.resultingmapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resultingmapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resultingmapuuid().empty()) {
    _this->_impl_.resultingmapuuid_.Set(from._internal_resultingmapuuid(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.grpcservercompressionformat_, &from._impl_.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.progress_) -
    reinterpret_cast<char*>(&_impl_.grpcservercompressionformat_)) + sizeof(_impl_.progress_));
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getMapProcessingStatusRequest)
}

inline void getMapProcessingStatusRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.resultingmapuuid_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , decltype(_impl_.status_){0}
    , decltype(_impl_.progress_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.resultingmapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resultingmapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getMapProcessingStatusRequest::~getMapProcessingStatusRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getMapProcessingStatusRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMapProcessingStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
  _impl_.resultingmapuuid_.Destroy();
}

void getMapProcessingStatusRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getMapProcessingStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getMapProcessingStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  _impl_.resultingmapuuid_.ClearToEmpty();
  ::memset(&_impl_.grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.progress_) -
      reinterpret_cast<char*>(&_impl_.grpcservercompressionformat_)) + sizeof(_impl_.progress_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapProcessingStatusRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.getMapProcessingStatusRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      // sint32 status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float progress = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // string resultingMapUUID = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_resultingmapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.getMapProcessingStatusRequest.resultingMapUUID"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMapProcessingStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getMapProcessingStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.getMapProcessingStatusRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  // sint32 status = 3;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(3, this->_internal_status(), target);
  }

  // float progress = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_progress(), target);
  }

  // string resultingMapUUID = 5;
  if (!this->_internal_resultingmapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resultingmapuuid().data(), static_cast<int>(this->_internal_resultingmapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.getMapProcessingStatusRequest.resultingMapUUID");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_resultingmapuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getMapProcessingStatusRequest)
  return target;
}

size_t getMapProcessingStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getMapProcessingStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // string resultingMapUUID = 5;
  if (!this->_internal_resultingmapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resultingmapuuid());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  // sint32 status = 3;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_status());
  }

  // float progress = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMapProcessingStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getMapProcessingStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMapProcessingStatusRequest::GetClassData() const { return &_class_data_; }


void getMapProcessingStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getMapProcessingStatusRequest*>(&to_msg);
  auto& from = static_cast<const getMapProcessingStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getMapProcessingStatusRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (!from._internal_resultingmapuuid().empty()) {
    _this->_internal_set_resultingmapuuid(from._internal_resultingmapuuid());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_progress = from._internal_progress();
  uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    _this->_internal_set_progress(from._internal_progress());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMapProcessingStatusRequest::CopyFrom(const getMapProcessingStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getMapProcessingStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapProcessingStatusRequest::IsInitialized() const {
  return true;
}

void getMapProcessingStatusRequest::InternalSwap(getMapProcessingStatusRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.resultingmapuuid_, lhs_arena,
      &other->_impl_.resultingmapuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getMapProcessingStatusRequest, _impl_.progress_)
      + sizeof(getMapProcessingStatusRequest::_impl_.progress_)
      - PROTOBUF_FIELD_OFFSET(getMapProcessingStatusRequest, _impl_.grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&_impl_.grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->_impl_.grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapProcessingStatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[18]);
}

// ===================================================================

class getMapProcessingStatusResponse::_Internal {
 public:
};

getMapProcessingStatusResponse::getMapProcessingStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getMapProcessingStatusResponse)
}
getMapProcessingStatusResponse::getMapProcessingStatusResponse(const getMapProcessingStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getMapProcessingStatusResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resultingmapuuid_){}
    , decltype(_impl_.status_){}
    , decltype(_impl_.progress_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.resultingmapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resultingmapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resultingmapuuid().empty()) {
    _this->_impl_.resultingmapuuid_.Set(from._internal_resultingmapuuid(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.status_, &from._impl_.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.xpcfgrpcreturnvalue_) -
    reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.xpcfgrpcreturnvalue_));
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getMapProcessingStatusResponse)
}

inline void getMapProcessingStatusResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resultingmapuuid_){}
    , decltype(_impl_.status_){0}
    , decltype(_impl_.progress_){0}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.resultingmapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resultingmapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getMapProcessingStatusResponse::~getMapProcessingStatusResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getMapProcessingStatusResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMapProcessingStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resultingmapuuid_.Destroy();
}

void getMapProcessingStatusResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getMapProcessingStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getMapProcessingStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resultingmapuuid_.ClearToEmpty();
  ::memset(&_impl_.status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.xpcfgrpcreturnvalue_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.xpcfgrpcreturnvalue_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapProcessingStatusResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float progress = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.progress_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // string resultingMapUUID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_resultingmapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.getMapProcessingStatusResponse.resultingMapUUID"));
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMapProcessingStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getMapProcessingStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_status(), target);
  }

  // float progress = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_progress(), target);
  }

  // string resultingMapUUID = 3;
  if (!this->_internal_resultingmapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resultingmapuuid().data(), static_cast<int>(this->_internal_resultingmapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.getMapProcessingStatusResponse.resultingMapUUID");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_resultingmapuuid(), target);
  }

  // sint32 xpcfGrpcReturnValue = 4;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(4, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getMapProcessingStatusResponse)
  return target;
}

size_t getMapProcessingStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getMapProcessingStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resultingMapUUID = 3;
  if (!this->_internal_resultingmapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resultingmapuuid());
  }

  // sint32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_status());
  }

  // float progress = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_progress = this->_internal_progress();
  uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    total_size += 1 + 4;
  }

  // sint32 xpcfGrpcReturnValue = 4;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMapProcessingStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getMapProcessingStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMapProcessingStatusResponse::GetClassData() const { return &_class_data_; }


void getMapProcessingStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getMapProcessingStatusResponse*>(&to_msg);
  auto& from = static_cast<const getMapProcessingStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getMapProcessingStatusResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resultingmapuuid().empty()) {
    _this->_internal_set_resultingmapuuid(from._internal_resultingmapuuid());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_progress = from._internal_progress();
  uint32_t raw_progress;
  memcpy(&raw_progress, &tmp_progress, sizeof(tmp_progress));
  if (raw_progress != 0) {
    _this->_internal_set_progress(from._internal_progress());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMapProcessingStatusResponse::CopyFrom(const getMapProcessingStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getMapProcessingStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapProcessingStatusResponse::IsInitialized() const {
  return true;
}

void getMapProcessingStatusResponse::InternalSwap(getMapProcessingStatusResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.resultingmapuuid_, lhs_arena,
      &other->_impl_.resultingmapuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getMapProcessingStatusResponse, _impl_.xpcfgrpcreturnvalue_)
      + sizeof(getMapProcessingStatusResponse::_impl_.xpcfgrpcreturnvalue_)
      - PROTOBUF_FIELD_OFFSET(getMapProcessingStatusResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapProcessingStatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[19]);
}

// ===================================================================

class getMapProcessingDataRequest::_Internal {
 public:
};

getMapProcessingDataRequest::getMapProcessingDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getMapProcessingDataRequest)
}
getMapProcessingDataRequest::getMapProcessingDataRequest(const getMapProcessingDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getMapProcessingDataRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.pointcloud_){}
    , decltype(_impl_.keyframeposes_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mapuuid().empty()) {
    _this->_impl_.mapuuid_.Set(from._internal_mapuuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.pointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pointcloud().empty()) {
    _this->_impl_.pointcloud_.Set(from._internal_pointcloud(), 
      _this->GetArenaForAllocation());
  }
  _impl_.keyframeposes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keyframeposes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keyframeposes().empty()) {
    _this->_impl_.keyframeposes_.Set(from._internal_keyframeposes(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getMapProcessingDataRequest)
}

inline void getMapProcessingDataRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.mapuuid_){}
    , decltype(_impl_.pointcloud_){}
    , decltype(_impl_.keyframeposes_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.mapuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mapuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.keyframeposes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keyframeposes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getMapProcessingDataRequest::~getMapProcessingDataRequest() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getMapProcessingDataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMapProcessingDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.mapuuid_.Destroy();
  _impl_.pointcloud_.Destroy();
  _impl_.keyframeposes_.Destroy();
}

void getMapProcessingDataRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getMapProcessingDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getMapProcessingDataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mapuuid_.ClearToEmpty();
  _impl_.pointcloud_.ClearToEmpty();
  _impl_.keyframeposes_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapProcessingDataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mapUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mapuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIMapsManager.getMapProcessingDataRequest.mapUUID"));
        } else
          goto handle_unusual;
        continue;
      // bytes pointCloud = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_pointcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keyframePoses = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_keyframeposes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMapProcessingDataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getMapProcessingDataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mapuuid().data(), static_cast<int>(this->_internal_mapuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIMapsManager.getMapProcessingDataRequest.mapUUID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mapuuid(), target);
  }

  // bytes pointCloud = 3;
  if (!this->_internal_pointcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_pointcloud(), target);
  }

  // bytes keyframePoses = 4;
  if (!this->_internal_keyframeposes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_keyframeposes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getMapProcessingDataRequest)
  return target;
}

size_t getMapProcessingDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getMapProcessingDataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mapUUID = 2;
  if (!this->_internal_mapuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mapuuid());
  }

  // bytes pointCloud = 3;
  if (!this->_internal_pointcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pointcloud());
  }

  // bytes keyframePoses = 4;
  if (!this->_internal_keyframeposes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframeposes());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMapProcessingDataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getMapProcessingDataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMapProcessingDataRequest::GetClassData() const { return &_class_data_; }


void getMapProcessingDataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getMapProcessingDataRequest*>(&to_msg);
  auto& from = static_cast<const getMapProcessingDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getMapProcessingDataRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mapuuid().empty()) {
    _this->_internal_set_mapuuid(from._internal_mapuuid());
  }
  if (!from._internal_pointcloud().empty()) {
    _this->_internal_set_pointcloud(from._internal_pointcloud());
  }
  if (!from._internal_keyframeposes().empty()) {
    _this->_internal_set_keyframeposes(from._internal_keyframeposes());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMapProcessingDataRequest::CopyFrom(const getMapProcessingDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getMapProcessingDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapProcessingDataRequest::IsInitialized() const {
  return true;
}

void getMapProcessingDataRequest::InternalSwap(getMapProcessingDataRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mapuuid_, lhs_arena,
      &other->_impl_.mapuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pointcloud_, lhs_arena,
      &other->_impl_.pointcloud_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.keyframeposes_, lhs_arena,
      &other->_impl_.keyframeposes_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapProcessingDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[20]);
}

// ===================================================================

class getMapProcessingDataResponse::_Internal {
 public:
};

getMapProcessingDataResponse::getMapProcessingDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIMapsManager.getMapProcessingDataResponse)
}
getMapProcessingDataResponse::getMapProcessingDataResponse(const getMapProcessingDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getMapProcessingDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pointcloud_){}
    , decltype(_impl_.keyframeposes_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.pointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pointcloud().empty()) {
    _this->_impl_.pointcloud_.Set(from._internal_pointcloud(), 
      _this->GetArenaForAllocation());
  }
  _impl_.keyframeposes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keyframeposes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keyframeposes().empty()) {
    _this->_impl_.keyframeposes_.Set(from._internal_keyframeposes(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIMapsManager.getMapProcessingDataResponse)
}

inline void getMapProcessingDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pointcloud_){}
    , decltype(_impl_.keyframeposes_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.pointcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pointcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.keyframeposes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keyframeposes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getMapProcessingDataResponse::~getMapProcessingDataResponse() {
  // @@protoc_insertion_point(destructor:grpcIMapsManager.getMapProcessingDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getMapProcessingDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pointcloud_.Destroy();
  _impl_.keyframeposes_.Destroy();
}

void getMapProcessingDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getMapProcessingDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMapsManager.getMapProcessingDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pointcloud_.ClearToEmpty();
  _impl_.keyframeposes_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getMapProcessingDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes pointCloud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pointcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keyframePoses = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keyframeposes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getMapProcessingDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMapsManager.getMapProcessingDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pointCloud = 1;
  if (!this->_internal_pointcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pointcloud(), target);
  }

  // bytes keyframePoses = 2;
  if (!this->_internal_keyframeposes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframeposes(), target);
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(3, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMapsManager.getMapProcessingDataResponse)
  return target;
}

size_t getMapProcessingDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMapsManager.getMapProcessingDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pointCloud = 1;
  if (!this->_internal_pointcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pointcloud());
  }

  // bytes keyframePoses = 2;
  if (!this->_internal_keyframeposes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframeposes());
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getMapProcessingDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getMapProcessingDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getMapProcessingDataResponse::GetClassData() const { return &_class_data_; }


void getMapProcessingDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getMapProcessingDataResponse*>(&to_msg);
  auto& from = static_cast<const getMapProcessingDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIMapsManager.getMapProcessingDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pointcloud().empty()) {
    _this->_internal_set_pointcloud(from._internal_pointcloud());
  }
  if (!from._internal_keyframeposes().empty()) {
    _this->_internal_set_keyframeposes(from._internal_keyframeposes());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getMapProcessingDataResponse::CopyFrom(const getMapProcessingDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMapsManager.getMapProcessingDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getMapProcessingDataResponse::IsInitialized() const {
  return true;
}

void getMapProcessingDataResponse::InternalSwap(getMapProcessingDataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pointcloud_, lhs_arena,
      &other->_impl_.pointcloud_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.keyframeposes_, lhs_arena,
      &other->_impl_.keyframeposes_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getMapProcessingDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIMapsManagerService_2eproto_getter, &descriptor_table_grpcIMapsManagerService_2eproto_once,
      file_level_metadata_grpcIMapsManagerService_2eproto[21]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIMapsManager
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::createMapRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::createMapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::createMapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::createMapResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::createMapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::createMapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::deleteMapRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::deleteMapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::deleteMapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::deleteMapResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::deleteMapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::deleteMapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getAllMapsRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getAllMapsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getAllMapsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getAllMapsResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getAllMapsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getAllMapsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::increaseMapClientsRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::increaseMapClientsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::increaseMapClientsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::increaseMapClientsResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::increaseMapClientsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::increaseMapClientsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::decreaseMapClientsRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::decreaseMapClientsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::decreaseMapClientsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::decreaseMapClientsResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::decreaseMapClientsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::decreaseMapClientsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getMapRequestRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getMapRequestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getMapRequestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getMapRequestResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getMapRequestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getMapRequestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::setMapRequestRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::setMapRequestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::setMapRequestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::setMapRequestResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::setMapRequestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::setMapRequestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getPointCloudRequestRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getPointCloudRequestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getPointCloudRequestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getPointCloudRequestResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getPointCloudRequestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getPointCloudRequestResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::requestMapProcessingRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::requestMapProcessingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::requestMapProcessingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::requestMapProcessingResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::requestMapProcessingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::requestMapProcessingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getMapProcessingStatusRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getMapProcessingStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getMapProcessingStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getMapProcessingStatusResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getMapProcessingStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getMapProcessingStatusResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getMapProcessingDataRequest*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getMapProcessingDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getMapProcessingDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMapsManager::getMapProcessingDataResponse*
Arena::CreateMaybeMessage< ::grpcIMapsManager::getMapProcessingDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMapsManager::getMapProcessingDataResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
