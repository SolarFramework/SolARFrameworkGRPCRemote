// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: grpcIRelocalizationTrackablePipelineService.proto

#include "grpcIRelocalizationTrackablePipelineService.pb.h"
#include "grpcIRelocalizationTrackablePipelineService.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace grpcIRelocalizationTrackablePipeline {

static const char* grpcIRelocalizationTrackablePipelineService_method_names[] = {
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/init_grpc0",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/start_grpc0",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/stop_grpc0",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/init_grpc1",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/init_grpc2",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/start_grpc1",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/stop_grpc1",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/setCameraParameters",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/getCameraParameters",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/relocalizeProcessRequest_grpc0",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/relocalizeProcessRequest_grpc1",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/relocalizeProcessRequest_grpc2",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/getMapRequest",
  "/grpcIRelocalizationTrackablePipeline.grpcIRelocalizationTrackablePipelineService/init_grpc3",
};

std::unique_ptr< grpcIRelocalizationTrackablePipelineService::Stub> grpcIRelocalizationTrackablePipelineService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< grpcIRelocalizationTrackablePipelineService::Stub> stub(new grpcIRelocalizationTrackablePipelineService::Stub(channel, options));
  return stub;
}

grpcIRelocalizationTrackablePipelineService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_init_grpc0_(grpcIRelocalizationTrackablePipelineService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_start_grpc0_(grpcIRelocalizationTrackablePipelineService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_stop_grpc0_(grpcIRelocalizationTrackablePipelineService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_init_grpc1_(grpcIRelocalizationTrackablePipelineService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_init_grpc2_(grpcIRelocalizationTrackablePipelineService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_start_grpc1_(grpcIRelocalizationTrackablePipelineService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_stop_grpc1_(grpcIRelocalizationTrackablePipelineService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setCameraParameters_(grpcIRelocalizationTrackablePipelineService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getCameraParameters_(grpcIRelocalizationTrackablePipelineService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_relocalizeProcessRequest_grpc0_(grpcIRelocalizationTrackablePipelineService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_relocalizeProcessRequest_grpc1_(grpcIRelocalizationTrackablePipelineService_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_relocalizeProcessRequest_grpc2_(grpcIRelocalizationTrackablePipelineService_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getMapRequest_(grpcIRelocalizationTrackablePipelineService_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_init_grpc3_(grpcIRelocalizationTrackablePipelineService_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::init_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc0Request& request, ::grpcIRelocalizationTrackablePipeline::init_grpc0Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::init_grpc0Request, ::grpcIRelocalizationTrackablePipeline::init_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_init_grpc0_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::init_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc0Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::init_grpc0Request, ::grpcIRelocalizationTrackablePipeline::init_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc0_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::init_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc0Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc0_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::init_grpc0Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncinit_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::init_grpc0Response, ::grpcIRelocalizationTrackablePipeline::init_grpc0Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_init_grpc0_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::init_grpc0Response>* grpcIRelocalizationTrackablePipelineService::Stub::Asyncinit_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinit_grpc0Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::start_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc0Request& request, ::grpcIRelocalizationTrackablePipeline::start_grpc0Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::start_grpc0Request, ::grpcIRelocalizationTrackablePipeline::start_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_start_grpc0_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::start_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::start_grpc0Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::start_grpc0Request, ::grpcIRelocalizationTrackablePipeline::start_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_start_grpc0_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::start_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::start_grpc0Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_start_grpc0_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::start_grpc0Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncstart_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::start_grpc0Response, ::grpcIRelocalizationTrackablePipeline::start_grpc0Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_start_grpc0_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::start_grpc0Response>* grpcIRelocalizationTrackablePipelineService::Stub::Asyncstart_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstart_grpc0Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::stop_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request& request, ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request, ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_stop_grpc0_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::stop_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request, ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stop_grpc0_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::stop_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stop_grpc0_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncstop_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response, ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_stop_grpc0_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response>* grpcIRelocalizationTrackablePipelineService::Stub::Asyncstop_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstop_grpc0Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::init_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc1Request& request, ::grpcIRelocalizationTrackablePipeline::init_grpc1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::init_grpc1Request, ::grpcIRelocalizationTrackablePipeline::init_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_init_grpc1_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::init_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::init_grpc1Request, ::grpcIRelocalizationTrackablePipeline::init_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc1_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::init_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::init_grpc1Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncinit_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::init_grpc1Response, ::grpcIRelocalizationTrackablePipeline::init_grpc1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_init_grpc1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::init_grpc1Response>* grpcIRelocalizationTrackablePipelineService::Stub::Asyncinit_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinit_grpc1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::init_grpc2(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc2Request& request, ::grpcIRelocalizationTrackablePipeline::init_grpc2Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::init_grpc2Request, ::grpcIRelocalizationTrackablePipeline::init_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_init_grpc2_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::init_grpc2(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc2Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc2Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::init_grpc2Request, ::grpcIRelocalizationTrackablePipeline::init_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc2_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::init_grpc2(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc2Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc2Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::init_grpc2Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncinit_grpc2Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::init_grpc2Response, ::grpcIRelocalizationTrackablePipeline::init_grpc2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_init_grpc2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::init_grpc2Response>* grpcIRelocalizationTrackablePipelineService::Stub::Asyncinit_grpc2Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinit_grpc2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::start_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc1Request& request, ::grpcIRelocalizationTrackablePipeline::start_grpc1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::start_grpc1Request, ::grpcIRelocalizationTrackablePipeline::start_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_start_grpc1_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::start_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::start_grpc1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::start_grpc1Request, ::grpcIRelocalizationTrackablePipeline::start_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_start_grpc1_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::start_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::start_grpc1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_start_grpc1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::start_grpc1Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncstart_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::start_grpc1Response, ::grpcIRelocalizationTrackablePipeline::start_grpc1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_start_grpc1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::start_grpc1Response>* grpcIRelocalizationTrackablePipelineService::Stub::Asyncstart_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstart_grpc1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::stop_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request& request, ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request, ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_stop_grpc1_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::stop_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request, ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stop_grpc1_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::stop_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stop_grpc1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncstop_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response, ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_stop_grpc1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response>* grpcIRelocalizationTrackablePipelineService::Stub::Asyncstop_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstop_grpc1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::setCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest& request, ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest, ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setCameraParameters_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::setCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest* request, ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest, ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCameraParameters_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::setCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest* request, ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCameraParameters_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncsetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse, ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setCameraParameters_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse>* grpcIRelocalizationTrackablePipelineService::Stub::AsyncsetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetCameraParametersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::getCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest& request, ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest, ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getCameraParameters_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::getCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest* request, ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest, ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCameraParameters_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::getCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest* request, ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCameraParameters_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncgetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse, ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getCameraParameters_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse>* grpcIRelocalizationTrackablePipelineService::Stub::AsyncgetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetCameraParametersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::relocalizeProcessRequest_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request& request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_relocalizeProcessRequest_grpc0_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::relocalizeProcessRequest_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc0_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::relocalizeProcessRequest_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc0_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncrelocalizeProcessRequest_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_relocalizeProcessRequest_grpc0_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response>* grpcIRelocalizationTrackablePipelineService::Stub::AsyncrelocalizeProcessRequest_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrelocalizeProcessRequest_grpc0Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::relocalizeProcessRequest_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request& request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_relocalizeProcessRequest_grpc1_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::relocalizeProcessRequest_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc1_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::relocalizeProcessRequest_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncrelocalizeProcessRequest_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_relocalizeProcessRequest_grpc1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response>* grpcIRelocalizationTrackablePipelineService::Stub::AsyncrelocalizeProcessRequest_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrelocalizeProcessRequest_grpc1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::relocalizeProcessRequest_grpc2(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request& request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_relocalizeProcessRequest_grpc2_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::relocalizeProcessRequest_grpc2(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request* request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc2_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::relocalizeProcessRequest_grpc2(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request* request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncrelocalizeProcessRequest_grpc2Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_relocalizeProcessRequest_grpc2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response>* grpcIRelocalizationTrackablePipelineService::Stub::AsyncrelocalizeProcessRequest_grpc2Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrelocalizeProcessRequest_grpc2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::getMapRequest(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest& request, ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest, ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getMapRequest_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::getMapRequest(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest* request, ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest, ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMapRequest_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::getMapRequest(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest* request, ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMapRequest_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncgetMapRequestRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse, ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getMapRequest_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse>* grpcIRelocalizationTrackablePipelineService::Stub::AsyncgetMapRequestRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetMapRequestRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Stub::init_grpc3(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc3Request& request, ::grpcIRelocalizationTrackablePipeline::init_grpc3Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationTrackablePipeline::init_grpc3Request, ::grpcIRelocalizationTrackablePipeline::init_grpc3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_init_grpc3_, context, request, response);
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::init_grpc3(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc3Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc3Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationTrackablePipeline::init_grpc3Request, ::grpcIRelocalizationTrackablePipeline::init_grpc3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc3_, context, request, response, std::move(f));
}

void grpcIRelocalizationTrackablePipelineService::Stub::async::init_grpc3(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc3Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc3Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc3_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::init_grpc3Response>* grpcIRelocalizationTrackablePipelineService::Stub::PrepareAsyncinit_grpc3Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc3Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationTrackablePipeline::init_grpc3Response, ::grpcIRelocalizationTrackablePipeline::init_grpc3Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_init_grpc3_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationTrackablePipeline::init_grpc3Response>* grpcIRelocalizationTrackablePipelineService::Stub::Asyncinit_grpc3Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc3Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinit_grpc3Raw(context, request, cq);
  result->StartCall();
  return result;
}

grpcIRelocalizationTrackablePipelineService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::init_grpc0Request, ::grpcIRelocalizationTrackablePipeline::init_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::init_grpc0Request* req,
             ::grpcIRelocalizationTrackablePipeline::init_grpc0Response* resp) {
               return service->init_grpc0(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::start_grpc0Request, ::grpcIRelocalizationTrackablePipeline::start_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::start_grpc0Request* req,
             ::grpcIRelocalizationTrackablePipeline::start_grpc0Response* resp) {
               return service->start_grpc0(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request, ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request* req,
             ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response* resp) {
               return service->stop_grpc0(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::init_grpc1Request, ::grpcIRelocalizationTrackablePipeline::init_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::init_grpc1Request* req,
             ::grpcIRelocalizationTrackablePipeline::init_grpc1Response* resp) {
               return service->init_grpc1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::init_grpc2Request, ::grpcIRelocalizationTrackablePipeline::init_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::init_grpc2Request* req,
             ::grpcIRelocalizationTrackablePipeline::init_grpc2Response* resp) {
               return service->init_grpc2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::start_grpc1Request, ::grpcIRelocalizationTrackablePipeline::start_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::start_grpc1Request* req,
             ::grpcIRelocalizationTrackablePipeline::start_grpc1Response* resp) {
               return service->start_grpc1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request, ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request* req,
             ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response* resp) {
               return service->stop_grpc1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest, ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest* req,
             ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse* resp) {
               return service->setCameraParameters(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest, ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest* req,
             ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse* resp) {
               return service->getCameraParameters(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request* req,
             ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response* resp) {
               return service->relocalizeProcessRequest_grpc0(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request* req,
             ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response* resp) {
               return service->relocalizeProcessRequest_grpc1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request* req,
             ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response* resp) {
               return service->relocalizeProcessRequest_grpc2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest, ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest* req,
             ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse* resp) {
               return service->getMapRequest(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationTrackablePipelineService_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationTrackablePipelineService::Service, ::grpcIRelocalizationTrackablePipeline::init_grpc3Request, ::grpcIRelocalizationTrackablePipeline::init_grpc3Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationTrackablePipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationTrackablePipeline::init_grpc3Request* req,
             ::grpcIRelocalizationTrackablePipeline::init_grpc3Response* resp) {
               return service->init_grpc3(ctx, req, resp);
             }, this)));
}

grpcIRelocalizationTrackablePipelineService::Service::~Service() {
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::init_grpc0(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc0Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::start_grpc0(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::start_grpc0Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::stop_grpc0(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::stop_grpc0Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::init_grpc1(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::init_grpc2(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc2Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc2Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::start_grpc1(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::start_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::start_grpc1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::stop_grpc1(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::stop_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::stop_grpc1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::setCameraParameters(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::setCameraParametersRequest* request, ::grpcIRelocalizationTrackablePipeline::setCameraParametersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::getCameraParameters(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::getCameraParametersRequest* request, ::grpcIRelocalizationTrackablePipeline::getCameraParametersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::relocalizeProcessRequest_grpc0(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Request* request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc0Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::relocalizeProcessRequest_grpc1(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Request* request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::relocalizeProcessRequest_grpc2(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Request* request, ::grpcIRelocalizationTrackablePipeline::relocalizeProcessRequest_grpc2Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::getMapRequest(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::getMapRequestRequest* request, ::grpcIRelocalizationTrackablePipeline::getMapRequestResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationTrackablePipelineService::Service::init_grpc3(::grpc::ServerContext* context, const ::grpcIRelocalizationTrackablePipeline::init_grpc3Request* request, ::grpcIRelocalizationTrackablePipeline::init_grpc3Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace grpcIRelocalizationTrackablePipeline

