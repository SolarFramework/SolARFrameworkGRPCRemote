// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: grpcIRelocalizationPipelineService.proto

#include "grpcIRelocalizationPipelineService.pb.h"
#include "grpcIRelocalizationPipelineService.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace grpcIRelocalizationPipeline {

static const char* grpcIRelocalizationPipelineService_method_names[] = {
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/init_grpc0",
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/start",
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/stop",
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/init_grpc1",
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/setCameraParameters",
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/getCameraParameters",
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/relocalizeProcessRequest_grpc0",
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/relocalizeProcessRequest_grpc1",
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/relocalizeProcessRequest_grpc2",
  "/grpcIRelocalizationPipeline.grpcIRelocalizationPipelineService/getMapRequest",
};

std::unique_ptr< grpcIRelocalizationPipelineService::Stub> grpcIRelocalizationPipelineService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< grpcIRelocalizationPipelineService::Stub> stub(new grpcIRelocalizationPipelineService::Stub(channel, options));
  return stub;
}

grpcIRelocalizationPipelineService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_init_grpc0_(grpcIRelocalizationPipelineService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_start_(grpcIRelocalizationPipelineService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_stop_(grpcIRelocalizationPipelineService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_init_grpc1_(grpcIRelocalizationPipelineService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_setCameraParameters_(grpcIRelocalizationPipelineService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getCameraParameters_(grpcIRelocalizationPipelineService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_relocalizeProcessRequest_grpc0_(grpcIRelocalizationPipelineService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_relocalizeProcessRequest_grpc1_(grpcIRelocalizationPipelineService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_relocalizeProcessRequest_grpc2_(grpcIRelocalizationPipelineService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getMapRequest_(grpcIRelocalizationPipelineService_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status grpcIRelocalizationPipelineService::Stub::init_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc0Request& request, ::grpcIRelocalizationPipeline::init_grpc0Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::init_grpc0Request, ::grpcIRelocalizationPipeline::init_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_init_grpc0_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::init_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc0Request* request, ::grpcIRelocalizationPipeline::init_grpc0Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::init_grpc0Request, ::grpcIRelocalizationPipeline::init_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc0_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::init_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc0Request* request, ::grpcIRelocalizationPipeline::init_grpc0Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc0_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::init_grpc0Response>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncinit_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::init_grpc0Response, ::grpcIRelocalizationPipeline::init_grpc0Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_init_grpc0_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::init_grpc0Response>* grpcIRelocalizationPipelineService::Stub::Asyncinit_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinit_grpc0Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationPipelineService::Stub::start(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::startRequest& request, ::grpcIRelocalizationPipeline::startResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::startRequest, ::grpcIRelocalizationPipeline::startResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_start_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::start(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::startRequest* request, ::grpcIRelocalizationPipeline::startResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::startRequest, ::grpcIRelocalizationPipeline::startResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_start_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::start(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::startRequest* request, ::grpcIRelocalizationPipeline::startResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_start_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::startResponse>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncstartRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::startRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::startResponse, ::grpcIRelocalizationPipeline::startRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_start_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::startResponse>* grpcIRelocalizationPipelineService::Stub::AsyncstartRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::startRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstartRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationPipelineService::Stub::stop(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::stopRequest& request, ::grpcIRelocalizationPipeline::stopResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::stopRequest, ::grpcIRelocalizationPipeline::stopResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_stop_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::stop(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::stopRequest* request, ::grpcIRelocalizationPipeline::stopResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::stopRequest, ::grpcIRelocalizationPipeline::stopResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stop_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::stop(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::stopRequest* request, ::grpcIRelocalizationPipeline::stopResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_stop_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::stopResponse>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncstopRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::stopRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::stopResponse, ::grpcIRelocalizationPipeline::stopRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_stop_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::stopResponse>* grpcIRelocalizationPipelineService::Stub::AsyncstopRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::stopRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncstopRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationPipelineService::Stub::init_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc1Request& request, ::grpcIRelocalizationPipeline::init_grpc1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::init_grpc1Request, ::grpcIRelocalizationPipeline::init_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_init_grpc1_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::init_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc1Request* request, ::grpcIRelocalizationPipeline::init_grpc1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::init_grpc1Request, ::grpcIRelocalizationPipeline::init_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc1_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::init_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc1Request* request, ::grpcIRelocalizationPipeline::init_grpc1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_init_grpc1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::init_grpc1Response>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncinit_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::init_grpc1Response, ::grpcIRelocalizationPipeline::init_grpc1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_init_grpc1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::init_grpc1Response>* grpcIRelocalizationPipelineService::Stub::Asyncinit_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::init_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncinit_grpc1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationPipelineService::Stub::setCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::setCameraParametersRequest& request, ::grpcIRelocalizationPipeline::setCameraParametersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::setCameraParametersRequest, ::grpcIRelocalizationPipeline::setCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_setCameraParameters_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::setCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::setCameraParametersRequest* request, ::grpcIRelocalizationPipeline::setCameraParametersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::setCameraParametersRequest, ::grpcIRelocalizationPipeline::setCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCameraParameters_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::setCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::setCameraParametersRequest* request, ::grpcIRelocalizationPipeline::setCameraParametersResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_setCameraParameters_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::setCameraParametersResponse>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncsetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::setCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::setCameraParametersResponse, ::grpcIRelocalizationPipeline::setCameraParametersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_setCameraParameters_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::setCameraParametersResponse>* grpcIRelocalizationPipelineService::Stub::AsyncsetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::setCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsetCameraParametersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationPipelineService::Stub::getCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getCameraParametersRequest& request, ::grpcIRelocalizationPipeline::getCameraParametersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::getCameraParametersRequest, ::grpcIRelocalizationPipeline::getCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getCameraParameters_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::getCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getCameraParametersRequest* request, ::grpcIRelocalizationPipeline::getCameraParametersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::getCameraParametersRequest, ::grpcIRelocalizationPipeline::getCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCameraParameters_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::getCameraParameters(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getCameraParametersRequest* request, ::grpcIRelocalizationPipeline::getCameraParametersResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getCameraParameters_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::getCameraParametersResponse>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncgetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::getCameraParametersResponse, ::grpcIRelocalizationPipeline::getCameraParametersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getCameraParameters_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::getCameraParametersResponse>* grpcIRelocalizationPipelineService::Stub::AsyncgetCameraParametersRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getCameraParametersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetCameraParametersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationPipelineService::Stub::relocalizeProcessRequest_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request& request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_relocalizeProcessRequest_grpc0_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::relocalizeProcessRequest_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request* request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc0_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::relocalizeProcessRequest_grpc0(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request* request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc0_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncrelocalizeProcessRequest_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_relocalizeProcessRequest_grpc0_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response>* grpcIRelocalizationPipelineService::Stub::AsyncrelocalizeProcessRequest_grpc0Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrelocalizeProcessRequest_grpc0Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationPipelineService::Stub::relocalizeProcessRequest_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request& request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_relocalizeProcessRequest_grpc1_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::relocalizeProcessRequest_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request* request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc1_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::relocalizeProcessRequest_grpc1(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request* request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncrelocalizeProcessRequest_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_relocalizeProcessRequest_grpc1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response>* grpcIRelocalizationPipelineService::Stub::AsyncrelocalizeProcessRequest_grpc1Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrelocalizeProcessRequest_grpc1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationPipelineService::Stub::relocalizeProcessRequest_grpc2(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request& request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_relocalizeProcessRequest_grpc2_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::relocalizeProcessRequest_grpc2(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request* request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc2_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::relocalizeProcessRequest_grpc2(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request* request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_relocalizeProcessRequest_grpc2_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncrelocalizeProcessRequest_grpc2Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_relocalizeProcessRequest_grpc2_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response>* grpcIRelocalizationPipelineService::Stub::AsyncrelocalizeProcessRequest_grpc2Raw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncrelocalizeProcessRequest_grpc2Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIRelocalizationPipelineService::Stub::getMapRequest(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getMapRequestRequest& request, ::grpcIRelocalizationPipeline::getMapRequestResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIRelocalizationPipeline::getMapRequestRequest, ::grpcIRelocalizationPipeline::getMapRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getMapRequest_, context, request, response);
}

void grpcIRelocalizationPipelineService::Stub::async::getMapRequest(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getMapRequestRequest* request, ::grpcIRelocalizationPipeline::getMapRequestResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIRelocalizationPipeline::getMapRequestRequest, ::grpcIRelocalizationPipeline::getMapRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMapRequest_, context, request, response, std::move(f));
}

void grpcIRelocalizationPipelineService::Stub::async::getMapRequest(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getMapRequestRequest* request, ::grpcIRelocalizationPipeline::getMapRequestResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getMapRequest_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::getMapRequestResponse>* grpcIRelocalizationPipelineService::Stub::PrepareAsyncgetMapRequestRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getMapRequestRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIRelocalizationPipeline::getMapRequestResponse, ::grpcIRelocalizationPipeline::getMapRequestRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getMapRequest_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIRelocalizationPipeline::getMapRequestResponse>* grpcIRelocalizationPipelineService::Stub::AsyncgetMapRequestRaw(::grpc::ClientContext* context, const ::grpcIRelocalizationPipeline::getMapRequestRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetMapRequestRaw(context, request, cq);
  result->StartCall();
  return result;
}

grpcIRelocalizationPipelineService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::init_grpc0Request, ::grpcIRelocalizationPipeline::init_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::init_grpc0Request* req,
             ::grpcIRelocalizationPipeline::init_grpc0Response* resp) {
               return service->init_grpc0(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::startRequest, ::grpcIRelocalizationPipeline::startResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::startRequest* req,
             ::grpcIRelocalizationPipeline::startResponse* resp) {
               return service->start(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::stopRequest, ::grpcIRelocalizationPipeline::stopResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::stopRequest* req,
             ::grpcIRelocalizationPipeline::stopResponse* resp) {
               return service->stop(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::init_grpc1Request, ::grpcIRelocalizationPipeline::init_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::init_grpc1Request* req,
             ::grpcIRelocalizationPipeline::init_grpc1Response* resp) {
               return service->init_grpc1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::setCameraParametersRequest, ::grpcIRelocalizationPipeline::setCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::setCameraParametersRequest* req,
             ::grpcIRelocalizationPipeline::setCameraParametersResponse* resp) {
               return service->setCameraParameters(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::getCameraParametersRequest, ::grpcIRelocalizationPipeline::getCameraParametersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::getCameraParametersRequest* req,
             ::grpcIRelocalizationPipeline::getCameraParametersResponse* resp) {
               return service->getCameraParameters(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request* req,
             ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response* resp) {
               return service->relocalizeProcessRequest_grpc0(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request* req,
             ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response* resp) {
               return service->relocalizeProcessRequest_grpc1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request* req,
             ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response* resp) {
               return service->relocalizeProcessRequest_grpc2(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIRelocalizationPipelineService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIRelocalizationPipelineService::Service, ::grpcIRelocalizationPipeline::getMapRequestRequest, ::grpcIRelocalizationPipeline::getMapRequestResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIRelocalizationPipelineService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIRelocalizationPipeline::getMapRequestRequest* req,
             ::grpcIRelocalizationPipeline::getMapRequestResponse* resp) {
               return service->getMapRequest(ctx, req, resp);
             }, this)));
}

grpcIRelocalizationPipelineService::Service::~Service() {
}

::grpc::Status grpcIRelocalizationPipelineService::Service::init_grpc0(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::init_grpc0Request* request, ::grpcIRelocalizationPipeline::init_grpc0Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationPipelineService::Service::start(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::startRequest* request, ::grpcIRelocalizationPipeline::startResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationPipelineService::Service::stop(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::stopRequest* request, ::grpcIRelocalizationPipeline::stopResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationPipelineService::Service::init_grpc1(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::init_grpc1Request* request, ::grpcIRelocalizationPipeline::init_grpc1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationPipelineService::Service::setCameraParameters(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::setCameraParametersRequest* request, ::grpcIRelocalizationPipeline::setCameraParametersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationPipelineService::Service::getCameraParameters(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::getCameraParametersRequest* request, ::grpcIRelocalizationPipeline::getCameraParametersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationPipelineService::Service::relocalizeProcessRequest_grpc0(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Request* request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc0Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationPipelineService::Service::relocalizeProcessRequest_grpc1(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Request* request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationPipelineService::Service::relocalizeProcessRequest_grpc2(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Request* request, ::grpcIRelocalizationPipeline::relocalizeProcessRequest_grpc2Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIRelocalizationPipelineService::Service::getMapRequest(::grpc::ServerContext* context, const ::grpcIRelocalizationPipeline::getMapRequestRequest* request, ::grpcIRelocalizationPipeline::getMapRequestResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace grpcIRelocalizationPipeline

