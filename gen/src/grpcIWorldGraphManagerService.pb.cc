// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIWorldGraphManagerService.proto

#include "grpcIWorldGraphManagerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcIWorldGraphManager {
PROTOBUF_CONSTEXPR getRelocalizationInformationRequest::getRelocalizationInformationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uuids_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.capability_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.relocalizationinformation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getRelocalizationInformationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getRelocalizationInformationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getRelocalizationInformationRequestDefaultTypeInternal() {}
  union {
    getRelocalizationInformationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getRelocalizationInformationRequestDefaultTypeInternal _getRelocalizationInformationRequest_default_instance_;
PROTOBUF_CONSTEXPR getRelocalizationInformationResponse::getRelocalizationInformationResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.relocalizationinformation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getRelocalizationInformationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getRelocalizationInformationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getRelocalizationInformationResponseDefaultTypeInternal() {}
  union {
    getRelocalizationInformationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getRelocalizationInformationResponseDefaultTypeInternal _getRelocalizationInformationResponse_default_instance_;
PROTOBUF_CONSTEXPR getWorldElementRequest::getWorldElementRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldelementid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.worldelement_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldElementRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldElementRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldElementRequestDefaultTypeInternal() {}
  union {
    getWorldElementRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldElementRequestDefaultTypeInternal _getWorldElementRequest_default_instance_;
PROTOBUF_CONSTEXPR getWorldElementResponse::getWorldElementResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldelement_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldElementResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldElementResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldElementResponseDefaultTypeInternal() {}
  union {
    getWorldElementResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldElementResponseDefaultTypeInternal _getWorldElementResponse_default_instance_;
PROTOBUF_CONSTEXPR getWorldElementsRequest::getWorldElementsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldElementsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldElementsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldElementsRequestDefaultTypeInternal() {}
  union {
    getWorldElementsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldElementsRequestDefaultTypeInternal _getWorldElementsRequest_default_instance_;
PROTOBUF_CONSTEXPR getWorldElementsResponse::getWorldElementsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldElementsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldElementsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldElementsResponseDefaultTypeInternal() {}
  union {
    getWorldElementsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldElementsResponseDefaultTypeInternal _getWorldElementsResponse_default_instance_;
PROTOBUF_CONSTEXPR getWorldElementByKeyValueRequest::getWorldElementByKeyValueRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldElementByKeyValueRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldElementByKeyValueRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldElementByKeyValueRequestDefaultTypeInternal() {}
  union {
    getWorldElementByKeyValueRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldElementByKeyValueRequestDefaultTypeInternal _getWorldElementByKeyValueRequest_default_instance_;
PROTOBUF_CONSTEXPR getWorldElementByKeyValueResponse::getWorldElementByKeyValueResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldElementByKeyValueResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldElementByKeyValueResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldElementByKeyValueResponseDefaultTypeInternal() {}
  union {
    getWorldElementByKeyValueResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldElementByKeyValueResponseDefaultTypeInternal _getWorldElementByKeyValueResponse_default_instance_;
PROTOBUF_CONSTEXPR getWorldElementByKeyRequest::getWorldElementByKeyRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldElementByKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldElementByKeyRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldElementByKeyRequestDefaultTypeInternal() {}
  union {
    getWorldElementByKeyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldElementByKeyRequestDefaultTypeInternal _getWorldElementByKeyRequest_default_instance_;
PROTOBUF_CONSTEXPR getWorldElementByKeyResponse::getWorldElementByKeyResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldElementByKeyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldElementByKeyResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldElementByKeyResponseDefaultTypeInternal() {}
  union {
    getWorldElementByKeyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldElementByKeyResponseDefaultTypeInternal _getWorldElementByKeyResponse_default_instance_;
PROTOBUF_CONSTEXPR addTrackableRequest::addTrackableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trackable_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addTrackableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addTrackableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addTrackableRequestDefaultTypeInternal() {}
  union {
    addTrackableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addTrackableRequestDefaultTypeInternal _addTrackableRequest_default_instance_;
PROTOBUF_CONSTEXPR addTrackableResponse::addTrackableResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addTrackableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addTrackableResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addTrackableResponseDefaultTypeInternal() {}
  union {
    addTrackableResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addTrackableResponseDefaultTypeInternal _addTrackableResponse_default_instance_;
PROTOBUF_CONSTEXPR getTrackableRequest::getTrackableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trackableid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.trackable_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getTrackableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getTrackableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getTrackableRequestDefaultTypeInternal() {}
  union {
    getTrackableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getTrackableRequestDefaultTypeInternal _getTrackableRequest_default_instance_;
PROTOBUF_CONSTEXPR getTrackableResponse::getTrackableResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trackable_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getTrackableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getTrackableResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getTrackableResponseDefaultTypeInternal() {}
  union {
    getTrackableResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getTrackableResponseDefaultTypeInternal _getTrackableResponse_default_instance_;
PROTOBUF_CONSTEXPR removeTrackableRequest::removeTrackableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trackableid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct removeTrackableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeTrackableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeTrackableRequestDefaultTypeInternal() {}
  union {
    removeTrackableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeTrackableRequestDefaultTypeInternal _removeTrackableRequest_default_instance_;
PROTOBUF_CONSTEXPR removeTrackableResponse::removeTrackableResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct removeTrackableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeTrackableResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeTrackableResponseDefaultTypeInternal() {}
  union {
    removeTrackableResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeTrackableResponseDefaultTypeInternal _removeTrackableResponse_default_instance_;
PROTOBUF_CONSTEXPR getTrackablesRequest::getTrackablesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getTrackablesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getTrackablesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getTrackablesRequestDefaultTypeInternal() {}
  union {
    getTrackablesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getTrackablesRequestDefaultTypeInternal _getTrackablesRequest_default_instance_;
PROTOBUF_CONSTEXPR getTrackablesResponse::getTrackablesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getTrackablesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getTrackablesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getTrackablesResponseDefaultTypeInternal() {}
  union {
    getTrackablesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getTrackablesResponseDefaultTypeInternal _getTrackablesResponse_default_instance_;
PROTOBUF_CONSTEXPR modifyTrackableRequest::modifyTrackableRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trackable_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct modifyTrackableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR modifyTrackableRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~modifyTrackableRequestDefaultTypeInternal() {}
  union {
    modifyTrackableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 modifyTrackableRequestDefaultTypeInternal _modifyTrackableRequest_default_instance_;
PROTOBUF_CONSTEXPR modifyTrackableResponse::modifyTrackableResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct modifyTrackableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR modifyTrackableResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~modifyTrackableResponseDefaultTypeInternal() {}
  union {
    modifyTrackableResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 modifyTrackableResponseDefaultTypeInternal _modifyTrackableResponse_default_instance_;
PROTOBUF_CONSTEXPR addWorldAnchorRequest::addWorldAnchorRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldanchor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addWorldAnchorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addWorldAnchorRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addWorldAnchorRequestDefaultTypeInternal() {}
  union {
    addWorldAnchorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addWorldAnchorRequestDefaultTypeInternal _addWorldAnchorRequest_default_instance_;
PROTOBUF_CONSTEXPR addWorldAnchorResponse::addWorldAnchorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addWorldAnchorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addWorldAnchorResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addWorldAnchorResponseDefaultTypeInternal() {}
  union {
    addWorldAnchorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addWorldAnchorResponseDefaultTypeInternal _addWorldAnchorResponse_default_instance_;
PROTOBUF_CONSTEXPR getWorldAnchorRequest::getWorldAnchorRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldanchorid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.worldanchor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldAnchorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldAnchorRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldAnchorRequestDefaultTypeInternal() {}
  union {
    getWorldAnchorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldAnchorRequestDefaultTypeInternal _getWorldAnchorRequest_default_instance_;
PROTOBUF_CONSTEXPR getWorldAnchorResponse::getWorldAnchorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldanchor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldAnchorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldAnchorResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldAnchorResponseDefaultTypeInternal() {}
  union {
    getWorldAnchorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldAnchorResponseDefaultTypeInternal _getWorldAnchorResponse_default_instance_;
PROTOBUF_CONSTEXPR removeWorldAnchorRequest::removeWorldAnchorRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldanchorid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct removeWorldAnchorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeWorldAnchorRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeWorldAnchorRequestDefaultTypeInternal() {}
  union {
    removeWorldAnchorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeWorldAnchorRequestDefaultTypeInternal _removeWorldAnchorRequest_default_instance_;
PROTOBUF_CONSTEXPR removeWorldAnchorResponse::removeWorldAnchorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct removeWorldAnchorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeWorldAnchorResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeWorldAnchorResponseDefaultTypeInternal() {}
  union {
    removeWorldAnchorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeWorldAnchorResponseDefaultTypeInternal _removeWorldAnchorResponse_default_instance_;
PROTOBUF_CONSTEXPR getWorldAnchorsRequest::getWorldAnchorsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldAnchorsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldAnchorsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldAnchorsRequestDefaultTypeInternal() {}
  union {
    getWorldAnchorsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldAnchorsRequestDefaultTypeInternal _getWorldAnchorsRequest_default_instance_;
PROTOBUF_CONSTEXPR getWorldAnchorsResponse::getWorldAnchorsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldAnchorsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldAnchorsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldAnchorsResponseDefaultTypeInternal() {}
  union {
    getWorldAnchorsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldAnchorsResponseDefaultTypeInternal _getWorldAnchorsResponse_default_instance_;
PROTOBUF_CONSTEXPR modifyWorldAnchorRequest::modifyWorldAnchorRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldanchor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct modifyWorldAnchorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR modifyWorldAnchorRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~modifyWorldAnchorRequestDefaultTypeInternal() {}
  union {
    modifyWorldAnchorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 modifyWorldAnchorRequestDefaultTypeInternal _modifyWorldAnchorRequest_default_instance_;
PROTOBUF_CONSTEXPR modifyWorldAnchorResponse::modifyWorldAnchorResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct modifyWorldAnchorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR modifyWorldAnchorResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~modifyWorldAnchorResponseDefaultTypeInternal() {}
  union {
    modifyWorldAnchorResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 modifyWorldAnchorResponseDefaultTypeInternal _modifyWorldAnchorResponse_default_instance_;
PROTOBUF_CONSTEXPR addWorldLinkRequest::addWorldLinkRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldlink_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addWorldLinkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addWorldLinkRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addWorldLinkRequestDefaultTypeInternal() {}
  union {
    addWorldLinkRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addWorldLinkRequestDefaultTypeInternal _addWorldLinkRequest_default_instance_;
PROTOBUF_CONSTEXPR addWorldLinkResponse::addWorldLinkResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct addWorldLinkResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR addWorldLinkResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~addWorldLinkResponseDefaultTypeInternal() {}
  union {
    addWorldLinkResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 addWorldLinkResponseDefaultTypeInternal _addWorldLinkResponse_default_instance_;
PROTOBUF_CONSTEXPR getWorldLink_grpc0Request::getWorldLink_grpc0Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.childid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.worldlink_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldLink_grpc0RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldLink_grpc0RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldLink_grpc0RequestDefaultTypeInternal() {}
  union {
    getWorldLink_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldLink_grpc0RequestDefaultTypeInternal _getWorldLink_grpc0Request_default_instance_;
PROTOBUF_CONSTEXPR getWorldLink_grpc0Response::getWorldLink_grpc0Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldlink_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldLink_grpc0ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldLink_grpc0ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldLink_grpc0ResponseDefaultTypeInternal() {}
  union {
    getWorldLink_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldLink_grpc0ResponseDefaultTypeInternal _getWorldLink_grpc0Response_default_instance_;
PROTOBUF_CONSTEXPR getWorldLink_grpc1Request::getWorldLink_grpc1Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.linkid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.worldlink_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldLink_grpc1RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldLink_grpc1RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldLink_grpc1RequestDefaultTypeInternal() {}
  union {
    getWorldLink_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldLink_grpc1RequestDefaultTypeInternal _getWorldLink_grpc1Request_default_instance_;
PROTOBUF_CONSTEXPR getWorldLink_grpc1Response::getWorldLink_grpc1Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldlink_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldLink_grpc1ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldLink_grpc1ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldLink_grpc1ResponseDefaultTypeInternal() {}
  union {
    getWorldLink_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldLink_grpc1ResponseDefaultTypeInternal _getWorldLink_grpc1Response_default_instance_;
PROTOBUF_CONSTEXPR removeWorldLink_grpc0Request::removeWorldLink_grpc0Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.childid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct removeWorldLink_grpc0RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeWorldLink_grpc0RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeWorldLink_grpc0RequestDefaultTypeInternal() {}
  union {
    removeWorldLink_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeWorldLink_grpc0RequestDefaultTypeInternal _removeWorldLink_grpc0Request_default_instance_;
PROTOBUF_CONSTEXPR removeWorldLink_grpc0Response::removeWorldLink_grpc0Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct removeWorldLink_grpc0ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeWorldLink_grpc0ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeWorldLink_grpc0ResponseDefaultTypeInternal() {}
  union {
    removeWorldLink_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeWorldLink_grpc0ResponseDefaultTypeInternal _removeWorldLink_grpc0Response_default_instance_;
PROTOBUF_CONSTEXPR removeWorldLink_grpc1Request::removeWorldLink_grpc1Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.linkid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct removeWorldLink_grpc1RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeWorldLink_grpc1RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeWorldLink_grpc1RequestDefaultTypeInternal() {}
  union {
    removeWorldLink_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeWorldLink_grpc1RequestDefaultTypeInternal _removeWorldLink_grpc1Request_default_instance_;
PROTOBUF_CONSTEXPR removeWorldLink_grpc1Response::removeWorldLink_grpc1Response(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct removeWorldLink_grpc1ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR removeWorldLink_grpc1ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~removeWorldLink_grpc1ResponseDefaultTypeInternal() {}
  union {
    removeWorldLink_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 removeWorldLink_grpc1ResponseDefaultTypeInternal _removeWorldLink_grpc1Response_default_instance_;
PROTOBUF_CONSTEXPR getWorldLinksRequest::getWorldLinksRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldLinksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldLinksRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldLinksRequestDefaultTypeInternal() {}
  union {
    getWorldLinksRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldLinksRequestDefaultTypeInternal _getWorldLinksRequest_default_instance_;
PROTOBUF_CONSTEXPR getWorldLinksResponse::getWorldLinksResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vector_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getWorldLinksResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getWorldLinksResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getWorldLinksResponseDefaultTypeInternal() {}
  union {
    getWorldLinksResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getWorldLinksResponseDefaultTypeInternal _getWorldLinksResponse_default_instance_;
PROTOBUF_CONSTEXPR modifyWorldLinkRequest::modifyWorldLinkRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.worldlink_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct modifyWorldLinkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR modifyWorldLinkRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~modifyWorldLinkRequestDefaultTypeInternal() {}
  union {
    modifyWorldLinkRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 modifyWorldLinkRequestDefaultTypeInternal _modifyWorldLinkRequest_default_instance_;
PROTOBUF_CONSTEXPR modifyWorldLinkResponse::modifyWorldLinkResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct modifyWorldLinkResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR modifyWorldLinkResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~modifyWorldLinkResponseDefaultTypeInternal() {}
  union {
    modifyWorldLinkResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 modifyWorldLinkResponseDefaultTypeInternal _modifyWorldLinkResponse_default_instance_;
PROTOBUF_CONSTEXPR saveToFileRequest::saveToFileRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct saveToFileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR saveToFileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~saveToFileRequestDefaultTypeInternal() {}
  union {
    saveToFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 saveToFileRequestDefaultTypeInternal _saveToFileRequest_default_instance_;
PROTOBUF_CONSTEXPR saveToFileResponse::saveToFileResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct saveToFileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR saveToFileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~saveToFileResponseDefaultTypeInternal() {}
  union {
    saveToFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 saveToFileResponseDefaultTypeInternal _saveToFileResponse_default_instance_;
PROTOBUF_CONSTEXPR loadFromFileRequest::loadFromFileRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct loadFromFileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR loadFromFileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~loadFromFileRequestDefaultTypeInternal() {}
  union {
    loadFromFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 loadFromFileRequestDefaultTypeInternal _loadFromFileRequest_default_instance_;
PROTOBUF_CONSTEXPR loadFromFileResponse::loadFromFileResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct loadFromFileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR loadFromFileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~loadFromFileResponseDefaultTypeInternal() {}
  union {
    loadFromFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 loadFromFileResponseDefaultTypeInternal _loadFromFileResponse_default_instance_;
PROTOBUF_CONSTEXPR deleteFileRequest::deleteFileRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct deleteFileRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR deleteFileRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~deleteFileRequestDefaultTypeInternal() {}
  union {
    deleteFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 deleteFileRequestDefaultTypeInternal _deleteFileRequest_default_instance_;
PROTOBUF_CONSTEXPR deleteFileResponse::deleteFileResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct deleteFileResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR deleteFileResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~deleteFileResponseDefaultTypeInternal() {}
  union {
    deleteFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 deleteFileResponseDefaultTypeInternal _deleteFileResponse_default_instance_;
}  // namespace grpcIWorldGraphManager
static ::_pb::Metadata file_level_metadata_grpcIWorldGraphManagerService_2eproto[50];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcIWorldGraphManagerService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcIWorldGraphManagerService_2eproto = nullptr;

const uint32_t TableStruct_grpcIWorldGraphManagerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getRelocalizationInformationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getRelocalizationInformationRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getRelocalizationInformationRequest, _impl_.uuids_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getRelocalizationInformationRequest, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getRelocalizationInformationRequest, _impl_.capability_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getRelocalizationInformationRequest, _impl_.relocalizationinformation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getRelocalizationInformationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getRelocalizationInformationResponse, _impl_.relocalizationinformation_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getRelocalizationInformationResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementRequest, _impl_.worldelementid_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementRequest, _impl_.worldelement_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementResponse, _impl_.worldelement_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementsRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementsRequest, _impl_.vector_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementsResponse, _impl_.vector_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementsResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyValueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyValueRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyValueRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyValueRequest, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyValueRequest, _impl_.vector_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyValueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyValueResponse, _impl_.vector_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyValueResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyRequest, _impl_.vector_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyResponse, _impl_.vector_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldElementByKeyResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addTrackableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addTrackableRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addTrackableRequest, _impl_.trackable_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addTrackableRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addTrackableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addTrackableResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addTrackableResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackableRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackableRequest, _impl_.trackableid_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackableRequest, _impl_.trackable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackableResponse, _impl_.trackable_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackableResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeTrackableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeTrackableRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeTrackableRequest, _impl_.trackableid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeTrackableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeTrackableResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackablesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackablesRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackablesRequest, _impl_.vector_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackablesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackablesResponse, _impl_.vector_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getTrackablesResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyTrackableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyTrackableRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyTrackableRequest, _impl_.trackable_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyTrackableRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyTrackableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyTrackableResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyTrackableResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldAnchorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldAnchorRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldAnchorRequest, _impl_.worldanchor_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldAnchorRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldAnchorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldAnchorResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldAnchorResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorRequest, _impl_.worldanchorid_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorRequest, _impl_.worldanchor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorResponse, _impl_.worldanchor_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldAnchorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldAnchorRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldAnchorRequest, _impl_.worldanchorid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldAnchorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldAnchorResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorsRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorsRequest, _impl_.vector_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorsResponse, _impl_.vector_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldAnchorsResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldAnchorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldAnchorRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldAnchorRequest, _impl_.worldanchor_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldAnchorRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldAnchorResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldAnchorResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldAnchorResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldLinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldLinkRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldLinkRequest, _impl_.worldlink_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldLinkRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldLinkResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldLinkResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::addWorldLinkResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc0Request, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc0Request, _impl_.parentid_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc0Request, _impl_.childid_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc0Request, _impl_.worldlink_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc0Response, _impl_.worldlink_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc0Response, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc1Request, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc1Request, _impl_.linkid_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc1Request, _impl_.worldlink_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc1Response, _impl_.worldlink_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLink_grpc1Response, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc0Request, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc0Request, _impl_.parentid_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc0Request, _impl_.childid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc0Response, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc1Request, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc1Request, _impl_.linkid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::removeWorldLink_grpc1Response, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLinksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLinksRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLinksRequest, _impl_.vector_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLinksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLinksResponse, _impl_.vector_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::getWorldLinksResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldLinkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldLinkRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldLinkRequest, _impl_.worldlink_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldLinkRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldLinkResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldLinkResponse, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::modifyWorldLinkResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::saveToFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::saveToFileRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::saveToFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::saveToFileResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::loadFromFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::loadFromFileRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::loadFromFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::loadFromFileResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::deleteFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::deleteFileRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::deleteFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIWorldGraphManager::deleteFileResponse, _impl_.xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcIWorldGraphManager::getRelocalizationInformationRequest)},
  { 11, -1, -1, sizeof(::grpcIWorldGraphManager::getRelocalizationInformationResponse)},
  { 19, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldElementRequest)},
  { 28, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldElementResponse)},
  { 36, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldElementsRequest)},
  { 44, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldElementsResponse)},
  { 52, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldElementByKeyValueRequest)},
  { 62, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldElementByKeyValueResponse)},
  { 70, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldElementByKeyRequest)},
  { 79, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldElementByKeyResponse)},
  { 87, -1, -1, sizeof(::grpcIWorldGraphManager::addTrackableRequest)},
  { 96, -1, -1, sizeof(::grpcIWorldGraphManager::addTrackableResponse)},
  { 104, -1, -1, sizeof(::grpcIWorldGraphManager::getTrackableRequest)},
  { 113, -1, -1, sizeof(::grpcIWorldGraphManager::getTrackableResponse)},
  { 121, -1, -1, sizeof(::grpcIWorldGraphManager::removeTrackableRequest)},
  { 129, -1, -1, sizeof(::grpcIWorldGraphManager::removeTrackableResponse)},
  { 136, -1, -1, sizeof(::grpcIWorldGraphManager::getTrackablesRequest)},
  { 144, -1, -1, sizeof(::grpcIWorldGraphManager::getTrackablesResponse)},
  { 152, -1, -1, sizeof(::grpcIWorldGraphManager::modifyTrackableRequest)},
  { 161, -1, -1, sizeof(::grpcIWorldGraphManager::modifyTrackableResponse)},
  { 169, -1, -1, sizeof(::grpcIWorldGraphManager::addWorldAnchorRequest)},
  { 178, -1, -1, sizeof(::grpcIWorldGraphManager::addWorldAnchorResponse)},
  { 186, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldAnchorRequest)},
  { 195, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldAnchorResponse)},
  { 203, -1, -1, sizeof(::grpcIWorldGraphManager::removeWorldAnchorRequest)},
  { 211, -1, -1, sizeof(::grpcIWorldGraphManager::removeWorldAnchorResponse)},
  { 218, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldAnchorsRequest)},
  { 226, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldAnchorsResponse)},
  { 234, -1, -1, sizeof(::grpcIWorldGraphManager::modifyWorldAnchorRequest)},
  { 243, -1, -1, sizeof(::grpcIWorldGraphManager::modifyWorldAnchorResponse)},
  { 251, -1, -1, sizeof(::grpcIWorldGraphManager::addWorldLinkRequest)},
  { 260, -1, -1, sizeof(::grpcIWorldGraphManager::addWorldLinkResponse)},
  { 268, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldLink_grpc0Request)},
  { 278, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldLink_grpc0Response)},
  { 286, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldLink_grpc1Request)},
  { 295, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldLink_grpc1Response)},
  { 303, -1, -1, sizeof(::grpcIWorldGraphManager::removeWorldLink_grpc0Request)},
  { 312, -1, -1, sizeof(::grpcIWorldGraphManager::removeWorldLink_grpc0Response)},
  { 319, -1, -1, sizeof(::grpcIWorldGraphManager::removeWorldLink_grpc1Request)},
  { 327, -1, -1, sizeof(::grpcIWorldGraphManager::removeWorldLink_grpc1Response)},
  { 334, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldLinksRequest)},
  { 342, -1, -1, sizeof(::grpcIWorldGraphManager::getWorldLinksResponse)},
  { 350, -1, -1, sizeof(::grpcIWorldGraphManager::modifyWorldLinkRequest)},
  { 359, -1, -1, sizeof(::grpcIWorldGraphManager::modifyWorldLinkResponse)},
  { 367, -1, -1, sizeof(::grpcIWorldGraphManager::saveToFileRequest)},
  { 374, -1, -1, sizeof(::grpcIWorldGraphManager::saveToFileResponse)},
  { 381, -1, -1, sizeof(::grpcIWorldGraphManager::loadFromFileRequest)},
  { 388, -1, -1, sizeof(::grpcIWorldGraphManager::loadFromFileResponse)},
  { 395, -1, -1, sizeof(::grpcIWorldGraphManager::deleteFileRequest)},
  { 402, -1, -1, sizeof(::grpcIWorldGraphManager::deleteFileResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcIWorldGraphManager::_getRelocalizationInformationRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getRelocalizationInformationResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldElementRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldElementResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldElementsRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldElementsResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldElementByKeyValueRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldElementByKeyValueResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldElementByKeyRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldElementByKeyResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_addTrackableRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_addTrackableResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_getTrackableRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getTrackableResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_removeTrackableRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_removeTrackableResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_getTrackablesRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getTrackablesResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_modifyTrackableRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_modifyTrackableResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_addWorldAnchorRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_addWorldAnchorResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldAnchorRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldAnchorResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_removeWorldAnchorRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_removeWorldAnchorResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldAnchorsRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldAnchorsResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_modifyWorldAnchorRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_modifyWorldAnchorResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_addWorldLinkRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_addWorldLinkResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldLink_grpc0Request_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldLink_grpc0Response_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldLink_grpc1Request_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldLink_grpc1Response_default_instance_._instance,
  &::grpcIWorldGraphManager::_removeWorldLink_grpc0Request_default_instance_._instance,
  &::grpcIWorldGraphManager::_removeWorldLink_grpc0Response_default_instance_._instance,
  &::grpcIWorldGraphManager::_removeWorldLink_grpc1Request_default_instance_._instance,
  &::grpcIWorldGraphManager::_removeWorldLink_grpc1Response_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldLinksRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_getWorldLinksResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_modifyWorldLinkRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_modifyWorldLinkResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_saveToFileRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_saveToFileResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_loadFromFileRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_loadFromFileResponse_default_instance_._instance,
  &::grpcIWorldGraphManager::_deleteFileRequest_default_instance_._instance,
  &::grpcIWorldGraphManager::_deleteFileResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcIWorldGraphManagerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#grpcIWorldGraphManagerService.proto\022\026g"
  "rpcIWorldGraphManager\032\033google/protobuf/e"
  "mpty.proto\"\237\001\n#getRelocalizationInformat"
  "ionRequest\022#\n\033grpcServerCompressionForma"
  "t\030\001 \001(\005\022\r\n\005uuids\030\002 \001(\014\022\r\n\005token\030\003 \001(\t\022\022\n"
  "\ncapability\030\004 \001(\014\022!\n\031relocalizationInfor"
  "mation\030\005 \001(\014\"f\n$getRelocalizationInforma"
  "tionResponse\022!\n\031relocalizationInformatio"
  "n\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\"k\n\026"
  "getWorldElementRequest\022#\n\033grpcServerComp"
  "ressionFormat\030\001 \001(\005\022\026\n\016worldElementId\030\002 "
  "\001(\014\022\024\n\014worldElement\030\003 \001(\014\"L\n\027getWorldEle"
  "mentResponse\022\024\n\014worldElement\030\001 \001(\014\022\033\n\023xp"
  "cfGrpcReturnValue\030\002 \001(\021\"N\n\027getWorldEleme"
  "ntsRequest\022#\n\033grpcServerCompressionForma"
  "t\030\001 \001(\005\022\016\n\006vector\030\002 \001(\014\"G\n\030getWorldEleme"
  "ntsResponse\022\016\n\006vector\030\001 \001(\014\022\033\n\023xpcfGrpcR"
  "eturnValue\030\002 \001(\021\"s\n getWorldElementByKey"
  "ValueRequest\022#\n\033grpcServerCompressionFor"
  "mat\030\001 \001(\005\022\013\n\003key\030\002 \001(\t\022\r\n\005value\030\003 \001(\t\022\016\n"
  "\006vector\030\004 \001(\014\"P\n!getWorldElementByKeyVal"
  "ueResponse\022\016\n\006vector\030\001 \001(\014\022\033\n\023xpcfGrpcRe"
  "turnValue\030\002 \001(\021\"_\n\033getWorldElementByKeyR"
  "equest\022#\n\033grpcServerCompressionFormat\030\001 "
  "\001(\005\022\013\n\003key\030\002 \001(\t\022\016\n\006vector\030\003 \001(\014\"K\n\034getW"
  "orldElementByKeyResponse\022\016\n\006vector\030\001 \001(\014"
  "\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\"Y\n\023addTrac"
  "kableRequest\022#\n\033grpcServerCompressionFor"
  "mat\030\001 \001(\005\022\021\n\ttrackable\030\002 \001(\014\022\n\n\002id\030\003 \001(\014"
  "\"\?\n\024addTrackableResponse\022\n\n\002id\030\001 \001(\014\022\033\n\023"
  "xpcfGrpcReturnValue\030\002 \001(\021\"b\n\023getTrackabl"
  "eRequest\022#\n\033grpcServerCompressionFormat\030"
  "\001 \001(\005\022\023\n\013trackableId\030\002 \001(\014\022\021\n\ttrackable\030"
  "\003 \001(\014\"F\n\024getTrackableResponse\022\021\n\ttrackab"
  "le\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\"R\n"
  "\026removeTrackableRequest\022#\n\033grpcServerCom"
  "pressionFormat\030\001 \001(\005\022\023\n\013trackableId\030\002 \001("
  "\014\"6\n\027removeTrackableResponse\022\033\n\023xpcfGrpc"
  "ReturnValue\030\001 \001(\021\"K\n\024getTrackablesReques"
  "t\022#\n\033grpcServerCompressionFormat\030\001 \001(\005\022\016"
  "\n\006vector\030\002 \001(\014\"D\n\025getTrackablesResponse\022"
  "\016\n\006vector\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002"
  " \001(\021\"\\\n\026modifyTrackableRequest\022#\n\033grpcSe"
  "rverCompressionFormat\030\001 \001(\005\022\021\n\ttrackable"
  "\030\002 \001(\014\022\n\n\002id\030\003 \001(\014\"B\n\027modifyTrackableRes"
  "ponse\022\n\n\002id\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue"
  "\030\002 \001(\021\"]\n\025addWorldAnchorRequest\022#\n\033grpcS"
  "erverCompressionFormat\030\001 \001(\005\022\023\n\013worldAnc"
  "hor\030\002 \001(\014\022\n\n\002id\030\003 \001(\014\"A\n\026addWorldAnchorR"
  "esponse\022\n\n\002id\030\001 \001(\014\022\033\n\023xpcfGrpcReturnVal"
  "ue\030\002 \001(\021\"h\n\025getWorldAnchorRequest\022#\n\033grp"
  "cServerCompressionFormat\030\001 \001(\005\022\025\n\rworldA"
  "nchorId\030\002 \001(\014\022\023\n\013worldAnchor\030\003 \001(\014\"J\n\026ge"
  "tWorldAnchorResponse\022\023\n\013worldAnchor\030\001 \001("
  "\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\"V\n\030remove"
  "WorldAnchorRequest\022#\n\033grpcServerCompress"
  "ionFormat\030\001 \001(\005\022\025\n\rworldAnchorId\030\002 \001(\014\"8"
  "\n\031removeWorldAnchorResponse\022\033\n\023xpcfGrpcR"
  "eturnValue\030\001 \001(\021\"M\n\026getWorldAnchorsReque"
  "st\022#\n\033grpcServerCompressionFormat\030\001 \001(\005\022"
  "\016\n\006vector\030\002 \001(\014\"F\n\027getWorldAnchorsRespon"
  "se\022\016\n\006vector\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValu"
  "e\030\002 \001(\021\"`\n\030modifyWorldAnchorRequest\022#\n\033g"
  "rpcServerCompressionFormat\030\001 \001(\005\022\023\n\013worl"
  "dAnchor\030\002 \001(\014\022\n\n\002id\030\003 \001(\014\"D\n\031modifyWorld"
  "AnchorResponse\022\n\n\002id\030\001 \001(\014\022\033\n\023xpcfGrpcRe"
  "turnValue\030\002 \001(\021\"Y\n\023addWorldLinkRequest\022#"
  "\n\033grpcServerCompressionFormat\030\001 \001(\005\022\021\n\tw"
  "orldLink\030\002 \001(\014\022\n\n\002id\030\003 \001(\014\"\?\n\024addWorldLi"
  "nkResponse\022\n\n\002id\030\001 \001(\014\022\033\n\023xpcfGrpcReturn"
  "Value\030\002 \001(\021\"v\n\031getWorldLink_grpc0Request"
  "\022#\n\033grpcServerCompressionFormat\030\001 \001(\005\022\020\n"
  "\010parentId\030\002 \001(\014\022\017\n\007childId\030\003 \001(\014\022\021\n\tworl"
  "dLink\030\004 \001(\014\"L\n\032getWorldLink_grpc0Respons"
  "e\022\021\n\tworldLink\030\001 \001(\014\022\033\n\023xpcfGrpcReturnVa"
  "lue\030\002 \001(\021\"c\n\031getWorldLink_grpc1Request\022#"
  "\n\033grpcServerCompressionFormat\030\001 \001(\005\022\016\n\006l"
  "inkId\030\002 \001(\014\022\021\n\tworldLink\030\003 \001(\014\"L\n\032getWor"
  "ldLink_grpc1Response\022\021\n\tworldLink\030\001 \001(\014\022"
  "\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\"f\n\034removeWo"
  "rldLink_grpc0Request\022#\n\033grpcServerCompre"
  "ssionFormat\030\001 \001(\005\022\020\n\010parentId\030\002 \001(\014\022\017\n\007c"
  "hildId\030\003 \001(\014\"<\n\035removeWorldLink_grpc0Res"
  "ponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"S\n\034re"
  "moveWorldLink_grpc1Request\022#\n\033grpcServer"
  "CompressionFormat\030\001 \001(\005\022\016\n\006linkId\030\002 \001(\014\""
  "<\n\035removeWorldLink_grpc1Response\022\033\n\023xpcf"
  "GrpcReturnValue\030\001 \001(\021\"K\n\024getWorldLinksRe"
  "quest\022#\n\033grpcServerCompressionFormat\030\001 \001"
  "(\005\022\016\n\006vector\030\002 \001(\014\"D\n\025getWorldLinksRespo"
  "nse\022\016\n\006vector\030\001 \001(\014\022\033\n\023xpcfGrpcReturnVal"
  "ue\030\002 \001(\021\"\\\n\026modifyWorldLinkRequest\022#\n\033gr"
  "pcServerCompressionFormat\030\001 \001(\005\022\021\n\tworld"
  "Link\030\002 \001(\014\022\n\n\002id\030\003 \001(\014\"B\n\027modifyWorldLin"
  "kResponse\022\n\n\002id\030\001 \001(\014\022\033\n\023xpcfGrpcReturnV"
  "alue\030\002 \001(\021\"8\n\021saveToFileRequest\022#\n\033grpcS"
  "erverCompressionFormat\030\001 \001(\005\"1\n\022saveToFi"
  "leResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\""
  ":\n\023loadFromFileRequest\022#\n\033grpcServerComp"
  "ressionFormat\030\001 \001(\005\"3\n\024loadFromFileRespo"
  "nse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"8\n\021dele"
  "teFileRequest\022#\n\033grpcServerCompressionFo"
  "rmat\030\001 \001(\005\"1\n\022deleteFileResponse\022\033\n\023xpcf"
  "GrpcReturnValue\030\001 \001(\0212\357\027\n\035grpcIWorldGrap"
  "hManagerService\022\233\001\n\034getRelocalizationInf"
  "ormation\022;.grpcIWorldGraphManager.getRel"
  "ocalizationInformationRequest\032<.grpcIWor"
  "ldGraphManager.getRelocalizationInformat"
  "ionResponse\"\000\022t\n\017getWorldElement\022..grpcI"
  "WorldGraphManager.getWorldElementRequest"
  "\032/.grpcIWorldGraphManager.getWorldElemen"
  "tResponse\"\000\022w\n\020getWorldElements\022/.grpcIW"
  "orldGraphManager.getWorldElementsRequest"
  "\0320.grpcIWorldGraphManager.getWorldElemen"
  "tsResponse\"\000\022\222\001\n\031getWorldElementByKeyVal"
  "ue\0228.grpcIWorldGraphManager.getWorldElem"
  "entByKeyValueRequest\0329.grpcIWorldGraphMa"
  "nager.getWorldElementByKeyValueResponse\""
  "\000\022\203\001\n\024getWorldElementByKey\0223.grpcIWorldG"
  "raphManager.getWorldElementByKeyRequest\032"
  "4.grpcIWorldGraphManager.getWorldElement"
  "ByKeyResponse\"\000\022k\n\014addTrackable\022+.grpcIW"
  "orldGraphManager.addTrackableRequest\032,.g"
  "rpcIWorldGraphManager.addTrackableRespon"
  "se\"\000\022k\n\014getTrackable\022+.grpcIWorldGraphMa"
  "nager.getTrackableRequest\032,.grpcIWorldGr"
  "aphManager.getTrackableResponse\"\000\022t\n\017rem"
  "oveTrackable\022..grpcIWorldGraphManager.re"
  "moveTrackableRequest\032/.grpcIWorldGraphMa"
  "nager.removeTrackableResponse\"\000\022n\n\rgetTr"
  "ackables\022,.grpcIWorldGraphManager.getTra"
  "ckablesRequest\032-.grpcIWorldGraphManager."
  "getTrackablesResponse\"\000\022t\n\017modifyTrackab"
  "le\022..grpcIWorldGraphManager.modifyTracka"
  "bleRequest\032/.grpcIWorldGraphManager.modi"
  "fyTrackableResponse\"\000\022q\n\016addWorldAnchor\022"
  "-.grpcIWorldGraphManager.addWorldAnchorR"
  "equest\032..grpcIWorldGraphManager.addWorld"
  "AnchorResponse\"\000\022q\n\016getWorldAnchor\022-.grp"
  "cIWorldGraphManager.getWorldAnchorReques"
  "t\032..grpcIWorldGraphManager.getWorldAncho"
  "rResponse\"\000\022z\n\021removeWorldAnchor\0220.grpcI"
  "WorldGraphManager.removeWorldAnchorReque"
  "st\0321.grpcIWorldGraphManager.removeWorldA"
  "nchorResponse\"\000\022t\n\017getWorldAnchors\022..grp"
  "cIWorldGraphManager.getWorldAnchorsReque"
  "st\032/.grpcIWorldGraphManager.getWorldAnch"
  "orsResponse\"\000\022z\n\021modifyWorldAnchor\0220.grp"
  "cIWorldGraphManager.modifyWorldAnchorReq"
  "uest\0321.grpcIWorldGraphManager.modifyWorl"
  "dAnchorResponse\"\000\022k\n\014addWorldLink\022+.grpc"
  "IWorldGraphManager.addWorldLinkRequest\032,"
  ".grpcIWorldGraphManager.addWorldLinkResp"
  "onse\"\000\022}\n\022getWorldLink_grpc0\0221.grpcIWorl"
  "dGraphManager.getWorldLink_grpc0Request\032"
  "2.grpcIWorldGraphManager.getWorldLink_gr"
  "pc0Response\"\000\022}\n\022getWorldLink_grpc1\0221.gr"
  "pcIWorldGraphManager.getWorldLink_grpc1R"
  "equest\0322.grpcIWorldGraphManager.getWorld"
  "Link_grpc1Response\"\000\022\206\001\n\025removeWorldLink"
  "_grpc0\0224.grpcIWorldGraphManager.removeWo"
  "rldLink_grpc0Request\0325.grpcIWorldGraphMa"
  "nager.removeWorldLink_grpc0Response\"\000\022\206\001"
  "\n\025removeWorldLink_grpc1\0224.grpcIWorldGrap"
  "hManager.removeWorldLink_grpc1Request\0325."
  "grpcIWorldGraphManager.removeWorldLink_g"
  "rpc1Response\"\000\022n\n\rgetWorldLinks\022,.grpcIW"
  "orldGraphManager.getWorldLinksRequest\032-."
  "grpcIWorldGraphManager.getWorldLinksResp"
  "onse\"\000\022t\n\017modifyWorldLink\022..grpcIWorldGr"
  "aphManager.modifyWorldLinkRequest\032/.grpc"
  "IWorldGraphManager.modifyWorldLinkRespon"
  "se\"\000\022e\n\nsaveToFile\022).grpcIWorldGraphMana"
  "ger.saveToFileRequest\032*.grpcIWorldGraphM"
  "anager.saveToFileResponse\"\000\022k\n\014loadFromF"
  "ile\022+.grpcIWorldGraphManager.loadFromFil"
  "eRequest\032,.grpcIWorldGraphManager.loadFr"
  "omFileResponse\"\000\022e\n\ndeleteFile\022).grpcIWo"
  "rldGraphManager.deleteFileRequest\032*.grpc"
  "IWorldGraphManager.deleteFileResponse\"\000b"
  "\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcIWorldGraphManagerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcIWorldGraphManagerService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcIWorldGraphManagerService_2eproto = {
    false, false, 7207, descriptor_table_protodef_grpcIWorldGraphManagerService_2eproto,
    "grpcIWorldGraphManagerService.proto",
    &descriptor_table_grpcIWorldGraphManagerService_2eproto_once, descriptor_table_grpcIWorldGraphManagerService_2eproto_deps, 1, 50,
    schemas, file_default_instances, TableStruct_grpcIWorldGraphManagerService_2eproto::offsets,
    file_level_metadata_grpcIWorldGraphManagerService_2eproto, file_level_enum_descriptors_grpcIWorldGraphManagerService_2eproto,
    file_level_service_descriptors_grpcIWorldGraphManagerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcIWorldGraphManagerService_2eproto_getter() {
  return &descriptor_table_grpcIWorldGraphManagerService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcIWorldGraphManagerService_2eproto(&descriptor_table_grpcIWorldGraphManagerService_2eproto);
namespace grpcIWorldGraphManager {

// ===================================================================

class getRelocalizationInformationRequest::_Internal {
 public:
};

getRelocalizationInformationRequest::getRelocalizationInformationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getRelocalizationInformationRequest)
}
getRelocalizationInformationRequest::getRelocalizationInformationRequest(const getRelocalizationInformationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getRelocalizationInformationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uuids_){}
    , decltype(_impl_.token_){}
    , decltype(_impl_.capability_){}
    , decltype(_impl_.relocalizationinformation_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uuids_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuids_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuids().empty()) {
    _this->_impl_.uuids_.Set(from._internal_uuids(), 
      _this->GetArenaForAllocation());
  }
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.capability_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.capability_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_capability().empty()) {
    _this->_impl_.capability_.Set(from._internal_capability(), 
      _this->GetArenaForAllocation());
  }
  _impl_.relocalizationinformation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.relocalizationinformation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_relocalizationinformation().empty()) {
    _this->_impl_.relocalizationinformation_.Set(from._internal_relocalizationinformation(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getRelocalizationInformationRequest)
}

inline void getRelocalizationInformationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uuids_){}
    , decltype(_impl_.token_){}
    , decltype(_impl_.capability_){}
    , decltype(_impl_.relocalizationinformation_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uuids_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuids_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.capability_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.capability_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.relocalizationinformation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.relocalizationinformation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getRelocalizationInformationRequest::~getRelocalizationInformationRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getRelocalizationInformationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getRelocalizationInformationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uuids_.Destroy();
  _impl_.token_.Destroy();
  _impl_.capability_.Destroy();
  _impl_.relocalizationinformation_.Destroy();
}

void getRelocalizationInformationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getRelocalizationInformationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getRelocalizationInformationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uuids_.ClearToEmpty();
  _impl_.token_.ClearToEmpty();
  _impl_.capability_.ClearToEmpty();
  _impl_.relocalizationinformation_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getRelocalizationInformationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes uuids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_uuids();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIWorldGraphManager.getRelocalizationInformationRequest.token"));
        } else
          goto handle_unusual;
        continue;
      // bytes capability = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_capability();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes relocalizationInformation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_relocalizationinformation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getRelocalizationInformationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getRelocalizationInformationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes uuids = 2;
  if (!this->_internal_uuids().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_uuids(), target);
  }

  // string token = 3;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIWorldGraphManager.getRelocalizationInformationRequest.token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_token(), target);
  }

  // bytes capability = 4;
  if (!this->_internal_capability().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_capability(), target);
  }

  // bytes relocalizationInformation = 5;
  if (!this->_internal_relocalizationinformation().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_relocalizationinformation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getRelocalizationInformationRequest)
  return target;
}

size_t getRelocalizationInformationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getRelocalizationInformationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes uuids = 2;
  if (!this->_internal_uuids().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_uuids());
  }

  // string token = 3;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // bytes capability = 4;
  if (!this->_internal_capability().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_capability());
  }

  // bytes relocalizationInformation = 5;
  if (!this->_internal_relocalizationinformation().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_relocalizationinformation());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getRelocalizationInformationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getRelocalizationInformationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getRelocalizationInformationRequest::GetClassData() const { return &_class_data_; }


void getRelocalizationInformationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getRelocalizationInformationRequest*>(&to_msg);
  auto& from = static_cast<const getRelocalizationInformationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getRelocalizationInformationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uuids().empty()) {
    _this->_internal_set_uuids(from._internal_uuids());
  }
  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_capability().empty()) {
    _this->_internal_set_capability(from._internal_capability());
  }
  if (!from._internal_relocalizationinformation().empty()) {
    _this->_internal_set_relocalizationinformation(from._internal_relocalizationinformation());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getRelocalizationInformationRequest::CopyFrom(const getRelocalizationInformationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getRelocalizationInformationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getRelocalizationInformationRequest::IsInitialized() const {
  return true;
}

void getRelocalizationInformationRequest::InternalSwap(getRelocalizationInformationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuids_, lhs_arena,
      &other->_impl_.uuids_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.capability_, lhs_arena,
      &other->_impl_.capability_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.relocalizationinformation_, lhs_arena,
      &other->_impl_.relocalizationinformation_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getRelocalizationInformationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[0]);
}

// ===================================================================

class getRelocalizationInformationResponse::_Internal {
 public:
};

getRelocalizationInformationResponse::getRelocalizationInformationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getRelocalizationInformationResponse)
}
getRelocalizationInformationResponse::getRelocalizationInformationResponse(const getRelocalizationInformationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getRelocalizationInformationResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.relocalizationinformation_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.relocalizationinformation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.relocalizationinformation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_relocalizationinformation().empty()) {
    _this->_impl_.relocalizationinformation_.Set(from._internal_relocalizationinformation(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getRelocalizationInformationResponse)
}

inline void getRelocalizationInformationResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.relocalizationinformation_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.relocalizationinformation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.relocalizationinformation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getRelocalizationInformationResponse::~getRelocalizationInformationResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getRelocalizationInformationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getRelocalizationInformationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.relocalizationinformation_.Destroy();
}

void getRelocalizationInformationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getRelocalizationInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getRelocalizationInformationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.relocalizationinformation_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getRelocalizationInformationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes relocalizationInformation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_relocalizationinformation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getRelocalizationInformationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getRelocalizationInformationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relocalizationInformation = 1;
  if (!this->_internal_relocalizationinformation().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_relocalizationinformation(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getRelocalizationInformationResponse)
  return target;
}

size_t getRelocalizationInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getRelocalizationInformationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes relocalizationInformation = 1;
  if (!this->_internal_relocalizationinformation().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_relocalizationinformation());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getRelocalizationInformationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getRelocalizationInformationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getRelocalizationInformationResponse::GetClassData() const { return &_class_data_; }


void getRelocalizationInformationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getRelocalizationInformationResponse*>(&to_msg);
  auto& from = static_cast<const getRelocalizationInformationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getRelocalizationInformationResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_relocalizationinformation().empty()) {
    _this->_internal_set_relocalizationinformation(from._internal_relocalizationinformation());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getRelocalizationInformationResponse::CopyFrom(const getRelocalizationInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getRelocalizationInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getRelocalizationInformationResponse::IsInitialized() const {
  return true;
}

void getRelocalizationInformationResponse::InternalSwap(getRelocalizationInformationResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.relocalizationinformation_, lhs_arena,
      &other->_impl_.relocalizationinformation_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getRelocalizationInformationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[1]);
}

// ===================================================================

class getWorldElementRequest::_Internal {
 public:
};

getWorldElementRequest::getWorldElementRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldElementRequest)
}
getWorldElementRequest::getWorldElementRequest(const getWorldElementRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldElementRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldelementid_){}
    , decltype(_impl_.worldelement_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldelementid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldelementid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldelementid().empty()) {
    _this->_impl_.worldelementid_.Set(from._internal_worldelementid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.worldelement_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldelement_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldelement().empty()) {
    _this->_impl_.worldelement_.Set(from._internal_worldelement(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldElementRequest)
}

inline void getWorldElementRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldelementid_){}
    , decltype(_impl_.worldelement_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldelementid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldelementid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.worldelement_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldelement_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldElementRequest::~getWorldElementRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldElementRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldElementRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldelementid_.Destroy();
  _impl_.worldelement_.Destroy();
}

void getWorldElementRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldElementRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldElementRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldelementid_.ClearToEmpty();
  _impl_.worldelement_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldElementRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldElementId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_worldelementid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldElement = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_worldelement();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldElementRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldElementRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes worldElementId = 2;
  if (!this->_internal_worldelementid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_worldelementid(), target);
  }

  // bytes worldElement = 3;
  if (!this->_internal_worldelement().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_worldelement(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldElementRequest)
  return target;
}

size_t getWorldElementRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldElementRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldElementId = 2;
  if (!this->_internal_worldelementid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldelementid());
  }

  // bytes worldElement = 3;
  if (!this->_internal_worldelement().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldelement());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldElementRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldElementRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldElementRequest::GetClassData() const { return &_class_data_; }


void getWorldElementRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldElementRequest*>(&to_msg);
  auto& from = static_cast<const getWorldElementRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldElementRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldelementid().empty()) {
    _this->_internal_set_worldelementid(from._internal_worldelementid());
  }
  if (!from._internal_worldelement().empty()) {
    _this->_internal_set_worldelement(from._internal_worldelement());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldElementRequest::CopyFrom(const getWorldElementRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldElementRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldElementRequest::IsInitialized() const {
  return true;
}

void getWorldElementRequest::InternalSwap(getWorldElementRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldelementid_, lhs_arena,
      &other->_impl_.worldelementid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldelement_, lhs_arena,
      &other->_impl_.worldelement_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldElementRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[2]);
}

// ===================================================================

class getWorldElementResponse::_Internal {
 public:
};

getWorldElementResponse::getWorldElementResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldElementResponse)
}
getWorldElementResponse::getWorldElementResponse(const getWorldElementResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldElementResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldelement_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldelement_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldelement_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldelement().empty()) {
    _this->_impl_.worldelement_.Set(from._internal_worldelement(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldElementResponse)
}

inline void getWorldElementResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldelement_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldelement_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldelement_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldElementResponse::~getWorldElementResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldElementResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldElementResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldelement_.Destroy();
}

void getWorldElementResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldElementResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldElementResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldelement_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldElementResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes worldElement = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_worldelement();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldElementResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldElementResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes worldElement = 1;
  if (!this->_internal_worldelement().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_worldelement(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldElementResponse)
  return target;
}

size_t getWorldElementResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldElementResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldElement = 1;
  if (!this->_internal_worldelement().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldelement());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldElementResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldElementResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldElementResponse::GetClassData() const { return &_class_data_; }


void getWorldElementResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldElementResponse*>(&to_msg);
  auto& from = static_cast<const getWorldElementResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldElementResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldelement().empty()) {
    _this->_internal_set_worldelement(from._internal_worldelement());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldElementResponse::CopyFrom(const getWorldElementResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldElementResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldElementResponse::IsInitialized() const {
  return true;
}

void getWorldElementResponse::InternalSwap(getWorldElementResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldelement_, lhs_arena,
      &other->_impl_.worldelement_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldElementResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[3]);
}

// ===================================================================

class getWorldElementsRequest::_Internal {
 public:
};

getWorldElementsRequest::getWorldElementsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldElementsRequest)
}
getWorldElementsRequest::getWorldElementsRequest(const getWorldElementsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldElementsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldElementsRequest)
}

inline void getWorldElementsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldElementsRequest::~getWorldElementsRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldElementsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldElementsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getWorldElementsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldElementsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldElementsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldElementsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes vector = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldElementsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldElementsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes vector = 2;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_vector(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldElementsRequest)
  return target;
}

size_t getWorldElementsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldElementsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 2;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldElementsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldElementsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldElementsRequest::GetClassData() const { return &_class_data_; }


void getWorldElementsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldElementsRequest*>(&to_msg);
  auto& from = static_cast<const getWorldElementsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldElementsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldElementsRequest::CopyFrom(const getWorldElementsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldElementsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldElementsRequest::IsInitialized() const {
  return true;
}

void getWorldElementsRequest::InternalSwap(getWorldElementsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldElementsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[4]);
}

// ===================================================================

class getWorldElementsResponse::_Internal {
 public:
};

getWorldElementsResponse::getWorldElementsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldElementsResponse)
}
getWorldElementsResponse::getWorldElementsResponse(const getWorldElementsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldElementsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldElementsResponse)
}

inline void getWorldElementsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldElementsResponse::~getWorldElementsResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldElementsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldElementsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getWorldElementsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldElementsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldElementsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldElementsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldElementsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldElementsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_vector(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldElementsResponse)
  return target;
}

size_t getWorldElementsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldElementsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldElementsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldElementsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldElementsResponse::GetClassData() const { return &_class_data_; }


void getWorldElementsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldElementsResponse*>(&to_msg);
  auto& from = static_cast<const getWorldElementsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldElementsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldElementsResponse::CopyFrom(const getWorldElementsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldElementsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldElementsResponse::IsInitialized() const {
  return true;
}

void getWorldElementsResponse::InternalSwap(getWorldElementsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldElementsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[5]);
}

// ===================================================================

class getWorldElementByKeyValueRequest::_Internal {
 public:
};

getWorldElementByKeyValueRequest::getWorldElementByKeyValueRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldElementByKeyValueRequest)
}
getWorldElementByKeyValueRequest::getWorldElementByKeyValueRequest(const getWorldElementByKeyValueRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldElementByKeyValueRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){}
    , decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    _this->_impl_.value_.Set(from._internal_value(), 
      _this->GetArenaForAllocation());
  }
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldElementByKeyValueRequest)
}

inline void getWorldElementByKeyValueRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){}
    , decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldElementByKeyValueRequest::~getWorldElementByKeyValueRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldElementByKeyValueRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldElementByKeyValueRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  _impl_.value_.Destroy();
  _impl_.vector_.Destroy();
}

void getWorldElementByKeyValueRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldElementByKeyValueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldElementByKeyValueRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.vector_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldElementByKeyValueRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIWorldGraphManager.getWorldElementByKeyValueRequest.key"));
        } else
          goto handle_unusual;
        continue;
      // string value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIWorldGraphManager.getWorldElementByKeyValueRequest.value"));
        } else
          goto handle_unusual;
        continue;
      // bytes vector = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldElementByKeyValueRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldElementByKeyValueRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIWorldGraphManager.getWorldElementByKeyValueRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // string value = 3;
  if (!this->_internal_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIWorldGraphManager.getWorldElementByKeyValueRequest.value");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_value(), target);
  }

  // bytes vector = 4;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_vector(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldElementByKeyValueRequest)
  return target;
}

size_t getWorldElementByKeyValueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldElementByKeyValueRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string value = 3;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  // bytes vector = 4;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldElementByKeyValueRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldElementByKeyValueRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldElementByKeyValueRequest::GetClassData() const { return &_class_data_; }


void getWorldElementByKeyValueRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldElementByKeyValueRequest*>(&to_msg);
  auto& from = static_cast<const getWorldElementByKeyValueRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldElementByKeyValueRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldElementByKeyValueRequest::CopyFrom(const getWorldElementByKeyValueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldElementByKeyValueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldElementByKeyValueRequest::IsInitialized() const {
  return true;
}

void getWorldElementByKeyValueRequest::InternalSwap(getWorldElementByKeyValueRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_, lhs_arena,
      &other->_impl_.value_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldElementByKeyValueRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[6]);
}

// ===================================================================

class getWorldElementByKeyValueResponse::_Internal {
 public:
};

getWorldElementByKeyValueResponse::getWorldElementByKeyValueResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldElementByKeyValueResponse)
}
getWorldElementByKeyValueResponse::getWorldElementByKeyValueResponse(const getWorldElementByKeyValueResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldElementByKeyValueResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldElementByKeyValueResponse)
}

inline void getWorldElementByKeyValueResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldElementByKeyValueResponse::~getWorldElementByKeyValueResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldElementByKeyValueResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldElementByKeyValueResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getWorldElementByKeyValueResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldElementByKeyValueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldElementByKeyValueResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldElementByKeyValueResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldElementByKeyValueResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldElementByKeyValueResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_vector(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldElementByKeyValueResponse)
  return target;
}

size_t getWorldElementByKeyValueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldElementByKeyValueResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldElementByKeyValueResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldElementByKeyValueResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldElementByKeyValueResponse::GetClassData() const { return &_class_data_; }


void getWorldElementByKeyValueResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldElementByKeyValueResponse*>(&to_msg);
  auto& from = static_cast<const getWorldElementByKeyValueResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldElementByKeyValueResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldElementByKeyValueResponse::CopyFrom(const getWorldElementByKeyValueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldElementByKeyValueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldElementByKeyValueResponse::IsInitialized() const {
  return true;
}

void getWorldElementByKeyValueResponse::InternalSwap(getWorldElementByKeyValueResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldElementByKeyValueResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[7]);
}

// ===================================================================

class getWorldElementByKeyRequest::_Internal {
 public:
};

getWorldElementByKeyRequest::getWorldElementByKeyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldElementByKeyRequest)
}
getWorldElementByKeyRequest::getWorldElementByKeyRequest(const getWorldElementByKeyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldElementByKeyRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldElementByKeyRequest)
}

inline void getWorldElementByKeyRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldElementByKeyRequest::~getWorldElementByKeyRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldElementByKeyRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldElementByKeyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  _impl_.vector_.Destroy();
}

void getWorldElementByKeyRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldElementByKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldElementByKeyRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.vector_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldElementByKeyRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIWorldGraphManager.getWorldElementByKeyRequest.key"));
        } else
          goto handle_unusual;
        continue;
      // bytes vector = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldElementByKeyRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldElementByKeyRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIWorldGraphManager.getWorldElementByKeyRequest.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // bytes vector = 3;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_vector(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldElementByKeyRequest)
  return target;
}

size_t getWorldElementByKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldElementByKeyRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // bytes vector = 3;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldElementByKeyRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldElementByKeyRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldElementByKeyRequest::GetClassData() const { return &_class_data_; }


void getWorldElementByKeyRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldElementByKeyRequest*>(&to_msg);
  auto& from = static_cast<const getWorldElementByKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldElementByKeyRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldElementByKeyRequest::CopyFrom(const getWorldElementByKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldElementByKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldElementByKeyRequest::IsInitialized() const {
  return true;
}

void getWorldElementByKeyRequest::InternalSwap(getWorldElementByKeyRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldElementByKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[8]);
}

// ===================================================================

class getWorldElementByKeyResponse::_Internal {
 public:
};

getWorldElementByKeyResponse::getWorldElementByKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldElementByKeyResponse)
}
getWorldElementByKeyResponse::getWorldElementByKeyResponse(const getWorldElementByKeyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldElementByKeyResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldElementByKeyResponse)
}

inline void getWorldElementByKeyResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldElementByKeyResponse::~getWorldElementByKeyResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldElementByKeyResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldElementByKeyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getWorldElementByKeyResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldElementByKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldElementByKeyResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldElementByKeyResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldElementByKeyResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldElementByKeyResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_vector(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldElementByKeyResponse)
  return target;
}

size_t getWorldElementByKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldElementByKeyResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldElementByKeyResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldElementByKeyResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldElementByKeyResponse::GetClassData() const { return &_class_data_; }


void getWorldElementByKeyResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldElementByKeyResponse*>(&to_msg);
  auto& from = static_cast<const getWorldElementByKeyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldElementByKeyResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldElementByKeyResponse::CopyFrom(const getWorldElementByKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldElementByKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldElementByKeyResponse::IsInitialized() const {
  return true;
}

void getWorldElementByKeyResponse::InternalSwap(getWorldElementByKeyResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldElementByKeyResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[9]);
}

// ===================================================================

class addTrackableRequest::_Internal {
 public:
};

addTrackableRequest::addTrackableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.addTrackableRequest)
}
addTrackableRequest::addTrackableRequest(const addTrackableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addTrackableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trackable_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trackable_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackable_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trackable().empty()) {
    _this->_impl_.trackable_.Set(from._internal_trackable(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.addTrackableRequest)
}

inline void addTrackableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trackable_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trackable_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackable_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

addTrackableRequest::~addTrackableRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.addTrackableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addTrackableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trackable_.Destroy();
  _impl_.id_.Destroy();
}

void addTrackableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addTrackableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.addTrackableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trackable_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addTrackableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes trackable = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_trackable();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addTrackableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.addTrackableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes trackable = 2;
  if (!this->_internal_trackable().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_trackable(), target);
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.addTrackableRequest)
  return target;
}

size_t addTrackableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.addTrackableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes trackable = 2;
  if (!this->_internal_trackable().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_trackable());
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addTrackableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addTrackableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addTrackableRequest::GetClassData() const { return &_class_data_; }


void addTrackableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addTrackableRequest*>(&to_msg);
  auto& from = static_cast<const addTrackableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.addTrackableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trackable().empty()) {
    _this->_internal_set_trackable(from._internal_trackable());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addTrackableRequest::CopyFrom(const addTrackableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.addTrackableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addTrackableRequest::IsInitialized() const {
  return true;
}

void addTrackableRequest::InternalSwap(addTrackableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trackable_, lhs_arena,
      &other->_impl_.trackable_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addTrackableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[10]);
}

// ===================================================================

class addTrackableResponse::_Internal {
 public:
};

addTrackableResponse::addTrackableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.addTrackableResponse)
}
addTrackableResponse::addTrackableResponse(const addTrackableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addTrackableResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.addTrackableResponse)
}

inline void addTrackableResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

addTrackableResponse::~addTrackableResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.addTrackableResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addTrackableResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void addTrackableResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addTrackableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.addTrackableResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addTrackableResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addTrackableResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.addTrackableResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.addTrackableResponse)
  return target;
}

size_t addTrackableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.addTrackableResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addTrackableResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addTrackableResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addTrackableResponse::GetClassData() const { return &_class_data_; }


void addTrackableResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addTrackableResponse*>(&to_msg);
  auto& from = static_cast<const addTrackableResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.addTrackableResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addTrackableResponse::CopyFrom(const addTrackableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.addTrackableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addTrackableResponse::IsInitialized() const {
  return true;
}

void addTrackableResponse::InternalSwap(addTrackableResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addTrackableResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[11]);
}

// ===================================================================

class getTrackableRequest::_Internal {
 public:
};

getTrackableRequest::getTrackableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getTrackableRequest)
}
getTrackableRequest::getTrackableRequest(const getTrackableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getTrackableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trackableid_){}
    , decltype(_impl_.trackable_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trackableid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackableid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trackableid().empty()) {
    _this->_impl_.trackableid_.Set(from._internal_trackableid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.trackable_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackable_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trackable().empty()) {
    _this->_impl_.trackable_.Set(from._internal_trackable(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getTrackableRequest)
}

inline void getTrackableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trackableid_){}
    , decltype(_impl_.trackable_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trackableid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackableid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trackable_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackable_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getTrackableRequest::~getTrackableRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getTrackableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getTrackableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trackableid_.Destroy();
  _impl_.trackable_.Destroy();
}

void getTrackableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getTrackableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getTrackableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trackableid_.ClearToEmpty();
  _impl_.trackable_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTrackableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes trackableId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_trackableid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes trackable = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_trackable();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getTrackableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getTrackableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes trackableId = 2;
  if (!this->_internal_trackableid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_trackableid(), target);
  }

  // bytes trackable = 3;
  if (!this->_internal_trackable().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_trackable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getTrackableRequest)
  return target;
}

size_t getTrackableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getTrackableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes trackableId = 2;
  if (!this->_internal_trackableid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_trackableid());
  }

  // bytes trackable = 3;
  if (!this->_internal_trackable().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_trackable());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getTrackableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getTrackableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getTrackableRequest::GetClassData() const { return &_class_data_; }


void getTrackableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getTrackableRequest*>(&to_msg);
  auto& from = static_cast<const getTrackableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getTrackableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trackableid().empty()) {
    _this->_internal_set_trackableid(from._internal_trackableid());
  }
  if (!from._internal_trackable().empty()) {
    _this->_internal_set_trackable(from._internal_trackable());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getTrackableRequest::CopyFrom(const getTrackableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getTrackableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTrackableRequest::IsInitialized() const {
  return true;
}

void getTrackableRequest::InternalSwap(getTrackableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trackableid_, lhs_arena,
      &other->_impl_.trackableid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trackable_, lhs_arena,
      &other->_impl_.trackable_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getTrackableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[12]);
}

// ===================================================================

class getTrackableResponse::_Internal {
 public:
};

getTrackableResponse::getTrackableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getTrackableResponse)
}
getTrackableResponse::getTrackableResponse(const getTrackableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getTrackableResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trackable_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trackable_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackable_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trackable().empty()) {
    _this->_impl_.trackable_.Set(from._internal_trackable(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getTrackableResponse)
}

inline void getTrackableResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trackable_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trackable_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackable_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getTrackableResponse::~getTrackableResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getTrackableResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getTrackableResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trackable_.Destroy();
}

void getTrackableResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getTrackableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getTrackableResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trackable_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTrackableResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes trackable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_trackable();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getTrackableResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getTrackableResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes trackable = 1;
  if (!this->_internal_trackable().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_trackable(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getTrackableResponse)
  return target;
}

size_t getTrackableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getTrackableResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes trackable = 1;
  if (!this->_internal_trackable().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_trackable());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getTrackableResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getTrackableResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getTrackableResponse::GetClassData() const { return &_class_data_; }


void getTrackableResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getTrackableResponse*>(&to_msg);
  auto& from = static_cast<const getTrackableResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getTrackableResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trackable().empty()) {
    _this->_internal_set_trackable(from._internal_trackable());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getTrackableResponse::CopyFrom(const getTrackableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getTrackableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTrackableResponse::IsInitialized() const {
  return true;
}

void getTrackableResponse::InternalSwap(getTrackableResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trackable_, lhs_arena,
      &other->_impl_.trackable_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getTrackableResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[13]);
}

// ===================================================================

class removeTrackableRequest::_Internal {
 public:
};

removeTrackableRequest::removeTrackableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.removeTrackableRequest)
}
removeTrackableRequest::removeTrackableRequest(const removeTrackableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  removeTrackableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trackableid_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trackableid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackableid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trackableid().empty()) {
    _this->_impl_.trackableid_.Set(from._internal_trackableid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.removeTrackableRequest)
}

inline void removeTrackableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trackableid_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trackableid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackableid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

removeTrackableRequest::~removeTrackableRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.removeTrackableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeTrackableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trackableid_.Destroy();
}

void removeTrackableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void removeTrackableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.removeTrackableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trackableid_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeTrackableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes trackableId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_trackableid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeTrackableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.removeTrackableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes trackableId = 2;
  if (!this->_internal_trackableid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_trackableid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.removeTrackableRequest)
  return target;
}

size_t removeTrackableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.removeTrackableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes trackableId = 2;
  if (!this->_internal_trackableid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_trackableid());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeTrackableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    removeTrackableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeTrackableRequest::GetClassData() const { return &_class_data_; }


void removeTrackableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<removeTrackableRequest*>(&to_msg);
  auto& from = static_cast<const removeTrackableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.removeTrackableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trackableid().empty()) {
    _this->_internal_set_trackableid(from._internal_trackableid());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeTrackableRequest::CopyFrom(const removeTrackableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.removeTrackableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeTrackableRequest::IsInitialized() const {
  return true;
}

void removeTrackableRequest::InternalSwap(removeTrackableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trackableid_, lhs_arena,
      &other->_impl_.trackableid_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeTrackableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[14]);
}

// ===================================================================

class removeTrackableResponse::_Internal {
 public:
};

removeTrackableResponse::removeTrackableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.removeTrackableResponse)
}
removeTrackableResponse::removeTrackableResponse(const removeTrackableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  removeTrackableResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.removeTrackableResponse)
}

inline void removeTrackableResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

removeTrackableResponse::~removeTrackableResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.removeTrackableResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeTrackableResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void removeTrackableResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void removeTrackableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.removeTrackableResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeTrackableResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeTrackableResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.removeTrackableResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.removeTrackableResponse)
  return target;
}

size_t removeTrackableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.removeTrackableResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeTrackableResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    removeTrackableResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeTrackableResponse::GetClassData() const { return &_class_data_; }


void removeTrackableResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<removeTrackableResponse*>(&to_msg);
  auto& from = static_cast<const removeTrackableResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.removeTrackableResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeTrackableResponse::CopyFrom(const removeTrackableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.removeTrackableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeTrackableResponse::IsInitialized() const {
  return true;
}

void removeTrackableResponse::InternalSwap(removeTrackableResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeTrackableResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[15]);
}

// ===================================================================

class getTrackablesRequest::_Internal {
 public:
};

getTrackablesRequest::getTrackablesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getTrackablesRequest)
}
getTrackablesRequest::getTrackablesRequest(const getTrackablesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getTrackablesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getTrackablesRequest)
}

inline void getTrackablesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getTrackablesRequest::~getTrackablesRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getTrackablesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getTrackablesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getTrackablesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getTrackablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getTrackablesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTrackablesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes vector = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getTrackablesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getTrackablesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes vector = 2;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_vector(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getTrackablesRequest)
  return target;
}

size_t getTrackablesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getTrackablesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 2;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getTrackablesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getTrackablesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getTrackablesRequest::GetClassData() const { return &_class_data_; }


void getTrackablesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getTrackablesRequest*>(&to_msg);
  auto& from = static_cast<const getTrackablesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getTrackablesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getTrackablesRequest::CopyFrom(const getTrackablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getTrackablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTrackablesRequest::IsInitialized() const {
  return true;
}

void getTrackablesRequest::InternalSwap(getTrackablesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getTrackablesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[16]);
}

// ===================================================================

class getTrackablesResponse::_Internal {
 public:
};

getTrackablesResponse::getTrackablesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getTrackablesResponse)
}
getTrackablesResponse::getTrackablesResponse(const getTrackablesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getTrackablesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getTrackablesResponse)
}

inline void getTrackablesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getTrackablesResponse::~getTrackablesResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getTrackablesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getTrackablesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getTrackablesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getTrackablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getTrackablesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTrackablesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getTrackablesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getTrackablesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_vector(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getTrackablesResponse)
  return target;
}

size_t getTrackablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getTrackablesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getTrackablesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getTrackablesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getTrackablesResponse::GetClassData() const { return &_class_data_; }


void getTrackablesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getTrackablesResponse*>(&to_msg);
  auto& from = static_cast<const getTrackablesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getTrackablesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getTrackablesResponse::CopyFrom(const getTrackablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getTrackablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTrackablesResponse::IsInitialized() const {
  return true;
}

void getTrackablesResponse::InternalSwap(getTrackablesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getTrackablesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[17]);
}

// ===================================================================

class modifyTrackableRequest::_Internal {
 public:
};

modifyTrackableRequest::modifyTrackableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.modifyTrackableRequest)
}
modifyTrackableRequest::modifyTrackableRequest(const modifyTrackableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  modifyTrackableRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trackable_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trackable_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackable_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trackable().empty()) {
    _this->_impl_.trackable_.Set(from._internal_trackable(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.modifyTrackableRequest)
}

inline void modifyTrackableRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trackable_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trackable_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trackable_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

modifyTrackableRequest::~modifyTrackableRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.modifyTrackableRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void modifyTrackableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trackable_.Destroy();
  _impl_.id_.Destroy();
}

void modifyTrackableRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void modifyTrackableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.modifyTrackableRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trackable_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* modifyTrackableRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes trackable = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_trackable();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* modifyTrackableRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.modifyTrackableRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes trackable = 2;
  if (!this->_internal_trackable().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_trackable(), target);
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.modifyTrackableRequest)
  return target;
}

size_t modifyTrackableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.modifyTrackableRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes trackable = 2;
  if (!this->_internal_trackable().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_trackable());
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData modifyTrackableRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    modifyTrackableRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*modifyTrackableRequest::GetClassData() const { return &_class_data_; }


void modifyTrackableRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<modifyTrackableRequest*>(&to_msg);
  auto& from = static_cast<const modifyTrackableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.modifyTrackableRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trackable().empty()) {
    _this->_internal_set_trackable(from._internal_trackable());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void modifyTrackableRequest::CopyFrom(const modifyTrackableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.modifyTrackableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool modifyTrackableRequest::IsInitialized() const {
  return true;
}

void modifyTrackableRequest::InternalSwap(modifyTrackableRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trackable_, lhs_arena,
      &other->_impl_.trackable_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata modifyTrackableRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[18]);
}

// ===================================================================

class modifyTrackableResponse::_Internal {
 public:
};

modifyTrackableResponse::modifyTrackableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.modifyTrackableResponse)
}
modifyTrackableResponse::modifyTrackableResponse(const modifyTrackableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  modifyTrackableResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.modifyTrackableResponse)
}

inline void modifyTrackableResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

modifyTrackableResponse::~modifyTrackableResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.modifyTrackableResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void modifyTrackableResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void modifyTrackableResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void modifyTrackableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.modifyTrackableResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* modifyTrackableResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* modifyTrackableResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.modifyTrackableResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.modifyTrackableResponse)
  return target;
}

size_t modifyTrackableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.modifyTrackableResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData modifyTrackableResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    modifyTrackableResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*modifyTrackableResponse::GetClassData() const { return &_class_data_; }


void modifyTrackableResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<modifyTrackableResponse*>(&to_msg);
  auto& from = static_cast<const modifyTrackableResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.modifyTrackableResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void modifyTrackableResponse::CopyFrom(const modifyTrackableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.modifyTrackableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool modifyTrackableResponse::IsInitialized() const {
  return true;
}

void modifyTrackableResponse::InternalSwap(modifyTrackableResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata modifyTrackableResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[19]);
}

// ===================================================================

class addWorldAnchorRequest::_Internal {
 public:
};

addWorldAnchorRequest::addWorldAnchorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.addWorldAnchorRequest)
}
addWorldAnchorRequest::addWorldAnchorRequest(const addWorldAnchorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addWorldAnchorRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchor_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldanchor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldanchor().empty()) {
    _this->_impl_.worldanchor_.Set(from._internal_worldanchor(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.addWorldAnchorRequest)
}

inline void addWorldAnchorRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchor_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldanchor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

addWorldAnchorRequest::~addWorldAnchorRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.addWorldAnchorRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addWorldAnchorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldanchor_.Destroy();
  _impl_.id_.Destroy();
}

void addWorldAnchorRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addWorldAnchorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.addWorldAnchorRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldanchor_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addWorldAnchorRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldAnchor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_worldanchor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addWorldAnchorRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.addWorldAnchorRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes worldAnchor = 2;
  if (!this->_internal_worldanchor().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_worldanchor(), target);
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.addWorldAnchorRequest)
  return target;
}

size_t addWorldAnchorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.addWorldAnchorRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldAnchor = 2;
  if (!this->_internal_worldanchor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldanchor());
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addWorldAnchorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addWorldAnchorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addWorldAnchorRequest::GetClassData() const { return &_class_data_; }


void addWorldAnchorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addWorldAnchorRequest*>(&to_msg);
  auto& from = static_cast<const addWorldAnchorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.addWorldAnchorRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldanchor().empty()) {
    _this->_internal_set_worldanchor(from._internal_worldanchor());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addWorldAnchorRequest::CopyFrom(const addWorldAnchorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.addWorldAnchorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addWorldAnchorRequest::IsInitialized() const {
  return true;
}

void addWorldAnchorRequest::InternalSwap(addWorldAnchorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldanchor_, lhs_arena,
      &other->_impl_.worldanchor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addWorldAnchorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[20]);
}

// ===================================================================

class addWorldAnchorResponse::_Internal {
 public:
};

addWorldAnchorResponse::addWorldAnchorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.addWorldAnchorResponse)
}
addWorldAnchorResponse::addWorldAnchorResponse(const addWorldAnchorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addWorldAnchorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.addWorldAnchorResponse)
}

inline void addWorldAnchorResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

addWorldAnchorResponse::~addWorldAnchorResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.addWorldAnchorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addWorldAnchorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void addWorldAnchorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addWorldAnchorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.addWorldAnchorResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addWorldAnchorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addWorldAnchorResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.addWorldAnchorResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.addWorldAnchorResponse)
  return target;
}

size_t addWorldAnchorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.addWorldAnchorResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addWorldAnchorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addWorldAnchorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addWorldAnchorResponse::GetClassData() const { return &_class_data_; }


void addWorldAnchorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addWorldAnchorResponse*>(&to_msg);
  auto& from = static_cast<const addWorldAnchorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.addWorldAnchorResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addWorldAnchorResponse::CopyFrom(const addWorldAnchorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.addWorldAnchorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addWorldAnchorResponse::IsInitialized() const {
  return true;
}

void addWorldAnchorResponse::InternalSwap(addWorldAnchorResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addWorldAnchorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[21]);
}

// ===================================================================

class getWorldAnchorRequest::_Internal {
 public:
};

getWorldAnchorRequest::getWorldAnchorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldAnchorRequest)
}
getWorldAnchorRequest::getWorldAnchorRequest(const getWorldAnchorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldAnchorRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchorid_){}
    , decltype(_impl_.worldanchor_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldanchorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchorid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldanchorid().empty()) {
    _this->_impl_.worldanchorid_.Set(from._internal_worldanchorid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.worldanchor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldanchor().empty()) {
    _this->_impl_.worldanchor_.Set(from._internal_worldanchor(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldAnchorRequest)
}

inline void getWorldAnchorRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchorid_){}
    , decltype(_impl_.worldanchor_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldanchorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchorid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.worldanchor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldAnchorRequest::~getWorldAnchorRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldAnchorRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldAnchorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldanchorid_.Destroy();
  _impl_.worldanchor_.Destroy();
}

void getWorldAnchorRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldAnchorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldAnchorRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldanchorid_.ClearToEmpty();
  _impl_.worldanchor_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldAnchorRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldAnchorId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_worldanchorid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldAnchor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_worldanchor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldAnchorRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldAnchorRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes worldAnchorId = 2;
  if (!this->_internal_worldanchorid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_worldanchorid(), target);
  }

  // bytes worldAnchor = 3;
  if (!this->_internal_worldanchor().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_worldanchor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldAnchorRequest)
  return target;
}

size_t getWorldAnchorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldAnchorRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldAnchorId = 2;
  if (!this->_internal_worldanchorid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldanchorid());
  }

  // bytes worldAnchor = 3;
  if (!this->_internal_worldanchor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldanchor());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldAnchorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldAnchorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldAnchorRequest::GetClassData() const { return &_class_data_; }


void getWorldAnchorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldAnchorRequest*>(&to_msg);
  auto& from = static_cast<const getWorldAnchorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldAnchorRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldanchorid().empty()) {
    _this->_internal_set_worldanchorid(from._internal_worldanchorid());
  }
  if (!from._internal_worldanchor().empty()) {
    _this->_internal_set_worldanchor(from._internal_worldanchor());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldAnchorRequest::CopyFrom(const getWorldAnchorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldAnchorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldAnchorRequest::IsInitialized() const {
  return true;
}

void getWorldAnchorRequest::InternalSwap(getWorldAnchorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldanchorid_, lhs_arena,
      &other->_impl_.worldanchorid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldanchor_, lhs_arena,
      &other->_impl_.worldanchor_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldAnchorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[22]);
}

// ===================================================================

class getWorldAnchorResponse::_Internal {
 public:
};

getWorldAnchorResponse::getWorldAnchorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldAnchorResponse)
}
getWorldAnchorResponse::getWorldAnchorResponse(const getWorldAnchorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldAnchorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchor_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldanchor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldanchor().empty()) {
    _this->_impl_.worldanchor_.Set(from._internal_worldanchor(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldAnchorResponse)
}

inline void getWorldAnchorResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchor_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldanchor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldAnchorResponse::~getWorldAnchorResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldAnchorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldAnchorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldanchor_.Destroy();
}

void getWorldAnchorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldAnchorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldAnchorResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldanchor_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldAnchorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes worldAnchor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_worldanchor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldAnchorResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldAnchorResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes worldAnchor = 1;
  if (!this->_internal_worldanchor().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_worldanchor(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldAnchorResponse)
  return target;
}

size_t getWorldAnchorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldAnchorResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldAnchor = 1;
  if (!this->_internal_worldanchor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldanchor());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldAnchorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldAnchorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldAnchorResponse::GetClassData() const { return &_class_data_; }


void getWorldAnchorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldAnchorResponse*>(&to_msg);
  auto& from = static_cast<const getWorldAnchorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldAnchorResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldanchor().empty()) {
    _this->_internal_set_worldanchor(from._internal_worldanchor());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldAnchorResponse::CopyFrom(const getWorldAnchorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldAnchorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldAnchorResponse::IsInitialized() const {
  return true;
}

void getWorldAnchorResponse::InternalSwap(getWorldAnchorResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldanchor_, lhs_arena,
      &other->_impl_.worldanchor_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldAnchorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[23]);
}

// ===================================================================

class removeWorldAnchorRequest::_Internal {
 public:
};

removeWorldAnchorRequest::removeWorldAnchorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.removeWorldAnchorRequest)
}
removeWorldAnchorRequest::removeWorldAnchorRequest(const removeWorldAnchorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  removeWorldAnchorRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchorid_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldanchorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchorid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldanchorid().empty()) {
    _this->_impl_.worldanchorid_.Set(from._internal_worldanchorid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.removeWorldAnchorRequest)
}

inline void removeWorldAnchorRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchorid_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldanchorid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchorid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

removeWorldAnchorRequest::~removeWorldAnchorRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.removeWorldAnchorRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeWorldAnchorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldanchorid_.Destroy();
}

void removeWorldAnchorRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void removeWorldAnchorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.removeWorldAnchorRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldanchorid_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeWorldAnchorRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldAnchorId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_worldanchorid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeWorldAnchorRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.removeWorldAnchorRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes worldAnchorId = 2;
  if (!this->_internal_worldanchorid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_worldanchorid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.removeWorldAnchorRequest)
  return target;
}

size_t removeWorldAnchorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.removeWorldAnchorRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldAnchorId = 2;
  if (!this->_internal_worldanchorid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldanchorid());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeWorldAnchorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    removeWorldAnchorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeWorldAnchorRequest::GetClassData() const { return &_class_data_; }


void removeWorldAnchorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<removeWorldAnchorRequest*>(&to_msg);
  auto& from = static_cast<const removeWorldAnchorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.removeWorldAnchorRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldanchorid().empty()) {
    _this->_internal_set_worldanchorid(from._internal_worldanchorid());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeWorldAnchorRequest::CopyFrom(const removeWorldAnchorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.removeWorldAnchorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeWorldAnchorRequest::IsInitialized() const {
  return true;
}

void removeWorldAnchorRequest::InternalSwap(removeWorldAnchorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldanchorid_, lhs_arena,
      &other->_impl_.worldanchorid_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeWorldAnchorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[24]);
}

// ===================================================================

class removeWorldAnchorResponse::_Internal {
 public:
};

removeWorldAnchorResponse::removeWorldAnchorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.removeWorldAnchorResponse)
}
removeWorldAnchorResponse::removeWorldAnchorResponse(const removeWorldAnchorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  removeWorldAnchorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.removeWorldAnchorResponse)
}

inline void removeWorldAnchorResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

removeWorldAnchorResponse::~removeWorldAnchorResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.removeWorldAnchorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeWorldAnchorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void removeWorldAnchorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void removeWorldAnchorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.removeWorldAnchorResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeWorldAnchorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeWorldAnchorResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.removeWorldAnchorResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.removeWorldAnchorResponse)
  return target;
}

size_t removeWorldAnchorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.removeWorldAnchorResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeWorldAnchorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    removeWorldAnchorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeWorldAnchorResponse::GetClassData() const { return &_class_data_; }


void removeWorldAnchorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<removeWorldAnchorResponse*>(&to_msg);
  auto& from = static_cast<const removeWorldAnchorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.removeWorldAnchorResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeWorldAnchorResponse::CopyFrom(const removeWorldAnchorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.removeWorldAnchorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeWorldAnchorResponse::IsInitialized() const {
  return true;
}

void removeWorldAnchorResponse::InternalSwap(removeWorldAnchorResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeWorldAnchorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[25]);
}

// ===================================================================

class getWorldAnchorsRequest::_Internal {
 public:
};

getWorldAnchorsRequest::getWorldAnchorsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldAnchorsRequest)
}
getWorldAnchorsRequest::getWorldAnchorsRequest(const getWorldAnchorsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldAnchorsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldAnchorsRequest)
}

inline void getWorldAnchorsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldAnchorsRequest::~getWorldAnchorsRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldAnchorsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldAnchorsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getWorldAnchorsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldAnchorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldAnchorsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldAnchorsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes vector = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldAnchorsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldAnchorsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes vector = 2;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_vector(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldAnchorsRequest)
  return target;
}

size_t getWorldAnchorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldAnchorsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 2;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldAnchorsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldAnchorsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldAnchorsRequest::GetClassData() const { return &_class_data_; }


void getWorldAnchorsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldAnchorsRequest*>(&to_msg);
  auto& from = static_cast<const getWorldAnchorsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldAnchorsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldAnchorsRequest::CopyFrom(const getWorldAnchorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldAnchorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldAnchorsRequest::IsInitialized() const {
  return true;
}

void getWorldAnchorsRequest::InternalSwap(getWorldAnchorsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldAnchorsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[26]);
}

// ===================================================================

class getWorldAnchorsResponse::_Internal {
 public:
};

getWorldAnchorsResponse::getWorldAnchorsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldAnchorsResponse)
}
getWorldAnchorsResponse::getWorldAnchorsResponse(const getWorldAnchorsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldAnchorsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldAnchorsResponse)
}

inline void getWorldAnchorsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldAnchorsResponse::~getWorldAnchorsResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldAnchorsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldAnchorsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getWorldAnchorsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldAnchorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldAnchorsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldAnchorsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldAnchorsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldAnchorsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_vector(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldAnchorsResponse)
  return target;
}

size_t getWorldAnchorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldAnchorsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldAnchorsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldAnchorsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldAnchorsResponse::GetClassData() const { return &_class_data_; }


void getWorldAnchorsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldAnchorsResponse*>(&to_msg);
  auto& from = static_cast<const getWorldAnchorsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldAnchorsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldAnchorsResponse::CopyFrom(const getWorldAnchorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldAnchorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldAnchorsResponse::IsInitialized() const {
  return true;
}

void getWorldAnchorsResponse::InternalSwap(getWorldAnchorsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldAnchorsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[27]);
}

// ===================================================================

class modifyWorldAnchorRequest::_Internal {
 public:
};

modifyWorldAnchorRequest::modifyWorldAnchorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.modifyWorldAnchorRequest)
}
modifyWorldAnchorRequest::modifyWorldAnchorRequest(const modifyWorldAnchorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  modifyWorldAnchorRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchor_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldanchor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldanchor().empty()) {
    _this->_impl_.worldanchor_.Set(from._internal_worldanchor(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.modifyWorldAnchorRequest)
}

inline void modifyWorldAnchorRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldanchor_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldanchor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldanchor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

modifyWorldAnchorRequest::~modifyWorldAnchorRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.modifyWorldAnchorRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void modifyWorldAnchorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldanchor_.Destroy();
  _impl_.id_.Destroy();
}

void modifyWorldAnchorRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void modifyWorldAnchorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.modifyWorldAnchorRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldanchor_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* modifyWorldAnchorRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldAnchor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_worldanchor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* modifyWorldAnchorRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.modifyWorldAnchorRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes worldAnchor = 2;
  if (!this->_internal_worldanchor().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_worldanchor(), target);
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.modifyWorldAnchorRequest)
  return target;
}

size_t modifyWorldAnchorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.modifyWorldAnchorRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldAnchor = 2;
  if (!this->_internal_worldanchor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldanchor());
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData modifyWorldAnchorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    modifyWorldAnchorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*modifyWorldAnchorRequest::GetClassData() const { return &_class_data_; }


void modifyWorldAnchorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<modifyWorldAnchorRequest*>(&to_msg);
  auto& from = static_cast<const modifyWorldAnchorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.modifyWorldAnchorRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldanchor().empty()) {
    _this->_internal_set_worldanchor(from._internal_worldanchor());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void modifyWorldAnchorRequest::CopyFrom(const modifyWorldAnchorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.modifyWorldAnchorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool modifyWorldAnchorRequest::IsInitialized() const {
  return true;
}

void modifyWorldAnchorRequest::InternalSwap(modifyWorldAnchorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldanchor_, lhs_arena,
      &other->_impl_.worldanchor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata modifyWorldAnchorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[28]);
}

// ===================================================================

class modifyWorldAnchorResponse::_Internal {
 public:
};

modifyWorldAnchorResponse::modifyWorldAnchorResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.modifyWorldAnchorResponse)
}
modifyWorldAnchorResponse::modifyWorldAnchorResponse(const modifyWorldAnchorResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  modifyWorldAnchorResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.modifyWorldAnchorResponse)
}

inline void modifyWorldAnchorResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

modifyWorldAnchorResponse::~modifyWorldAnchorResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.modifyWorldAnchorResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void modifyWorldAnchorResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void modifyWorldAnchorResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void modifyWorldAnchorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.modifyWorldAnchorResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* modifyWorldAnchorResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* modifyWorldAnchorResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.modifyWorldAnchorResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.modifyWorldAnchorResponse)
  return target;
}

size_t modifyWorldAnchorResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.modifyWorldAnchorResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData modifyWorldAnchorResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    modifyWorldAnchorResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*modifyWorldAnchorResponse::GetClassData() const { return &_class_data_; }


void modifyWorldAnchorResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<modifyWorldAnchorResponse*>(&to_msg);
  auto& from = static_cast<const modifyWorldAnchorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.modifyWorldAnchorResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void modifyWorldAnchorResponse::CopyFrom(const modifyWorldAnchorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.modifyWorldAnchorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool modifyWorldAnchorResponse::IsInitialized() const {
  return true;
}

void modifyWorldAnchorResponse::InternalSwap(modifyWorldAnchorResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata modifyWorldAnchorResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[29]);
}

// ===================================================================

class addWorldLinkRequest::_Internal {
 public:
};

addWorldLinkRequest::addWorldLinkRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.addWorldLinkRequest)
}
addWorldLinkRequest::addWorldLinkRequest(const addWorldLinkRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addWorldLinkRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldlink_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldlink().empty()) {
    _this->_impl_.worldlink_.Set(from._internal_worldlink(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.addWorldLinkRequest)
}

inline void addWorldLinkRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldlink_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

addWorldLinkRequest::~addWorldLinkRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.addWorldLinkRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addWorldLinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldlink_.Destroy();
  _impl_.id_.Destroy();
}

void addWorldLinkRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addWorldLinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.addWorldLinkRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldlink_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addWorldLinkRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldLink = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_worldlink();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addWorldLinkRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.addWorldLinkRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes worldLink = 2;
  if (!this->_internal_worldlink().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_worldlink(), target);
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.addWorldLinkRequest)
  return target;
}

size_t addWorldLinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.addWorldLinkRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldLink = 2;
  if (!this->_internal_worldlink().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldlink());
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addWorldLinkRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addWorldLinkRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addWorldLinkRequest::GetClassData() const { return &_class_data_; }


void addWorldLinkRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addWorldLinkRequest*>(&to_msg);
  auto& from = static_cast<const addWorldLinkRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.addWorldLinkRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldlink().empty()) {
    _this->_internal_set_worldlink(from._internal_worldlink());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addWorldLinkRequest::CopyFrom(const addWorldLinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.addWorldLinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addWorldLinkRequest::IsInitialized() const {
  return true;
}

void addWorldLinkRequest::InternalSwap(addWorldLinkRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldlink_, lhs_arena,
      &other->_impl_.worldlink_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addWorldLinkRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[30]);
}

// ===================================================================

class addWorldLinkResponse::_Internal {
 public:
};

addWorldLinkResponse::addWorldLinkResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.addWorldLinkResponse)
}
addWorldLinkResponse::addWorldLinkResponse(const addWorldLinkResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  addWorldLinkResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.addWorldLinkResponse)
}

inline void addWorldLinkResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

addWorldLinkResponse::~addWorldLinkResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.addWorldLinkResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void addWorldLinkResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void addWorldLinkResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void addWorldLinkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.addWorldLinkResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addWorldLinkResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* addWorldLinkResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.addWorldLinkResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.addWorldLinkResponse)
  return target;
}

size_t addWorldLinkResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.addWorldLinkResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData addWorldLinkResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    addWorldLinkResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*addWorldLinkResponse::GetClassData() const { return &_class_data_; }


void addWorldLinkResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<addWorldLinkResponse*>(&to_msg);
  auto& from = static_cast<const addWorldLinkResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.addWorldLinkResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void addWorldLinkResponse::CopyFrom(const addWorldLinkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.addWorldLinkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addWorldLinkResponse::IsInitialized() const {
  return true;
}

void addWorldLinkResponse::InternalSwap(addWorldLinkResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addWorldLinkResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[31]);
}

// ===================================================================

class getWorldLink_grpc0Request::_Internal {
 public:
};

getWorldLink_grpc0Request::getWorldLink_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldLink_grpc0Request)
}
getWorldLink_grpc0Request::getWorldLink_grpc0Request(const getWorldLink_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldLink_grpc0Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parentid_){}
    , decltype(_impl_.childid_){}
    , decltype(_impl_.worldlink_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parentid().empty()) {
    _this->_impl_.parentid_.Set(from._internal_parentid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.childid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.childid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_childid().empty()) {
    _this->_impl_.childid_.Set(from._internal_childid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldlink().empty()) {
    _this->_impl_.worldlink_.Set(from._internal_worldlink(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldLink_grpc0Request)
}

inline void getWorldLink_grpc0Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parentid_){}
    , decltype(_impl_.childid_){}
    , decltype(_impl_.worldlink_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.childid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.childid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldLink_grpc0Request::~getWorldLink_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldLink_grpc0Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldLink_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parentid_.Destroy();
  _impl_.childid_.Destroy();
  _impl_.worldlink_.Destroy();
}

void getWorldLink_grpc0Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldLink_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldLink_grpc0Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parentid_.ClearToEmpty();
  _impl_.childid_.ClearToEmpty();
  _impl_.worldlink_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldLink_grpc0Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes parentId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_parentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes childId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_childid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldLink = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_worldlink();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldLink_grpc0Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldLink_grpc0Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes parentId = 2;
  if (!this->_internal_parentid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_parentid(), target);
  }

  // bytes childId = 3;
  if (!this->_internal_childid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_childid(), target);
  }

  // bytes worldLink = 4;
  if (!this->_internal_worldlink().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_worldlink(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldLink_grpc0Request)
  return target;
}

size_t getWorldLink_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldLink_grpc0Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes parentId = 2;
  if (!this->_internal_parentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_parentid());
  }

  // bytes childId = 3;
  if (!this->_internal_childid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_childid());
  }

  // bytes worldLink = 4;
  if (!this->_internal_worldlink().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldlink());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldLink_grpc0Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldLink_grpc0Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldLink_grpc0Request::GetClassData() const { return &_class_data_; }


void getWorldLink_grpc0Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldLink_grpc0Request*>(&to_msg);
  auto& from = static_cast<const getWorldLink_grpc0Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldLink_grpc0Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parentid().empty()) {
    _this->_internal_set_parentid(from._internal_parentid());
  }
  if (!from._internal_childid().empty()) {
    _this->_internal_set_childid(from._internal_childid());
  }
  if (!from._internal_worldlink().empty()) {
    _this->_internal_set_worldlink(from._internal_worldlink());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldLink_grpc0Request::CopyFrom(const getWorldLink_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldLink_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldLink_grpc0Request::IsInitialized() const {
  return true;
}

void getWorldLink_grpc0Request::InternalSwap(getWorldLink_grpc0Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parentid_, lhs_arena,
      &other->_impl_.parentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.childid_, lhs_arena,
      &other->_impl_.childid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldlink_, lhs_arena,
      &other->_impl_.worldlink_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldLink_grpc0Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[32]);
}

// ===================================================================

class getWorldLink_grpc0Response::_Internal {
 public:
};

getWorldLink_grpc0Response::getWorldLink_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldLink_grpc0Response)
}
getWorldLink_grpc0Response::getWorldLink_grpc0Response(const getWorldLink_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldLink_grpc0Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldlink_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldlink().empty()) {
    _this->_impl_.worldlink_.Set(from._internal_worldlink(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldLink_grpc0Response)
}

inline void getWorldLink_grpc0Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldlink_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldLink_grpc0Response::~getWorldLink_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldLink_grpc0Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldLink_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldlink_.Destroy();
}

void getWorldLink_grpc0Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldLink_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldLink_grpc0Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldlink_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldLink_grpc0Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes worldLink = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_worldlink();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldLink_grpc0Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldLink_grpc0Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes worldLink = 1;
  if (!this->_internal_worldlink().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_worldlink(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldLink_grpc0Response)
  return target;
}

size_t getWorldLink_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldLink_grpc0Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldLink = 1;
  if (!this->_internal_worldlink().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldlink());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldLink_grpc0Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldLink_grpc0Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldLink_grpc0Response::GetClassData() const { return &_class_data_; }


void getWorldLink_grpc0Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldLink_grpc0Response*>(&to_msg);
  auto& from = static_cast<const getWorldLink_grpc0Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldLink_grpc0Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldlink().empty()) {
    _this->_internal_set_worldlink(from._internal_worldlink());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldLink_grpc0Response::CopyFrom(const getWorldLink_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldLink_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldLink_grpc0Response::IsInitialized() const {
  return true;
}

void getWorldLink_grpc0Response::InternalSwap(getWorldLink_grpc0Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldlink_, lhs_arena,
      &other->_impl_.worldlink_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldLink_grpc0Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[33]);
}

// ===================================================================

class getWorldLink_grpc1Request::_Internal {
 public:
};

getWorldLink_grpc1Request::getWorldLink_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldLink_grpc1Request)
}
getWorldLink_grpc1Request::getWorldLink_grpc1Request(const getWorldLink_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldLink_grpc1Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.linkid_){}
    , decltype(_impl_.worldlink_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.linkid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.linkid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_linkid().empty()) {
    _this->_impl_.linkid_.Set(from._internal_linkid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldlink().empty()) {
    _this->_impl_.worldlink_.Set(from._internal_worldlink(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldLink_grpc1Request)
}

inline void getWorldLink_grpc1Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.linkid_){}
    , decltype(_impl_.worldlink_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.linkid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.linkid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldLink_grpc1Request::~getWorldLink_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldLink_grpc1Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldLink_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.linkid_.Destroy();
  _impl_.worldlink_.Destroy();
}

void getWorldLink_grpc1Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldLink_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldLink_grpc1Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.linkid_.ClearToEmpty();
  _impl_.worldlink_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldLink_grpc1Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes linkId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_linkid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldLink = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_worldlink();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldLink_grpc1Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldLink_grpc1Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes linkId = 2;
  if (!this->_internal_linkid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_linkid(), target);
  }

  // bytes worldLink = 3;
  if (!this->_internal_worldlink().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_worldlink(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldLink_grpc1Request)
  return target;
}

size_t getWorldLink_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldLink_grpc1Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes linkId = 2;
  if (!this->_internal_linkid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_linkid());
  }

  // bytes worldLink = 3;
  if (!this->_internal_worldlink().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldlink());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldLink_grpc1Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldLink_grpc1Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldLink_grpc1Request::GetClassData() const { return &_class_data_; }


void getWorldLink_grpc1Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldLink_grpc1Request*>(&to_msg);
  auto& from = static_cast<const getWorldLink_grpc1Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldLink_grpc1Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_linkid().empty()) {
    _this->_internal_set_linkid(from._internal_linkid());
  }
  if (!from._internal_worldlink().empty()) {
    _this->_internal_set_worldlink(from._internal_worldlink());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldLink_grpc1Request::CopyFrom(const getWorldLink_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldLink_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldLink_grpc1Request::IsInitialized() const {
  return true;
}

void getWorldLink_grpc1Request::InternalSwap(getWorldLink_grpc1Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.linkid_, lhs_arena,
      &other->_impl_.linkid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldlink_, lhs_arena,
      &other->_impl_.worldlink_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldLink_grpc1Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[34]);
}

// ===================================================================

class getWorldLink_grpc1Response::_Internal {
 public:
};

getWorldLink_grpc1Response::getWorldLink_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldLink_grpc1Response)
}
getWorldLink_grpc1Response::getWorldLink_grpc1Response(const getWorldLink_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldLink_grpc1Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldlink_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldlink().empty()) {
    _this->_impl_.worldlink_.Set(from._internal_worldlink(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldLink_grpc1Response)
}

inline void getWorldLink_grpc1Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldlink_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldLink_grpc1Response::~getWorldLink_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldLink_grpc1Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldLink_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldlink_.Destroy();
}

void getWorldLink_grpc1Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldLink_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldLink_grpc1Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldlink_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldLink_grpc1Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes worldLink = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_worldlink();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldLink_grpc1Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldLink_grpc1Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes worldLink = 1;
  if (!this->_internal_worldlink().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_worldlink(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldLink_grpc1Response)
  return target;
}

size_t getWorldLink_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldLink_grpc1Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldLink = 1;
  if (!this->_internal_worldlink().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldlink());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldLink_grpc1Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldLink_grpc1Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldLink_grpc1Response::GetClassData() const { return &_class_data_; }


void getWorldLink_grpc1Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldLink_grpc1Response*>(&to_msg);
  auto& from = static_cast<const getWorldLink_grpc1Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldLink_grpc1Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldlink().empty()) {
    _this->_internal_set_worldlink(from._internal_worldlink());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldLink_grpc1Response::CopyFrom(const getWorldLink_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldLink_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldLink_grpc1Response::IsInitialized() const {
  return true;
}

void getWorldLink_grpc1Response::InternalSwap(getWorldLink_grpc1Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldlink_, lhs_arena,
      &other->_impl_.worldlink_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldLink_grpc1Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[35]);
}

// ===================================================================

class removeWorldLink_grpc0Request::_Internal {
 public:
};

removeWorldLink_grpc0Request::removeWorldLink_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.removeWorldLink_grpc0Request)
}
removeWorldLink_grpc0Request::removeWorldLink_grpc0Request(const removeWorldLink_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  removeWorldLink_grpc0Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parentid_){}
    , decltype(_impl_.childid_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parentid().empty()) {
    _this->_impl_.parentid_.Set(from._internal_parentid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.childid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.childid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_childid().empty()) {
    _this->_impl_.childid_.Set(from._internal_childid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.removeWorldLink_grpc0Request)
}

inline void removeWorldLink_grpc0Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parentid_){}
    , decltype(_impl_.childid_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.childid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.childid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

removeWorldLink_grpc0Request::~removeWorldLink_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.removeWorldLink_grpc0Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeWorldLink_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parentid_.Destroy();
  _impl_.childid_.Destroy();
}

void removeWorldLink_grpc0Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void removeWorldLink_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.removeWorldLink_grpc0Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parentid_.ClearToEmpty();
  _impl_.childid_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeWorldLink_grpc0Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes parentId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_parentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes childId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_childid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeWorldLink_grpc0Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.removeWorldLink_grpc0Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes parentId = 2;
  if (!this->_internal_parentid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_parentid(), target);
  }

  // bytes childId = 3;
  if (!this->_internal_childid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_childid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.removeWorldLink_grpc0Request)
  return target;
}

size_t removeWorldLink_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.removeWorldLink_grpc0Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes parentId = 2;
  if (!this->_internal_parentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_parentid());
  }

  // bytes childId = 3;
  if (!this->_internal_childid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_childid());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeWorldLink_grpc0Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    removeWorldLink_grpc0Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeWorldLink_grpc0Request::GetClassData() const { return &_class_data_; }


void removeWorldLink_grpc0Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<removeWorldLink_grpc0Request*>(&to_msg);
  auto& from = static_cast<const removeWorldLink_grpc0Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.removeWorldLink_grpc0Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parentid().empty()) {
    _this->_internal_set_parentid(from._internal_parentid());
  }
  if (!from._internal_childid().empty()) {
    _this->_internal_set_childid(from._internal_childid());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeWorldLink_grpc0Request::CopyFrom(const removeWorldLink_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.removeWorldLink_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeWorldLink_grpc0Request::IsInitialized() const {
  return true;
}

void removeWorldLink_grpc0Request::InternalSwap(removeWorldLink_grpc0Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parentid_, lhs_arena,
      &other->_impl_.parentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.childid_, lhs_arena,
      &other->_impl_.childid_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeWorldLink_grpc0Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[36]);
}

// ===================================================================

class removeWorldLink_grpc0Response::_Internal {
 public:
};

removeWorldLink_grpc0Response::removeWorldLink_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.removeWorldLink_grpc0Response)
}
removeWorldLink_grpc0Response::removeWorldLink_grpc0Response(const removeWorldLink_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  removeWorldLink_grpc0Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.removeWorldLink_grpc0Response)
}

inline void removeWorldLink_grpc0Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

removeWorldLink_grpc0Response::~removeWorldLink_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.removeWorldLink_grpc0Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeWorldLink_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void removeWorldLink_grpc0Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void removeWorldLink_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.removeWorldLink_grpc0Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeWorldLink_grpc0Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeWorldLink_grpc0Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.removeWorldLink_grpc0Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.removeWorldLink_grpc0Response)
  return target;
}

size_t removeWorldLink_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.removeWorldLink_grpc0Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeWorldLink_grpc0Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    removeWorldLink_grpc0Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeWorldLink_grpc0Response::GetClassData() const { return &_class_data_; }


void removeWorldLink_grpc0Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<removeWorldLink_grpc0Response*>(&to_msg);
  auto& from = static_cast<const removeWorldLink_grpc0Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.removeWorldLink_grpc0Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeWorldLink_grpc0Response::CopyFrom(const removeWorldLink_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.removeWorldLink_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeWorldLink_grpc0Response::IsInitialized() const {
  return true;
}

void removeWorldLink_grpc0Response::InternalSwap(removeWorldLink_grpc0Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeWorldLink_grpc0Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[37]);
}

// ===================================================================

class removeWorldLink_grpc1Request::_Internal {
 public:
};

removeWorldLink_grpc1Request::removeWorldLink_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.removeWorldLink_grpc1Request)
}
removeWorldLink_grpc1Request::removeWorldLink_grpc1Request(const removeWorldLink_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  removeWorldLink_grpc1Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.linkid_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.linkid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.linkid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_linkid().empty()) {
    _this->_impl_.linkid_.Set(from._internal_linkid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.removeWorldLink_grpc1Request)
}

inline void removeWorldLink_grpc1Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.linkid_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.linkid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.linkid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

removeWorldLink_grpc1Request::~removeWorldLink_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.removeWorldLink_grpc1Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeWorldLink_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.linkid_.Destroy();
}

void removeWorldLink_grpc1Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void removeWorldLink_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.removeWorldLink_grpc1Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.linkid_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeWorldLink_grpc1Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes linkId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_linkid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeWorldLink_grpc1Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.removeWorldLink_grpc1Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes linkId = 2;
  if (!this->_internal_linkid().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_linkid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.removeWorldLink_grpc1Request)
  return target;
}

size_t removeWorldLink_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.removeWorldLink_grpc1Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes linkId = 2;
  if (!this->_internal_linkid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_linkid());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeWorldLink_grpc1Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    removeWorldLink_grpc1Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeWorldLink_grpc1Request::GetClassData() const { return &_class_data_; }


void removeWorldLink_grpc1Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<removeWorldLink_grpc1Request*>(&to_msg);
  auto& from = static_cast<const removeWorldLink_grpc1Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.removeWorldLink_grpc1Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_linkid().empty()) {
    _this->_internal_set_linkid(from._internal_linkid());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeWorldLink_grpc1Request::CopyFrom(const removeWorldLink_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.removeWorldLink_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeWorldLink_grpc1Request::IsInitialized() const {
  return true;
}

void removeWorldLink_grpc1Request::InternalSwap(removeWorldLink_grpc1Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.linkid_, lhs_arena,
      &other->_impl_.linkid_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeWorldLink_grpc1Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[38]);
}

// ===================================================================

class removeWorldLink_grpc1Response::_Internal {
 public:
};

removeWorldLink_grpc1Response::removeWorldLink_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.removeWorldLink_grpc1Response)
}
removeWorldLink_grpc1Response::removeWorldLink_grpc1Response(const removeWorldLink_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  removeWorldLink_grpc1Response* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.removeWorldLink_grpc1Response)
}

inline void removeWorldLink_grpc1Response::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

removeWorldLink_grpc1Response::~removeWorldLink_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.removeWorldLink_grpc1Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void removeWorldLink_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void removeWorldLink_grpc1Response::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void removeWorldLink_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.removeWorldLink_grpc1Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeWorldLink_grpc1Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* removeWorldLink_grpc1Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.removeWorldLink_grpc1Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.removeWorldLink_grpc1Response)
  return target;
}

size_t removeWorldLink_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.removeWorldLink_grpc1Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData removeWorldLink_grpc1Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    removeWorldLink_grpc1Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*removeWorldLink_grpc1Response::GetClassData() const { return &_class_data_; }


void removeWorldLink_grpc1Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<removeWorldLink_grpc1Response*>(&to_msg);
  auto& from = static_cast<const removeWorldLink_grpc1Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.removeWorldLink_grpc1Response)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void removeWorldLink_grpc1Response::CopyFrom(const removeWorldLink_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.removeWorldLink_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeWorldLink_grpc1Response::IsInitialized() const {
  return true;
}

void removeWorldLink_grpc1Response::InternalSwap(removeWorldLink_grpc1Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeWorldLink_grpc1Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[39]);
}

// ===================================================================

class getWorldLinksRequest::_Internal {
 public:
};

getWorldLinksRequest::getWorldLinksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldLinksRequest)
}
getWorldLinksRequest::getWorldLinksRequest(const getWorldLinksRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldLinksRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldLinksRequest)
}

inline void getWorldLinksRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldLinksRequest::~getWorldLinksRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldLinksRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldLinksRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getWorldLinksRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldLinksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldLinksRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldLinksRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes vector = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldLinksRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldLinksRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes vector = 2;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_vector(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldLinksRequest)
  return target;
}

size_t getWorldLinksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldLinksRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 2;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldLinksRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldLinksRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldLinksRequest::GetClassData() const { return &_class_data_; }


void getWorldLinksRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldLinksRequest*>(&to_msg);
  auto& from = static_cast<const getWorldLinksRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldLinksRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldLinksRequest::CopyFrom(const getWorldLinksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldLinksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldLinksRequest::IsInitialized() const {
  return true;
}

void getWorldLinksRequest::InternalSwap(getWorldLinksRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldLinksRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[40]);
}

// ===================================================================

class getWorldLinksResponse::_Internal {
 public:
};

getWorldLinksResponse::getWorldLinksResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.getWorldLinksResponse)
}
getWorldLinksResponse::getWorldLinksResponse(const getWorldLinksResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getWorldLinksResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vector().empty()) {
    _this->_impl_.vector_.Set(from._internal_vector(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.getWorldLinksResponse)
}

inline void getWorldLinksResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vector_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.vector_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.vector_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getWorldLinksResponse::~getWorldLinksResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.getWorldLinksResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getWorldLinksResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.vector_.Destroy();
}

void getWorldLinksResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getWorldLinksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.getWorldLinksResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vector_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getWorldLinksResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes vector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_vector();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getWorldLinksResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.getWorldLinksResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_vector(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.getWorldLinksResponse)
  return target;
}

size_t getWorldLinksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.getWorldLinksResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes vector = 1;
  if (!this->_internal_vector().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_vector());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getWorldLinksResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getWorldLinksResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getWorldLinksResponse::GetClassData() const { return &_class_data_; }


void getWorldLinksResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getWorldLinksResponse*>(&to_msg);
  auto& from = static_cast<const getWorldLinksResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.getWorldLinksResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vector().empty()) {
    _this->_internal_set_vector(from._internal_vector());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getWorldLinksResponse::CopyFrom(const getWorldLinksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.getWorldLinksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getWorldLinksResponse::IsInitialized() const {
  return true;
}

void getWorldLinksResponse::InternalSwap(getWorldLinksResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.vector_, lhs_arena,
      &other->_impl_.vector_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getWorldLinksResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[41]);
}

// ===================================================================

class modifyWorldLinkRequest::_Internal {
 public:
};

modifyWorldLinkRequest::modifyWorldLinkRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.modifyWorldLinkRequest)
}
modifyWorldLinkRequest::modifyWorldLinkRequest(const modifyWorldLinkRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  modifyWorldLinkRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.worldlink_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_worldlink().empty()) {
    _this->_impl_.worldlink_.Set(from._internal_worldlink(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.modifyWorldLinkRequest)
}

inline void modifyWorldLinkRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.worldlink_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.worldlink_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.worldlink_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

modifyWorldLinkRequest::~modifyWorldLinkRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.modifyWorldLinkRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void modifyWorldLinkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.worldlink_.Destroy();
  _impl_.id_.Destroy();
}

void modifyWorldLinkRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void modifyWorldLinkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.modifyWorldLinkRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.worldlink_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* modifyWorldLinkRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes worldLink = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_worldlink();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* modifyWorldLinkRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.modifyWorldLinkRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes worldLink = 2;
  if (!this->_internal_worldlink().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_worldlink(), target);
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.modifyWorldLinkRequest)
  return target;
}

size_t modifyWorldLinkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.modifyWorldLinkRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldLink = 2;
  if (!this->_internal_worldlink().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldlink());
  }

  // bytes id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData modifyWorldLinkRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    modifyWorldLinkRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*modifyWorldLinkRequest::GetClassData() const { return &_class_data_; }


void modifyWorldLinkRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<modifyWorldLinkRequest*>(&to_msg);
  auto& from = static_cast<const modifyWorldLinkRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.modifyWorldLinkRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_worldlink().empty()) {
    _this->_internal_set_worldlink(from._internal_worldlink());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void modifyWorldLinkRequest::CopyFrom(const modifyWorldLinkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.modifyWorldLinkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool modifyWorldLinkRequest::IsInitialized() const {
  return true;
}

void modifyWorldLinkRequest::InternalSwap(modifyWorldLinkRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.worldlink_, lhs_arena,
      &other->_impl_.worldlink_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata modifyWorldLinkRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[42]);
}

// ===================================================================

class modifyWorldLinkResponse::_Internal {
 public:
};

modifyWorldLinkResponse::modifyWorldLinkResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.modifyWorldLinkResponse)
}
modifyWorldLinkResponse::modifyWorldLinkResponse(const modifyWorldLinkResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  modifyWorldLinkResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.modifyWorldLinkResponse)
}

inline void modifyWorldLinkResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

modifyWorldLinkResponse::~modifyWorldLinkResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.modifyWorldLinkResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void modifyWorldLinkResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
}

void modifyWorldLinkResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void modifyWorldLinkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.modifyWorldLinkResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* modifyWorldLinkResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* modifyWorldLinkResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.modifyWorldLinkResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.modifyWorldLinkResponse)
  return target;
}

size_t modifyWorldLinkResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.modifyWorldLinkResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData modifyWorldLinkResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    modifyWorldLinkResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*modifyWorldLinkResponse::GetClassData() const { return &_class_data_; }


void modifyWorldLinkResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<modifyWorldLinkResponse*>(&to_msg);
  auto& from = static_cast<const modifyWorldLinkResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.modifyWorldLinkResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void modifyWorldLinkResponse::CopyFrom(const modifyWorldLinkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.modifyWorldLinkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool modifyWorldLinkResponse::IsInitialized() const {
  return true;
}

void modifyWorldLinkResponse::InternalSwap(modifyWorldLinkResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata modifyWorldLinkResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[43]);
}

// ===================================================================

class saveToFileRequest::_Internal {
 public:
};

saveToFileRequest::saveToFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.saveToFileRequest)
}
saveToFileRequest::saveToFileRequest(const saveToFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  saveToFileRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.saveToFileRequest)
}

inline void saveToFileRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

saveToFileRequest::~saveToFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.saveToFileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void saveToFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void saveToFileRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void saveToFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.saveToFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* saveToFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.saveToFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.saveToFileRequest)
  return target;
}

size_t saveToFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.saveToFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData saveToFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    saveToFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*saveToFileRequest::GetClassData() const { return &_class_data_; }


void saveToFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<saveToFileRequest*>(&to_msg);
  auto& from = static_cast<const saveToFileRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.saveToFileRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void saveToFileRequest::CopyFrom(const saveToFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.saveToFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileRequest::IsInitialized() const {
  return true;
}

void saveToFileRequest::InternalSwap(saveToFileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[44]);
}

// ===================================================================

class saveToFileResponse::_Internal {
 public:
};

saveToFileResponse::saveToFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.saveToFileResponse)
}
saveToFileResponse::saveToFileResponse(const saveToFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  saveToFileResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.saveToFileResponse)
}

inline void saveToFileResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

saveToFileResponse::~saveToFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.saveToFileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void saveToFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void saveToFileResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void saveToFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.saveToFileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* saveToFileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.saveToFileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.saveToFileResponse)
  return target;
}

size_t saveToFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.saveToFileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData saveToFileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    saveToFileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*saveToFileResponse::GetClassData() const { return &_class_data_; }


void saveToFileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<saveToFileResponse*>(&to_msg);
  auto& from = static_cast<const saveToFileResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.saveToFileResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void saveToFileResponse::CopyFrom(const saveToFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.saveToFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileResponse::IsInitialized() const {
  return true;
}

void saveToFileResponse::InternalSwap(saveToFileResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[45]);
}

// ===================================================================

class loadFromFileRequest::_Internal {
 public:
};

loadFromFileRequest::loadFromFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.loadFromFileRequest)
}
loadFromFileRequest::loadFromFileRequest(const loadFromFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  loadFromFileRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.loadFromFileRequest)
}

inline void loadFromFileRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

loadFromFileRequest::~loadFromFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.loadFromFileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void loadFromFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void loadFromFileRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void loadFromFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.loadFromFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* loadFromFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.loadFromFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.loadFromFileRequest)
  return target;
}

size_t loadFromFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.loadFromFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData loadFromFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    loadFromFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*loadFromFileRequest::GetClassData() const { return &_class_data_; }


void loadFromFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<loadFromFileRequest*>(&to_msg);
  auto& from = static_cast<const loadFromFileRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.loadFromFileRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void loadFromFileRequest::CopyFrom(const loadFromFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.loadFromFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileRequest::IsInitialized() const {
  return true;
}

void loadFromFileRequest::InternalSwap(loadFromFileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[46]);
}

// ===================================================================

class loadFromFileResponse::_Internal {
 public:
};

loadFromFileResponse::loadFromFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.loadFromFileResponse)
}
loadFromFileResponse::loadFromFileResponse(const loadFromFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  loadFromFileResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.loadFromFileResponse)
}

inline void loadFromFileResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

loadFromFileResponse::~loadFromFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.loadFromFileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void loadFromFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void loadFromFileResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void loadFromFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.loadFromFileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* loadFromFileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.loadFromFileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.loadFromFileResponse)
  return target;
}

size_t loadFromFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.loadFromFileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData loadFromFileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    loadFromFileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*loadFromFileResponse::GetClassData() const { return &_class_data_; }


void loadFromFileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<loadFromFileResponse*>(&to_msg);
  auto& from = static_cast<const loadFromFileResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.loadFromFileResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void loadFromFileResponse::CopyFrom(const loadFromFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.loadFromFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileResponse::IsInitialized() const {
  return true;
}

void loadFromFileResponse::InternalSwap(loadFromFileResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[47]);
}

// ===================================================================

class deleteFileRequest::_Internal {
 public:
};

deleteFileRequest::deleteFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.deleteFileRequest)
}
deleteFileRequest::deleteFileRequest(const deleteFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  deleteFileRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.deleteFileRequest)
}

inline void deleteFileRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

deleteFileRequest::~deleteFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.deleteFileRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void deleteFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void deleteFileRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void deleteFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.deleteFileRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* deleteFileRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* deleteFileRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.deleteFileRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.deleteFileRequest)
  return target;
}

size_t deleteFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.deleteFileRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData deleteFileRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    deleteFileRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*deleteFileRequest::GetClassData() const { return &_class_data_; }


void deleteFileRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<deleteFileRequest*>(&to_msg);
  auto& from = static_cast<const deleteFileRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.deleteFileRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void deleteFileRequest::CopyFrom(const deleteFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.deleteFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteFileRequest::IsInitialized() const {
  return true;
}

void deleteFileRequest::InternalSwap(deleteFileRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata deleteFileRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[48]);
}

// ===================================================================

class deleteFileResponse::_Internal {
 public:
};

deleteFileResponse::deleteFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIWorldGraphManager.deleteFileResponse)
}
deleteFileResponse::deleteFileResponse(const deleteFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  deleteFileResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIWorldGraphManager.deleteFileResponse)
}

inline void deleteFileResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

deleteFileResponse::~deleteFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIWorldGraphManager.deleteFileResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void deleteFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void deleteFileResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void deleteFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIWorldGraphManager.deleteFileResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* deleteFileResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* deleteFileResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIWorldGraphManager.deleteFileResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIWorldGraphManager.deleteFileResponse)
  return target;
}

size_t deleteFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIWorldGraphManager.deleteFileResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData deleteFileResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    deleteFileResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*deleteFileResponse::GetClassData() const { return &_class_data_; }


void deleteFileResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<deleteFileResponse*>(&to_msg);
  auto& from = static_cast<const deleteFileResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIWorldGraphManager.deleteFileResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void deleteFileResponse::CopyFrom(const deleteFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIWorldGraphManager.deleteFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool deleteFileResponse::IsInitialized() const {
  return true;
}

void deleteFileResponse::InternalSwap(deleteFileResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata deleteFileResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIWorldGraphManagerService_2eproto_getter, &descriptor_table_grpcIWorldGraphManagerService_2eproto_once,
      file_level_metadata_grpcIWorldGraphManagerService_2eproto[49]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIWorldGraphManager
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getRelocalizationInformationRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getRelocalizationInformationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getRelocalizationInformationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getRelocalizationInformationResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getRelocalizationInformationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getRelocalizationInformationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldElementRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldElementRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldElementRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldElementResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldElementResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldElementResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldElementsRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldElementsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldElementsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldElementsResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldElementsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldElementsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldElementByKeyValueRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldElementByKeyValueRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldElementByKeyValueRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldElementByKeyValueResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldElementByKeyValueResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldElementByKeyValueResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldElementByKeyRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldElementByKeyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldElementByKeyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldElementByKeyResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldElementByKeyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldElementByKeyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::addTrackableRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::addTrackableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::addTrackableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::addTrackableResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::addTrackableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::addTrackableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getTrackableRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getTrackableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getTrackableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getTrackableResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getTrackableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getTrackableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::removeTrackableRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::removeTrackableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::removeTrackableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::removeTrackableResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::removeTrackableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::removeTrackableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getTrackablesRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getTrackablesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getTrackablesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getTrackablesResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getTrackablesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getTrackablesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::modifyTrackableRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::modifyTrackableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::modifyTrackableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::modifyTrackableResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::modifyTrackableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::modifyTrackableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::addWorldAnchorRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::addWorldAnchorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::addWorldAnchorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::addWorldAnchorResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::addWorldAnchorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::addWorldAnchorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldAnchorRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldAnchorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldAnchorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldAnchorResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldAnchorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldAnchorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::removeWorldAnchorRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::removeWorldAnchorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::removeWorldAnchorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::removeWorldAnchorResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::removeWorldAnchorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::removeWorldAnchorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldAnchorsRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldAnchorsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldAnchorsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldAnchorsResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldAnchorsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldAnchorsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::modifyWorldAnchorRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::modifyWorldAnchorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::modifyWorldAnchorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::modifyWorldAnchorResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::modifyWorldAnchorResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::modifyWorldAnchorResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::addWorldLinkRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::addWorldLinkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::addWorldLinkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::addWorldLinkResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::addWorldLinkResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::addWorldLinkResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldLink_grpc0Request*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldLink_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldLink_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldLink_grpc0Response*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldLink_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldLink_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldLink_grpc1Request*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldLink_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldLink_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldLink_grpc1Response*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldLink_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldLink_grpc1Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::removeWorldLink_grpc0Request*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::removeWorldLink_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::removeWorldLink_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::removeWorldLink_grpc0Response*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::removeWorldLink_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::removeWorldLink_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::removeWorldLink_grpc1Request*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::removeWorldLink_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::removeWorldLink_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::removeWorldLink_grpc1Response*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::removeWorldLink_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::removeWorldLink_grpc1Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldLinksRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldLinksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldLinksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::getWorldLinksResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::getWorldLinksResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::getWorldLinksResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::modifyWorldLinkRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::modifyWorldLinkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::modifyWorldLinkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::modifyWorldLinkResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::modifyWorldLinkResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::modifyWorldLinkResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::saveToFileRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::saveToFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::saveToFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::saveToFileResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::saveToFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::saveToFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::loadFromFileRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::loadFromFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::loadFromFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::loadFromFileResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::loadFromFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::loadFromFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::deleteFileRequest*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::deleteFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::deleteFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIWorldGraphManager::deleteFileResponse*
Arena::CreateMaybeMessage< ::grpcIWorldGraphManager::deleteFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIWorldGraphManager::deleteFileResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
