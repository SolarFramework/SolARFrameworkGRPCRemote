// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: grpcIServiceManagerService.proto
// Protobuf C++ Version: 5.27.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcIServiceManagerService_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_grpcIServiceManagerService_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_grpcIServiceManagerService_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcIServiceManagerService_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_grpcIServiceManagerService_2eproto;
namespace grpcIServiceManager {
class getAndLockServiceRequest;
struct getAndLockServiceRequestDefaultTypeInternal;
extern getAndLockServiceRequestDefaultTypeInternal _getAndLockServiceRequest_default_instance_;
class getAndLockServiceResponse;
struct getAndLockServiceResponseDefaultTypeInternal;
extern getAndLockServiceResponseDefaultTypeInternal _getAndLockServiceResponse_default_instance_;
class getServiceRequest;
struct getServiceRequestDefaultTypeInternal;
extern getServiceRequestDefaultTypeInternal _getServiceRequest_default_instance_;
class getServiceResponse;
struct getServiceResponseDefaultTypeInternal;
extern getServiceResponseDefaultTypeInternal _getServiceResponse_default_instance_;
class registerServiceRequest;
struct registerServiceRequestDefaultTypeInternal;
extern registerServiceRequestDefaultTypeInternal _registerServiceRequest_default_instance_;
class registerServiceResponse;
struct registerServiceResponseDefaultTypeInternal;
extern registerServiceResponseDefaultTypeInternal _registerServiceResponse_default_instance_;
class unlockServiceRequest;
struct unlockServiceRequestDefaultTypeInternal;
extern unlockServiceRequestDefaultTypeInternal _unlockServiceRequest_default_instance_;
class unlockServiceResponse;
struct unlockServiceResponseDefaultTypeInternal;
extern unlockServiceResponseDefaultTypeInternal _unlockServiceResponse_default_instance_;
class unregisterServiceRequest;
struct unregisterServiceRequestDefaultTypeInternal;
extern unregisterServiceRequestDefaultTypeInternal _unregisterServiceRequest_default_instance_;
class unregisterServiceResponse;
struct unregisterServiceResponseDefaultTypeInternal;
extern unregisterServiceResponseDefaultTypeInternal _unregisterServiceResponse_default_instance_;
}  // namespace grpcIServiceManager
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace grpcIServiceManager {

// ===================================================================


// -------------------------------------------------------------------

class unregisterServiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.unregisterServiceResponse) */ {
 public:
  inline unregisterServiceResponse() : unregisterServiceResponse(nullptr) {}
  ~unregisterServiceResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR unregisterServiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline unregisterServiceResponse(const unregisterServiceResponse& from) : unregisterServiceResponse(nullptr, from) {}
  inline unregisterServiceResponse(unregisterServiceResponse&& from) noexcept
      : unregisterServiceResponse(nullptr, std::move(from)) {}
  inline unregisterServiceResponse& operator=(const unregisterServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline unregisterServiceResponse& operator=(unregisterServiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const unregisterServiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const unregisterServiceResponse* internal_default_instance() {
    return reinterpret_cast<const unregisterServiceResponse*>(
        &_unregisterServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(unregisterServiceResponse& a, unregisterServiceResponse& b) { a.Swap(&b); }
  inline void Swap(unregisterServiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(unregisterServiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  unregisterServiceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<unregisterServiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const unregisterServiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const unregisterServiceResponse& from) { unregisterServiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(unregisterServiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.unregisterServiceResponse"; }

 protected:
  explicit unregisterServiceResponse(::google::protobuf::Arena* arena);
  unregisterServiceResponse(::google::protobuf::Arena* arena, const unregisterServiceResponse& from);
  unregisterServiceResponse(::google::protobuf::Arena* arena, unregisterServiceResponse&& from) noexcept
      : unregisterServiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue() ;
  ::int32_t xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::int32_t value);

  private:
  ::int32_t _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.unregisterServiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_unregisterServiceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const unregisterServiceResponse& from_msg);
    ::int32_t xpcfgrpcreturnvalue_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};
// -------------------------------------------------------------------

class unregisterServiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.unregisterServiceRequest) */ {
 public:
  inline unregisterServiceRequest() : unregisterServiceRequest(nullptr) {}
  ~unregisterServiceRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR unregisterServiceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline unregisterServiceRequest(const unregisterServiceRequest& from) : unregisterServiceRequest(nullptr, from) {}
  inline unregisterServiceRequest(unregisterServiceRequest&& from) noexcept
      : unregisterServiceRequest(nullptr, std::move(from)) {}
  inline unregisterServiceRequest& operator=(const unregisterServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline unregisterServiceRequest& operator=(unregisterServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const unregisterServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const unregisterServiceRequest* internal_default_instance() {
    return reinterpret_cast<const unregisterServiceRequest*>(
        &_unregisterServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(unregisterServiceRequest& a, unregisterServiceRequest& b) { a.Swap(&b); }
  inline void Swap(unregisterServiceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(unregisterServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  unregisterServiceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<unregisterServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const unregisterServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const unregisterServiceRequest& from) { unregisterServiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(unregisterServiceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.unregisterServiceRequest"; }

 protected:
  explicit unregisterServiceRequest(::google::protobuf::Arena* arena);
  unregisterServiceRequest(::google::protobuf::Arena* arena, const unregisterServiceRequest& from);
  unregisterServiceRequest(::google::protobuf::Arena* arena, unregisterServiceRequest&& from) noexcept
      : unregisterServiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceURLFieldNumber = 3,
    kGrpcServerCompressionFormatFieldNumber = 1,
    kServiceTypeFieldNumber = 2,
  };
  // string serviceURL = 3;
  void clear_serviceurl() ;
  const std::string& serviceurl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serviceurl(Arg_&& arg, Args_... args);
  std::string* mutable_serviceurl();
  PROTOBUF_NODISCARD std::string* release_serviceurl();
  void set_allocated_serviceurl(std::string* value);

  private:
  const std::string& _internal_serviceurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serviceurl(
      const std::string& value);
  std::string* _internal_mutable_serviceurl();

  public:
  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat() ;
  ::int32_t grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::int32_t value);

  private:
  ::int32_t _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::int32_t value);

  public:
  // sint32 serviceType = 2;
  void clear_servicetype() ;
  ::int32_t servicetype() const;
  void set_servicetype(::int32_t value);

  private:
  ::int32_t _internal_servicetype() const;
  void _internal_set_servicetype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.unregisterServiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      63, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_unregisterServiceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const unregisterServiceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr serviceurl_;
    ::int32_t grpcservercompressionformat_;
    ::int32_t servicetype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};
// -------------------------------------------------------------------

class unlockServiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.unlockServiceResponse) */ {
 public:
  inline unlockServiceResponse() : unlockServiceResponse(nullptr) {}
  ~unlockServiceResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR unlockServiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline unlockServiceResponse(const unlockServiceResponse& from) : unlockServiceResponse(nullptr, from) {}
  inline unlockServiceResponse(unlockServiceResponse&& from) noexcept
      : unlockServiceResponse(nullptr, std::move(from)) {}
  inline unlockServiceResponse& operator=(const unlockServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline unlockServiceResponse& operator=(unlockServiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const unlockServiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const unlockServiceResponse* internal_default_instance() {
    return reinterpret_cast<const unlockServiceResponse*>(
        &_unlockServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(unlockServiceResponse& a, unlockServiceResponse& b) { a.Swap(&b); }
  inline void Swap(unlockServiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(unlockServiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  unlockServiceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<unlockServiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const unlockServiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const unlockServiceResponse& from) { unlockServiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(unlockServiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.unlockServiceResponse"; }

 protected:
  explicit unlockServiceResponse(::google::protobuf::Arena* arena);
  unlockServiceResponse(::google::protobuf::Arena* arena, const unlockServiceResponse& from);
  unlockServiceResponse(::google::protobuf::Arena* arena, unlockServiceResponse&& from) noexcept
      : unlockServiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue() ;
  ::int32_t xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::int32_t value);

  private:
  ::int32_t _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.unlockServiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_unlockServiceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const unlockServiceResponse& from_msg);
    ::int32_t xpcfgrpcreturnvalue_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};
// -------------------------------------------------------------------

class unlockServiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.unlockServiceRequest) */ {
 public:
  inline unlockServiceRequest() : unlockServiceRequest(nullptr) {}
  ~unlockServiceRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR unlockServiceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline unlockServiceRequest(const unlockServiceRequest& from) : unlockServiceRequest(nullptr, from) {}
  inline unlockServiceRequest(unlockServiceRequest&& from) noexcept
      : unlockServiceRequest(nullptr, std::move(from)) {}
  inline unlockServiceRequest& operator=(const unlockServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline unlockServiceRequest& operator=(unlockServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const unlockServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const unlockServiceRequest* internal_default_instance() {
    return reinterpret_cast<const unlockServiceRequest*>(
        &_unlockServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(unlockServiceRequest& a, unlockServiceRequest& b) { a.Swap(&b); }
  inline void Swap(unlockServiceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(unlockServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  unlockServiceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<unlockServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const unlockServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const unlockServiceRequest& from) { unlockServiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(unlockServiceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.unlockServiceRequest"; }

 protected:
  explicit unlockServiceRequest(::google::protobuf::Arena* arena);
  unlockServiceRequest(::google::protobuf::Arena* arena, const unlockServiceRequest& from);
  unlockServiceRequest(::google::protobuf::Arena* arena, unlockServiceRequest&& from) noexcept
      : unlockServiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUuidFieldNumber = 3,
    kServiceURLFieldNumber = 4,
    kGrpcServerCompressionFormatFieldNumber = 1,
    kServiceTypeFieldNumber = 2,
  };
  // string uuid = 3;
  void clear_uuid() ;
  const std::string& uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_uuid();
  PROTOBUF_NODISCARD std::string* release_uuid();
  void set_allocated_uuid(std::string* value);

  private:
  const std::string& _internal_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uuid(
      const std::string& value);
  std::string* _internal_mutable_uuid();

  public:
  // string serviceURL = 4;
  void clear_serviceurl() ;
  const std::string& serviceurl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serviceurl(Arg_&& arg, Args_... args);
  std::string* mutable_serviceurl();
  PROTOBUF_NODISCARD std::string* release_serviceurl();
  void set_allocated_serviceurl(std::string* value);

  private:
  const std::string& _internal_serviceurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serviceurl(
      const std::string& value);
  std::string* _internal_mutable_serviceurl();

  public:
  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat() ;
  ::int32_t grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::int32_t value);

  private:
  ::int32_t _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::int32_t value);

  public:
  // sint32 serviceType = 2;
  void clear_servicetype() ;
  ::int32_t servicetype() const;
  void set_servicetype(::int32_t value);

  private:
  ::int32_t _internal_servicetype() const;
  void _internal_set_servicetype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.unlockServiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      63, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_unlockServiceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const unlockServiceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uuid_;
    ::google::protobuf::internal::ArenaStringPtr serviceurl_;
    ::int32_t grpcservercompressionformat_;
    ::int32_t servicetype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};
// -------------------------------------------------------------------

class registerServiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.registerServiceResponse) */ {
 public:
  inline registerServiceResponse() : registerServiceResponse(nullptr) {}
  ~registerServiceResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR registerServiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline registerServiceResponse(const registerServiceResponse& from) : registerServiceResponse(nullptr, from) {}
  inline registerServiceResponse(registerServiceResponse&& from) noexcept
      : registerServiceResponse(nullptr, std::move(from)) {}
  inline registerServiceResponse& operator=(const registerServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline registerServiceResponse& operator=(registerServiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const registerServiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const registerServiceResponse* internal_default_instance() {
    return reinterpret_cast<const registerServiceResponse*>(
        &_registerServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(registerServiceResponse& a, registerServiceResponse& b) { a.Swap(&b); }
  inline void Swap(registerServiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(registerServiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  registerServiceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<registerServiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const registerServiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const registerServiceResponse& from) { registerServiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(registerServiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.registerServiceResponse"; }

 protected:
  explicit registerServiceResponse(::google::protobuf::Arena* arena);
  registerServiceResponse(::google::protobuf::Arena* arena, const registerServiceResponse& from);
  registerServiceResponse(::google::protobuf::Arena* arena, registerServiceResponse&& from) noexcept
      : registerServiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue() ;
  ::int32_t xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::int32_t value);

  private:
  ::int32_t _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.registerServiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_registerServiceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const registerServiceResponse& from_msg);
    ::int32_t xpcfgrpcreturnvalue_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};
// -------------------------------------------------------------------

class registerServiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.registerServiceRequest) */ {
 public:
  inline registerServiceRequest() : registerServiceRequest(nullptr) {}
  ~registerServiceRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR registerServiceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline registerServiceRequest(const registerServiceRequest& from) : registerServiceRequest(nullptr, from) {}
  inline registerServiceRequest(registerServiceRequest&& from) noexcept
      : registerServiceRequest(nullptr, std::move(from)) {}
  inline registerServiceRequest& operator=(const registerServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline registerServiceRequest& operator=(registerServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const registerServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const registerServiceRequest* internal_default_instance() {
    return reinterpret_cast<const registerServiceRequest*>(
        &_registerServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(registerServiceRequest& a, registerServiceRequest& b) { a.Swap(&b); }
  inline void Swap(registerServiceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(registerServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  registerServiceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<registerServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const registerServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const registerServiceRequest& from) { registerServiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(registerServiceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.registerServiceRequest"; }

 protected:
  explicit registerServiceRequest(::google::protobuf::Arena* arena);
  registerServiceRequest(::google::protobuf::Arena* arena, const registerServiceRequest& from);
  registerServiceRequest(::google::protobuf::Arena* arena, registerServiceRequest&& from) noexcept
      : registerServiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceURLFieldNumber = 3,
    kGrpcServerCompressionFormatFieldNumber = 1,
    kServiceTypeFieldNumber = 2,
  };
  // string serviceURL = 3;
  void clear_serviceurl() ;
  const std::string& serviceurl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serviceurl(Arg_&& arg, Args_... args);
  std::string* mutable_serviceurl();
  PROTOBUF_NODISCARD std::string* release_serviceurl();
  void set_allocated_serviceurl(std::string* value);

  private:
  const std::string& _internal_serviceurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serviceurl(
      const std::string& value);
  std::string* _internal_mutable_serviceurl();

  public:
  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat() ;
  ::int32_t grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::int32_t value);

  private:
  ::int32_t _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::int32_t value);

  public:
  // sint32 serviceType = 2;
  void clear_servicetype() ;
  ::int32_t servicetype() const;
  void set_servicetype(::int32_t value);

  private:
  ::int32_t _internal_servicetype() const;
  void _internal_set_servicetype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.registerServiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      61, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_registerServiceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const registerServiceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr serviceurl_;
    ::int32_t grpcservercompressionformat_;
    ::int32_t servicetype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};
// -------------------------------------------------------------------

class getServiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.getServiceResponse) */ {
 public:
  inline getServiceResponse() : getServiceResponse(nullptr) {}
  ~getServiceResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR getServiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline getServiceResponse(const getServiceResponse& from) : getServiceResponse(nullptr, from) {}
  inline getServiceResponse(getServiceResponse&& from) noexcept
      : getServiceResponse(nullptr, std::move(from)) {}
  inline getServiceResponse& operator=(const getServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline getServiceResponse& operator=(getServiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const getServiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const getServiceResponse* internal_default_instance() {
    return reinterpret_cast<const getServiceResponse*>(
        &_getServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(getServiceResponse& a, getServiceResponse& b) { a.Swap(&b); }
  inline void Swap(getServiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(getServiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  getServiceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<getServiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const getServiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const getServiceResponse& from) { getServiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(getServiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.getServiceResponse"; }

 protected:
  explicit getServiceResponse(::google::protobuf::Arena* arena);
  getServiceResponse(::google::protobuf::Arena* arena, const getServiceResponse& from);
  getServiceResponse(::google::protobuf::Arena* arena, getServiceResponse&& from) noexcept
      : getServiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceURLFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // string serviceURL = 1;
  void clear_serviceurl() ;
  const std::string& serviceurl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serviceurl(Arg_&& arg, Args_... args);
  std::string* mutable_serviceurl();
  PROTOBUF_NODISCARD std::string* release_serviceurl();
  void set_allocated_serviceurl(std::string* value);

  private:
  const std::string& _internal_serviceurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serviceurl(
      const std::string& value);
  std::string* _internal_mutable_serviceurl();

  public:
  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue() ;
  ::int32_t xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::int32_t value);

  private:
  ::int32_t _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.getServiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_getServiceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const getServiceResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr serviceurl_;
    ::int32_t xpcfgrpcreturnvalue_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};
// -------------------------------------------------------------------

class getServiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.getServiceRequest) */ {
 public:
  inline getServiceRequest() : getServiceRequest(nullptr) {}
  ~getServiceRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR getServiceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline getServiceRequest(const getServiceRequest& from) : getServiceRequest(nullptr, from) {}
  inline getServiceRequest(getServiceRequest&& from) noexcept
      : getServiceRequest(nullptr, std::move(from)) {}
  inline getServiceRequest& operator=(const getServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline getServiceRequest& operator=(getServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const getServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const getServiceRequest* internal_default_instance() {
    return reinterpret_cast<const getServiceRequest*>(
        &_getServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(getServiceRequest& a, getServiceRequest& b) { a.Swap(&b); }
  inline void Swap(getServiceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(getServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  getServiceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<getServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const getServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const getServiceRequest& from) { getServiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(getServiceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.getServiceRequest"; }

 protected:
  explicit getServiceRequest(::google::protobuf::Arena* arena);
  getServiceRequest(::google::protobuf::Arena* arena, const getServiceRequest& from);
  getServiceRequest(::google::protobuf::Arena* arena, getServiceRequest&& from) noexcept
      : getServiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceURLFieldNumber = 3,
    kGrpcServerCompressionFormatFieldNumber = 1,
    kServiceTypeFieldNumber = 2,
  };
  // string serviceURL = 3;
  void clear_serviceurl() ;
  const std::string& serviceurl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serviceurl(Arg_&& arg, Args_... args);
  std::string* mutable_serviceurl();
  PROTOBUF_NODISCARD std::string* release_serviceurl();
  void set_allocated_serviceurl(std::string* value);

  private:
  const std::string& _internal_serviceurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serviceurl(
      const std::string& value);
  std::string* _internal_mutable_serviceurl();

  public:
  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat() ;
  ::int32_t grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::int32_t value);

  private:
  ::int32_t _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::int32_t value);

  public:
  // sint32 serviceType = 2;
  void clear_servicetype() ;
  ::int32_t servicetype() const;
  void set_servicetype(::int32_t value);

  private:
  ::int32_t _internal_servicetype() const;
  void _internal_set_servicetype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.getServiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_getServiceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const getServiceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr serviceurl_;
    ::int32_t grpcservercompressionformat_;
    ::int32_t servicetype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};
// -------------------------------------------------------------------

class getAndLockServiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.getAndLockServiceResponse) */ {
 public:
  inline getAndLockServiceResponse() : getAndLockServiceResponse(nullptr) {}
  ~getAndLockServiceResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR getAndLockServiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline getAndLockServiceResponse(const getAndLockServiceResponse& from) : getAndLockServiceResponse(nullptr, from) {}
  inline getAndLockServiceResponse(getAndLockServiceResponse&& from) noexcept
      : getAndLockServiceResponse(nullptr, std::move(from)) {}
  inline getAndLockServiceResponse& operator=(const getAndLockServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline getAndLockServiceResponse& operator=(getAndLockServiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const getAndLockServiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const getAndLockServiceResponse* internal_default_instance() {
    return reinterpret_cast<const getAndLockServiceResponse*>(
        &_getAndLockServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(getAndLockServiceResponse& a, getAndLockServiceResponse& b) { a.Swap(&b); }
  inline void Swap(getAndLockServiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(getAndLockServiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  getAndLockServiceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<getAndLockServiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const getAndLockServiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const getAndLockServiceResponse& from) { getAndLockServiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(getAndLockServiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.getAndLockServiceResponse"; }

 protected:
  explicit getAndLockServiceResponse(::google::protobuf::Arena* arena);
  getAndLockServiceResponse(::google::protobuf::Arena* arena, const getAndLockServiceResponse& from);
  getAndLockServiceResponse(::google::protobuf::Arena* arena, getAndLockServiceResponse&& from) noexcept
      : getAndLockServiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceURLFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // string serviceURL = 1;
  void clear_serviceurl() ;
  const std::string& serviceurl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serviceurl(Arg_&& arg, Args_... args);
  std::string* mutable_serviceurl();
  PROTOBUF_NODISCARD std::string* release_serviceurl();
  void set_allocated_serviceurl(std::string* value);

  private:
  const std::string& _internal_serviceurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serviceurl(
      const std::string& value);
  std::string* _internal_mutable_serviceurl();

  public:
  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue() ;
  ::int32_t xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::int32_t value);

  private:
  ::int32_t _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.getAndLockServiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_getAndLockServiceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const getAndLockServiceResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr serviceurl_;
    ::int32_t xpcfgrpcreturnvalue_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};
// -------------------------------------------------------------------

class getAndLockServiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpcIServiceManager.getAndLockServiceRequest) */ {
 public:
  inline getAndLockServiceRequest() : getAndLockServiceRequest(nullptr) {}
  ~getAndLockServiceRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR getAndLockServiceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline getAndLockServiceRequest(const getAndLockServiceRequest& from) : getAndLockServiceRequest(nullptr, from) {}
  inline getAndLockServiceRequest(getAndLockServiceRequest&& from) noexcept
      : getAndLockServiceRequest(nullptr, std::move(from)) {}
  inline getAndLockServiceRequest& operator=(const getAndLockServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline getAndLockServiceRequest& operator=(getAndLockServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const getAndLockServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const getAndLockServiceRequest* internal_default_instance() {
    return reinterpret_cast<const getAndLockServiceRequest*>(
        &_getAndLockServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(getAndLockServiceRequest& a, getAndLockServiceRequest& b) { a.Swap(&b); }
  inline void Swap(getAndLockServiceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(getAndLockServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  getAndLockServiceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<getAndLockServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const getAndLockServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const getAndLockServiceRequest& from) { getAndLockServiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(getAndLockServiceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpcIServiceManager.getAndLockServiceRequest"; }

 protected:
  explicit getAndLockServiceRequest(::google::protobuf::Arena* arena);
  getAndLockServiceRequest(::google::protobuf::Arena* arena, const getAndLockServiceRequest& from);
  getAndLockServiceRequest(::google::protobuf::Arena* arena, getAndLockServiceRequest&& from) noexcept
      : getAndLockServiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUuidFieldNumber = 3,
    kServiceURLFieldNumber = 4,
    kGrpcServerCompressionFormatFieldNumber = 1,
    kServiceTypeFieldNumber = 2,
  };
  // string uuid = 3;
  void clear_uuid() ;
  const std::string& uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_uuid();
  PROTOBUF_NODISCARD std::string* release_uuid();
  void set_allocated_uuid(std::string* value);

  private:
  const std::string& _internal_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uuid(
      const std::string& value);
  std::string* _internal_mutable_uuid();

  public:
  // string serviceURL = 4;
  void clear_serviceurl() ;
  const std::string& serviceurl() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serviceurl(Arg_&& arg, Args_... args);
  std::string* mutable_serviceurl();
  PROTOBUF_NODISCARD std::string* release_serviceurl();
  void set_allocated_serviceurl(std::string* value);

  private:
  const std::string& _internal_serviceurl() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serviceurl(
      const std::string& value);
  std::string* _internal_mutable_serviceurl();

  public:
  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat() ;
  ::int32_t grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::int32_t value);

  private:
  ::int32_t _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::int32_t value);

  public:
  // sint32 serviceType = 2;
  void clear_servicetype() ;
  ::int32_t servicetype() const;
  void set_servicetype(::int32_t value);

  private:
  ::int32_t _internal_servicetype() const;
  void _internal_set_servicetype(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpcIServiceManager.getAndLockServiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_getAndLockServiceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const getAndLockServiceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uuid_;
    ::google::protobuf::internal::ArenaStringPtr serviceurl_;
    ::int32_t grpcservercompressionformat_;
    ::int32_t servicetype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grpcIServiceManagerService_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// registerServiceRequest

// int32 grpcServerCompressionFormat = 1;
inline void registerServiceRequest::clear_grpcservercompressionformat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = 0;
}
inline ::int32_t registerServiceRequest::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.registerServiceRequest.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void registerServiceRequest::set_grpcservercompressionformat(::int32_t value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.registerServiceRequest.grpcServerCompressionFormat)
}
inline ::int32_t registerServiceRequest::_internal_grpcservercompressionformat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grpcservercompressionformat_;
}
inline void registerServiceRequest::_internal_set_grpcservercompressionformat(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = value;
}

// sint32 serviceType = 2;
inline void registerServiceRequest::clear_servicetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = 0;
}
inline ::int32_t registerServiceRequest::servicetype() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.registerServiceRequest.serviceType)
  return _internal_servicetype();
}
inline void registerServiceRequest::set_servicetype(::int32_t value) {
  _internal_set_servicetype(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.registerServiceRequest.serviceType)
}
inline ::int32_t registerServiceRequest::_internal_servicetype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.servicetype_;
}
inline void registerServiceRequest::_internal_set_servicetype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = value;
}

// string serviceURL = 3;
inline void registerServiceRequest::clear_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.ClearToEmpty();
}
inline const std::string& registerServiceRequest::serviceurl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.registerServiceRequest.serviceURL)
  return _internal_serviceurl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void registerServiceRequest::set_serviceurl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpcIServiceManager.registerServiceRequest.serviceURL)
}
inline std::string* registerServiceRequest::mutable_serviceurl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serviceurl();
  // @@protoc_insertion_point(field_mutable:grpcIServiceManager.registerServiceRequest.serviceURL)
  return _s;
}
inline const std::string& registerServiceRequest::_internal_serviceurl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serviceurl_.Get();
}
inline void registerServiceRequest::_internal_set_serviceurl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(value, GetArena());
}
inline std::string* registerServiceRequest::_internal_mutable_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serviceurl_.Mutable( GetArena());
}
inline std::string* registerServiceRequest::release_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpcIServiceManager.registerServiceRequest.serviceURL)
  return _impl_.serviceurl_.Release();
}
inline void registerServiceRequest::set_allocated_serviceurl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serviceurl_.IsDefault()) {
          _impl_.serviceurl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcIServiceManager.registerServiceRequest.serviceURL)
}

// -------------------------------------------------------------------

// registerServiceResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void registerServiceResponse::clear_xpcfgrpcreturnvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = 0;
}
inline ::int32_t registerServiceResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.registerServiceResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void registerServiceResponse::set_xpcfgrpcreturnvalue(::int32_t value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.registerServiceResponse.xpcfGrpcReturnValue)
}
inline ::int32_t registerServiceResponse::_internal_xpcfgrpcreturnvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xpcfgrpcreturnvalue_;
}
inline void registerServiceResponse::_internal_set_xpcfgrpcreturnvalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = value;
}

// -------------------------------------------------------------------

// unregisterServiceRequest

// int32 grpcServerCompressionFormat = 1;
inline void unregisterServiceRequest::clear_grpcservercompressionformat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = 0;
}
inline ::int32_t unregisterServiceRequest::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.unregisterServiceRequest.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void unregisterServiceRequest::set_grpcservercompressionformat(::int32_t value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.unregisterServiceRequest.grpcServerCompressionFormat)
}
inline ::int32_t unregisterServiceRequest::_internal_grpcservercompressionformat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grpcservercompressionformat_;
}
inline void unregisterServiceRequest::_internal_set_grpcservercompressionformat(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = value;
}

// sint32 serviceType = 2;
inline void unregisterServiceRequest::clear_servicetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = 0;
}
inline ::int32_t unregisterServiceRequest::servicetype() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.unregisterServiceRequest.serviceType)
  return _internal_servicetype();
}
inline void unregisterServiceRequest::set_servicetype(::int32_t value) {
  _internal_set_servicetype(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.unregisterServiceRequest.serviceType)
}
inline ::int32_t unregisterServiceRequest::_internal_servicetype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.servicetype_;
}
inline void unregisterServiceRequest::_internal_set_servicetype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = value;
}

// string serviceURL = 3;
inline void unregisterServiceRequest::clear_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.ClearToEmpty();
}
inline const std::string& unregisterServiceRequest::serviceurl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.unregisterServiceRequest.serviceURL)
  return _internal_serviceurl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void unregisterServiceRequest::set_serviceurl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpcIServiceManager.unregisterServiceRequest.serviceURL)
}
inline std::string* unregisterServiceRequest::mutable_serviceurl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serviceurl();
  // @@protoc_insertion_point(field_mutable:grpcIServiceManager.unregisterServiceRequest.serviceURL)
  return _s;
}
inline const std::string& unregisterServiceRequest::_internal_serviceurl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serviceurl_.Get();
}
inline void unregisterServiceRequest::_internal_set_serviceurl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(value, GetArena());
}
inline std::string* unregisterServiceRequest::_internal_mutable_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serviceurl_.Mutable( GetArena());
}
inline std::string* unregisterServiceRequest::release_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpcIServiceManager.unregisterServiceRequest.serviceURL)
  return _impl_.serviceurl_.Release();
}
inline void unregisterServiceRequest::set_allocated_serviceurl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serviceurl_.IsDefault()) {
          _impl_.serviceurl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcIServiceManager.unregisterServiceRequest.serviceURL)
}

// -------------------------------------------------------------------

// unregisterServiceResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void unregisterServiceResponse::clear_xpcfgrpcreturnvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = 0;
}
inline ::int32_t unregisterServiceResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.unregisterServiceResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void unregisterServiceResponse::set_xpcfgrpcreturnvalue(::int32_t value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.unregisterServiceResponse.xpcfGrpcReturnValue)
}
inline ::int32_t unregisterServiceResponse::_internal_xpcfgrpcreturnvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xpcfgrpcreturnvalue_;
}
inline void unregisterServiceResponse::_internal_set_xpcfgrpcreturnvalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = value;
}

// -------------------------------------------------------------------

// getServiceRequest

// int32 grpcServerCompressionFormat = 1;
inline void getServiceRequest::clear_grpcservercompressionformat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = 0;
}
inline ::int32_t getServiceRequest::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getServiceRequest.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void getServiceRequest::set_grpcservercompressionformat(::int32_t value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getServiceRequest.grpcServerCompressionFormat)
}
inline ::int32_t getServiceRequest::_internal_grpcservercompressionformat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grpcservercompressionformat_;
}
inline void getServiceRequest::_internal_set_grpcservercompressionformat(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = value;
}

// sint32 serviceType = 2;
inline void getServiceRequest::clear_servicetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = 0;
}
inline ::int32_t getServiceRequest::servicetype() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getServiceRequest.serviceType)
  return _internal_servicetype();
}
inline void getServiceRequest::set_servicetype(::int32_t value) {
  _internal_set_servicetype(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getServiceRequest.serviceType)
}
inline ::int32_t getServiceRequest::_internal_servicetype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.servicetype_;
}
inline void getServiceRequest::_internal_set_servicetype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = value;
}

// string serviceURL = 3;
inline void getServiceRequest::clear_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.ClearToEmpty();
}
inline const std::string& getServiceRequest::serviceurl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getServiceRequest.serviceURL)
  return _internal_serviceurl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void getServiceRequest::set_serviceurl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getServiceRequest.serviceURL)
}
inline std::string* getServiceRequest::mutable_serviceurl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serviceurl();
  // @@protoc_insertion_point(field_mutable:grpcIServiceManager.getServiceRequest.serviceURL)
  return _s;
}
inline const std::string& getServiceRequest::_internal_serviceurl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serviceurl_.Get();
}
inline void getServiceRequest::_internal_set_serviceurl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(value, GetArena());
}
inline std::string* getServiceRequest::_internal_mutable_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serviceurl_.Mutable( GetArena());
}
inline std::string* getServiceRequest::release_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpcIServiceManager.getServiceRequest.serviceURL)
  return _impl_.serviceurl_.Release();
}
inline void getServiceRequest::set_allocated_serviceurl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serviceurl_.IsDefault()) {
          _impl_.serviceurl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcIServiceManager.getServiceRequest.serviceURL)
}

// -------------------------------------------------------------------

// getServiceResponse

// string serviceURL = 1;
inline void getServiceResponse::clear_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.ClearToEmpty();
}
inline const std::string& getServiceResponse::serviceurl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getServiceResponse.serviceURL)
  return _internal_serviceurl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void getServiceResponse::set_serviceurl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getServiceResponse.serviceURL)
}
inline std::string* getServiceResponse::mutable_serviceurl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serviceurl();
  // @@protoc_insertion_point(field_mutable:grpcIServiceManager.getServiceResponse.serviceURL)
  return _s;
}
inline const std::string& getServiceResponse::_internal_serviceurl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serviceurl_.Get();
}
inline void getServiceResponse::_internal_set_serviceurl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(value, GetArena());
}
inline std::string* getServiceResponse::_internal_mutable_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serviceurl_.Mutable( GetArena());
}
inline std::string* getServiceResponse::release_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpcIServiceManager.getServiceResponse.serviceURL)
  return _impl_.serviceurl_.Release();
}
inline void getServiceResponse::set_allocated_serviceurl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serviceurl_.IsDefault()) {
          _impl_.serviceurl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcIServiceManager.getServiceResponse.serviceURL)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void getServiceResponse::clear_xpcfgrpcreturnvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = 0;
}
inline ::int32_t getServiceResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getServiceResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void getServiceResponse::set_xpcfgrpcreturnvalue(::int32_t value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getServiceResponse.xpcfGrpcReturnValue)
}
inline ::int32_t getServiceResponse::_internal_xpcfgrpcreturnvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xpcfgrpcreturnvalue_;
}
inline void getServiceResponse::_internal_set_xpcfgrpcreturnvalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = value;
}

// -------------------------------------------------------------------

// getAndLockServiceRequest

// int32 grpcServerCompressionFormat = 1;
inline void getAndLockServiceRequest::clear_grpcservercompressionformat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = 0;
}
inline ::int32_t getAndLockServiceRequest::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getAndLockServiceRequest.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void getAndLockServiceRequest::set_grpcservercompressionformat(::int32_t value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getAndLockServiceRequest.grpcServerCompressionFormat)
}
inline ::int32_t getAndLockServiceRequest::_internal_grpcservercompressionformat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grpcservercompressionformat_;
}
inline void getAndLockServiceRequest::_internal_set_grpcservercompressionformat(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = value;
}

// sint32 serviceType = 2;
inline void getAndLockServiceRequest::clear_servicetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = 0;
}
inline ::int32_t getAndLockServiceRequest::servicetype() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getAndLockServiceRequest.serviceType)
  return _internal_servicetype();
}
inline void getAndLockServiceRequest::set_servicetype(::int32_t value) {
  _internal_set_servicetype(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getAndLockServiceRequest.serviceType)
}
inline ::int32_t getAndLockServiceRequest::_internal_servicetype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.servicetype_;
}
inline void getAndLockServiceRequest::_internal_set_servicetype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = value;
}

// string uuid = 3;
inline void getAndLockServiceRequest::clear_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.ClearToEmpty();
}
inline const std::string& getAndLockServiceRequest::uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getAndLockServiceRequest.uuid)
  return _internal_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void getAndLockServiceRequest::set_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getAndLockServiceRequest.uuid)
}
inline std::string* getAndLockServiceRequest::mutable_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uuid();
  // @@protoc_insertion_point(field_mutable:grpcIServiceManager.getAndLockServiceRequest.uuid)
  return _s;
}
inline const std::string& getAndLockServiceRequest::_internal_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uuid_.Get();
}
inline void getAndLockServiceRequest::_internal_set_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.Set(value, GetArena());
}
inline std::string* getAndLockServiceRequest::_internal_mutable_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uuid_.Mutable( GetArena());
}
inline std::string* getAndLockServiceRequest::release_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpcIServiceManager.getAndLockServiceRequest.uuid)
  return _impl_.uuid_.Release();
}
inline void getAndLockServiceRequest::set_allocated_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uuid_.IsDefault()) {
          _impl_.uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcIServiceManager.getAndLockServiceRequest.uuid)
}

// string serviceURL = 4;
inline void getAndLockServiceRequest::clear_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.ClearToEmpty();
}
inline const std::string& getAndLockServiceRequest::serviceurl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getAndLockServiceRequest.serviceURL)
  return _internal_serviceurl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void getAndLockServiceRequest::set_serviceurl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getAndLockServiceRequest.serviceURL)
}
inline std::string* getAndLockServiceRequest::mutable_serviceurl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serviceurl();
  // @@protoc_insertion_point(field_mutable:grpcIServiceManager.getAndLockServiceRequest.serviceURL)
  return _s;
}
inline const std::string& getAndLockServiceRequest::_internal_serviceurl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serviceurl_.Get();
}
inline void getAndLockServiceRequest::_internal_set_serviceurl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(value, GetArena());
}
inline std::string* getAndLockServiceRequest::_internal_mutable_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serviceurl_.Mutable( GetArena());
}
inline std::string* getAndLockServiceRequest::release_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpcIServiceManager.getAndLockServiceRequest.serviceURL)
  return _impl_.serviceurl_.Release();
}
inline void getAndLockServiceRequest::set_allocated_serviceurl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serviceurl_.IsDefault()) {
          _impl_.serviceurl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcIServiceManager.getAndLockServiceRequest.serviceURL)
}

// -------------------------------------------------------------------

// getAndLockServiceResponse

// string serviceURL = 1;
inline void getAndLockServiceResponse::clear_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.ClearToEmpty();
}
inline const std::string& getAndLockServiceResponse::serviceurl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getAndLockServiceResponse.serviceURL)
  return _internal_serviceurl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void getAndLockServiceResponse::set_serviceurl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getAndLockServiceResponse.serviceURL)
}
inline std::string* getAndLockServiceResponse::mutable_serviceurl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serviceurl();
  // @@protoc_insertion_point(field_mutable:grpcIServiceManager.getAndLockServiceResponse.serviceURL)
  return _s;
}
inline const std::string& getAndLockServiceResponse::_internal_serviceurl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serviceurl_.Get();
}
inline void getAndLockServiceResponse::_internal_set_serviceurl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(value, GetArena());
}
inline std::string* getAndLockServiceResponse::_internal_mutable_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serviceurl_.Mutable( GetArena());
}
inline std::string* getAndLockServiceResponse::release_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpcIServiceManager.getAndLockServiceResponse.serviceURL)
  return _impl_.serviceurl_.Release();
}
inline void getAndLockServiceResponse::set_allocated_serviceurl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serviceurl_.IsDefault()) {
          _impl_.serviceurl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcIServiceManager.getAndLockServiceResponse.serviceURL)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void getAndLockServiceResponse::clear_xpcfgrpcreturnvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = 0;
}
inline ::int32_t getAndLockServiceResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.getAndLockServiceResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void getAndLockServiceResponse::set_xpcfgrpcreturnvalue(::int32_t value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.getAndLockServiceResponse.xpcfGrpcReturnValue)
}
inline ::int32_t getAndLockServiceResponse::_internal_xpcfgrpcreturnvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xpcfgrpcreturnvalue_;
}
inline void getAndLockServiceResponse::_internal_set_xpcfgrpcreturnvalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = value;
}

// -------------------------------------------------------------------

// unlockServiceRequest

// int32 grpcServerCompressionFormat = 1;
inline void unlockServiceRequest::clear_grpcservercompressionformat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = 0;
}
inline ::int32_t unlockServiceRequest::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.unlockServiceRequest.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void unlockServiceRequest::set_grpcservercompressionformat(::int32_t value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.unlockServiceRequest.grpcServerCompressionFormat)
}
inline ::int32_t unlockServiceRequest::_internal_grpcservercompressionformat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grpcservercompressionformat_;
}
inline void unlockServiceRequest::_internal_set_grpcservercompressionformat(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grpcservercompressionformat_ = value;
}

// sint32 serviceType = 2;
inline void unlockServiceRequest::clear_servicetype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = 0;
}
inline ::int32_t unlockServiceRequest::servicetype() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.unlockServiceRequest.serviceType)
  return _internal_servicetype();
}
inline void unlockServiceRequest::set_servicetype(::int32_t value) {
  _internal_set_servicetype(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.unlockServiceRequest.serviceType)
}
inline ::int32_t unlockServiceRequest::_internal_servicetype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.servicetype_;
}
inline void unlockServiceRequest::_internal_set_servicetype(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servicetype_ = value;
}

// string uuid = 3;
inline void unlockServiceRequest::clear_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.ClearToEmpty();
}
inline const std::string& unlockServiceRequest::uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.unlockServiceRequest.uuid)
  return _internal_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void unlockServiceRequest::set_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpcIServiceManager.unlockServiceRequest.uuid)
}
inline std::string* unlockServiceRequest::mutable_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uuid();
  // @@protoc_insertion_point(field_mutable:grpcIServiceManager.unlockServiceRequest.uuid)
  return _s;
}
inline const std::string& unlockServiceRequest::_internal_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uuid_.Get();
}
inline void unlockServiceRequest::_internal_set_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.Set(value, GetArena());
}
inline std::string* unlockServiceRequest::_internal_mutable_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uuid_.Mutable( GetArena());
}
inline std::string* unlockServiceRequest::release_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpcIServiceManager.unlockServiceRequest.uuid)
  return _impl_.uuid_.Release();
}
inline void unlockServiceRequest::set_allocated_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uuid_.IsDefault()) {
          _impl_.uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcIServiceManager.unlockServiceRequest.uuid)
}

// string serviceURL = 4;
inline void unlockServiceRequest::clear_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.ClearToEmpty();
}
inline const std::string& unlockServiceRequest::serviceurl() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.unlockServiceRequest.serviceURL)
  return _internal_serviceurl();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void unlockServiceRequest::set_serviceurl(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpcIServiceManager.unlockServiceRequest.serviceURL)
}
inline std::string* unlockServiceRequest::mutable_serviceurl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serviceurl();
  // @@protoc_insertion_point(field_mutable:grpcIServiceManager.unlockServiceRequest.serviceURL)
  return _s;
}
inline const std::string& unlockServiceRequest::_internal_serviceurl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serviceurl_.Get();
}
inline void unlockServiceRequest::_internal_set_serviceurl(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.Set(value, GetArena());
}
inline std::string* unlockServiceRequest::_internal_mutable_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serviceurl_.Mutable( GetArena());
}
inline std::string* unlockServiceRequest::release_serviceurl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpcIServiceManager.unlockServiceRequest.serviceURL)
  return _impl_.serviceurl_.Release();
}
inline void unlockServiceRequest::set_allocated_serviceurl(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serviceurl_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serviceurl_.IsDefault()) {
          _impl_.serviceurl_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcIServiceManager.unlockServiceRequest.serviceURL)
}

// -------------------------------------------------------------------

// unlockServiceResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void unlockServiceResponse::clear_xpcfgrpcreturnvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = 0;
}
inline ::int32_t unlockServiceResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIServiceManager.unlockServiceResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void unlockServiceResponse::set_xpcfgrpcreturnvalue(::int32_t value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIServiceManager.unlockServiceResponse.xpcfGrpcReturnValue)
}
inline ::int32_t unlockServiceResponse::_internal_xpcfgrpcreturnvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xpcfgrpcreturnvalue_;
}
inline void unlockServiceResponse::_internal_set_xpcfgrpcreturnvalue(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xpcfgrpcreturnvalue_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIServiceManager


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_grpcIServiceManagerService_2eproto_2epb_2eh
