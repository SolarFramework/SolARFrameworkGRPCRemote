// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIPointCloudExporterService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcIPointCloudExporterService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcIPointCloudExporterService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcIPointCloudExporterService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcIPointCloudExporterService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIPointCloudExporterService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcIPointCloudExporterService_2eproto_metadata_getter(int index);
namespace grpcIPointCloudExporter {
class exportPointCloudRequest;
struct exportPointCloudRequestDefaultTypeInternal;
extern exportPointCloudRequestDefaultTypeInternal _exportPointCloudRequest_default_instance_;
class exportPointCloudResponse;
struct exportPointCloudResponseDefaultTypeInternal;
extern exportPointCloudResponseDefaultTypeInternal _exportPointCloudResponse_default_instance_;
}  // namespace grpcIPointCloudExporter
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcIPointCloudExporter::exportPointCloudRequest* Arena::CreateMaybeMessage<::grpcIPointCloudExporter::exportPointCloudRequest>(Arena*);
template<> ::grpcIPointCloudExporter::exportPointCloudResponse* Arena::CreateMaybeMessage<::grpcIPointCloudExporter::exportPointCloudResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcIPointCloudExporter {

// ===================================================================

class exportPointCloudRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIPointCloudExporter.exportPointCloudRequest) */ {
 public:
  inline exportPointCloudRequest() : exportPointCloudRequest(nullptr) {}
  virtual ~exportPointCloudRequest();
  explicit constexpr exportPointCloudRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  exportPointCloudRequest(const exportPointCloudRequest& from);
  exportPointCloudRequest(exportPointCloudRequest&& from) noexcept
    : exportPointCloudRequest() {
    *this = ::std::move(from);
  }

  inline exportPointCloudRequest& operator=(const exportPointCloudRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline exportPointCloudRequest& operator=(exportPointCloudRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const exportPointCloudRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const exportPointCloudRequest* internal_default_instance() {
    return reinterpret_cast<const exportPointCloudRequest*>(
               &_exportPointCloudRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(exportPointCloudRequest& a, exportPointCloudRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(exportPointCloudRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(exportPointCloudRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline exportPointCloudRequest* New() const final {
    return CreateMaybeMessage<exportPointCloudRequest>(nullptr);
  }

  exportPointCloudRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<exportPointCloudRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const exportPointCloudRequest& from);
  void MergeFrom(const exportPointCloudRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(exportPointCloudRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIPointCloudExporter.exportPointCloudRequest";
  }
  protected:
  explicit exportPointCloudRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIPointCloudExporterService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilepathFieldNumber = 2,
    kPointCloudFieldNumber = 3,
    kGrpcServerCompressionFormatFieldNumber = 1,
  };
  // string filepath = 2;
  void clear_filepath();
  const std::string& filepath() const;
  void set_filepath(const std::string& value);
  void set_filepath(std::string&& value);
  void set_filepath(const char* value);
  void set_filepath(const char* value, size_t size);
  std::string* mutable_filepath();
  std::string* release_filepath();
  void set_allocated_filepath(std::string* filepath);
  private:
  const std::string& _internal_filepath() const;
  void _internal_set_filepath(const std::string& value);
  std::string* _internal_mutable_filepath();
  public:

  // bytes pointCloud = 3;
  void clear_pointcloud();
  const std::string& pointcloud() const;
  void set_pointcloud(const std::string& value);
  void set_pointcloud(std::string&& value);
  void set_pointcloud(const char* value);
  void set_pointcloud(const void* value, size_t size);
  std::string* mutable_pointcloud();
  std::string* release_pointcloud();
  void set_allocated_pointcloud(std::string* pointcloud);
  private:
  const std::string& _internal_pointcloud() const;
  void _internal_set_pointcloud(const std::string& value);
  std::string* _internal_mutable_pointcloud();
  public:

  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat();
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIPointCloudExporter.exportPointCloudRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filepath_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pointcloud_;
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIPointCloudExporterService_2eproto;
};
// -------------------------------------------------------------------

class exportPointCloudResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIPointCloudExporter.exportPointCloudResponse) */ {
 public:
  inline exportPointCloudResponse() : exportPointCloudResponse(nullptr) {}
  virtual ~exportPointCloudResponse();
  explicit constexpr exportPointCloudResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  exportPointCloudResponse(const exportPointCloudResponse& from);
  exportPointCloudResponse(exportPointCloudResponse&& from) noexcept
    : exportPointCloudResponse() {
    *this = ::std::move(from);
  }

  inline exportPointCloudResponse& operator=(const exportPointCloudResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline exportPointCloudResponse& operator=(exportPointCloudResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const exportPointCloudResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const exportPointCloudResponse* internal_default_instance() {
    return reinterpret_cast<const exportPointCloudResponse*>(
               &_exportPointCloudResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(exportPointCloudResponse& a, exportPointCloudResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(exportPointCloudResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(exportPointCloudResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline exportPointCloudResponse* New() const final {
    return CreateMaybeMessage<exportPointCloudResponse>(nullptr);
  }

  exportPointCloudResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<exportPointCloudResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const exportPointCloudResponse& from);
  void MergeFrom(const exportPointCloudResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(exportPointCloudResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIPointCloudExporter.exportPointCloudResponse";
  }
  protected:
  explicit exportPointCloudResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIPointCloudExporterService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIPointCloudExporter.exportPointCloudResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIPointCloudExporterService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// exportPointCloudRequest

// int32 grpcServerCompressionFormat = 1;
inline void exportPointCloudRequest::clear_grpcservercompressionformat() {
  grpcservercompressionformat_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 exportPointCloudRequest::_internal_grpcservercompressionformat() const {
  return grpcservercompressionformat_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 exportPointCloudRequest::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcIPointCloudExporter.exportPointCloudRequest.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void exportPointCloudRequest::_internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  grpcservercompressionformat_ = value;
}
inline void exportPointCloudRequest::set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcIPointCloudExporter.exportPointCloudRequest.grpcServerCompressionFormat)
}

// string filepath = 2;
inline void exportPointCloudRequest::clear_filepath() {
  filepath_.ClearToEmpty();
}
inline const std::string& exportPointCloudRequest::filepath() const {
  // @@protoc_insertion_point(field_get:grpcIPointCloudExporter.exportPointCloudRequest.filepath)
  return _internal_filepath();
}
inline void exportPointCloudRequest::set_filepath(const std::string& value) {
  _internal_set_filepath(value);
  // @@protoc_insertion_point(field_set:grpcIPointCloudExporter.exportPointCloudRequest.filepath)
}
inline std::string* exportPointCloudRequest::mutable_filepath() {
  // @@protoc_insertion_point(field_mutable:grpcIPointCloudExporter.exportPointCloudRequest.filepath)
  return _internal_mutable_filepath();
}
inline const std::string& exportPointCloudRequest::_internal_filepath() const {
  return filepath_.Get();
}
inline void exportPointCloudRequest::_internal_set_filepath(const std::string& value) {
  
  filepath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void exportPointCloudRequest::set_filepath(std::string&& value) {
  
  filepath_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIPointCloudExporter.exportPointCloudRequest.filepath)
}
inline void exportPointCloudRequest::set_filepath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filepath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIPointCloudExporter.exportPointCloudRequest.filepath)
}
inline void exportPointCloudRequest::set_filepath(const char* value,
    size_t size) {
  
  filepath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIPointCloudExporter.exportPointCloudRequest.filepath)
}
inline std::string* exportPointCloudRequest::_internal_mutable_filepath() {
  
  return filepath_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* exportPointCloudRequest::release_filepath() {
  // @@protoc_insertion_point(field_release:grpcIPointCloudExporter.exportPointCloudRequest.filepath)
  return filepath_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void exportPointCloudRequest::set_allocated_filepath(std::string* filepath) {
  if (filepath != nullptr) {
    
  } else {
    
  }
  filepath_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filepath,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIPointCloudExporter.exportPointCloudRequest.filepath)
}

// bytes pointCloud = 3;
inline void exportPointCloudRequest::clear_pointcloud() {
  pointcloud_.ClearToEmpty();
}
inline const std::string& exportPointCloudRequest::pointcloud() const {
  // @@protoc_insertion_point(field_get:grpcIPointCloudExporter.exportPointCloudRequest.pointCloud)
  return _internal_pointcloud();
}
inline void exportPointCloudRequest::set_pointcloud(const std::string& value) {
  _internal_set_pointcloud(value);
  // @@protoc_insertion_point(field_set:grpcIPointCloudExporter.exportPointCloudRequest.pointCloud)
}
inline std::string* exportPointCloudRequest::mutable_pointcloud() {
  // @@protoc_insertion_point(field_mutable:grpcIPointCloudExporter.exportPointCloudRequest.pointCloud)
  return _internal_mutable_pointcloud();
}
inline const std::string& exportPointCloudRequest::_internal_pointcloud() const {
  return pointcloud_.Get();
}
inline void exportPointCloudRequest::_internal_set_pointcloud(const std::string& value) {
  
  pointcloud_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void exportPointCloudRequest::set_pointcloud(std::string&& value) {
  
  pointcloud_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIPointCloudExporter.exportPointCloudRequest.pointCloud)
}
inline void exportPointCloudRequest::set_pointcloud(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pointcloud_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIPointCloudExporter.exportPointCloudRequest.pointCloud)
}
inline void exportPointCloudRequest::set_pointcloud(const void* value,
    size_t size) {
  
  pointcloud_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIPointCloudExporter.exportPointCloudRequest.pointCloud)
}
inline std::string* exportPointCloudRequest::_internal_mutable_pointcloud() {
  
  return pointcloud_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* exportPointCloudRequest::release_pointcloud() {
  // @@protoc_insertion_point(field_release:grpcIPointCloudExporter.exportPointCloudRequest.pointCloud)
  return pointcloud_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void exportPointCloudRequest::set_allocated_pointcloud(std::string* pointcloud) {
  if (pointcloud != nullptr) {
    
  } else {
    
  }
  pointcloud_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pointcloud,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIPointCloudExporter.exportPointCloudRequest.pointCloud)
}

// -------------------------------------------------------------------

// exportPointCloudResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void exportPointCloudResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 exportPointCloudResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 exportPointCloudResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIPointCloudExporter.exportPointCloudResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void exportPointCloudResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void exportPointCloudResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIPointCloudExporter.exportPointCloudResponse.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcIPointCloudExporter

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcIPointCloudExporterService_2eproto
