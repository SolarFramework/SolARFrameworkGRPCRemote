// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIBundlerService.proto

#include "grpcIBundlerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIBundler {
constexpr setMapRequest::setMapRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : map_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setMapRequestDefaultTypeInternal {
  constexpr setMapRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setMapRequestDefaultTypeInternal() {}
  union {
    setMapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setMapRequestDefaultTypeInternal _setMapRequest_default_instance_;
constexpr setMapResponse::setMapResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct setMapResponseDefaultTypeInternal {
  constexpr setMapResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setMapResponseDefaultTypeInternal() {}
  union {
    setMapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setMapResponseDefaultTypeInternal _setMapResponse_default_instance_;
constexpr bundleAdjustmentRequest::bundleAdjustmentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : selectkeyframes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , k_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , d_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct bundleAdjustmentRequestDefaultTypeInternal {
  constexpr bundleAdjustmentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~bundleAdjustmentRequestDefaultTypeInternal() {}
  union {
    bundleAdjustmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT bundleAdjustmentRequestDefaultTypeInternal _bundleAdjustmentRequest_default_instance_;
constexpr bundleAdjustmentResponse::bundleAdjustmentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : k_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , d_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct bundleAdjustmentResponseDefaultTypeInternal {
  constexpr bundleAdjustmentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~bundleAdjustmentResponseDefaultTypeInternal() {}
  union {
    bundleAdjustmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT bundleAdjustmentResponseDefaultTypeInternal _bundleAdjustmentResponse_default_instance_;
constexpr optimizeSim3Request::optimizeSim3Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframe1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , keyframe2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pts3d1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pts3d2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , k1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , k2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pose_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct optimizeSim3RequestDefaultTypeInternal {
  constexpr optimizeSim3RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~optimizeSim3RequestDefaultTypeInternal() {}
  union {
    optimizeSim3Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT optimizeSim3RequestDefaultTypeInternal _optimizeSim3Request_default_instance_;
constexpr optimizeSim3Response::optimizeSim3Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : k1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , k2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pose_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct optimizeSim3ResponseDefaultTypeInternal {
  constexpr optimizeSim3ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~optimizeSim3ResponseDefaultTypeInternal() {}
  union {
    optimizeSim3Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT optimizeSim3ResponseDefaultTypeInternal _optimizeSim3Response_default_instance_;
}  // namespace grpcIBundler
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIBundlerService_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIBundlerService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIBundlerService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIBundlerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::setMapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::setMapRequest, map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::setMapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::setMapResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentRequest, selectkeyframes_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentRequest, k_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentRequest, d_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentResponse, k_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentResponse, d_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Request, keyframe1_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Request, keyframe2_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Request, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Request, pts3d1_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Request, pts3d2_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Request, k1_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Request, k2_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Request, pose_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Response, k1_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Response, k2_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Response, pose_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::optimizeSim3Response, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIBundler::setMapRequest)},
  { 6, -1, sizeof(::grpcIBundler::setMapResponse)},
  { 12, -1, sizeof(::grpcIBundler::bundleAdjustmentRequest)},
  { 20, -1, sizeof(::grpcIBundler::bundleAdjustmentResponse)},
  { 28, -1, sizeof(::grpcIBundler::optimizeSim3Request)},
  { 41, -1, sizeof(::grpcIBundler::optimizeSim3Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_setMapRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_setMapResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_bundleAdjustmentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_bundleAdjustmentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_optimizeSim3Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_optimizeSim3Response_default_instance_),
};

const char descriptor_table_protodef_grpcIBundlerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031grpcIBundlerService.proto\022\014grpcIBundle"
  "r\032\033google/protobuf/empty.proto\"\034\n\rsetMap"
  "Request\022\013\n\003map\030\001 \001(\014\"-\n\016setMapResponse\022\033"
  "\n\023xpcfGrpcReturnValue\030\001 \001(\021\"H\n\027bundleAdj"
  "ustmentRequest\022\027\n\017selectKeyframes\030\001 \001(\014\022"
  "\t\n\001K\030\002 \001(\014\022\t\n\001D\030\003 \001(\014\"M\n\030bundleAdjustmen"
  "tResponse\022\t\n\001K\030\001 \001(\014\022\t\n\001D\030\002 \001(\014\022\033\n\023xpcfG"
  "rpcReturnValue\030\003 \001(\001\"\222\001\n\023optimizeSim3Req"
  "uest\022\021\n\tkeyframe1\030\001 \001(\014\022\021\n\tkeyframe2\030\002 \001"
  "(\014\022\017\n\007matches\030\003 \001(\014\022\016\n\006pts3D1\030\004 \001(\014\022\016\n\006p"
  "ts3D2\030\005 \001(\014\022\n\n\002K1\030\006 \001(\014\022\n\n\002K2\030\007 \001(\014\022\014\n\004p"
  "ose\030\010 \001(\014\"Y\n\024optimizeSim3Response\022\n\n\002K1\030"
  "\001 \001(\014\022\n\n\002K2\030\002 \001(\014\022\014\n\004pose\030\003 \001(\014\022\033\n\023xpcfG"
  "rpcReturnValue\030\004 \001(\0012\232\002\n\023grpcIBundlerSer"
  "vice\022E\n\006setMap\022\033.grpcIBundler.setMapRequ"
  "est\032\034.grpcIBundler.setMapResponse\"\000\022c\n\020b"
  "undleAdjustment\022%.grpcIBundler.bundleAdj"
  "ustmentRequest\032&.grpcIBundler.bundleAdju"
  "stmentResponse\"\000\022W\n\014optimizeSim3\022!.grpcI"
  "Bundler.optimizeSim3Request\032\".grpcIBundl"
  "er.optimizeSim3Response\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIBundlerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIBundlerService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIBundlerService_2eproto = {
  false, false, 833, descriptor_table_protodef_grpcIBundlerService_2eproto, "grpcIBundlerService.proto", 
  &descriptor_table_grpcIBundlerService_2eproto_once, descriptor_table_grpcIBundlerService_2eproto_deps, 1, 6,
  schemas, file_default_instances, TableStruct_grpcIBundlerService_2eproto::offsets,
  file_level_metadata_grpcIBundlerService_2eproto, file_level_enum_descriptors_grpcIBundlerService_2eproto, file_level_service_descriptors_grpcIBundlerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_grpcIBundlerService_2eproto_getter() {
  return &descriptor_table_grpcIBundlerService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIBundlerService_2eproto(&descriptor_table_grpcIBundlerService_2eproto);
namespace grpcIBundler {

// ===================================================================

class setMapRequest::_Internal {
 public:
};

setMapRequest::setMapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.setMapRequest)
}
setMapRequest::setMapRequest(const setMapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_map().empty()) {
    map_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_map(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.setMapRequest)
}

inline void setMapRequest::SharedCtor() {
map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setMapRequest::~setMapRequest() {
  // @@protoc_insertion_point(destructor:grpcIBundler.setMapRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void setMapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  map_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setMapRequest::ArenaDtor(void* object) {
  setMapRequest* _this = reinterpret_cast< setMapRequest* >(object);
  (void)_this;
}
void setMapRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setMapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setMapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.setMapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_map();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setMapRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.setMapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes map = 1;
  if (!this->_internal_map().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_map(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.setMapRequest)
  return target;
}

size_t setMapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.setMapRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes map = 1;
  if (!this->_internal_map().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setMapRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    setMapRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setMapRequest::GetClassData() const { return &_class_data_; }

void setMapRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<setMapRequest *>(to)->MergeFrom(
      static_cast<const setMapRequest &>(from));
}


void setMapRequest::MergeFrom(const setMapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.setMapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_map().empty()) {
    _internal_set_map(from._internal_map());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setMapRequest::CopyFrom(const setMapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.setMapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapRequest::IsInitialized() const {
  return true;
}

void setMapRequest::InternalSwap(setMapRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &map_, GetArenaForAllocation(),
      &other->map_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIBundlerService_2eproto_getter, &descriptor_table_grpcIBundlerService_2eproto_once,
      file_level_metadata_grpcIBundlerService_2eproto[0]);
}

// ===================================================================

class setMapResponse::_Internal {
 public:
};

setMapResponse::setMapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.setMapResponse)
}
setMapResponse::setMapResponse(const setMapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.setMapResponse)
}

inline void setMapResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

setMapResponse::~setMapResponse() {
  // @@protoc_insertion_point(destructor:grpcIBundler.setMapResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void setMapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void setMapResponse::ArenaDtor(void* object) {
  setMapResponse* _this = reinterpret_cast< setMapResponse* >(object);
  (void)_this;
}
void setMapResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setMapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setMapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.setMapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setMapResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.setMapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.setMapResponse)
  return target;
}

size_t setMapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.setMapResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setMapResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    setMapResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setMapResponse::GetClassData() const { return &_class_data_; }

void setMapResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<setMapResponse *>(to)->MergeFrom(
      static_cast<const setMapResponse &>(from));
}


void setMapResponse::MergeFrom(const setMapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.setMapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setMapResponse::CopyFrom(const setMapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.setMapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapResponse::IsInitialized() const {
  return true;
}

void setMapResponse::InternalSwap(setMapResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIBundlerService_2eproto_getter, &descriptor_table_grpcIBundlerService_2eproto_once,
      file_level_metadata_grpcIBundlerService_2eproto[1]);
}

// ===================================================================

class bundleAdjustmentRequest::_Internal {
 public:
};

bundleAdjustmentRequest::bundleAdjustmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.bundleAdjustmentRequest)
}
bundleAdjustmentRequest::bundleAdjustmentRequest(const bundleAdjustmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  selectkeyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_selectkeyframes().empty()) {
    selectkeyframes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_selectkeyframes(), 
      GetArenaForAllocation());
  }
  k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_k().empty()) {
    k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k(), 
      GetArenaForAllocation());
  }
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.bundleAdjustmentRequest)
}

inline void bundleAdjustmentRequest::SharedCtor() {
selectkeyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

bundleAdjustmentRequest::~bundleAdjustmentRequest() {
  // @@protoc_insertion_point(destructor:grpcIBundler.bundleAdjustmentRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void bundleAdjustmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  selectkeyframes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  k_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void bundleAdjustmentRequest::ArenaDtor(void* object) {
  bundleAdjustmentRequest* _this = reinterpret_cast< bundleAdjustmentRequest* >(object);
  (void)_this;
}
void bundleAdjustmentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void bundleAdjustmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void bundleAdjustmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.bundleAdjustmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selectkeyframes_.ClearToEmpty();
  k_.ClearToEmpty();
  d_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* bundleAdjustmentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes selectKeyframes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_selectkeyframes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes K = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_k();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes D = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* bundleAdjustmentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.bundleAdjustmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes selectKeyframes = 1;
  if (!this->_internal_selectkeyframes().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_selectkeyframes(), target);
  }

  // bytes K = 2;
  if (!this->_internal_k().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_k(), target);
  }

  // bytes D = 3;
  if (!this->_internal_d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.bundleAdjustmentRequest)
  return target;
}

size_t bundleAdjustmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.bundleAdjustmentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes selectKeyframes = 1;
  if (!this->_internal_selectkeyframes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_selectkeyframes());
  }

  // bytes K = 2;
  if (!this->_internal_k().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_k());
  }

  // bytes D = 3;
  if (!this->_internal_d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_d());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData bundleAdjustmentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    bundleAdjustmentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*bundleAdjustmentRequest::GetClassData() const { return &_class_data_; }

void bundleAdjustmentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<bundleAdjustmentRequest *>(to)->MergeFrom(
      static_cast<const bundleAdjustmentRequest &>(from));
}


void bundleAdjustmentRequest::MergeFrom(const bundleAdjustmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.bundleAdjustmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_selectkeyframes().empty()) {
    _internal_set_selectkeyframes(from._internal_selectkeyframes());
  }
  if (!from._internal_k().empty()) {
    _internal_set_k(from._internal_k());
  }
  if (!from._internal_d().empty()) {
    _internal_set_d(from._internal_d());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void bundleAdjustmentRequest::CopyFrom(const bundleAdjustmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.bundleAdjustmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bundleAdjustmentRequest::IsInitialized() const {
  return true;
}

void bundleAdjustmentRequest::InternalSwap(bundleAdjustmentRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &selectkeyframes_, GetArenaForAllocation(),
      &other->selectkeyframes_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &k_, GetArenaForAllocation(),
      &other->k_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &d_, GetArenaForAllocation(),
      &other->d_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata bundleAdjustmentRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIBundlerService_2eproto_getter, &descriptor_table_grpcIBundlerService_2eproto_once,
      file_level_metadata_grpcIBundlerService_2eproto[2]);
}

// ===================================================================

class bundleAdjustmentResponse::_Internal {
 public:
};

bundleAdjustmentResponse::bundleAdjustmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.bundleAdjustmentResponse)
}
bundleAdjustmentResponse::bundleAdjustmentResponse(const bundleAdjustmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_k().empty()) {
    k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k(), 
      GetArenaForAllocation());
  }
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.bundleAdjustmentResponse)
}

inline void bundleAdjustmentResponse::SharedCtor() {
k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

bundleAdjustmentResponse::~bundleAdjustmentResponse() {
  // @@protoc_insertion_point(destructor:grpcIBundler.bundleAdjustmentResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void bundleAdjustmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  k_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void bundleAdjustmentResponse::ArenaDtor(void* object) {
  bundleAdjustmentResponse* _this = reinterpret_cast< bundleAdjustmentResponse* >(object);
  (void)_this;
}
void bundleAdjustmentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void bundleAdjustmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void bundleAdjustmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.bundleAdjustmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.ClearToEmpty();
  d_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* bundleAdjustmentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes K = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_k();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes D = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double xpcfGrpcReturnValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* bundleAdjustmentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.bundleAdjustmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes K = 1;
  if (!this->_internal_k().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_k(), target);
  }

  // bytes D = 2;
  if (!this->_internal_d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_d(), target);
  }

  // double xpcfGrpcReturnValue = 3;
  if (!(this->_internal_xpcfgrpcreturnvalue() <= 0 && this->_internal_xpcfgrpcreturnvalue() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.bundleAdjustmentResponse)
  return target;
}

size_t bundleAdjustmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.bundleAdjustmentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes K = 1;
  if (!this->_internal_k().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_k());
  }

  // bytes D = 2;
  if (!this->_internal_d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_d());
  }

  // double xpcfGrpcReturnValue = 3;
  if (!(this->_internal_xpcfgrpcreturnvalue() <= 0 && this->_internal_xpcfgrpcreturnvalue() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData bundleAdjustmentResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    bundleAdjustmentResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*bundleAdjustmentResponse::GetClassData() const { return &_class_data_; }

void bundleAdjustmentResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<bundleAdjustmentResponse *>(to)->MergeFrom(
      static_cast<const bundleAdjustmentResponse &>(from));
}


void bundleAdjustmentResponse::MergeFrom(const bundleAdjustmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.bundleAdjustmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_k().empty()) {
    _internal_set_k(from._internal_k());
  }
  if (!from._internal_d().empty()) {
    _internal_set_d(from._internal_d());
  }
  if (!(from._internal_xpcfgrpcreturnvalue() <= 0 && from._internal_xpcfgrpcreturnvalue() >= 0)) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void bundleAdjustmentResponse::CopyFrom(const bundleAdjustmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.bundleAdjustmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bundleAdjustmentResponse::IsInitialized() const {
  return true;
}

void bundleAdjustmentResponse::InternalSwap(bundleAdjustmentResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &k_, GetArenaForAllocation(),
      &other->k_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &d_, GetArenaForAllocation(),
      &other->d_, other->GetArenaForAllocation()
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata bundleAdjustmentResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIBundlerService_2eproto_getter, &descriptor_table_grpcIBundlerService_2eproto_once,
      file_level_metadata_grpcIBundlerService_2eproto[3]);
}

// ===================================================================

class optimizeSim3Request::_Internal {
 public:
};

optimizeSim3Request::optimizeSim3Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.optimizeSim3Request)
}
optimizeSim3Request::optimizeSim3Request(const optimizeSim3Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframe1().empty()) {
    keyframe1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframe1(), 
      GetArenaForAllocation());
  }
  keyframe2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframe2().empty()) {
    keyframe2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframe2(), 
      GetArenaForAllocation());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArenaForAllocation());
  }
  pts3d1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pts3d1().empty()) {
    pts3d1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pts3d1(), 
      GetArenaForAllocation());
  }
  pts3d2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pts3d2().empty()) {
    pts3d2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pts3d2(), 
      GetArenaForAllocation());
  }
  k1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_k1().empty()) {
    k1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k1(), 
      GetArenaForAllocation());
  }
  k2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_k2().empty()) {
    k2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k2(), 
      GetArenaForAllocation());
  }
  pose_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pose().empty()) {
    pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pose(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.optimizeSim3Request)
}

inline void optimizeSim3Request::SharedCtor() {
keyframe1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
keyframe2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pts3d1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pts3d2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
k1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
k2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pose_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

optimizeSim3Request::~optimizeSim3Request() {
  // @@protoc_insertion_point(destructor:grpcIBundler.optimizeSim3Request)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void optimizeSim3Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  keyframe1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keyframe2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pts3d1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pts3d2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  k1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  k2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pose_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void optimizeSim3Request::ArenaDtor(void* object) {
  optimizeSim3Request* _this = reinterpret_cast< optimizeSim3Request* >(object);
  (void)_this;
}
void optimizeSim3Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void optimizeSim3Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void optimizeSim3Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.optimizeSim3Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe1_.ClearToEmpty();
  keyframe2_.ClearToEmpty();
  matches_.ClearToEmpty();
  pts3d1_.ClearToEmpty();
  pts3d2_.ClearToEmpty();
  k1_.ClearToEmpty();
  k2_.ClearToEmpty();
  pose_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* optimizeSim3Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes keyframe1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_keyframe1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframe2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyframe2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes matches = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pts3D1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_pts3d1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pts3D2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_pts3d2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes K1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_k1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes K2 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_k2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pose = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_pose();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* optimizeSim3Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.optimizeSim3Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes keyframe1 = 1;
  if (!this->_internal_keyframe1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_keyframe1(), target);
  }

  // bytes keyframe2 = 2;
  if (!this->_internal_keyframe2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe2(), target);
  }

  // bytes matches = 3;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_matches(), target);
  }

  // bytes pts3D1 = 4;
  if (!this->_internal_pts3d1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_pts3d1(), target);
  }

  // bytes pts3D2 = 5;
  if (!this->_internal_pts3d2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_pts3d2(), target);
  }

  // bytes K1 = 6;
  if (!this->_internal_k1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_k1(), target);
  }

  // bytes K2 = 7;
  if (!this->_internal_k2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_k2(), target);
  }

  // bytes pose = 8;
  if (!this->_internal_pose().empty()) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_pose(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.optimizeSim3Request)
  return target;
}

size_t optimizeSim3Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.optimizeSim3Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe1 = 1;
  if (!this->_internal_keyframe1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe1());
  }

  // bytes keyframe2 = 2;
  if (!this->_internal_keyframe2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe2());
  }

  // bytes matches = 3;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes pts3D1 = 4;
  if (!this->_internal_pts3d1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pts3d1());
  }

  // bytes pts3D2 = 5;
  if (!this->_internal_pts3d2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pts3d2());
  }

  // bytes K1 = 6;
  if (!this->_internal_k1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_k1());
  }

  // bytes K2 = 7;
  if (!this->_internal_k2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_k2());
  }

  // bytes pose = 8;
  if (!this->_internal_pose().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pose());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData optimizeSim3Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    optimizeSim3Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*optimizeSim3Request::GetClassData() const { return &_class_data_; }

void optimizeSim3Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<optimizeSim3Request *>(to)->MergeFrom(
      static_cast<const optimizeSim3Request &>(from));
}


void optimizeSim3Request::MergeFrom(const optimizeSim3Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.optimizeSim3Request)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keyframe1().empty()) {
    _internal_set_keyframe1(from._internal_keyframe1());
  }
  if (!from._internal_keyframe2().empty()) {
    _internal_set_keyframe2(from._internal_keyframe2());
  }
  if (!from._internal_matches().empty()) {
    _internal_set_matches(from._internal_matches());
  }
  if (!from._internal_pts3d1().empty()) {
    _internal_set_pts3d1(from._internal_pts3d1());
  }
  if (!from._internal_pts3d2().empty()) {
    _internal_set_pts3d2(from._internal_pts3d2());
  }
  if (!from._internal_k1().empty()) {
    _internal_set_k1(from._internal_k1());
  }
  if (!from._internal_k2().empty()) {
    _internal_set_k2(from._internal_k2());
  }
  if (!from._internal_pose().empty()) {
    _internal_set_pose(from._internal_pose());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void optimizeSim3Request::CopyFrom(const optimizeSim3Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.optimizeSim3Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool optimizeSim3Request::IsInitialized() const {
  return true;
}

void optimizeSim3Request::InternalSwap(optimizeSim3Request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &keyframe1_, GetArenaForAllocation(),
      &other->keyframe1_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &keyframe2_, GetArenaForAllocation(),
      &other->keyframe2_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &matches_, GetArenaForAllocation(),
      &other->matches_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pts3d1_, GetArenaForAllocation(),
      &other->pts3d1_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pts3d2_, GetArenaForAllocation(),
      &other->pts3d2_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &k1_, GetArenaForAllocation(),
      &other->k1_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &k2_, GetArenaForAllocation(),
      &other->k2_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pose_, GetArenaForAllocation(),
      &other->pose_, other->GetArenaForAllocation()
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata optimizeSim3Request::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIBundlerService_2eproto_getter, &descriptor_table_grpcIBundlerService_2eproto_once,
      file_level_metadata_grpcIBundlerService_2eproto[4]);
}

// ===================================================================

class optimizeSim3Response::_Internal {
 public:
};

optimizeSim3Response::optimizeSim3Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.optimizeSim3Response)
}
optimizeSim3Response::optimizeSim3Response(const optimizeSim3Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  k1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_k1().empty()) {
    k1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k1(), 
      GetArenaForAllocation());
  }
  k2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_k2().empty()) {
    k2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k2(), 
      GetArenaForAllocation());
  }
  pose_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pose().empty()) {
    pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pose(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.optimizeSim3Response)
}

inline void optimizeSim3Response::SharedCtor() {
k1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
k2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pose_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

optimizeSim3Response::~optimizeSim3Response() {
  // @@protoc_insertion_point(destructor:grpcIBundler.optimizeSim3Response)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void optimizeSim3Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  k1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  k2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pose_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void optimizeSim3Response::ArenaDtor(void* object) {
  optimizeSim3Response* _this = reinterpret_cast< optimizeSim3Response* >(object);
  (void)_this;
}
void optimizeSim3Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void optimizeSim3Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void optimizeSim3Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.optimizeSim3Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k1_.ClearToEmpty();
  k2_.ClearToEmpty();
  pose_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* optimizeSim3Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes K1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_k1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes K2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_k2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pose = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_pose();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double xpcfGrpcReturnValue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* optimizeSim3Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.optimizeSim3Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes K1 = 1;
  if (!this->_internal_k1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_k1(), target);
  }

  // bytes K2 = 2;
  if (!this->_internal_k2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_k2(), target);
  }

  // bytes pose = 3;
  if (!this->_internal_pose().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_pose(), target);
  }

  // double xpcfGrpcReturnValue = 4;
  if (!(this->_internal_xpcfgrpcreturnvalue() <= 0 && this->_internal_xpcfgrpcreturnvalue() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.optimizeSim3Response)
  return target;
}

size_t optimizeSim3Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.optimizeSim3Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes K1 = 1;
  if (!this->_internal_k1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_k1());
  }

  // bytes K2 = 2;
  if (!this->_internal_k2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_k2());
  }

  // bytes pose = 3;
  if (!this->_internal_pose().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pose());
  }

  // double xpcfGrpcReturnValue = 4;
  if (!(this->_internal_xpcfgrpcreturnvalue() <= 0 && this->_internal_xpcfgrpcreturnvalue() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData optimizeSim3Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    optimizeSim3Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*optimizeSim3Response::GetClassData() const { return &_class_data_; }

void optimizeSim3Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<optimizeSim3Response *>(to)->MergeFrom(
      static_cast<const optimizeSim3Response &>(from));
}


void optimizeSim3Response::MergeFrom(const optimizeSim3Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.optimizeSim3Response)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_k1().empty()) {
    _internal_set_k1(from._internal_k1());
  }
  if (!from._internal_k2().empty()) {
    _internal_set_k2(from._internal_k2());
  }
  if (!from._internal_pose().empty()) {
    _internal_set_pose(from._internal_pose());
  }
  if (!(from._internal_xpcfgrpcreturnvalue() <= 0 && from._internal_xpcfgrpcreturnvalue() >= 0)) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void optimizeSim3Response::CopyFrom(const optimizeSim3Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.optimizeSim3Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool optimizeSim3Response::IsInitialized() const {
  return true;
}

void optimizeSim3Response::InternalSwap(optimizeSim3Response* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &k1_, GetArenaForAllocation(),
      &other->k1_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &k2_, GetArenaForAllocation(),
      &other->k2_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pose_, GetArenaForAllocation(),
      &other->pose_, other->GetArenaForAllocation()
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata optimizeSim3Response::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_grpcIBundlerService_2eproto_getter, &descriptor_table_grpcIBundlerService_2eproto_once,
      file_level_metadata_grpcIBundlerService_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIBundler
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIBundler::setMapRequest* Arena::CreateMaybeMessage< ::grpcIBundler::setMapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::setMapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIBundler::setMapResponse* Arena::CreateMaybeMessage< ::grpcIBundler::setMapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::setMapResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIBundler::bundleAdjustmentRequest* Arena::CreateMaybeMessage< ::grpcIBundler::bundleAdjustmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::bundleAdjustmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIBundler::bundleAdjustmentResponse* Arena::CreateMaybeMessage< ::grpcIBundler::bundleAdjustmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::bundleAdjustmentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIBundler::optimizeSim3Request* Arena::CreateMaybeMessage< ::grpcIBundler::optimizeSim3Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::optimizeSim3Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIBundler::optimizeSim3Response* Arena::CreateMaybeMessage< ::grpcIBundler::optimizeSim3Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::optimizeSim3Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
