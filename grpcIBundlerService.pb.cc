// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIBundlerService.proto

#include "grpcIBundlerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIBundler {
constexpr setMapperRequest::setMapperRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : map_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setMapperRequestDefaultTypeInternal {
  constexpr setMapperRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setMapperRequestDefaultTypeInternal() {}
  union {
    setMapperRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setMapperRequestDefaultTypeInternal _setMapperRequest_default_instance_;
constexpr setMapperResponse::setMapperResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct setMapperResponseDefaultTypeInternal {
  constexpr setMapperResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setMapperResponseDefaultTypeInternal() {}
  union {
    setMapperResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setMapperResponseDefaultTypeInternal _setMapperResponse_default_instance_;
constexpr bundleAdjustmentRequest::bundleAdjustmentRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : selectkeyframes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , k_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , d_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct bundleAdjustmentRequestDefaultTypeInternal {
  constexpr bundleAdjustmentRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~bundleAdjustmentRequestDefaultTypeInternal() {}
  union {
    bundleAdjustmentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT bundleAdjustmentRequestDefaultTypeInternal _bundleAdjustmentRequest_default_instance_;
constexpr bundleAdjustmentResponse::bundleAdjustmentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : k_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , d_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct bundleAdjustmentResponseDefaultTypeInternal {
  constexpr bundleAdjustmentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~bundleAdjustmentResponseDefaultTypeInternal() {}
  union {
    bundleAdjustmentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT bundleAdjustmentResponseDefaultTypeInternal _bundleAdjustmentResponse_default_instance_;
}  // namespace grpcIBundler
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIBundlerService_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIBundlerService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIBundlerService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIBundlerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::setMapperRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::setMapperRequest, map_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::setMapperResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::setMapperResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentRequest, selectkeyframes_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentRequest, k_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentRequest, d_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentResponse, k_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentResponse, d_),
  PROTOBUF_FIELD_OFFSET(::grpcIBundler::bundleAdjustmentResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIBundler::setMapperRequest)},
  { 6, -1, sizeof(::grpcIBundler::setMapperResponse)},
  { 12, -1, sizeof(::grpcIBundler::bundleAdjustmentRequest)},
  { 20, -1, sizeof(::grpcIBundler::bundleAdjustmentResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_setMapperRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_setMapperResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_bundleAdjustmentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIBundler::_bundleAdjustmentResponse_default_instance_),
};

const char descriptor_table_protodef_grpcIBundlerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031grpcIBundlerService.proto\022\014grpcIBundle"
  "r\032\033google/protobuf/empty.proto\"\037\n\020setMap"
  "perRequest\022\013\n\003map\030\001 \001(\014\"0\n\021setMapperResp"
  "onse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"H\n\027bun"
  "dleAdjustmentRequest\022\027\n\017selectKeyframes\030"
  "\001 \001(\014\022\t\n\001K\030\002 \001(\014\022\t\n\001D\030\003 \001(\014\"M\n\030bundleAdj"
  "ustmentResponse\022\t\n\001K\030\001 \001(\014\022\t\n\001D\030\002 \001(\014\022\033\n"
  "\023xpcfGrpcReturnValue\030\003 \001(\0012\312\001\n\023grpcIBund"
  "lerService\022N\n\tsetMapper\022\036.grpcIBundler.s"
  "etMapperRequest\032\037.grpcIBundler.setMapper"
  "Response\"\000\022c\n\020bundleAdjustment\022%.grpcIBu"
  "ndler.bundleAdjustmentRequest\032&.grpcIBun"
  "dler.bundleAdjustmentResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIBundlerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIBundlerService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIBundlerService_2eproto = {
  false, false, 519, descriptor_table_protodef_grpcIBundlerService_2eproto, "grpcIBundlerService.proto", 
  &descriptor_table_grpcIBundlerService_2eproto_once, descriptor_table_grpcIBundlerService_2eproto_deps, 1, 4,
  schemas, file_default_instances, TableStruct_grpcIBundlerService_2eproto::offsets,
  file_level_metadata_grpcIBundlerService_2eproto, file_level_enum_descriptors_grpcIBundlerService_2eproto, file_level_service_descriptors_grpcIBundlerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIBundlerService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIBundlerService_2eproto);
  return descriptor_table_grpcIBundlerService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIBundlerService_2eproto(&descriptor_table_grpcIBundlerService_2eproto);
namespace grpcIBundler {

// ===================================================================

class setMapperRequest::_Internal {
 public:
};

setMapperRequest::setMapperRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.setMapperRequest)
}
setMapperRequest::setMapperRequest(const setMapperRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_map().empty()) {
    map_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_map(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.setMapperRequest)
}

void setMapperRequest::SharedCtor() {
map_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setMapperRequest::~setMapperRequest() {
  // @@protoc_insertion_point(destructor:grpcIBundler.setMapperRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setMapperRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  map_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setMapperRequest::ArenaDtor(void* object) {
  setMapperRequest* _this = reinterpret_cast< setMapperRequest* >(object);
  (void)_this;
}
void setMapperRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setMapperRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setMapperRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.setMapperRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapperRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_map();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setMapperRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.setMapperRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes map = 1;
  if (this->map().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_map(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.setMapperRequest)
  return target;
}

size_t setMapperRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.setMapperRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes map = 1;
  if (this->map().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_map());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setMapperRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIBundler.setMapperRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setMapperRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setMapperRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIBundler.setMapperRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIBundler.setMapperRequest)
    MergeFrom(*source);
  }
}

void setMapperRequest::MergeFrom(const setMapperRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.setMapperRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map().size() > 0) {
    _internal_set_map(from._internal_map());
  }
}

void setMapperRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIBundler.setMapperRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setMapperRequest::CopyFrom(const setMapperRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.setMapperRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapperRequest::IsInitialized() const {
  return true;
}

void setMapperRequest::InternalSwap(setMapperRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  map_.Swap(&other->map_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapperRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setMapperResponse::_Internal {
 public:
};

setMapperResponse::setMapperResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.setMapperResponse)
}
setMapperResponse::setMapperResponse(const setMapperResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.setMapperResponse)
}

void setMapperResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

setMapperResponse::~setMapperResponse() {
  // @@protoc_insertion_point(destructor:grpcIBundler.setMapperResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setMapperResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void setMapperResponse::ArenaDtor(void* object) {
  setMapperResponse* _this = reinterpret_cast< setMapperResponse* >(object);
  (void)_this;
}
void setMapperResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setMapperResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setMapperResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.setMapperResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setMapperResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setMapperResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.setMapperResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.setMapperResponse)
  return target;
}

size_t setMapperResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.setMapperResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setMapperResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIBundler.setMapperResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const setMapperResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setMapperResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIBundler.setMapperResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIBundler.setMapperResponse)
    MergeFrom(*source);
  }
}

void setMapperResponse::MergeFrom(const setMapperResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.setMapperResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void setMapperResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIBundler.setMapperResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setMapperResponse::CopyFrom(const setMapperResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.setMapperResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setMapperResponse::IsInitialized() const {
  return true;
}

void setMapperResponse::InternalSwap(setMapperResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setMapperResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class bundleAdjustmentRequest::_Internal {
 public:
};

bundleAdjustmentRequest::bundleAdjustmentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.bundleAdjustmentRequest)
}
bundleAdjustmentRequest::bundleAdjustmentRequest(const bundleAdjustmentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  selectkeyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_selectkeyframes().empty()) {
    selectkeyframes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_selectkeyframes(), 
      GetArena());
  }
  k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_k().empty()) {
    k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k(), 
      GetArena());
  }
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.bundleAdjustmentRequest)
}

void bundleAdjustmentRequest::SharedCtor() {
selectkeyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

bundleAdjustmentRequest::~bundleAdjustmentRequest() {
  // @@protoc_insertion_point(destructor:grpcIBundler.bundleAdjustmentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void bundleAdjustmentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  selectkeyframes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  k_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void bundleAdjustmentRequest::ArenaDtor(void* object) {
  bundleAdjustmentRequest* _this = reinterpret_cast< bundleAdjustmentRequest* >(object);
  (void)_this;
}
void bundleAdjustmentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void bundleAdjustmentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void bundleAdjustmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.bundleAdjustmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selectkeyframes_.ClearToEmpty();
  k_.ClearToEmpty();
  d_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* bundleAdjustmentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes selectKeyframes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_selectkeyframes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes K = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_k();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes D = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* bundleAdjustmentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.bundleAdjustmentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes selectKeyframes = 1;
  if (this->selectkeyframes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_selectkeyframes(), target);
  }

  // bytes K = 2;
  if (this->k().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_k(), target);
  }

  // bytes D = 3;
  if (this->d().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.bundleAdjustmentRequest)
  return target;
}

size_t bundleAdjustmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.bundleAdjustmentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes selectKeyframes = 1;
  if (this->selectkeyframes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_selectkeyframes());
  }

  // bytes K = 2;
  if (this->k().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_k());
  }

  // bytes D = 3;
  if (this->d().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_d());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void bundleAdjustmentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIBundler.bundleAdjustmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const bundleAdjustmentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<bundleAdjustmentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIBundler.bundleAdjustmentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIBundler.bundleAdjustmentRequest)
    MergeFrom(*source);
  }
}

void bundleAdjustmentRequest::MergeFrom(const bundleAdjustmentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.bundleAdjustmentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selectkeyframes().size() > 0) {
    _internal_set_selectkeyframes(from._internal_selectkeyframes());
  }
  if (from.k().size() > 0) {
    _internal_set_k(from._internal_k());
  }
  if (from.d().size() > 0) {
    _internal_set_d(from._internal_d());
  }
}

void bundleAdjustmentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIBundler.bundleAdjustmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void bundleAdjustmentRequest::CopyFrom(const bundleAdjustmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.bundleAdjustmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bundleAdjustmentRequest::IsInitialized() const {
  return true;
}

void bundleAdjustmentRequest::InternalSwap(bundleAdjustmentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  selectkeyframes_.Swap(&other->selectkeyframes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  k_.Swap(&other->k_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  d_.Swap(&other->d_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata bundleAdjustmentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class bundleAdjustmentResponse::_Internal {
 public:
};

bundleAdjustmentResponse::bundleAdjustmentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIBundler.bundleAdjustmentResponse)
}
bundleAdjustmentResponse::bundleAdjustmentResponse(const bundleAdjustmentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_k().empty()) {
    k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k(), 
      GetArena());
  }
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIBundler.bundleAdjustmentResponse)
}

void bundleAdjustmentResponse::SharedCtor() {
k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

bundleAdjustmentResponse::~bundleAdjustmentResponse() {
  // @@protoc_insertion_point(destructor:grpcIBundler.bundleAdjustmentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void bundleAdjustmentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  k_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void bundleAdjustmentResponse::ArenaDtor(void* object) {
  bundleAdjustmentResponse* _this = reinterpret_cast< bundleAdjustmentResponse* >(object);
  (void)_this;
}
void bundleAdjustmentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void bundleAdjustmentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void bundleAdjustmentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIBundler.bundleAdjustmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_.ClearToEmpty();
  d_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* bundleAdjustmentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes K = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_k();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes D = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double xpcfGrpcReturnValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* bundleAdjustmentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIBundler.bundleAdjustmentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes K = 1;
  if (this->k().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_k(), target);
  }

  // bytes D = 2;
  if (this->d().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_d(), target);
  }

  // double xpcfGrpcReturnValue = 3;
  if (!(this->xpcfgrpcreturnvalue() <= 0 && this->xpcfgrpcreturnvalue() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIBundler.bundleAdjustmentResponse)
  return target;
}

size_t bundleAdjustmentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIBundler.bundleAdjustmentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes K = 1;
  if (this->k().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_k());
  }

  // bytes D = 2;
  if (this->d().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_d());
  }

  // double xpcfGrpcReturnValue = 3;
  if (!(this->xpcfgrpcreturnvalue() <= 0 && this->xpcfgrpcreturnvalue() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void bundleAdjustmentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIBundler.bundleAdjustmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const bundleAdjustmentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<bundleAdjustmentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIBundler.bundleAdjustmentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIBundler.bundleAdjustmentResponse)
    MergeFrom(*source);
  }
}

void bundleAdjustmentResponse::MergeFrom(const bundleAdjustmentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIBundler.bundleAdjustmentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.k().size() > 0) {
    _internal_set_k(from._internal_k());
  }
  if (from.d().size() > 0) {
    _internal_set_d(from._internal_d());
  }
  if (!(from.xpcfgrpcreturnvalue() <= 0 && from.xpcfgrpcreturnvalue() >= 0)) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void bundleAdjustmentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIBundler.bundleAdjustmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void bundleAdjustmentResponse::CopyFrom(const bundleAdjustmentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIBundler.bundleAdjustmentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool bundleAdjustmentResponse::IsInitialized() const {
  return true;
}

void bundleAdjustmentResponse::InternalSwap(bundleAdjustmentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  k_.Swap(&other->k_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  d_.Swap(&other->d_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata bundleAdjustmentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIBundler
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIBundler::setMapperRequest* Arena::CreateMaybeMessage< ::grpcIBundler::setMapperRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::setMapperRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIBundler::setMapperResponse* Arena::CreateMaybeMessage< ::grpcIBundler::setMapperResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::setMapperResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIBundler::bundleAdjustmentRequest* Arena::CreateMaybeMessage< ::grpcIBundler::bundleAdjustmentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::bundleAdjustmentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIBundler::bundleAdjustmentResponse* Arena::CreateMaybeMessage< ::grpcIBundler::bundleAdjustmentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIBundler::bundleAdjustmentResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
