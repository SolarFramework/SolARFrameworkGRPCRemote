// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcI2D3DCorrespondencesFinderService.proto

#include "grpcI2D3DCorrespondencesFinderService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcI2D3DCorrespondencesFinder {
PROTOBUF_CONSTEXPR findRequest::findRequest(
    ::_pbi::ConstantInitialized)
  : lastframe_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , currentframe_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , current_matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , shared_3dpoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , shared_2dpoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , corres2d3d_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , found_matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , remaining_matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct findRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR findRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~findRequestDefaultTypeInternal() {}
  union {
    findRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 findRequestDefaultTypeInternal _findRequest_default_instance_;
PROTOBUF_CONSTEXPR findResponse::findResponse(
    ::_pbi::ConstantInitialized)
  : shared_3dpoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , shared_2dpoint_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , corres2d3d_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , found_matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , remaining_matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct findResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR findResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~findResponseDefaultTypeInternal() {}
  union {
    findResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 findResponseDefaultTypeInternal _findResponse_default_instance_;
}  // namespace grpcI2D3DCorrespondencesFinder
static ::_pb::Metadata file_level_metadata_grpcI2D3DCorrespondencesFinderService_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcI2D3DCorrespondencesFinderService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcI2D3DCorrespondencesFinderService_2eproto = nullptr;

const uint32_t TableStruct_grpcI2D3DCorrespondencesFinderService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, lastframe_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, currentframe_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, current_matches_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, shared_3dpoint_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, shared_2dpoint_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, corres2d3d_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, found_matches_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findRequest, remaining_matches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findResponse, shared_3dpoint_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findResponse, shared_2dpoint_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findResponse, corres2d3d_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findResponse, found_matches_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findResponse, remaining_matches_),
  PROTOBUF_FIELD_OFFSET(::grpcI2D3DCorrespondencesFinder::findResponse, xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcI2D3DCorrespondencesFinder::findRequest)},
  { 15, -1, -1, sizeof(::grpcI2D3DCorrespondencesFinder::findResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcI2D3DCorrespondencesFinder::_findRequest_default_instance_._instance,
  &::grpcI2D3DCorrespondencesFinder::_findResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcI2D3DCorrespondencesFinderService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n+grpcI2D3DCorrespondencesFinderService."
  "proto\022\036grpcI2D3DCorrespondencesFinder\032\033g"
  "oogle/protobuf/empty.proto\"\352\001\n\013findReque"
  "st\022#\n\033grpcServerCompressionFormat\030\001 \001(\005\022"
  "\021\n\tlastFrame\030\002 \001(\014\022\024\n\014currentFrame\030\003 \001(\014"
  "\022\027\n\017current_matches\030\004 \001(\014\022\026\n\016shared_3dpo"
  "int\030\005 \001(\014\022\026\n\016shared_2dpoint\030\006 \001(\014\022\022\n\ncor"
  "res2D3D\030\007 \001(\014\022\025\n\rfound_matches\030\010 \001(\014\022\031\n\021"
  "remaining_matches\030\t \001(\014\"\241\001\n\014findResponse"
  "\022\026\n\016shared_3dpoint\030\001 \001(\014\022\026\n\016shared_2dpoi"
  "nt\030\002 \001(\014\022\022\n\ncorres2D3D\030\003 \001(\014\022\025\n\rfound_ma"
  "tches\030\004 \001(\014\022\031\n\021remaining_matches\030\005 \001(\014\022\033"
  "\n\023xpcfGrpcReturnValue\030\006 \001(\0212\214\001\n%grpcI2D3"
  "DCorrespondencesFinderService\022c\n\004find\022+."
  "grpcI2D3DCorrespondencesFinder.findReque"
  "st\032,.grpcI2D3DCorrespondencesFinder.find"
  "Response\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto = {
    false, false, 658, descriptor_table_protodef_grpcI2D3DCorrespondencesFinderService_2eproto,
    "grpcI2D3DCorrespondencesFinderService.proto",
    &descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto_once, descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto_deps, 1, 2,
    schemas, file_default_instances, TableStruct_grpcI2D3DCorrespondencesFinderService_2eproto::offsets,
    file_level_metadata_grpcI2D3DCorrespondencesFinderService_2eproto, file_level_enum_descriptors_grpcI2D3DCorrespondencesFinderService_2eproto,
    file_level_service_descriptors_grpcI2D3DCorrespondencesFinderService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto_getter() {
  return &descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcI2D3DCorrespondencesFinderService_2eproto(&descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto);
namespace grpcI2D3DCorrespondencesFinder {

// ===================================================================

class findRequest::_Internal {
 public:
};

findRequest::findRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcI2D3DCorrespondencesFinder.findRequest)
}
findRequest::findRequest(const findRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  lastframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    lastframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lastframe().empty()) {
    lastframe_.Set(from._internal_lastframe(), 
      GetArenaForAllocation());
  }
  currentframe_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    currentframe_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_currentframe().empty()) {
    currentframe_.Set(from._internal_currentframe(), 
      GetArenaForAllocation());
  }
  current_matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    current_matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_current_matches().empty()) {
    current_matches_.Set(from._internal_current_matches(), 
      GetArenaForAllocation());
  }
  shared_3dpoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    shared_3dpoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_shared_3dpoint().empty()) {
    shared_3dpoint_.Set(from._internal_shared_3dpoint(), 
      GetArenaForAllocation());
  }
  shared_2dpoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    shared_2dpoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_shared_2dpoint().empty()) {
    shared_2dpoint_.Set(from._internal_shared_2dpoint(), 
      GetArenaForAllocation());
  }
  corres2d3d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    corres2d3d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_corres2d3d().empty()) {
    corres2d3d_.Set(from._internal_corres2d3d(), 
      GetArenaForAllocation());
  }
  found_matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    found_matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_found_matches().empty()) {
    found_matches_.Set(from._internal_found_matches(), 
      GetArenaForAllocation());
  }
  remaining_matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    remaining_matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remaining_matches().empty()) {
    remaining_matches_.Set(from._internal_remaining_matches(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcI2D3DCorrespondencesFinder.findRequest)
}

inline void findRequest::SharedCtor() {
lastframe_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  lastframe_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
currentframe_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  currentframe_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
current_matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  current_matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
shared_3dpoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  shared_3dpoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
shared_2dpoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  shared_2dpoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
corres2d3d_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  corres2d3d_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
found_matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  found_matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
remaining_matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  remaining_matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

findRequest::~findRequest() {
  // @@protoc_insertion_point(destructor:grpcI2D3DCorrespondencesFinder.findRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void findRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  lastframe_.Destroy();
  currentframe_.Destroy();
  current_matches_.Destroy();
  shared_3dpoint_.Destroy();
  shared_2dpoint_.Destroy();
  corres2d3d_.Destroy();
  found_matches_.Destroy();
  remaining_matches_.Destroy();
}

void findRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void findRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2D3DCorrespondencesFinder.findRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lastframe_.ClearToEmpty();
  currentframe_.ClearToEmpty();
  current_matches_.ClearToEmpty();
  shared_3dpoint_.ClearToEmpty();
  shared_2dpoint_.ClearToEmpty();
  corres2d3d_.ClearToEmpty();
  found_matches_.ClearToEmpty();
  remaining_matches_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* findRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes lastFrame = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_lastframe();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes currentFrame = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_currentframe();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes current_matches = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_current_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes shared_3dpoint = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_shared_3dpoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes shared_2dpoint = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_shared_2dpoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes corres2D3D = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_corres2d3d();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes found_matches = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_found_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes remaining_matches = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_remaining_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* findRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2D3DCorrespondencesFinder.findRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes lastFrame = 2;
  if (!this->_internal_lastframe().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_lastframe(), target);
  }

  // bytes currentFrame = 3;
  if (!this->_internal_currentframe().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_currentframe(), target);
  }

  // bytes current_matches = 4;
  if (!this->_internal_current_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_current_matches(), target);
  }

  // bytes shared_3dpoint = 5;
  if (!this->_internal_shared_3dpoint().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_shared_3dpoint(), target);
  }

  // bytes shared_2dpoint = 6;
  if (!this->_internal_shared_2dpoint().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_shared_2dpoint(), target);
  }

  // bytes corres2D3D = 7;
  if (!this->_internal_corres2d3d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_corres2d3d(), target);
  }

  // bytes found_matches = 8;
  if (!this->_internal_found_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_found_matches(), target);
  }

  // bytes remaining_matches = 9;
  if (!this->_internal_remaining_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_remaining_matches(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2D3DCorrespondencesFinder.findRequest)
  return target;
}

size_t findRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2D3DCorrespondencesFinder.findRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes lastFrame = 2;
  if (!this->_internal_lastframe().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_lastframe());
  }

  // bytes currentFrame = 3;
  if (!this->_internal_currentframe().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_currentframe());
  }

  // bytes current_matches = 4;
  if (!this->_internal_current_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_current_matches());
  }

  // bytes shared_3dpoint = 5;
  if (!this->_internal_shared_3dpoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_shared_3dpoint());
  }

  // bytes shared_2dpoint = 6;
  if (!this->_internal_shared_2dpoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_shared_2dpoint());
  }

  // bytes corres2D3D = 7;
  if (!this->_internal_corres2d3d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_corres2d3d());
  }

  // bytes found_matches = 8;
  if (!this->_internal_found_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_found_matches());
  }

  // bytes remaining_matches = 9;
  if (!this->_internal_remaining_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_remaining_matches());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData findRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    findRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*findRequest::GetClassData() const { return &_class_data_; }

void findRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<findRequest *>(to)->MergeFrom(
      static_cast<const findRequest &>(from));
}


void findRequest::MergeFrom(const findRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2D3DCorrespondencesFinder.findRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_lastframe().empty()) {
    _internal_set_lastframe(from._internal_lastframe());
  }
  if (!from._internal_currentframe().empty()) {
    _internal_set_currentframe(from._internal_currentframe());
  }
  if (!from._internal_current_matches().empty()) {
    _internal_set_current_matches(from._internal_current_matches());
  }
  if (!from._internal_shared_3dpoint().empty()) {
    _internal_set_shared_3dpoint(from._internal_shared_3dpoint());
  }
  if (!from._internal_shared_2dpoint().empty()) {
    _internal_set_shared_2dpoint(from._internal_shared_2dpoint());
  }
  if (!from._internal_corres2d3d().empty()) {
    _internal_set_corres2d3d(from._internal_corres2d3d());
  }
  if (!from._internal_found_matches().empty()) {
    _internal_set_found_matches(from._internal_found_matches());
  }
  if (!from._internal_remaining_matches().empty()) {
    _internal_set_remaining_matches(from._internal_remaining_matches());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void findRequest::CopyFrom(const findRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2D3DCorrespondencesFinder.findRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool findRequest::IsInitialized() const {
  return true;
}

void findRequest::InternalSwap(findRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &lastframe_, lhs_arena,
      &other->lastframe_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &currentframe_, lhs_arena,
      &other->currentframe_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &current_matches_, lhs_arena,
      &other->current_matches_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &shared_3dpoint_, lhs_arena,
      &other->shared_3dpoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &shared_2dpoint_, lhs_arena,
      &other->shared_2dpoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &corres2d3d_, lhs_arena,
      &other->corres2d3d_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &found_matches_, lhs_arena,
      &other->found_matches_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &remaining_matches_, lhs_arena,
      &other->remaining_matches_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata findRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto_getter, &descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto_once,
      file_level_metadata_grpcI2D3DCorrespondencesFinderService_2eproto[0]);
}

// ===================================================================

class findResponse::_Internal {
 public:
};

findResponse::findResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcI2D3DCorrespondencesFinder.findResponse)
}
findResponse::findResponse(const findResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  shared_3dpoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    shared_3dpoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_shared_3dpoint().empty()) {
    shared_3dpoint_.Set(from._internal_shared_3dpoint(), 
      GetArenaForAllocation());
  }
  shared_2dpoint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    shared_2dpoint_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_shared_2dpoint().empty()) {
    shared_2dpoint_.Set(from._internal_shared_2dpoint(), 
      GetArenaForAllocation());
  }
  corres2d3d_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    corres2d3d_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_corres2d3d().empty()) {
    corres2d3d_.Set(from._internal_corres2d3d(), 
      GetArenaForAllocation());
  }
  found_matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    found_matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_found_matches().empty()) {
    found_matches_.Set(from._internal_found_matches(), 
      GetArenaForAllocation());
  }
  remaining_matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    remaining_matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_remaining_matches().empty()) {
    remaining_matches_.Set(from._internal_remaining_matches(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcI2D3DCorrespondencesFinder.findResponse)
}

inline void findResponse::SharedCtor() {
shared_3dpoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  shared_3dpoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
shared_2dpoint_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  shared_2dpoint_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
corres2d3d_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  corres2d3d_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
found_matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  found_matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
remaining_matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  remaining_matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

findResponse::~findResponse() {
  // @@protoc_insertion_point(destructor:grpcI2D3DCorrespondencesFinder.findResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void findResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  shared_3dpoint_.Destroy();
  shared_2dpoint_.Destroy();
  corres2d3d_.Destroy();
  found_matches_.Destroy();
  remaining_matches_.Destroy();
}

void findResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void findResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2D3DCorrespondencesFinder.findResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shared_3dpoint_.ClearToEmpty();
  shared_2dpoint_.ClearToEmpty();
  corres2d3d_.ClearToEmpty();
  found_matches_.ClearToEmpty();
  remaining_matches_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* findResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes shared_3dpoint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_shared_3dpoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes shared_2dpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_shared_2dpoint();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes corres2D3D = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_corres2d3d();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes found_matches = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_found_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes remaining_matches = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_remaining_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* findResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2D3DCorrespondencesFinder.findResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes shared_3dpoint = 1;
  if (!this->_internal_shared_3dpoint().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_shared_3dpoint(), target);
  }

  // bytes shared_2dpoint = 2;
  if (!this->_internal_shared_2dpoint().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_shared_2dpoint(), target);
  }

  // bytes corres2D3D = 3;
  if (!this->_internal_corres2d3d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_corres2d3d(), target);
  }

  // bytes found_matches = 4;
  if (!this->_internal_found_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_found_matches(), target);
  }

  // bytes remaining_matches = 5;
  if (!this->_internal_remaining_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_remaining_matches(), target);
  }

  // sint32 xpcfGrpcReturnValue = 6;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(6, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2D3DCorrespondencesFinder.findResponse)
  return target;
}

size_t findResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2D3DCorrespondencesFinder.findResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes shared_3dpoint = 1;
  if (!this->_internal_shared_3dpoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_shared_3dpoint());
  }

  // bytes shared_2dpoint = 2;
  if (!this->_internal_shared_2dpoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_shared_2dpoint());
  }

  // bytes corres2D3D = 3;
  if (!this->_internal_corres2d3d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_corres2d3d());
  }

  // bytes found_matches = 4;
  if (!this->_internal_found_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_found_matches());
  }

  // bytes remaining_matches = 5;
  if (!this->_internal_remaining_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_remaining_matches());
  }

  // sint32 xpcfGrpcReturnValue = 6;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData findResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    findResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*findResponse::GetClassData() const { return &_class_data_; }

void findResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<findResponse *>(to)->MergeFrom(
      static_cast<const findResponse &>(from));
}


void findResponse::MergeFrom(const findResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2D3DCorrespondencesFinder.findResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_shared_3dpoint().empty()) {
    _internal_set_shared_3dpoint(from._internal_shared_3dpoint());
  }
  if (!from._internal_shared_2dpoint().empty()) {
    _internal_set_shared_2dpoint(from._internal_shared_2dpoint());
  }
  if (!from._internal_corres2d3d().empty()) {
    _internal_set_corres2d3d(from._internal_corres2d3d());
  }
  if (!from._internal_found_matches().empty()) {
    _internal_set_found_matches(from._internal_found_matches());
  }
  if (!from._internal_remaining_matches().empty()) {
    _internal_set_remaining_matches(from._internal_remaining_matches());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void findResponse::CopyFrom(const findResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2D3DCorrespondencesFinder.findResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool findResponse::IsInitialized() const {
  return true;
}

void findResponse::InternalSwap(findResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &shared_3dpoint_, lhs_arena,
      &other->shared_3dpoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &shared_2dpoint_, lhs_arena,
      &other->shared_2dpoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &corres2d3d_, lhs_arena,
      &other->corres2d3d_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &found_matches_, lhs_arena,
      &other->found_matches_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &remaining_matches_, lhs_arena,
      &other->remaining_matches_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata findResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto_getter, &descriptor_table_grpcI2D3DCorrespondencesFinderService_2eproto_once,
      file_level_metadata_grpcI2D3DCorrespondencesFinderService_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcI2D3DCorrespondencesFinder
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcI2D3DCorrespondencesFinder::findRequest*
Arena::CreateMaybeMessage< ::grpcI2D3DCorrespondencesFinder::findRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2D3DCorrespondencesFinder::findRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI2D3DCorrespondencesFinder::findResponse*
Arena::CreateMaybeMessage< ::grpcI2D3DCorrespondencesFinder::findResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2D3DCorrespondencesFinder::findResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
