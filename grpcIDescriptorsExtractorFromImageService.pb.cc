// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIDescriptorsExtractorFromImageService.proto

#include "grpcIDescriptorsExtractorFromImageService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIDescriptorsExtractorFromImage {
constexpr getTypeStringRequest::getTypeStringRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct getTypeStringRequestDefaultTypeInternal {
  constexpr getTypeStringRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getTypeStringRequestDefaultTypeInternal() {}
  union {
    getTypeStringRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getTypeStringRequestDefaultTypeInternal _getTypeStringRequest_default_instance_;
constexpr getTypeStringResponse::getTypeStringResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getTypeStringResponseDefaultTypeInternal {
  constexpr getTypeStringResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getTypeStringResponseDefaultTypeInternal() {}
  union {
    getTypeStringResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getTypeStringResponseDefaultTypeInternal _getTypeStringResponse_default_instance_;
constexpr extractRequest::extractRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , keypoints_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , descriptors_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct extractRequestDefaultTypeInternal {
  constexpr extractRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~extractRequestDefaultTypeInternal() {}
  union {
    extractRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT extractRequestDefaultTypeInternal _extractRequest_default_instance_;
constexpr extractResponse::extractResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keypoints_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , descriptors_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct extractResponseDefaultTypeInternal {
  constexpr extractResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~extractResponseDefaultTypeInternal() {}
  union {
    extractResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT extractResponseDefaultTypeInternal _extractResponse_default_instance_;
}  // namespace grpcIDescriptorsExtractorFromImage
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIDescriptorsExtractorFromImageService_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIDescriptorsExtractorFromImageService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIDescriptorsExtractorFromImageService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIDescriptorsExtractorFromImageService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::getTypeStringRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::getTypeStringRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::getTypeStringResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::getTypeStringResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::extractRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::extractRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::extractRequest, image_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::extractRequest, keypoints_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::extractRequest, descriptors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::extractResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::extractResponse, keypoints_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::extractResponse, descriptors_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractorFromImage::extractResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIDescriptorsExtractorFromImage::getTypeStringRequest)},
  { 6, -1, sizeof(::grpcIDescriptorsExtractorFromImage::getTypeStringResponse)},
  { 12, -1, sizeof(::grpcIDescriptorsExtractorFromImage::extractRequest)},
  { 21, -1, sizeof(::grpcIDescriptorsExtractorFromImage::extractResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorsExtractorFromImage::_getTypeStringRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorsExtractorFromImage::_getTypeStringResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorsExtractorFromImage::_extractRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorsExtractorFromImage::_extractResponse_default_instance_),
};

const char descriptor_table_protodef_grpcIDescriptorsExtractorFromImageService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/grpcIDescriptorsExtractorFromImageServ"
  "ice.proto\022\"grpcIDescriptorsExtractorFrom"
  "Image\032\033google/protobuf/empty.proto\";\n\024ge"
  "tTypeStringRequest\022#\n\033grpcServerCompress"
  "ionFormat\030\001 \001(\005\"4\n\025getTypeStringResponse"
  "\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\t\"l\n\016extract"
  "Request\022#\n\033grpcServerCompressionFormat\030\001"
  " \001(\005\022\r\n\005image\030\002 \001(\014\022\021\n\tkeypoints\030\003 \001(\014\022\023"
  "\n\013descriptors\030\004 \001(\014\"V\n\017extractResponse\022\021"
  "\n\tkeypoints\030\001 \001(\014\022\023\n\013descriptors\030\002 \001(\014\022\033"
  "\n\023xpcfGrpcReturnValue\030\003 \001(\0212\252\002\n)grpcIDes"
  "criptorsExtractorFromImageService\022\206\001\n\rge"
  "tTypeString\0228.grpcIDescriptorsExtractorF"
  "romImage.getTypeStringRequest\0329.grpcIDes"
  "criptorsExtractorFromImage.getTypeString"
  "Response\"\000\022t\n\007extract\0222.grpcIDescriptors"
  "ExtractorFromImage.extractRequest\0323.grpc"
  "IDescriptorsExtractorFromImage.extractRe"
  "sponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIDescriptorsExtractorFromImageService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIDescriptorsExtractorFromImageService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIDescriptorsExtractorFromImageService_2eproto = {
  false, false, 736, descriptor_table_protodef_grpcIDescriptorsExtractorFromImageService_2eproto, "grpcIDescriptorsExtractorFromImageService.proto", 
  &descriptor_table_grpcIDescriptorsExtractorFromImageService_2eproto_once, descriptor_table_grpcIDescriptorsExtractorFromImageService_2eproto_deps, 1, 4,
  schemas, file_default_instances, TableStruct_grpcIDescriptorsExtractorFromImageService_2eproto::offsets,
  file_level_metadata_grpcIDescriptorsExtractorFromImageService_2eproto, file_level_enum_descriptors_grpcIDescriptorsExtractorFromImageService_2eproto, file_level_service_descriptors_grpcIDescriptorsExtractorFromImageService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIDescriptorsExtractorFromImageService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIDescriptorsExtractorFromImageService_2eproto);
  return descriptor_table_grpcIDescriptorsExtractorFromImageService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIDescriptorsExtractorFromImageService_2eproto(&descriptor_table_grpcIDescriptorsExtractorFromImageService_2eproto);
namespace grpcIDescriptorsExtractorFromImage {

// ===================================================================

class getTypeStringRequest::_Internal {
 public:
};

getTypeStringRequest::getTypeStringRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
}
getTypeStringRequest::getTypeStringRequest(const getTypeStringRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
}

void getTypeStringRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

getTypeStringRequest::~getTypeStringRequest() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getTypeStringRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getTypeStringRequest::ArenaDtor(void* object) {
  getTypeStringRequest* _this = reinterpret_cast< getTypeStringRequest* >(object);
  (void)_this;
}
void getTypeStringRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getTypeStringRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getTypeStringRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTypeStringRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getTypeStringRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
  return target;
}

size_t getTypeStringRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getTypeStringRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getTypeStringRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getTypeStringRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
    MergeFrom(*source);
  }
}

void getTypeStringRequest::MergeFrom(const getTypeStringRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getTypeStringRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTypeStringRequest::CopyFrom(const getTypeStringRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorsExtractorFromImage.getTypeStringRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTypeStringRequest::IsInitialized() const {
  return true;
}

void getTypeStringRequest::InternalSwap(getTypeStringRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getTypeStringRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getTypeStringResponse::_Internal {
 public:
};

getTypeStringResponse::getTypeStringResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
}
getTypeStringResponse::getTypeStringResponse(const getTypeStringResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
}

void getTypeStringResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getTypeStringResponse::~getTypeStringResponse() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getTypeStringResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getTypeStringResponse::ArenaDtor(void* object) {
  getTypeStringResponse* _this = reinterpret_cast< getTypeStringResponse* >(object);
  (void)_this;
}
void getTypeStringResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getTypeStringResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getTypeStringResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTypeStringResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpcIDescriptorsExtractorFromImage.getTypeStringResponse.xpcfGrpcReturnValue"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getTypeStringResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_xpcfgrpcreturnvalue().data(), static_cast<int>(this->_internal_xpcfgrpcreturnvalue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIDescriptorsExtractorFromImage.getTypeStringResponse.xpcfGrpcReturnValue");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
  return target;
}

size_t getTypeStringResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getTypeStringResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getTypeStringResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getTypeStringResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
    MergeFrom(*source);
  }
}

void getTypeStringResponse::MergeFrom(const getTypeStringResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getTypeStringResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getTypeStringResponse::CopyFrom(const getTypeStringResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorsExtractorFromImage.getTypeStringResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTypeStringResponse::IsInitialized() const {
  return true;
}

void getTypeStringResponse::InternalSwap(getTypeStringResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getTypeStringResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class extractRequest::_Internal {
 public:
};

extractRequest::extractRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorsExtractorFromImage.extractRequest)
}
extractRequest::extractRequest(const extractRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArena());
  }
  keypoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keypoints().empty()) {
    keypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keypoints(), 
      GetArena());
  }
  descriptors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descriptors().empty()) {
    descriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descriptors(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorsExtractorFromImage.extractRequest)
}

void extractRequest::SharedCtor() {
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
keypoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
descriptors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

extractRequest::~extractRequest() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorsExtractorFromImage.extractRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void extractRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keypoints_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descriptors_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void extractRequest::ArenaDtor(void* object) {
  extractRequest* _this = reinterpret_cast< extractRequest* >(object);
  (void)_this;
}
void extractRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void extractRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void extractRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorsExtractorFromImage.extractRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_.ClearToEmpty();
  keypoints_.ClearToEmpty();
  descriptors_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* extractRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keypoints = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_keypoints();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes descriptors = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_descriptors();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* extractRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorsExtractorFromImage.extractRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image(), target);
  }

  // bytes keypoints = 3;
  if (this->keypoints().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_keypoints(), target);
  }

  // bytes descriptors = 4;
  if (this->descriptors().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_descriptors(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorsExtractorFromImage.extractRequest)
  return target;
}

size_t extractRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorsExtractorFromImage.extractRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image());
  }

  // bytes keypoints = 3;
  if (this->keypoints().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints());
  }

  // bytes descriptors = 4;
  if (this->descriptors().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void extractRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorsExtractorFromImage.extractRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const extractRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<extractRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorsExtractorFromImage.extractRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorsExtractorFromImage.extractRequest)
    MergeFrom(*source);
  }
}

void extractRequest::MergeFrom(const extractRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorsExtractorFromImage.extractRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image().size() > 0) {
    _internal_set_image(from._internal_image());
  }
  if (from.keypoints().size() > 0) {
    _internal_set_keypoints(from._internal_keypoints());
  }
  if (from.descriptors().size() > 0) {
    _internal_set_descriptors(from._internal_descriptors());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void extractRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorsExtractorFromImage.extractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void extractRequest::CopyFrom(const extractRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorsExtractorFromImage.extractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool extractRequest::IsInitialized() const {
  return true;
}

void extractRequest::InternalSwap(extractRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_.Swap(&other->image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  keypoints_.Swap(&other->keypoints_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  descriptors_.Swap(&other->descriptors_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata extractRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class extractResponse::_Internal {
 public:
};

extractResponse::extractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorsExtractorFromImage.extractResponse)
}
extractResponse::extractResponse(const extractResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keypoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keypoints().empty()) {
    keypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keypoints(), 
      GetArena());
  }
  descriptors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descriptors().empty()) {
    descriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descriptors(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorsExtractorFromImage.extractResponse)
}

void extractResponse::SharedCtor() {
keypoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
descriptors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

extractResponse::~extractResponse() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorsExtractorFromImage.extractResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void extractResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keypoints_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descriptors_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void extractResponse::ArenaDtor(void* object) {
  extractResponse* _this = reinterpret_cast< extractResponse* >(object);
  (void)_this;
}
void extractResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void extractResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void extractResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorsExtractorFromImage.extractResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keypoints_.ClearToEmpty();
  descriptors_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* extractResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes keypoints = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_keypoints();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes descriptors = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_descriptors();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* extractResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorsExtractorFromImage.extractResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes keypoints = 1;
  if (this->keypoints().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_keypoints(), target);
  }

  // bytes descriptors = 2;
  if (this->descriptors().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_descriptors(), target);
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(3, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorsExtractorFromImage.extractResponse)
  return target;
}

size_t extractResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorsExtractorFromImage.extractResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keypoints = 1;
  if (this->keypoints().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints());
  }

  // bytes descriptors = 2;
  if (this->descriptors().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors());
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void extractResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorsExtractorFromImage.extractResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const extractResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<extractResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorsExtractorFromImage.extractResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorsExtractorFromImage.extractResponse)
    MergeFrom(*source);
  }
}

void extractResponse::MergeFrom(const extractResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorsExtractorFromImage.extractResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keypoints().size() > 0) {
    _internal_set_keypoints(from._internal_keypoints());
  }
  if (from.descriptors().size() > 0) {
    _internal_set_descriptors(from._internal_descriptors());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void extractResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorsExtractorFromImage.extractResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void extractResponse::CopyFrom(const extractResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorsExtractorFromImage.extractResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool extractResponse::IsInitialized() const {
  return true;
}

void extractResponse::InternalSwap(extractResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keypoints_.Swap(&other->keypoints_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  descriptors_.Swap(&other->descriptors_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata extractResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIDescriptorsExtractorFromImage
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIDescriptorsExtractorFromImage::getTypeStringRequest* Arena::CreateMaybeMessage< ::grpcIDescriptorsExtractorFromImage::getTypeStringRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorsExtractorFromImage::getTypeStringRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorsExtractorFromImage::getTypeStringResponse* Arena::CreateMaybeMessage< ::grpcIDescriptorsExtractorFromImage::getTypeStringResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorsExtractorFromImage::getTypeStringResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorsExtractorFromImage::extractRequest* Arena::CreateMaybeMessage< ::grpcIDescriptorsExtractorFromImage::extractRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorsExtractorFromImage::extractRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorsExtractorFromImage::extractResponse* Arena::CreateMaybeMessage< ::grpcIDescriptorsExtractorFromImage::extractResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorsExtractorFromImage::extractResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
