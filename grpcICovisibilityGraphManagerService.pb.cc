// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcICovisibilityGraphManagerService.proto

#include "grpcICovisibilityGraphManagerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcICovisibilityGraphManager {
constexpr increaseEdgeRequest::increaseEdgeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : node1_id_(0u)
  , node2_id_(0u)
  , weight_(0){}
struct increaseEdgeRequestDefaultTypeInternal {
  constexpr increaseEdgeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~increaseEdgeRequestDefaultTypeInternal() {}
  union {
    increaseEdgeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT increaseEdgeRequestDefaultTypeInternal _increaseEdgeRequest_default_instance_;
constexpr increaseEdgeResponse::increaseEdgeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct increaseEdgeResponseDefaultTypeInternal {
  constexpr increaseEdgeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~increaseEdgeResponseDefaultTypeInternal() {}
  union {
    increaseEdgeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT increaseEdgeResponseDefaultTypeInternal _increaseEdgeResponse_default_instance_;
constexpr decreaseEdgeRequest::decreaseEdgeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : node1_id_(0u)
  , node2_id_(0u)
  , weight_(0){}
struct decreaseEdgeRequestDefaultTypeInternal {
  constexpr decreaseEdgeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~decreaseEdgeRequestDefaultTypeInternal() {}
  union {
    decreaseEdgeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT decreaseEdgeRequestDefaultTypeInternal _decreaseEdgeRequest_default_instance_;
constexpr decreaseEdgeResponse::decreaseEdgeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct decreaseEdgeResponseDefaultTypeInternal {
  constexpr decreaseEdgeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~decreaseEdgeResponseDefaultTypeInternal() {}
  union {
    decreaseEdgeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT decreaseEdgeResponseDefaultTypeInternal _decreaseEdgeResponse_default_instance_;
constexpr removeEdgeRequest::removeEdgeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : node1_id_(0u)
  , node2_id_(0u){}
struct removeEdgeRequestDefaultTypeInternal {
  constexpr removeEdgeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~removeEdgeRequestDefaultTypeInternal() {}
  union {
    removeEdgeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT removeEdgeRequestDefaultTypeInternal _removeEdgeRequest_default_instance_;
constexpr removeEdgeResponse::removeEdgeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct removeEdgeResponseDefaultTypeInternal {
  constexpr removeEdgeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~removeEdgeResponseDefaultTypeInternal() {}
  union {
    removeEdgeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT removeEdgeResponseDefaultTypeInternal _removeEdgeResponse_default_instance_;
constexpr getEdgeRequest::getEdgeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : node1_id_(0u)
  , node2_id_(0u)
  , weight_(0){}
struct getEdgeRequestDefaultTypeInternal {
  constexpr getEdgeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getEdgeRequestDefaultTypeInternal() {}
  union {
    getEdgeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getEdgeRequestDefaultTypeInternal _getEdgeRequest_default_instance_;
constexpr getEdgeResponse::getEdgeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : weight_(0)
  , xpcfgrpcreturnvalue_(0){}
struct getEdgeResponseDefaultTypeInternal {
  constexpr getEdgeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getEdgeResponseDefaultTypeInternal() {}
  union {
    getEdgeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getEdgeResponseDefaultTypeInternal _getEdgeResponse_default_instance_;
constexpr isEdgeRequest::isEdgeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : node1_id_(0u)
  , node2_id_(0u){}
struct isEdgeRequestDefaultTypeInternal {
  constexpr isEdgeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~isEdgeRequestDefaultTypeInternal() {}
  union {
    isEdgeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT isEdgeRequestDefaultTypeInternal _isEdgeRequest_default_instance_;
constexpr isEdgeResponse::isEdgeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(false){}
struct isEdgeResponseDefaultTypeInternal {
  constexpr isEdgeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~isEdgeResponseDefaultTypeInternal() {}
  union {
    isEdgeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT isEdgeResponseDefaultTypeInternal _isEdgeResponse_default_instance_;
constexpr getAllNodesRequest::getAllNodesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nodes_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getAllNodesRequestDefaultTypeInternal {
  constexpr getAllNodesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getAllNodesRequestDefaultTypeInternal() {}
  union {
    getAllNodesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getAllNodesRequestDefaultTypeInternal _getAllNodesRequest_default_instance_;
constexpr getAllNodesResponse::getAllNodesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nodes_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getAllNodesResponseDefaultTypeInternal {
  constexpr getAllNodesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getAllNodesResponseDefaultTypeInternal() {}
  union {
    getAllNodesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getAllNodesResponseDefaultTypeInternal _getAllNodesResponse_default_instance_;
constexpr suppressNodeRequest::suppressNodeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : node_id_(0u){}
struct suppressNodeRequestDefaultTypeInternal {
  constexpr suppressNodeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~suppressNodeRequestDefaultTypeInternal() {}
  union {
    suppressNodeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT suppressNodeRequestDefaultTypeInternal _suppressNodeRequest_default_instance_;
constexpr suppressNodeResponse::suppressNodeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct suppressNodeResponseDefaultTypeInternal {
  constexpr suppressNodeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~suppressNodeResponseDefaultTypeInternal() {}
  union {
    suppressNodeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT suppressNodeResponseDefaultTypeInternal _suppressNodeResponse_default_instance_;
constexpr getNeighborsRequest::getNeighborsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : neighbors_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , node_id_(0u)
  , minweight_(0){}
struct getNeighborsRequestDefaultTypeInternal {
  constexpr getNeighborsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getNeighborsRequestDefaultTypeInternal() {}
  union {
    getNeighborsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getNeighborsRequestDefaultTypeInternal _getNeighborsRequest_default_instance_;
constexpr getNeighborsResponse::getNeighborsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : neighbors_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getNeighborsResponseDefaultTypeInternal {
  constexpr getNeighborsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getNeighborsResponseDefaultTypeInternal() {}
  union {
    getNeighborsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getNeighborsResponseDefaultTypeInternal _getNeighborsResponse_default_instance_;
constexpr minimalSpanningTreeRequest::minimalSpanningTreeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edges_weights_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mintotalweights_(0){}
struct minimalSpanningTreeRequestDefaultTypeInternal {
  constexpr minimalSpanningTreeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~minimalSpanningTreeRequestDefaultTypeInternal() {}
  union {
    minimalSpanningTreeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT minimalSpanningTreeRequestDefaultTypeInternal _minimalSpanningTreeRequest_default_instance_;
constexpr minimalSpanningTreeResponse::minimalSpanningTreeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edges_weights_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mintotalweights_(0)
  , xpcfgrpcreturnvalue_(0){}
struct minimalSpanningTreeResponseDefaultTypeInternal {
  constexpr minimalSpanningTreeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~minimalSpanningTreeResponseDefaultTypeInternal() {}
  union {
    minimalSpanningTreeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT minimalSpanningTreeResponseDefaultTypeInternal _minimalSpanningTreeResponse_default_instance_;
constexpr maximalSpanningTreeRequest::maximalSpanningTreeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edges_weights_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , maxtotalweights_(0){}
struct maximalSpanningTreeRequestDefaultTypeInternal {
  constexpr maximalSpanningTreeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~maximalSpanningTreeRequestDefaultTypeInternal() {}
  union {
    maximalSpanningTreeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT maximalSpanningTreeRequestDefaultTypeInternal _maximalSpanningTreeRequest_default_instance_;
constexpr maximalSpanningTreeResponse::maximalSpanningTreeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edges_weights_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , maxtotalweights_(0)
  , xpcfgrpcreturnvalue_(0){}
struct maximalSpanningTreeResponseDefaultTypeInternal {
  constexpr maximalSpanningTreeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~maximalSpanningTreeResponseDefaultTypeInternal() {}
  union {
    maximalSpanningTreeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT maximalSpanningTreeResponseDefaultTypeInternal _maximalSpanningTreeResponse_default_instance_;
constexpr getShortestPathRequest::getShortestPathRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , node1_id_(0u)
  , node2_id_(0u){}
struct getShortestPathRequestDefaultTypeInternal {
  constexpr getShortestPathRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getShortestPathRequestDefaultTypeInternal() {}
  union {
    getShortestPathRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getShortestPathRequestDefaultTypeInternal _getShortestPathRequest_default_instance_;
constexpr getShortestPathResponse::getShortestPathResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getShortestPathResponseDefaultTypeInternal {
  constexpr getShortestPathResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getShortestPathResponseDefaultTypeInternal() {}
  union {
    getShortestPathResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getShortestPathResponseDefaultTypeInternal _getShortestPathResponse_default_instance_;
constexpr displayResponse::displayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct displayResponseDefaultTypeInternal {
  constexpr displayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~displayResponseDefaultTypeInternal() {}
  union {
    displayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT displayResponseDefaultTypeInternal _displayResponse_default_instance_;
constexpr saveToFileRequest::saveToFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct saveToFileRequestDefaultTypeInternal {
  constexpr saveToFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~saveToFileRequestDefaultTypeInternal() {}
  union {
    saveToFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT saveToFileRequestDefaultTypeInternal _saveToFileRequest_default_instance_;
constexpr saveToFileResponse::saveToFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct saveToFileResponseDefaultTypeInternal {
  constexpr saveToFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~saveToFileResponseDefaultTypeInternal() {}
  union {
    saveToFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT saveToFileResponseDefaultTypeInternal _saveToFileResponse_default_instance_;
constexpr loadFromFileRequest::loadFromFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct loadFromFileRequestDefaultTypeInternal {
  constexpr loadFromFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~loadFromFileRequestDefaultTypeInternal() {}
  union {
    loadFromFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT loadFromFileRequestDefaultTypeInternal _loadFromFileRequest_default_instance_;
constexpr loadFromFileResponse::loadFromFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct loadFromFileResponseDefaultTypeInternal {
  constexpr loadFromFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~loadFromFileResponseDefaultTypeInternal() {}
  union {
    loadFromFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT loadFromFileResponseDefaultTypeInternal _loadFromFileResponse_default_instance_;
constexpr getConstCovisibilityGraphResponse::getConstCovisibilityGraphResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getConstCovisibilityGraphResponseDefaultTypeInternal {
  constexpr getConstCovisibilityGraphResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getConstCovisibilityGraphResponseDefaultTypeInternal() {}
  union {
    getConstCovisibilityGraphResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getConstCovisibilityGraphResponseDefaultTypeInternal _getConstCovisibilityGraphResponse_default_instance_;
constexpr getCovisibilityGraphRequest::getCovisibilityGraphRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : covisibilitygraph_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getCovisibilityGraphRequestDefaultTypeInternal {
  constexpr getCovisibilityGraphRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getCovisibilityGraphRequestDefaultTypeInternal() {}
  union {
    getCovisibilityGraphRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getCovisibilityGraphRequestDefaultTypeInternal _getCovisibilityGraphRequest_default_instance_;
constexpr getCovisibilityGraphResponse::getCovisibilityGraphResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : covisibilitygraph_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getCovisibilityGraphResponseDefaultTypeInternal {
  constexpr getCovisibilityGraphResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getCovisibilityGraphResponseDefaultTypeInternal() {}
  union {
    getCovisibilityGraphResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getCovisibilityGraphResponseDefaultTypeInternal _getCovisibilityGraphResponse_default_instance_;
constexpr setCovisibilityGraphRequest::setCovisibilityGraphRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : covisibilitygraph_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setCovisibilityGraphRequestDefaultTypeInternal {
  constexpr setCovisibilityGraphRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setCovisibilityGraphRequestDefaultTypeInternal() {}
  union {
    setCovisibilityGraphRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setCovisibilityGraphRequestDefaultTypeInternal _setCovisibilityGraphRequest_default_instance_;
}  // namespace grpcICovisibilityGraphManager
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcICovisibilityGraphManagerService_2eproto[31];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcICovisibilityGraphManagerService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcICovisibilityGraphManagerService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcICovisibilityGraphManagerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::increaseEdgeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::increaseEdgeRequest, node1_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::increaseEdgeRequest, node2_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::increaseEdgeRequest, weight_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::increaseEdgeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::increaseEdgeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::decreaseEdgeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::decreaseEdgeRequest, node1_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::decreaseEdgeRequest, node2_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::decreaseEdgeRequest, weight_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::decreaseEdgeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::decreaseEdgeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::removeEdgeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::removeEdgeRequest, node1_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::removeEdgeRequest, node2_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::removeEdgeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::removeEdgeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getEdgeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getEdgeRequest, node1_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getEdgeRequest, node2_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getEdgeRequest, weight_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getEdgeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getEdgeResponse, weight_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getEdgeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::isEdgeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::isEdgeRequest, node1_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::isEdgeRequest, node2_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::isEdgeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::isEdgeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getAllNodesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getAllNodesRequest, nodes_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getAllNodesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getAllNodesResponse, nodes_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getAllNodesResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::suppressNodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::suppressNodeRequest, node_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::suppressNodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::suppressNodeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getNeighborsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getNeighborsRequest, node_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getNeighborsRequest, minweight_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getNeighborsRequest, neighbors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getNeighborsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getNeighborsResponse, neighbors_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getNeighborsResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::minimalSpanningTreeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::minimalSpanningTreeRequest, edges_weights_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::minimalSpanningTreeRequest, mintotalweights_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::minimalSpanningTreeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::minimalSpanningTreeResponse, edges_weights_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::minimalSpanningTreeResponse, mintotalweights_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::minimalSpanningTreeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::maximalSpanningTreeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::maximalSpanningTreeRequest, edges_weights_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::maximalSpanningTreeRequest, maxtotalweights_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::maximalSpanningTreeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::maximalSpanningTreeResponse, edges_weights_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::maximalSpanningTreeResponse, maxtotalweights_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::maximalSpanningTreeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getShortestPathRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getShortestPathRequest, node1_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getShortestPathRequest, node2_id_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getShortestPathRequest, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getShortestPathResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getShortestPathResponse, path_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getShortestPathResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::displayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::displayResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::saveToFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::saveToFileRequest, file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::saveToFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::saveToFileResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::loadFromFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::loadFromFileRequest, file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::loadFromFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::loadFromFileResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getConstCovisibilityGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getConstCovisibilityGraphResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getCovisibilityGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getCovisibilityGraphRequest, covisibilitygraph_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getCovisibilityGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getCovisibilityGraphResponse, covisibilitygraph_),
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::getCovisibilityGraphResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::setCovisibilityGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICovisibilityGraphManager::setCovisibilityGraphRequest, covisibilitygraph_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcICovisibilityGraphManager::increaseEdgeRequest)},
  { 8, -1, sizeof(::grpcICovisibilityGraphManager::increaseEdgeResponse)},
  { 14, -1, sizeof(::grpcICovisibilityGraphManager::decreaseEdgeRequest)},
  { 22, -1, sizeof(::grpcICovisibilityGraphManager::decreaseEdgeResponse)},
  { 28, -1, sizeof(::grpcICovisibilityGraphManager::removeEdgeRequest)},
  { 35, -1, sizeof(::grpcICovisibilityGraphManager::removeEdgeResponse)},
  { 41, -1, sizeof(::grpcICovisibilityGraphManager::getEdgeRequest)},
  { 49, -1, sizeof(::grpcICovisibilityGraphManager::getEdgeResponse)},
  { 56, -1, sizeof(::grpcICovisibilityGraphManager::isEdgeRequest)},
  { 63, -1, sizeof(::grpcICovisibilityGraphManager::isEdgeResponse)},
  { 69, -1, sizeof(::grpcICovisibilityGraphManager::getAllNodesRequest)},
  { 75, -1, sizeof(::grpcICovisibilityGraphManager::getAllNodesResponse)},
  { 82, -1, sizeof(::grpcICovisibilityGraphManager::suppressNodeRequest)},
  { 88, -1, sizeof(::grpcICovisibilityGraphManager::suppressNodeResponse)},
  { 94, -1, sizeof(::grpcICovisibilityGraphManager::getNeighborsRequest)},
  { 102, -1, sizeof(::grpcICovisibilityGraphManager::getNeighborsResponse)},
  { 109, -1, sizeof(::grpcICovisibilityGraphManager::minimalSpanningTreeRequest)},
  { 116, -1, sizeof(::grpcICovisibilityGraphManager::minimalSpanningTreeResponse)},
  { 124, -1, sizeof(::grpcICovisibilityGraphManager::maximalSpanningTreeRequest)},
  { 131, -1, sizeof(::grpcICovisibilityGraphManager::maximalSpanningTreeResponse)},
  { 139, -1, sizeof(::grpcICovisibilityGraphManager::getShortestPathRequest)},
  { 147, -1, sizeof(::grpcICovisibilityGraphManager::getShortestPathResponse)},
  { 154, -1, sizeof(::grpcICovisibilityGraphManager::displayResponse)},
  { 160, -1, sizeof(::grpcICovisibilityGraphManager::saveToFileRequest)},
  { 166, -1, sizeof(::grpcICovisibilityGraphManager::saveToFileResponse)},
  { 172, -1, sizeof(::grpcICovisibilityGraphManager::loadFromFileRequest)},
  { 178, -1, sizeof(::grpcICovisibilityGraphManager::loadFromFileResponse)},
  { 184, -1, sizeof(::grpcICovisibilityGraphManager::getConstCovisibilityGraphResponse)},
  { 190, -1, sizeof(::grpcICovisibilityGraphManager::getCovisibilityGraphRequest)},
  { 196, -1, sizeof(::grpcICovisibilityGraphManager::getCovisibilityGraphResponse)},
  { 203, -1, sizeof(::grpcICovisibilityGraphManager::setCovisibilityGraphRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_increaseEdgeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_increaseEdgeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_decreaseEdgeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_decreaseEdgeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_removeEdgeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_removeEdgeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getEdgeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getEdgeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_isEdgeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_isEdgeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getAllNodesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getAllNodesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_suppressNodeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_suppressNodeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getNeighborsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getNeighborsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_minimalSpanningTreeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_minimalSpanningTreeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_maximalSpanningTreeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_maximalSpanningTreeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getShortestPathRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getShortestPathResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_displayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_saveToFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_saveToFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_loadFromFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_loadFromFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getConstCovisibilityGraphResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getCovisibilityGraphRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_getCovisibilityGraphResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICovisibilityGraphManager::_setCovisibilityGraphRequest_default_instance_),
};

const char descriptor_table_protodef_grpcICovisibilityGraphManagerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*grpcICovisibilityGraphManagerService.p"
  "roto\022\035grpcICovisibilityGraphManager\032\033goo"
  "gle/protobuf/empty.proto\"I\n\023increaseEdge"
  "Request\022\020\n\010node1_id\030\001 \001(\r\022\020\n\010node2_id\030\002 "
  "\001(\r\022\016\n\006weight\030\003 \001(\002\"3\n\024increaseEdgeRespo"
  "nse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"I\n\023decr"
  "easeEdgeRequest\022\020\n\010node1_id\030\001 \001(\r\022\020\n\010nod"
  "e2_id\030\002 \001(\r\022\016\n\006weight\030\003 \001(\002\"3\n\024decreaseE"
  "dgeResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021"
  "\"7\n\021removeEdgeRequest\022\020\n\010node1_id\030\001 \001(\r\022"
  "\020\n\010node2_id\030\002 \001(\r\"1\n\022removeEdgeResponse\022"
  "\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"D\n\016getEdgeR"
  "equest\022\020\n\010node1_id\030\001 \001(\r\022\020\n\010node2_id\030\002 \001"
  "(\r\022\016\n\006weight\030\003 \001(\002\">\n\017getEdgeResponse\022\016\n"
  "\006weight\030\001 \001(\002\022\033\n\023xpcfGrpcReturnValue\030\002 \001"
  "(\021\"3\n\risEdgeRequest\022\020\n\010node1_id\030\001 \001(\r\022\020\n"
  "\010node2_id\030\002 \001(\r\"-\n\016isEdgeResponse\022\033\n\023xpc"
  "fGrpcReturnValue\030\001 \001(\010\"&\n\022getAllNodesReq"
  "uest\022\020\n\010nodes_id\030\001 \001(\014\"D\n\023getAllNodesRes"
  "ponse\022\020\n\010nodes_id\030\001 \001(\014\022\033\n\023xpcfGrpcRetur"
  "nValue\030\002 \001(\021\"&\n\023suppressNodeRequest\022\017\n\007n"
  "ode_id\030\001 \001(\r\"3\n\024suppressNodeResponse\022\033\n\023"
  "xpcfGrpcReturnValue\030\001 \001(\021\"L\n\023getNeighbor"
  "sRequest\022\017\n\007node_id\030\001 \001(\r\022\021\n\tminWeight\030\002"
  " \001(\002\022\021\n\tneighbors\030\003 \001(\014\"F\n\024getNeighborsR"
  "esponse\022\021\n\tneighbors\030\001 \001(\014\022\033\n\023xpcfGrpcRe"
  "turnValue\030\002 \001(\021\"L\n\032minimalSpanningTreeRe"
  "quest\022\025\n\redges_weights\030\001 \001(\014\022\027\n\017minTotal"
  "Weights\030\002 \001(\002\"j\n\033minimalSpanningTreeResp"
  "onse\022\025\n\redges_weights\030\001 \001(\014\022\027\n\017minTotalW"
  "eights\030\002 \001(\002\022\033\n\023xpcfGrpcReturnValue\030\003 \001("
  "\021\"L\n\032maximalSpanningTreeRequest\022\025\n\redges"
  "_weights\030\001 \001(\014\022\027\n\017maxTotalWeights\030\002 \001(\002\""
  "j\n\033maximalSpanningTreeResponse\022\025\n\redges_"
  "weights\030\001 \001(\014\022\027\n\017maxTotalWeights\030\002 \001(\002\022\033"
  "\n\023xpcfGrpcReturnValue\030\003 \001(\021\"J\n\026getShorte"
  "stPathRequest\022\020\n\010node1_id\030\001 \001(\r\022\020\n\010node2"
  "_id\030\002 \001(\r\022\014\n\004path\030\003 \001(\014\"D\n\027getShortestPa"
  "thResponse\022\014\n\004path\030\001 \001(\014\022\033\n\023xpcfGrpcRetu"
  "rnValue\030\002 \001(\021\".\n\017displayResponse\022\033\n\023xpcf"
  "GrpcReturnValue\030\001 \001(\021\"!\n\021saveToFileReque"
  "st\022\014\n\004file\030\001 \001(\t\"1\n\022saveToFileResponse\022\033"
  "\n\023xpcfGrpcReturnValue\030\001 \001(\021\"#\n\023loadFromF"
  "ileRequest\022\014\n\004file\030\001 \001(\t\"3\n\024loadFromFile"
  "Response\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"@\n"
  "!getConstCovisibilityGraphResponse\022\033\n\023xp"
  "cfGrpcReturnValue\030\001 \001(\014\"8\n\033getCovisibili"
  "tyGraphRequest\022\031\n\021covisibilityGraph\030\001 \001("
  "\014\"V\n\034getCovisibilityGraphResponse\022\031\n\021cov"
  "isibilityGraph\030\001 \001(\014\022\033\n\023xpcfGrpcReturnVa"
  "lue\030\002 \001(\014\"8\n\033setCovisibilityGraphRequest"
  "\022\031\n\021covisibilityGraph\030\001 \001(\0142\273\020\n$grpcICov"
  "isibilityGraphManagerService\022y\n\014increase"
  "Edge\0222.grpcICovisibilityGraphManager.inc"
  "reaseEdgeRequest\0323.grpcICovisibilityGrap"
  "hManager.increaseEdgeResponse\"\000\022y\n\014decre"
  "aseEdge\0222.grpcICovisibilityGraphManager."
  "decreaseEdgeRequest\0323.grpcICovisibilityG"
  "raphManager.decreaseEdgeResponse\"\000\022s\n\nre"
  "moveEdge\0220.grpcICovisibilityGraphManager"
  ".removeEdgeRequest\0321.grpcICovisibilityGr"
  "aphManager.removeEdgeResponse\"\000\022j\n\007getEd"
  "ge\022-.grpcICovisibilityGraphManager.getEd"
  "geRequest\032..grpcICovisibilityGraphManage"
  "r.getEdgeResponse\"\000\022g\n\006isEdge\022,.grpcICov"
  "isibilityGraphManager.isEdgeRequest\032-.gr"
  "pcICovisibilityGraphManager.isEdgeRespon"
  "se\"\000\022v\n\013getAllNodes\0221.grpcICovisibilityG"
  "raphManager.getAllNodesRequest\0322.grpcICo"
  "visibilityGraphManager.getAllNodesRespon"
  "se\"\000\022y\n\014suppressNode\0222.grpcICovisibility"
  "GraphManager.suppressNodeRequest\0323.grpcI"
  "CovisibilityGraphManager.suppressNodeRes"
  "ponse\"\000\022y\n\014getNeighbors\0222.grpcICovisibil"
  "ityGraphManager.getNeighborsRequest\0323.gr"
  "pcICovisibilityGraphManager.getNeighbors"
  "Response\"\000\022\216\001\n\023minimalSpanningTree\0229.grp"
  "cICovisibilityGraphManager.minimalSpanni"
  "ngTreeRequest\032:.grpcICovisibilityGraphMa"
  "nager.minimalSpanningTreeResponse\"\000\022\216\001\n\023"
  "maximalSpanningTree\0229.grpcICovisibilityG"
  "raphManager.maximalSpanningTreeRequest\032:"
  ".grpcICovisibilityGraphManager.maximalSp"
  "anningTreeResponse\"\000\022\202\001\n\017getShortestPath"
  "\0225.grpcICovisibilityGraphManager.getShor"
  "testPathRequest\0326.grpcICovisibilityGraph"
  "Manager.getShortestPathResponse\"\000\022S\n\007dis"
  "play\022\026.google.protobuf.Empty\032..grpcICovi"
  "sibilityGraphManager.displayResponse\"\000\022s"
  "\n\nsaveToFile\0220.grpcICovisibilityGraphMan"
  "ager.saveToFileRequest\0321.grpcICovisibili"
  "tyGraphManager.saveToFileResponse\"\000\022y\n\014l"
  "oadFromFile\0222.grpcICovisibilityGraphMana"
  "ger.loadFromFileRequest\0323.grpcICovisibil"
  "ityGraphManager.loadFromFileResponse\"\000\022w"
  "\n\031getConstCovisibilityGraph\022\026.google.pro"
  "tobuf.Empty\032@.grpcICovisibilityGraphMana"
  "ger.getConstCovisibilityGraphResponse\"\000\022"
  "\221\001\n\024getCovisibilityGraph\022:.grpcICovisibi"
  "lityGraphManager.getCovisibilityGraphReq"
  "uest\032;.grpcICovisibilityGraphManager.get"
  "CovisibilityGraphResponse\"\000\022l\n\024setCovisi"
  "bilityGraph\022:.grpcICovisibilityGraphMana"
  "ger.setCovisibilityGraphRequest\032\026.google"
  ".protobuf.Empty\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcICovisibilityGraphManagerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcICovisibilityGraphManagerService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcICovisibilityGraphManagerService_2eproto = {
  false, false, 4185, descriptor_table_protodef_grpcICovisibilityGraphManagerService_2eproto, "grpcICovisibilityGraphManagerService.proto", 
  &descriptor_table_grpcICovisibilityGraphManagerService_2eproto_once, descriptor_table_grpcICovisibilityGraphManagerService_2eproto_deps, 1, 31,
  schemas, file_default_instances, TableStruct_grpcICovisibilityGraphManagerService_2eproto::offsets,
  file_level_metadata_grpcICovisibilityGraphManagerService_2eproto, file_level_enum_descriptors_grpcICovisibilityGraphManagerService_2eproto, file_level_service_descriptors_grpcICovisibilityGraphManagerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcICovisibilityGraphManagerService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcICovisibilityGraphManagerService_2eproto);
  return descriptor_table_grpcICovisibilityGraphManagerService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcICovisibilityGraphManagerService_2eproto(&descriptor_table_grpcICovisibilityGraphManagerService_2eproto);
namespace grpcICovisibilityGraphManager {

// ===================================================================

class increaseEdgeRequest::_Internal {
 public:
};

increaseEdgeRequest::increaseEdgeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.increaseEdgeRequest)
}
increaseEdgeRequest::increaseEdgeRequest(const increaseEdgeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&node1_id_, &from.node1_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(weight_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.increaseEdgeRequest)
}

void increaseEdgeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&node1_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(weight_));
}

increaseEdgeRequest::~increaseEdgeRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.increaseEdgeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void increaseEdgeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void increaseEdgeRequest::ArenaDtor(void* object) {
  increaseEdgeRequest* _this = reinterpret_cast< increaseEdgeRequest* >(object);
  (void)_this;
}
void increaseEdgeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void increaseEdgeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void increaseEdgeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.increaseEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&node1_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&node1_id_)) + sizeof(weight_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* increaseEdgeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 node1_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          node1_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 node2_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          node2_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float weight = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* increaseEdgeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.increaseEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_node1_id(), target);
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_node2_id(), target);
  }

  // float weight = 3;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_weight(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.increaseEdgeRequest)
  return target;
}

size_t increaseEdgeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.increaseEdgeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node1_id());
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node2_id());
  }

  // float weight = 3;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void increaseEdgeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.increaseEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const increaseEdgeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<increaseEdgeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.increaseEdgeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.increaseEdgeRequest)
    MergeFrom(*source);
  }
}

void increaseEdgeRequest::MergeFrom(const increaseEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.increaseEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node1_id() != 0) {
    _internal_set_node1_id(from._internal_node1_id());
  }
  if (from.node2_id() != 0) {
    _internal_set_node2_id(from._internal_node2_id());
  }
  if (!(from.weight() <= 0 && from.weight() >= 0)) {
    _internal_set_weight(from._internal_weight());
  }
}

void increaseEdgeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.increaseEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void increaseEdgeRequest::CopyFrom(const increaseEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.increaseEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool increaseEdgeRequest::IsInitialized() const {
  return true;
}

void increaseEdgeRequest::InternalSwap(increaseEdgeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(increaseEdgeRequest, weight_)
      + sizeof(increaseEdgeRequest::weight_)
      - PROTOBUF_FIELD_OFFSET(increaseEdgeRequest, node1_id_)>(
          reinterpret_cast<char*>(&node1_id_),
          reinterpret_cast<char*>(&other->node1_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata increaseEdgeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class increaseEdgeResponse::_Internal {
 public:
};

increaseEdgeResponse::increaseEdgeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.increaseEdgeResponse)
}
increaseEdgeResponse::increaseEdgeResponse(const increaseEdgeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.increaseEdgeResponse)
}

void increaseEdgeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

increaseEdgeResponse::~increaseEdgeResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.increaseEdgeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void increaseEdgeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void increaseEdgeResponse::ArenaDtor(void* object) {
  increaseEdgeResponse* _this = reinterpret_cast< increaseEdgeResponse* >(object);
  (void)_this;
}
void increaseEdgeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void increaseEdgeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void increaseEdgeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.increaseEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* increaseEdgeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* increaseEdgeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.increaseEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.increaseEdgeResponse)
  return target;
}

size_t increaseEdgeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.increaseEdgeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void increaseEdgeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.increaseEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const increaseEdgeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<increaseEdgeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.increaseEdgeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.increaseEdgeResponse)
    MergeFrom(*source);
  }
}

void increaseEdgeResponse::MergeFrom(const increaseEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.increaseEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void increaseEdgeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.increaseEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void increaseEdgeResponse::CopyFrom(const increaseEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.increaseEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool increaseEdgeResponse::IsInitialized() const {
  return true;
}

void increaseEdgeResponse::InternalSwap(increaseEdgeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata increaseEdgeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class decreaseEdgeRequest::_Internal {
 public:
};

decreaseEdgeRequest::decreaseEdgeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.decreaseEdgeRequest)
}
decreaseEdgeRequest::decreaseEdgeRequest(const decreaseEdgeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&node1_id_, &from.node1_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(weight_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.decreaseEdgeRequest)
}

void decreaseEdgeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&node1_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(weight_));
}

decreaseEdgeRequest::~decreaseEdgeRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.decreaseEdgeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void decreaseEdgeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void decreaseEdgeRequest::ArenaDtor(void* object) {
  decreaseEdgeRequest* _this = reinterpret_cast< decreaseEdgeRequest* >(object);
  (void)_this;
}
void decreaseEdgeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void decreaseEdgeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void decreaseEdgeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.decreaseEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&node1_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&node1_id_)) + sizeof(weight_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* decreaseEdgeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 node1_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          node1_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 node2_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          node2_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float weight = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* decreaseEdgeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.decreaseEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_node1_id(), target);
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_node2_id(), target);
  }

  // float weight = 3;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_weight(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.decreaseEdgeRequest)
  return target;
}

size_t decreaseEdgeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.decreaseEdgeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node1_id());
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node2_id());
  }

  // float weight = 3;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void decreaseEdgeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.decreaseEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const decreaseEdgeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<decreaseEdgeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.decreaseEdgeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.decreaseEdgeRequest)
    MergeFrom(*source);
  }
}

void decreaseEdgeRequest::MergeFrom(const decreaseEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.decreaseEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node1_id() != 0) {
    _internal_set_node1_id(from._internal_node1_id());
  }
  if (from.node2_id() != 0) {
    _internal_set_node2_id(from._internal_node2_id());
  }
  if (!(from.weight() <= 0 && from.weight() >= 0)) {
    _internal_set_weight(from._internal_weight());
  }
}

void decreaseEdgeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.decreaseEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void decreaseEdgeRequest::CopyFrom(const decreaseEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.decreaseEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool decreaseEdgeRequest::IsInitialized() const {
  return true;
}

void decreaseEdgeRequest::InternalSwap(decreaseEdgeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(decreaseEdgeRequest, weight_)
      + sizeof(decreaseEdgeRequest::weight_)
      - PROTOBUF_FIELD_OFFSET(decreaseEdgeRequest, node1_id_)>(
          reinterpret_cast<char*>(&node1_id_),
          reinterpret_cast<char*>(&other->node1_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata decreaseEdgeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class decreaseEdgeResponse::_Internal {
 public:
};

decreaseEdgeResponse::decreaseEdgeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.decreaseEdgeResponse)
}
decreaseEdgeResponse::decreaseEdgeResponse(const decreaseEdgeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.decreaseEdgeResponse)
}

void decreaseEdgeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

decreaseEdgeResponse::~decreaseEdgeResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.decreaseEdgeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void decreaseEdgeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void decreaseEdgeResponse::ArenaDtor(void* object) {
  decreaseEdgeResponse* _this = reinterpret_cast< decreaseEdgeResponse* >(object);
  (void)_this;
}
void decreaseEdgeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void decreaseEdgeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void decreaseEdgeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.decreaseEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* decreaseEdgeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* decreaseEdgeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.decreaseEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.decreaseEdgeResponse)
  return target;
}

size_t decreaseEdgeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.decreaseEdgeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void decreaseEdgeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.decreaseEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const decreaseEdgeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<decreaseEdgeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.decreaseEdgeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.decreaseEdgeResponse)
    MergeFrom(*source);
  }
}

void decreaseEdgeResponse::MergeFrom(const decreaseEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.decreaseEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void decreaseEdgeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.decreaseEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void decreaseEdgeResponse::CopyFrom(const decreaseEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.decreaseEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool decreaseEdgeResponse::IsInitialized() const {
  return true;
}

void decreaseEdgeResponse::InternalSwap(decreaseEdgeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata decreaseEdgeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class removeEdgeRequest::_Internal {
 public:
};

removeEdgeRequest::removeEdgeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.removeEdgeRequest)
}
removeEdgeRequest::removeEdgeRequest(const removeEdgeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&node1_id_, &from.node1_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&node2_id_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(node2_id_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.removeEdgeRequest)
}

void removeEdgeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&node1_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&node2_id_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(node2_id_));
}

removeEdgeRequest::~removeEdgeRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.removeEdgeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void removeEdgeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void removeEdgeRequest::ArenaDtor(void* object) {
  removeEdgeRequest* _this = reinterpret_cast< removeEdgeRequest* >(object);
  (void)_this;
}
void removeEdgeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void removeEdgeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeEdgeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.removeEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&node1_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node2_id_) -
      reinterpret_cast<char*>(&node1_id_)) + sizeof(node2_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeEdgeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 node1_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          node1_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 node2_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          node2_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* removeEdgeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.removeEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_node1_id(), target);
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_node2_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.removeEdgeRequest)
  return target;
}

size_t removeEdgeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.removeEdgeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node1_id());
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node2_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void removeEdgeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.removeEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const removeEdgeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<removeEdgeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.removeEdgeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.removeEdgeRequest)
    MergeFrom(*source);
  }
}

void removeEdgeRequest::MergeFrom(const removeEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.removeEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node1_id() != 0) {
    _internal_set_node1_id(from._internal_node1_id());
  }
  if (from.node2_id() != 0) {
    _internal_set_node2_id(from._internal_node2_id());
  }
}

void removeEdgeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.removeEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void removeEdgeRequest::CopyFrom(const removeEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.removeEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeEdgeRequest::IsInitialized() const {
  return true;
}

void removeEdgeRequest::InternalSwap(removeEdgeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(removeEdgeRequest, node2_id_)
      + sizeof(removeEdgeRequest::node2_id_)
      - PROTOBUF_FIELD_OFFSET(removeEdgeRequest, node1_id_)>(
          reinterpret_cast<char*>(&node1_id_),
          reinterpret_cast<char*>(&other->node1_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata removeEdgeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class removeEdgeResponse::_Internal {
 public:
};

removeEdgeResponse::removeEdgeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.removeEdgeResponse)
}
removeEdgeResponse::removeEdgeResponse(const removeEdgeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.removeEdgeResponse)
}

void removeEdgeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

removeEdgeResponse::~removeEdgeResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.removeEdgeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void removeEdgeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void removeEdgeResponse::ArenaDtor(void* object) {
  removeEdgeResponse* _this = reinterpret_cast< removeEdgeResponse* >(object);
  (void)_this;
}
void removeEdgeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void removeEdgeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void removeEdgeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.removeEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* removeEdgeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* removeEdgeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.removeEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.removeEdgeResponse)
  return target;
}

size_t removeEdgeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.removeEdgeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void removeEdgeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.removeEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const removeEdgeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<removeEdgeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.removeEdgeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.removeEdgeResponse)
    MergeFrom(*source);
  }
}

void removeEdgeResponse::MergeFrom(const removeEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.removeEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void removeEdgeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.removeEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void removeEdgeResponse::CopyFrom(const removeEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.removeEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool removeEdgeResponse::IsInitialized() const {
  return true;
}

void removeEdgeResponse::InternalSwap(removeEdgeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata removeEdgeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getEdgeRequest::_Internal {
 public:
};

getEdgeRequest::getEdgeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getEdgeRequest)
}
getEdgeRequest::getEdgeRequest(const getEdgeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&node1_id_, &from.node1_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(weight_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getEdgeRequest)
}

void getEdgeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&node1_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&weight_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(weight_));
}

getEdgeRequest::~getEdgeRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getEdgeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getEdgeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getEdgeRequest::ArenaDtor(void* object) {
  getEdgeRequest* _this = reinterpret_cast< getEdgeRequest* >(object);
  (void)_this;
}
void getEdgeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getEdgeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getEdgeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&node1_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weight_) -
      reinterpret_cast<char*>(&node1_id_)) + sizeof(weight_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getEdgeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 node1_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          node1_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 node2_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          node2_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float weight = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getEdgeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_node1_id(), target);
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_node2_id(), target);
  }

  // float weight = 3;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_weight(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getEdgeRequest)
  return target;
}

size_t getEdgeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getEdgeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node1_id());
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node2_id());
  }

  // float weight = 3;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getEdgeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getEdgeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getEdgeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getEdgeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getEdgeRequest)
    MergeFrom(*source);
  }
}

void getEdgeRequest::MergeFrom(const getEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node1_id() != 0) {
    _internal_set_node1_id(from._internal_node1_id());
  }
  if (from.node2_id() != 0) {
    _internal_set_node2_id(from._internal_node2_id());
  }
  if (!(from.weight() <= 0 && from.weight() >= 0)) {
    _internal_set_weight(from._internal_weight());
  }
}

void getEdgeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getEdgeRequest::CopyFrom(const getEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getEdgeRequest::IsInitialized() const {
  return true;
}

void getEdgeRequest::InternalSwap(getEdgeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getEdgeRequest, weight_)
      + sizeof(getEdgeRequest::weight_)
      - PROTOBUF_FIELD_OFFSET(getEdgeRequest, node1_id_)>(
          reinterpret_cast<char*>(&node1_id_),
          reinterpret_cast<char*>(&other->node1_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getEdgeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getEdgeResponse::_Internal {
 public:
};

getEdgeResponse::getEdgeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getEdgeResponse)
}
getEdgeResponse::getEdgeResponse(const getEdgeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&weight_, &from.weight_,
    static_cast<size_t>(reinterpret_cast<char*>(&xpcfgrpcreturnvalue_) -
    reinterpret_cast<char*>(&weight_)) + sizeof(xpcfgrpcreturnvalue_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getEdgeResponse)
}

void getEdgeResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&weight_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&xpcfgrpcreturnvalue_) -
    reinterpret_cast<char*>(&weight_)) + sizeof(xpcfgrpcreturnvalue_));
}

getEdgeResponse::~getEdgeResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getEdgeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getEdgeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getEdgeResponse::ArenaDtor(void* object) {
  getEdgeResponse* _this = reinterpret_cast< getEdgeResponse* >(object);
  (void)_this;
}
void getEdgeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getEdgeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getEdgeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&weight_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xpcfgrpcreturnvalue_) -
      reinterpret_cast<char*>(&weight_)) + sizeof(xpcfgrpcreturnvalue_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getEdgeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float weight = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getEdgeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float weight = 1;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_weight(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getEdgeResponse)
  return target;
}

size_t getEdgeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getEdgeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float weight = 1;
  if (!(this->weight() <= 0 && this->weight() >= 0)) {
    total_size += 1 + 4;
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getEdgeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getEdgeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getEdgeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getEdgeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getEdgeResponse)
    MergeFrom(*source);
  }
}

void getEdgeResponse::MergeFrom(const getEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.weight() <= 0 && from.weight() >= 0)) {
    _internal_set_weight(from._internal_weight());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getEdgeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getEdgeResponse::CopyFrom(const getEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getEdgeResponse::IsInitialized() const {
  return true;
}

void getEdgeResponse::InternalSwap(getEdgeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getEdgeResponse, xpcfgrpcreturnvalue_)
      + sizeof(getEdgeResponse::xpcfgrpcreturnvalue_)
      - PROTOBUF_FIELD_OFFSET(getEdgeResponse, weight_)>(
          reinterpret_cast<char*>(&weight_),
          reinterpret_cast<char*>(&other->weight_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getEdgeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class isEdgeRequest::_Internal {
 public:
};

isEdgeRequest::isEdgeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.isEdgeRequest)
}
isEdgeRequest::isEdgeRequest(const isEdgeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&node1_id_, &from.node1_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&node2_id_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(node2_id_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.isEdgeRequest)
}

void isEdgeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&node1_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&node2_id_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(node2_id_));
}

isEdgeRequest::~isEdgeRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.isEdgeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void isEdgeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void isEdgeRequest::ArenaDtor(void* object) {
  isEdgeRequest* _this = reinterpret_cast< isEdgeRequest* >(object);
  (void)_this;
}
void isEdgeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void isEdgeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void isEdgeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.isEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&node1_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node2_id_) -
      reinterpret_cast<char*>(&node1_id_)) + sizeof(node2_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* isEdgeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 node1_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          node1_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 node2_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          node2_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* isEdgeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.isEdgeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_node1_id(), target);
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_node2_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.isEdgeRequest)
  return target;
}

size_t isEdgeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.isEdgeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node1_id());
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node2_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void isEdgeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.isEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const isEdgeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<isEdgeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.isEdgeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.isEdgeRequest)
    MergeFrom(*source);
  }
}

void isEdgeRequest::MergeFrom(const isEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.isEdgeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node1_id() != 0) {
    _internal_set_node1_id(from._internal_node1_id());
  }
  if (from.node2_id() != 0) {
    _internal_set_node2_id(from._internal_node2_id());
  }
}

void isEdgeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.isEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void isEdgeRequest::CopyFrom(const isEdgeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.isEdgeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool isEdgeRequest::IsInitialized() const {
  return true;
}

void isEdgeRequest::InternalSwap(isEdgeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(isEdgeRequest, node2_id_)
      + sizeof(isEdgeRequest::node2_id_)
      - PROTOBUF_FIELD_OFFSET(isEdgeRequest, node1_id_)>(
          reinterpret_cast<char*>(&node1_id_),
          reinterpret_cast<char*>(&other->node1_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata isEdgeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class isEdgeResponse::_Internal {
 public:
};

isEdgeResponse::isEdgeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.isEdgeResponse)
}
isEdgeResponse::isEdgeResponse(const isEdgeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.isEdgeResponse)
}

void isEdgeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = false;
}

isEdgeResponse::~isEdgeResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.isEdgeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void isEdgeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void isEdgeResponse::ArenaDtor(void* object) {
  isEdgeResponse* _this = reinterpret_cast< isEdgeResponse* >(object);
  (void)_this;
}
void isEdgeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void isEdgeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void isEdgeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.isEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* isEdgeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* isEdgeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.isEdgeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.isEdgeResponse)
  return target;
}

size_t isEdgeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.isEdgeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void isEdgeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.isEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const isEdgeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<isEdgeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.isEdgeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.isEdgeResponse)
    MergeFrom(*source);
  }
}

void isEdgeResponse::MergeFrom(const isEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.isEdgeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void isEdgeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.isEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void isEdgeResponse::CopyFrom(const isEdgeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.isEdgeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool isEdgeResponse::IsInitialized() const {
  return true;
}

void isEdgeResponse::InternalSwap(isEdgeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata isEdgeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getAllNodesRequest::_Internal {
 public:
};

getAllNodesRequest::getAllNodesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getAllNodesRequest)
}
getAllNodesRequest::getAllNodesRequest(const getAllNodesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nodes_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nodes_id().empty()) {
    nodes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nodes_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getAllNodesRequest)
}

void getAllNodesRequest::SharedCtor() {
nodes_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getAllNodesRequest::~getAllNodesRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getAllNodesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getAllNodesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  nodes_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getAllNodesRequest::ArenaDtor(void* object) {
  getAllNodesRequest* _this = reinterpret_cast< getAllNodesRequest* >(object);
  (void)_this;
}
void getAllNodesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getAllNodesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getAllNodesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getAllNodesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getAllNodesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes nodes_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_nodes_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getAllNodesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getAllNodesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes nodes_id = 1;
  if (this->nodes_id().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_nodes_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getAllNodesRequest)
  return target;
}

size_t getAllNodesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getAllNodesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes nodes_id = 1;
  if (this->nodes_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_nodes_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getAllNodesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getAllNodesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getAllNodesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getAllNodesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getAllNodesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getAllNodesRequest)
    MergeFrom(*source);
  }
}

void getAllNodesRequest::MergeFrom(const getAllNodesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getAllNodesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nodes_id().size() > 0) {
    _internal_set_nodes_id(from._internal_nodes_id());
  }
}

void getAllNodesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getAllNodesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getAllNodesRequest::CopyFrom(const getAllNodesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getAllNodesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getAllNodesRequest::IsInitialized() const {
  return true;
}

void getAllNodesRequest::InternalSwap(getAllNodesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  nodes_id_.Swap(&other->nodes_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getAllNodesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getAllNodesResponse::_Internal {
 public:
};

getAllNodesResponse::getAllNodesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getAllNodesResponse)
}
getAllNodesResponse::getAllNodesResponse(const getAllNodesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nodes_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nodes_id().empty()) {
    nodes_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nodes_id(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getAllNodesResponse)
}

void getAllNodesResponse::SharedCtor() {
nodes_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getAllNodesResponse::~getAllNodesResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getAllNodesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getAllNodesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  nodes_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getAllNodesResponse::ArenaDtor(void* object) {
  getAllNodesResponse* _this = reinterpret_cast< getAllNodesResponse* >(object);
  (void)_this;
}
void getAllNodesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getAllNodesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getAllNodesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getAllNodesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_id_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getAllNodesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes nodes_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_nodes_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getAllNodesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getAllNodesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes nodes_id = 1;
  if (this->nodes_id().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_nodes_id(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getAllNodesResponse)
  return target;
}

size_t getAllNodesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getAllNodesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes nodes_id = 1;
  if (this->nodes_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_nodes_id());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getAllNodesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getAllNodesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getAllNodesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getAllNodesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getAllNodesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getAllNodesResponse)
    MergeFrom(*source);
  }
}

void getAllNodesResponse::MergeFrom(const getAllNodesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getAllNodesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nodes_id().size() > 0) {
    _internal_set_nodes_id(from._internal_nodes_id());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getAllNodesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getAllNodesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getAllNodesResponse::CopyFrom(const getAllNodesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getAllNodesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getAllNodesResponse::IsInitialized() const {
  return true;
}

void getAllNodesResponse::InternalSwap(getAllNodesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  nodes_id_.Swap(&other->nodes_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getAllNodesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class suppressNodeRequest::_Internal {
 public:
};

suppressNodeRequest::suppressNodeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.suppressNodeRequest)
}
suppressNodeRequest::suppressNodeRequest(const suppressNodeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  node_id_ = from.node_id_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.suppressNodeRequest)
}

void suppressNodeRequest::SharedCtor() {
node_id_ = 0u;
}

suppressNodeRequest::~suppressNodeRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.suppressNodeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void suppressNodeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void suppressNodeRequest::ArenaDtor(void* object) {
  suppressNodeRequest* _this = reinterpret_cast< suppressNodeRequest* >(object);
  (void)_this;
}
void suppressNodeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void suppressNodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void suppressNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.suppressNodeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* suppressNodeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          node_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* suppressNodeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.suppressNodeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_node_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.suppressNodeRequest)
  return target;
}

size_t suppressNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.suppressNodeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void suppressNodeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.suppressNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const suppressNodeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<suppressNodeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.suppressNodeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.suppressNodeRequest)
    MergeFrom(*source);
  }
}

void suppressNodeRequest::MergeFrom(const suppressNodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.suppressNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_id() != 0) {
    _internal_set_node_id(from._internal_node_id());
  }
}

void suppressNodeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.suppressNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void suppressNodeRequest::CopyFrom(const suppressNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.suppressNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool suppressNodeRequest::IsInitialized() const {
  return true;
}

void suppressNodeRequest::InternalSwap(suppressNodeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(node_id_, other->node_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata suppressNodeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class suppressNodeResponse::_Internal {
 public:
};

suppressNodeResponse::suppressNodeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.suppressNodeResponse)
}
suppressNodeResponse::suppressNodeResponse(const suppressNodeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.suppressNodeResponse)
}

void suppressNodeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

suppressNodeResponse::~suppressNodeResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.suppressNodeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void suppressNodeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void suppressNodeResponse::ArenaDtor(void* object) {
  suppressNodeResponse* _this = reinterpret_cast< suppressNodeResponse* >(object);
  (void)_this;
}
void suppressNodeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void suppressNodeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void suppressNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.suppressNodeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* suppressNodeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* suppressNodeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.suppressNodeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.suppressNodeResponse)
  return target;
}

size_t suppressNodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.suppressNodeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void suppressNodeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.suppressNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const suppressNodeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<suppressNodeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.suppressNodeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.suppressNodeResponse)
    MergeFrom(*source);
  }
}

void suppressNodeResponse::MergeFrom(const suppressNodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.suppressNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void suppressNodeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.suppressNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void suppressNodeResponse::CopyFrom(const suppressNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.suppressNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool suppressNodeResponse::IsInitialized() const {
  return true;
}

void suppressNodeResponse::InternalSwap(suppressNodeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata suppressNodeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getNeighborsRequest::_Internal {
 public:
};

getNeighborsRequest::getNeighborsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getNeighborsRequest)
}
getNeighborsRequest::getNeighborsRequest(const getNeighborsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  neighbors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_neighbors().empty()) {
    neighbors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_neighbors(), 
      GetArena());
  }
  ::memcpy(&node_id_, &from.node_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&minweight_) -
    reinterpret_cast<char*>(&node_id_)) + sizeof(minweight_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getNeighborsRequest)
}

void getNeighborsRequest::SharedCtor() {
neighbors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&node_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&minweight_) -
    reinterpret_cast<char*>(&node_id_)) + sizeof(minweight_));
}

getNeighborsRequest::~getNeighborsRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getNeighborsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getNeighborsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  neighbors_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getNeighborsRequest::ArenaDtor(void* object) {
  getNeighborsRequest* _this = reinterpret_cast< getNeighborsRequest* >(object);
  (void)_this;
}
void getNeighborsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getNeighborsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getNeighborsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getNeighborsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  neighbors_.ClearToEmpty();
  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minweight_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(minweight_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNeighborsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          node_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float minWeight = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          minweight_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // bytes neighbors = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_neighbors();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getNeighborsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getNeighborsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_node_id(), target);
  }

  // float minWeight = 2;
  if (!(this->minweight() <= 0 && this->minweight() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_minweight(), target);
  }

  // bytes neighbors = 3;
  if (this->neighbors().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_neighbors(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getNeighborsRequest)
  return target;
}

size_t getNeighborsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getNeighborsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes neighbors = 3;
  if (this->neighbors().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_neighbors());
  }

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node_id());
  }

  // float minWeight = 2;
  if (!(this->minweight() <= 0 && this->minweight() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getNeighborsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getNeighborsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getNeighborsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getNeighborsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getNeighborsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getNeighborsRequest)
    MergeFrom(*source);
  }
}

void getNeighborsRequest::MergeFrom(const getNeighborsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getNeighborsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.neighbors().size() > 0) {
    _internal_set_neighbors(from._internal_neighbors());
  }
  if (from.node_id() != 0) {
    _internal_set_node_id(from._internal_node_id());
  }
  if (!(from.minweight() <= 0 && from.minweight() >= 0)) {
    _internal_set_minweight(from._internal_minweight());
  }
}

void getNeighborsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getNeighborsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getNeighborsRequest::CopyFrom(const getNeighborsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getNeighborsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNeighborsRequest::IsInitialized() const {
  return true;
}

void getNeighborsRequest::InternalSwap(getNeighborsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  neighbors_.Swap(&other->neighbors_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getNeighborsRequest, minweight_)
      + sizeof(getNeighborsRequest::minweight_)
      - PROTOBUF_FIELD_OFFSET(getNeighborsRequest, node_id_)>(
          reinterpret_cast<char*>(&node_id_),
          reinterpret_cast<char*>(&other->node_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getNeighborsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getNeighborsResponse::_Internal {
 public:
};

getNeighborsResponse::getNeighborsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getNeighborsResponse)
}
getNeighborsResponse::getNeighborsResponse(const getNeighborsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  neighbors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_neighbors().empty()) {
    neighbors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_neighbors(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getNeighborsResponse)
}

void getNeighborsResponse::SharedCtor() {
neighbors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getNeighborsResponse::~getNeighborsResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getNeighborsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getNeighborsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  neighbors_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getNeighborsResponse::ArenaDtor(void* object) {
  getNeighborsResponse* _this = reinterpret_cast< getNeighborsResponse* >(object);
  (void)_this;
}
void getNeighborsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getNeighborsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getNeighborsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getNeighborsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  neighbors_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNeighborsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes neighbors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_neighbors();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getNeighborsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getNeighborsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes neighbors = 1;
  if (this->neighbors().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_neighbors(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getNeighborsResponse)
  return target;
}

size_t getNeighborsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getNeighborsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes neighbors = 1;
  if (this->neighbors().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_neighbors());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getNeighborsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getNeighborsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getNeighborsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getNeighborsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getNeighborsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getNeighborsResponse)
    MergeFrom(*source);
  }
}

void getNeighborsResponse::MergeFrom(const getNeighborsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getNeighborsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.neighbors().size() > 0) {
    _internal_set_neighbors(from._internal_neighbors());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getNeighborsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getNeighborsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getNeighborsResponse::CopyFrom(const getNeighborsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getNeighborsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNeighborsResponse::IsInitialized() const {
  return true;
}

void getNeighborsResponse::InternalSwap(getNeighborsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  neighbors_.Swap(&other->neighbors_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNeighborsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class minimalSpanningTreeRequest::_Internal {
 public:
};

minimalSpanningTreeRequest::minimalSpanningTreeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
}
minimalSpanningTreeRequest::minimalSpanningTreeRequest(const minimalSpanningTreeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edges_weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_edges_weights().empty()) {
    edges_weights_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_edges_weights(), 
      GetArena());
  }
  mintotalweights_ = from.mintotalweights_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
}

void minimalSpanningTreeRequest::SharedCtor() {
edges_weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
mintotalweights_ = 0;
}

minimalSpanningTreeRequest::~minimalSpanningTreeRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void minimalSpanningTreeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  edges_weights_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void minimalSpanningTreeRequest::ArenaDtor(void* object) {
  minimalSpanningTreeRequest* _this = reinterpret_cast< minimalSpanningTreeRequest* >(object);
  (void)_this;
}
void minimalSpanningTreeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void minimalSpanningTreeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void minimalSpanningTreeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edges_weights_.ClearToEmpty();
  mintotalweights_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* minimalSpanningTreeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes edges_weights = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_edges_weights();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float minTotalWeights = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          mintotalweights_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* minimalSpanningTreeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes edges_weights = 1;
  if (this->edges_weights().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_edges_weights(), target);
  }

  // float minTotalWeights = 2;
  if (!(this->mintotalweights() <= 0 && this->mintotalweights() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_mintotalweights(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
  return target;
}

size_t minimalSpanningTreeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes edges_weights = 1;
  if (this->edges_weights().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_edges_weights());
  }

  // float minTotalWeights = 2;
  if (!(this->mintotalweights() <= 0 && this->mintotalweights() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void minimalSpanningTreeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const minimalSpanningTreeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<minimalSpanningTreeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
    MergeFrom(*source);
  }
}

void minimalSpanningTreeRequest::MergeFrom(const minimalSpanningTreeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.edges_weights().size() > 0) {
    _internal_set_edges_weights(from._internal_edges_weights());
  }
  if (!(from.mintotalweights() <= 0 && from.mintotalweights() >= 0)) {
    _internal_set_mintotalweights(from._internal_mintotalweights());
  }
}

void minimalSpanningTreeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void minimalSpanningTreeRequest::CopyFrom(const minimalSpanningTreeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.minimalSpanningTreeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool minimalSpanningTreeRequest::IsInitialized() const {
  return true;
}

void minimalSpanningTreeRequest::InternalSwap(minimalSpanningTreeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  edges_weights_.Swap(&other->edges_weights_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(mintotalweights_, other->mintotalweights_);
}

::PROTOBUF_NAMESPACE_ID::Metadata minimalSpanningTreeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class minimalSpanningTreeResponse::_Internal {
 public:
};

minimalSpanningTreeResponse::minimalSpanningTreeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
}
minimalSpanningTreeResponse::minimalSpanningTreeResponse(const minimalSpanningTreeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edges_weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_edges_weights().empty()) {
    edges_weights_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_edges_weights(), 
      GetArena());
  }
  ::memcpy(&mintotalweights_, &from.mintotalweights_,
    static_cast<size_t>(reinterpret_cast<char*>(&xpcfgrpcreturnvalue_) -
    reinterpret_cast<char*>(&mintotalweights_)) + sizeof(xpcfgrpcreturnvalue_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
}

void minimalSpanningTreeResponse::SharedCtor() {
edges_weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mintotalweights_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&xpcfgrpcreturnvalue_) -
    reinterpret_cast<char*>(&mintotalweights_)) + sizeof(xpcfgrpcreturnvalue_));
}

minimalSpanningTreeResponse::~minimalSpanningTreeResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void minimalSpanningTreeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  edges_weights_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void minimalSpanningTreeResponse::ArenaDtor(void* object) {
  minimalSpanningTreeResponse* _this = reinterpret_cast< minimalSpanningTreeResponse* >(object);
  (void)_this;
}
void minimalSpanningTreeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void minimalSpanningTreeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void minimalSpanningTreeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edges_weights_.ClearToEmpty();
  ::memset(&mintotalweights_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xpcfgrpcreturnvalue_) -
      reinterpret_cast<char*>(&mintotalweights_)) + sizeof(xpcfgrpcreturnvalue_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* minimalSpanningTreeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes edges_weights = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_edges_weights();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float minTotalWeights = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          mintotalweights_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* minimalSpanningTreeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes edges_weights = 1;
  if (this->edges_weights().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_edges_weights(), target);
  }

  // float minTotalWeights = 2;
  if (!(this->mintotalweights() <= 0 && this->mintotalweights() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_mintotalweights(), target);
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(3, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
  return target;
}

size_t minimalSpanningTreeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes edges_weights = 1;
  if (this->edges_weights().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_edges_weights());
  }

  // float minTotalWeights = 2;
  if (!(this->mintotalweights() <= 0 && this->mintotalweights() >= 0)) {
    total_size += 1 + 4;
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void minimalSpanningTreeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const minimalSpanningTreeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<minimalSpanningTreeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
    MergeFrom(*source);
  }
}

void minimalSpanningTreeResponse::MergeFrom(const minimalSpanningTreeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.edges_weights().size() > 0) {
    _internal_set_edges_weights(from._internal_edges_weights());
  }
  if (!(from.mintotalweights() <= 0 && from.mintotalweights() >= 0)) {
    _internal_set_mintotalweights(from._internal_mintotalweights());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void minimalSpanningTreeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void minimalSpanningTreeResponse::CopyFrom(const minimalSpanningTreeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.minimalSpanningTreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool minimalSpanningTreeResponse::IsInitialized() const {
  return true;
}

void minimalSpanningTreeResponse::InternalSwap(minimalSpanningTreeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  edges_weights_.Swap(&other->edges_weights_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(minimalSpanningTreeResponse, xpcfgrpcreturnvalue_)
      + sizeof(minimalSpanningTreeResponse::xpcfgrpcreturnvalue_)
      - PROTOBUF_FIELD_OFFSET(minimalSpanningTreeResponse, mintotalweights_)>(
          reinterpret_cast<char*>(&mintotalweights_),
          reinterpret_cast<char*>(&other->mintotalweights_));
}

::PROTOBUF_NAMESPACE_ID::Metadata minimalSpanningTreeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class maximalSpanningTreeRequest::_Internal {
 public:
};

maximalSpanningTreeRequest::maximalSpanningTreeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
}
maximalSpanningTreeRequest::maximalSpanningTreeRequest(const maximalSpanningTreeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edges_weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_edges_weights().empty()) {
    edges_weights_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_edges_weights(), 
      GetArena());
  }
  maxtotalweights_ = from.maxtotalweights_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
}

void maximalSpanningTreeRequest::SharedCtor() {
edges_weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
maxtotalweights_ = 0;
}

maximalSpanningTreeRequest::~maximalSpanningTreeRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void maximalSpanningTreeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  edges_weights_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void maximalSpanningTreeRequest::ArenaDtor(void* object) {
  maximalSpanningTreeRequest* _this = reinterpret_cast< maximalSpanningTreeRequest* >(object);
  (void)_this;
}
void maximalSpanningTreeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void maximalSpanningTreeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void maximalSpanningTreeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edges_weights_.ClearToEmpty();
  maxtotalweights_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* maximalSpanningTreeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes edges_weights = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_edges_weights();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float maxTotalWeights = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          maxtotalweights_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* maximalSpanningTreeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes edges_weights = 1;
  if (this->edges_weights().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_edges_weights(), target);
  }

  // float maxTotalWeights = 2;
  if (!(this->maxtotalweights() <= 0 && this->maxtotalweights() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_maxtotalweights(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
  return target;
}

size_t maximalSpanningTreeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes edges_weights = 1;
  if (this->edges_weights().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_edges_weights());
  }

  // float maxTotalWeights = 2;
  if (!(this->maxtotalweights() <= 0 && this->maxtotalweights() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void maximalSpanningTreeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const maximalSpanningTreeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<maximalSpanningTreeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
    MergeFrom(*source);
  }
}

void maximalSpanningTreeRequest::MergeFrom(const maximalSpanningTreeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.edges_weights().size() > 0) {
    _internal_set_edges_weights(from._internal_edges_weights());
  }
  if (!(from.maxtotalweights() <= 0 && from.maxtotalweights() >= 0)) {
    _internal_set_maxtotalweights(from._internal_maxtotalweights());
  }
}

void maximalSpanningTreeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void maximalSpanningTreeRequest::CopyFrom(const maximalSpanningTreeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.maximalSpanningTreeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool maximalSpanningTreeRequest::IsInitialized() const {
  return true;
}

void maximalSpanningTreeRequest::InternalSwap(maximalSpanningTreeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  edges_weights_.Swap(&other->edges_weights_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(maxtotalweights_, other->maxtotalweights_);
}

::PROTOBUF_NAMESPACE_ID::Metadata maximalSpanningTreeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class maximalSpanningTreeResponse::_Internal {
 public:
};

maximalSpanningTreeResponse::maximalSpanningTreeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
}
maximalSpanningTreeResponse::maximalSpanningTreeResponse(const maximalSpanningTreeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edges_weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_edges_weights().empty()) {
    edges_weights_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_edges_weights(), 
      GetArena());
  }
  ::memcpy(&maxtotalweights_, &from.maxtotalweights_,
    static_cast<size_t>(reinterpret_cast<char*>(&xpcfgrpcreturnvalue_) -
    reinterpret_cast<char*>(&maxtotalweights_)) + sizeof(xpcfgrpcreturnvalue_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
}

void maximalSpanningTreeResponse::SharedCtor() {
edges_weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&maxtotalweights_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&xpcfgrpcreturnvalue_) -
    reinterpret_cast<char*>(&maxtotalweights_)) + sizeof(xpcfgrpcreturnvalue_));
}

maximalSpanningTreeResponse::~maximalSpanningTreeResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void maximalSpanningTreeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  edges_weights_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void maximalSpanningTreeResponse::ArenaDtor(void* object) {
  maximalSpanningTreeResponse* _this = reinterpret_cast< maximalSpanningTreeResponse* >(object);
  (void)_this;
}
void maximalSpanningTreeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void maximalSpanningTreeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void maximalSpanningTreeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edges_weights_.ClearToEmpty();
  ::memset(&maxtotalweights_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&xpcfgrpcreturnvalue_) -
      reinterpret_cast<char*>(&maxtotalweights_)) + sizeof(xpcfgrpcreturnvalue_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* maximalSpanningTreeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes edges_weights = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_edges_weights();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float maxTotalWeights = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          maxtotalweights_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* maximalSpanningTreeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes edges_weights = 1;
  if (this->edges_weights().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_edges_weights(), target);
  }

  // float maxTotalWeights = 2;
  if (!(this->maxtotalweights() <= 0 && this->maxtotalweights() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_maxtotalweights(), target);
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(3, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
  return target;
}

size_t maximalSpanningTreeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes edges_weights = 1;
  if (this->edges_weights().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_edges_weights());
  }

  // float maxTotalWeights = 2;
  if (!(this->maxtotalweights() <= 0 && this->maxtotalweights() >= 0)) {
    total_size += 1 + 4;
  }

  // sint32 xpcfGrpcReturnValue = 3;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void maximalSpanningTreeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const maximalSpanningTreeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<maximalSpanningTreeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
    MergeFrom(*source);
  }
}

void maximalSpanningTreeResponse::MergeFrom(const maximalSpanningTreeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.edges_weights().size() > 0) {
    _internal_set_edges_weights(from._internal_edges_weights());
  }
  if (!(from.maxtotalweights() <= 0 && from.maxtotalweights() >= 0)) {
    _internal_set_maxtotalweights(from._internal_maxtotalweights());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void maximalSpanningTreeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void maximalSpanningTreeResponse::CopyFrom(const maximalSpanningTreeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.maximalSpanningTreeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool maximalSpanningTreeResponse::IsInitialized() const {
  return true;
}

void maximalSpanningTreeResponse::InternalSwap(maximalSpanningTreeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  edges_weights_.Swap(&other->edges_weights_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(maximalSpanningTreeResponse, xpcfgrpcreturnvalue_)
      + sizeof(maximalSpanningTreeResponse::xpcfgrpcreturnvalue_)
      - PROTOBUF_FIELD_OFFSET(maximalSpanningTreeResponse, maxtotalweights_)>(
          reinterpret_cast<char*>(&maxtotalweights_),
          reinterpret_cast<char*>(&other->maxtotalweights_));
}

::PROTOBUF_NAMESPACE_ID::Metadata maximalSpanningTreeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getShortestPathRequest::_Internal {
 public:
};

getShortestPathRequest::getShortestPathRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getShortestPathRequest)
}
getShortestPathRequest::getShortestPathRequest(const getShortestPathRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  ::memcpy(&node1_id_, &from.node1_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&node2_id_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(node2_id_));
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getShortestPathRequest)
}

void getShortestPathRequest::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&node1_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&node2_id_) -
    reinterpret_cast<char*>(&node1_id_)) + sizeof(node2_id_));
}

getShortestPathRequest::~getShortestPathRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getShortestPathRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getShortestPathRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getShortestPathRequest::ArenaDtor(void* object) {
  getShortestPathRequest* _this = reinterpret_cast< getShortestPathRequest* >(object);
  (void)_this;
}
void getShortestPathRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getShortestPathRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getShortestPathRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getShortestPathRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  ::memset(&node1_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node2_id_) -
      reinterpret_cast<char*>(&node1_id_)) + sizeof(node2_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getShortestPathRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 node1_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          node1_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 node2_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          node2_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes path = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getShortestPathRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getShortestPathRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_node1_id(), target);
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_node2_id(), target);
  }

  // bytes path = 3;
  if (this->path().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getShortestPathRequest)
  return target;
}

size_t getShortestPathRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getShortestPathRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  // uint32 node1_id = 1;
  if (this->node1_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node1_id());
  }

  // uint32 node2_id = 2;
  if (this->node2_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_node2_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getShortestPathRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getShortestPathRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getShortestPathRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getShortestPathRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getShortestPathRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getShortestPathRequest)
    MergeFrom(*source);
  }
}

void getShortestPathRequest::MergeFrom(const getShortestPathRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getShortestPathRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.node1_id() != 0) {
    _internal_set_node1_id(from._internal_node1_id());
  }
  if (from.node2_id() != 0) {
    _internal_set_node2_id(from._internal_node2_id());
  }
}

void getShortestPathRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getShortestPathRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getShortestPathRequest::CopyFrom(const getShortestPathRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getShortestPathRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getShortestPathRequest::IsInitialized() const {
  return true;
}

void getShortestPathRequest::InternalSwap(getShortestPathRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getShortestPathRequest, node2_id_)
      + sizeof(getShortestPathRequest::node2_id_)
      - PROTOBUF_FIELD_OFFSET(getShortestPathRequest, node1_id_)>(
          reinterpret_cast<char*>(&node1_id_),
          reinterpret_cast<char*>(&other->node1_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getShortestPathRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getShortestPathResponse::_Internal {
 public:
};

getShortestPathResponse::getShortestPathResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getShortestPathResponse)
}
getShortestPathResponse::getShortestPathResponse(const getShortestPathResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getShortestPathResponse)
}

void getShortestPathResponse::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getShortestPathResponse::~getShortestPathResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getShortestPathResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getShortestPathResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getShortestPathResponse::ArenaDtor(void* object) {
  getShortestPathResponse* _this = reinterpret_cast< getShortestPathResponse* >(object);
  (void)_this;
}
void getShortestPathResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getShortestPathResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getShortestPathResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getShortestPathResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getShortestPathResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getShortestPathResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getShortestPathResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes path = 1;
  if (this->path().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_path(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getShortestPathResponse)
  return target;
}

size_t getShortestPathResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getShortestPathResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_path());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getShortestPathResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getShortestPathResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getShortestPathResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getShortestPathResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getShortestPathResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getShortestPathResponse)
    MergeFrom(*source);
  }
}

void getShortestPathResponse::MergeFrom(const getShortestPathResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getShortestPathResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getShortestPathResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getShortestPathResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getShortestPathResponse::CopyFrom(const getShortestPathResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getShortestPathResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getShortestPathResponse::IsInitialized() const {
  return true;
}

void getShortestPathResponse::InternalSwap(getShortestPathResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getShortestPathResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class displayResponse::_Internal {
 public:
};

displayResponse::displayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.displayResponse)
}
displayResponse::displayResponse(const displayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.displayResponse)
}

void displayResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

displayResponse::~displayResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.displayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void displayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void displayResponse::ArenaDtor(void* object) {
  displayResponse* _this = reinterpret_cast< displayResponse* >(object);
  (void)_this;
}
void displayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void displayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void displayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.displayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* displayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* displayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.displayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.displayResponse)
  return target;
}

size_t displayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.displayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void displayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.displayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const displayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<displayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.displayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.displayResponse)
    MergeFrom(*source);
  }
}

void displayResponse::MergeFrom(const displayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.displayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void displayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.displayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void displayResponse::CopyFrom(const displayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.displayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool displayResponse::IsInitialized() const {
  return true;
}

void displayResponse::InternalSwap(displayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata displayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class saveToFileRequest::_Internal {
 public:
};

saveToFileRequest::saveToFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.saveToFileRequest)
}
saveToFileRequest::saveToFileRequest(const saveToFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.saveToFileRequest)
}

void saveToFileRequest::SharedCtor() {
file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

saveToFileRequest::~saveToFileRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.saveToFileRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void saveToFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void saveToFileRequest::ArenaDtor(void* object) {
  saveToFileRequest* _this = reinterpret_cast< saveToFileRequest* >(object);
  (void)_this;
}
void saveToFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void saveToFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void saveToFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.saveToFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpcICovisibilityGraphManager.saveToFileRequest.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* saveToFileRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.saveToFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcICovisibilityGraphManager.saveToFileRequest.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.saveToFileRequest)
  return target;
}

size_t saveToFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.saveToFileRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void saveToFileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.saveToFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const saveToFileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<saveToFileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.saveToFileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.saveToFileRequest)
    MergeFrom(*source);
  }
}

void saveToFileRequest::MergeFrom(const saveToFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.saveToFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {
    _internal_set_file(from._internal_file());
  }
}

void saveToFileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.saveToFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void saveToFileRequest::CopyFrom(const saveToFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.saveToFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileRequest::IsInitialized() const {
  return true;
}

void saveToFileRequest::InternalSwap(saveToFileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class saveToFileResponse::_Internal {
 public:
};

saveToFileResponse::saveToFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.saveToFileResponse)
}
saveToFileResponse::saveToFileResponse(const saveToFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.saveToFileResponse)
}

void saveToFileResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

saveToFileResponse::~saveToFileResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.saveToFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void saveToFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void saveToFileResponse::ArenaDtor(void* object) {
  saveToFileResponse* _this = reinterpret_cast< saveToFileResponse* >(object);
  (void)_this;
}
void saveToFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void saveToFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void saveToFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.saveToFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* saveToFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.saveToFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.saveToFileResponse)
  return target;
}

size_t saveToFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.saveToFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void saveToFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.saveToFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const saveToFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<saveToFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.saveToFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.saveToFileResponse)
    MergeFrom(*source);
  }
}

void saveToFileResponse::MergeFrom(const saveToFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.saveToFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void saveToFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.saveToFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void saveToFileResponse::CopyFrom(const saveToFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.saveToFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileResponse::IsInitialized() const {
  return true;
}

void saveToFileResponse::InternalSwap(saveToFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class loadFromFileRequest::_Internal {
 public:
};

loadFromFileRequest::loadFromFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.loadFromFileRequest)
}
loadFromFileRequest::loadFromFileRequest(const loadFromFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.loadFromFileRequest)
}

void loadFromFileRequest::SharedCtor() {
file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

loadFromFileRequest::~loadFromFileRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.loadFromFileRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void loadFromFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void loadFromFileRequest::ArenaDtor(void* object) {
  loadFromFileRequest* _this = reinterpret_cast< loadFromFileRequest* >(object);
  (void)_this;
}
void loadFromFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void loadFromFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void loadFromFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.loadFromFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpcICovisibilityGraphManager.loadFromFileRequest.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* loadFromFileRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.loadFromFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcICovisibilityGraphManager.loadFromFileRequest.file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.loadFromFileRequest)
  return target;
}

size_t loadFromFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.loadFromFileRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void loadFromFileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.loadFromFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const loadFromFileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<loadFromFileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.loadFromFileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.loadFromFileRequest)
    MergeFrom(*source);
  }
}

void loadFromFileRequest::MergeFrom(const loadFromFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.loadFromFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {
    _internal_set_file(from._internal_file());
  }
}

void loadFromFileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.loadFromFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loadFromFileRequest::CopyFrom(const loadFromFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.loadFromFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileRequest::IsInitialized() const {
  return true;
}

void loadFromFileRequest::InternalSwap(loadFromFileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class loadFromFileResponse::_Internal {
 public:
};

loadFromFileResponse::loadFromFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.loadFromFileResponse)
}
loadFromFileResponse::loadFromFileResponse(const loadFromFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.loadFromFileResponse)
}

void loadFromFileResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

loadFromFileResponse::~loadFromFileResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.loadFromFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void loadFromFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void loadFromFileResponse::ArenaDtor(void* object) {
  loadFromFileResponse* _this = reinterpret_cast< loadFromFileResponse* >(object);
  (void)_this;
}
void loadFromFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void loadFromFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void loadFromFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.loadFromFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* loadFromFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.loadFromFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.loadFromFileResponse)
  return target;
}

size_t loadFromFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.loadFromFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void loadFromFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.loadFromFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const loadFromFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<loadFromFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.loadFromFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.loadFromFileResponse)
    MergeFrom(*source);
  }
}

void loadFromFileResponse::MergeFrom(const loadFromFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.loadFromFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void loadFromFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.loadFromFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loadFromFileResponse::CopyFrom(const loadFromFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.loadFromFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileResponse::IsInitialized() const {
  return true;
}

void loadFromFileResponse::InternalSwap(loadFromFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getConstCovisibilityGraphResponse::_Internal {
 public:
};

getConstCovisibilityGraphResponse::getConstCovisibilityGraphResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
}
getConstCovisibilityGraphResponse::getConstCovisibilityGraphResponse(const getConstCovisibilityGraphResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
}

void getConstCovisibilityGraphResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getConstCovisibilityGraphResponse::~getConstCovisibilityGraphResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getConstCovisibilityGraphResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getConstCovisibilityGraphResponse::ArenaDtor(void* object) {
  getConstCovisibilityGraphResponse* _this = reinterpret_cast< getConstCovisibilityGraphResponse* >(object);
  (void)_this;
}
void getConstCovisibilityGraphResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getConstCovisibilityGraphResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getConstCovisibilityGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getConstCovisibilityGraphResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getConstCovisibilityGraphResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
  return target;
}

size_t getConstCovisibilityGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getConstCovisibilityGraphResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getConstCovisibilityGraphResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getConstCovisibilityGraphResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
    MergeFrom(*source);
  }
}

void getConstCovisibilityGraphResponse::MergeFrom(const getConstCovisibilityGraphResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getConstCovisibilityGraphResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getConstCovisibilityGraphResponse::CopyFrom(const getConstCovisibilityGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getConstCovisibilityGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getConstCovisibilityGraphResponse::IsInitialized() const {
  return true;
}

void getConstCovisibilityGraphResponse::InternalSwap(getConstCovisibilityGraphResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getConstCovisibilityGraphResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getCovisibilityGraphRequest::_Internal {
 public:
};

getCovisibilityGraphRequest::getCovisibilityGraphRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
}
getCovisibilityGraphRequest::getCovisibilityGraphRequest(const getCovisibilityGraphRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  covisibilitygraph_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_covisibilitygraph().empty()) {
    covisibilitygraph_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_covisibilitygraph(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
}

void getCovisibilityGraphRequest::SharedCtor() {
covisibilitygraph_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getCovisibilityGraphRequest::~getCovisibilityGraphRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getCovisibilityGraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  covisibilitygraph_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getCovisibilityGraphRequest::ArenaDtor(void* object) {
  getCovisibilityGraphRequest* _this = reinterpret_cast< getCovisibilityGraphRequest* >(object);
  (void)_this;
}
void getCovisibilityGraphRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getCovisibilityGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getCovisibilityGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  covisibilitygraph_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getCovisibilityGraphRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes covisibilityGraph = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_covisibilitygraph();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getCovisibilityGraphRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes covisibilityGraph = 1;
  if (this->covisibilitygraph().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_covisibilitygraph(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
  return target;
}

size_t getCovisibilityGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes covisibilityGraph = 1;
  if (this->covisibilitygraph().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_covisibilitygraph());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getCovisibilityGraphRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getCovisibilityGraphRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getCovisibilityGraphRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
    MergeFrom(*source);
  }
}

void getCovisibilityGraphRequest::MergeFrom(const getCovisibilityGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.covisibilitygraph().size() > 0) {
    _internal_set_covisibilitygraph(from._internal_covisibilitygraph());
  }
}

void getCovisibilityGraphRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getCovisibilityGraphRequest::CopyFrom(const getCovisibilityGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getCovisibilityGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getCovisibilityGraphRequest::IsInitialized() const {
  return true;
}

void getCovisibilityGraphRequest::InternalSwap(getCovisibilityGraphRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  covisibilitygraph_.Swap(&other->covisibilitygraph_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getCovisibilityGraphRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getCovisibilityGraphResponse::_Internal {
 public:
};

getCovisibilityGraphResponse::getCovisibilityGraphResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
}
getCovisibilityGraphResponse::getCovisibilityGraphResponse(const getCovisibilityGraphResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  covisibilitygraph_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_covisibilitygraph().empty()) {
    covisibilitygraph_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_covisibilitygraph(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
}

void getCovisibilityGraphResponse::SharedCtor() {
covisibilitygraph_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getCovisibilityGraphResponse::~getCovisibilityGraphResponse() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getCovisibilityGraphResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  covisibilitygraph_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getCovisibilityGraphResponse::ArenaDtor(void* object) {
  getCovisibilityGraphResponse* _this = reinterpret_cast< getCovisibilityGraphResponse* >(object);
  (void)_this;
}
void getCovisibilityGraphResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getCovisibilityGraphResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getCovisibilityGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  covisibilitygraph_.ClearToEmpty();
  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getCovisibilityGraphResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes covisibilityGraph = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_covisibilitygraph();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getCovisibilityGraphResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes covisibilityGraph = 1;
  if (this->covisibilitygraph().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_covisibilitygraph(), target);
  }

  // bytes xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
  return target;
}

size_t getCovisibilityGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes covisibilityGraph = 1;
  if (this->covisibilitygraph().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_covisibilitygraph());
  }

  // bytes xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getCovisibilityGraphResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getCovisibilityGraphResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getCovisibilityGraphResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
    MergeFrom(*source);
  }
}

void getCovisibilityGraphResponse::MergeFrom(const getCovisibilityGraphResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.covisibilitygraph().size() > 0) {
    _internal_set_covisibilitygraph(from._internal_covisibilitygraph());
  }
  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getCovisibilityGraphResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getCovisibilityGraphResponse::CopyFrom(const getCovisibilityGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.getCovisibilityGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getCovisibilityGraphResponse::IsInitialized() const {
  return true;
}

void getCovisibilityGraphResponse::InternalSwap(getCovisibilityGraphResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  covisibilitygraph_.Swap(&other->covisibilitygraph_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getCovisibilityGraphResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setCovisibilityGraphRequest::_Internal {
 public:
};

setCovisibilityGraphRequest::setCovisibilityGraphRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
}
setCovisibilityGraphRequest::setCovisibilityGraphRequest(const setCovisibilityGraphRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  covisibilitygraph_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_covisibilitygraph().empty()) {
    covisibilitygraph_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_covisibilitygraph(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
}

void setCovisibilityGraphRequest::SharedCtor() {
covisibilitygraph_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setCovisibilityGraphRequest::~setCovisibilityGraphRequest() {
  // @@protoc_insertion_point(destructor:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setCovisibilityGraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  covisibilitygraph_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setCovisibilityGraphRequest::ArenaDtor(void* object) {
  setCovisibilityGraphRequest* _this = reinterpret_cast< setCovisibilityGraphRequest* >(object);
  (void)_this;
}
void setCovisibilityGraphRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setCovisibilityGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setCovisibilityGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  covisibilitygraph_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setCovisibilityGraphRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes covisibilityGraph = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_covisibilitygraph();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setCovisibilityGraphRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes covisibilityGraph = 1;
  if (this->covisibilitygraph().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_covisibilitygraph(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
  return target;
}

size_t setCovisibilityGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes covisibilityGraph = 1;
  if (this->covisibilitygraph().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_covisibilitygraph());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setCovisibilityGraphRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setCovisibilityGraphRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setCovisibilityGraphRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
    MergeFrom(*source);
  }
}

void setCovisibilityGraphRequest::MergeFrom(const setCovisibilityGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.covisibilitygraph().size() > 0) {
    _internal_set_covisibilitygraph(from._internal_covisibilitygraph());
  }
}

void setCovisibilityGraphRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setCovisibilityGraphRequest::CopyFrom(const setCovisibilityGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICovisibilityGraphManager.setCovisibilityGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setCovisibilityGraphRequest::IsInitialized() const {
  return true;
}

void setCovisibilityGraphRequest::InternalSwap(setCovisibilityGraphRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  covisibilitygraph_.Swap(&other->covisibilitygraph_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setCovisibilityGraphRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcICovisibilityGraphManager
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::increaseEdgeRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::increaseEdgeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::increaseEdgeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::increaseEdgeResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::increaseEdgeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::increaseEdgeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::decreaseEdgeRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::decreaseEdgeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::decreaseEdgeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::decreaseEdgeResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::decreaseEdgeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::decreaseEdgeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::removeEdgeRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::removeEdgeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::removeEdgeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::removeEdgeResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::removeEdgeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::removeEdgeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getEdgeRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getEdgeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getEdgeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getEdgeResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getEdgeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getEdgeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::isEdgeRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::isEdgeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::isEdgeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::isEdgeResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::isEdgeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::isEdgeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getAllNodesRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getAllNodesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getAllNodesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getAllNodesResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getAllNodesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getAllNodesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::suppressNodeRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::suppressNodeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::suppressNodeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::suppressNodeResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::suppressNodeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::suppressNodeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getNeighborsRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getNeighborsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getNeighborsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getNeighborsResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getNeighborsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getNeighborsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::minimalSpanningTreeRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::minimalSpanningTreeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::minimalSpanningTreeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::minimalSpanningTreeResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::minimalSpanningTreeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::minimalSpanningTreeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::maximalSpanningTreeRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::maximalSpanningTreeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::maximalSpanningTreeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::maximalSpanningTreeResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::maximalSpanningTreeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::maximalSpanningTreeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getShortestPathRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getShortestPathRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getShortestPathRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getShortestPathResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getShortestPathResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getShortestPathResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::displayResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::displayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::displayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::saveToFileRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::saveToFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::saveToFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::saveToFileResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::saveToFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::saveToFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::loadFromFileRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::loadFromFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::loadFromFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::loadFromFileResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::loadFromFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::loadFromFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getConstCovisibilityGraphResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getConstCovisibilityGraphResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getConstCovisibilityGraphResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getCovisibilityGraphRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getCovisibilityGraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getCovisibilityGraphRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::getCovisibilityGraphResponse* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::getCovisibilityGraphResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::getCovisibilityGraphResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICovisibilityGraphManager::setCovisibilityGraphRequest* Arena::CreateMaybeMessage< ::grpcICovisibilityGraphManager::setCovisibilityGraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICovisibilityGraphManager::setCovisibilityGraphRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
