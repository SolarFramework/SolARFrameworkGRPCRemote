// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcI3DPointsViewerService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcI3DPointsViewerService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcI3DPointsViewerService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcI3DPointsViewerService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcI3DPointsViewerService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcI3DPointsViewerService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcI3DPointsViewerService_2eproto_metadata_getter(int index);
namespace grpcI3DPointsViewer {
class display_grpc0Request;
struct display_grpc0RequestDefaultTypeInternal;
extern display_grpc0RequestDefaultTypeInternal _display_grpc0Request_default_instance_;
class display_grpc0Response;
struct display_grpc0ResponseDefaultTypeInternal;
extern display_grpc0ResponseDefaultTypeInternal _display_grpc0Response_default_instance_;
class display_grpc1Request;
struct display_grpc1RequestDefaultTypeInternal;
extern display_grpc1RequestDefaultTypeInternal _display_grpc1Request_default_instance_;
class display_grpc1Response;
struct display_grpc1ResponseDefaultTypeInternal;
extern display_grpc1ResponseDefaultTypeInternal _display_grpc1Response_default_instance_;
}  // namespace grpcI3DPointsViewer
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcI3DPointsViewer::display_grpc0Request* Arena::CreateMaybeMessage<::grpcI3DPointsViewer::display_grpc0Request>(Arena*);
template<> ::grpcI3DPointsViewer::display_grpc0Response* Arena::CreateMaybeMessage<::grpcI3DPointsViewer::display_grpc0Response>(Arena*);
template<> ::grpcI3DPointsViewer::display_grpc1Request* Arena::CreateMaybeMessage<::grpcI3DPointsViewer::display_grpc1Request>(Arena*);
template<> ::grpcI3DPointsViewer::display_grpc1Response* Arena::CreateMaybeMessage<::grpcI3DPointsViewer::display_grpc1Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcI3DPointsViewer {

// ===================================================================

class display_grpc0Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DPointsViewer.display_grpc0Request) */ {
 public:
  inline display_grpc0Request() : display_grpc0Request(nullptr) {}
  virtual ~display_grpc0Request();
  explicit constexpr display_grpc0Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  display_grpc0Request(const display_grpc0Request& from);
  display_grpc0Request(display_grpc0Request&& from) noexcept
    : display_grpc0Request() {
    *this = ::std::move(from);
  }

  inline display_grpc0Request& operator=(const display_grpc0Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline display_grpc0Request& operator=(display_grpc0Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const display_grpc0Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const display_grpc0Request* internal_default_instance() {
    return reinterpret_cast<const display_grpc0Request*>(
               &_display_grpc0Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(display_grpc0Request& a, display_grpc0Request& b) {
    a.Swap(&b);
  }
  inline void Swap(display_grpc0Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(display_grpc0Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline display_grpc0Request* New() const final {
    return CreateMaybeMessage<display_grpc0Request>(nullptr);
  }

  display_grpc0Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<display_grpc0Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const display_grpc0Request& from);
  void MergeFrom(const display_grpc0Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(display_grpc0Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DPointsViewer.display_grpc0Request";
  }
  protected:
  explicit display_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DPointsViewerService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 1,
    kPoseFieldNumber = 2,
    kKeyframePosesFieldNumber = 3,
    kFramePosesFieldNumber = 4,
    kPoints2FieldNumber = 5,
    kKeyframePoses2FieldNumber = 6,
  };
  // bytes points = 1;
  void clear_points();
  const std::string& points() const;
  void set_points(const std::string& value);
  void set_points(std::string&& value);
  void set_points(const char* value);
  void set_points(const void* value, size_t size);
  std::string* mutable_points();
  std::string* release_points();
  void set_allocated_points(std::string* points);
  private:
  const std::string& _internal_points() const;
  void _internal_set_points(const std::string& value);
  std::string* _internal_mutable_points();
  public:

  // bytes pose = 2;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes keyframePoses = 3;
  void clear_keyframeposes();
  const std::string& keyframeposes() const;
  void set_keyframeposes(const std::string& value);
  void set_keyframeposes(std::string&& value);
  void set_keyframeposes(const char* value);
  void set_keyframeposes(const void* value, size_t size);
  std::string* mutable_keyframeposes();
  std::string* release_keyframeposes();
  void set_allocated_keyframeposes(std::string* keyframeposes);
  private:
  const std::string& _internal_keyframeposes() const;
  void _internal_set_keyframeposes(const std::string& value);
  std::string* _internal_mutable_keyframeposes();
  public:

  // bytes framePoses = 4;
  void clear_frameposes();
  const std::string& frameposes() const;
  void set_frameposes(const std::string& value);
  void set_frameposes(std::string&& value);
  void set_frameposes(const char* value);
  void set_frameposes(const void* value, size_t size);
  std::string* mutable_frameposes();
  std::string* release_frameposes();
  void set_allocated_frameposes(std::string* frameposes);
  private:
  const std::string& _internal_frameposes() const;
  void _internal_set_frameposes(const std::string& value);
  std::string* _internal_mutable_frameposes();
  public:

  // bytes points2 = 5;
  void clear_points2();
  const std::string& points2() const;
  void set_points2(const std::string& value);
  void set_points2(std::string&& value);
  void set_points2(const char* value);
  void set_points2(const void* value, size_t size);
  std::string* mutable_points2();
  std::string* release_points2();
  void set_allocated_points2(std::string* points2);
  private:
  const std::string& _internal_points2() const;
  void _internal_set_points2(const std::string& value);
  std::string* _internal_mutable_points2();
  public:

  // bytes keyframePoses2 = 6;
  void clear_keyframeposes2();
  const std::string& keyframeposes2() const;
  void set_keyframeposes2(const std::string& value);
  void set_keyframeposes2(std::string&& value);
  void set_keyframeposes2(const char* value);
  void set_keyframeposes2(const void* value, size_t size);
  std::string* mutable_keyframeposes2();
  std::string* release_keyframeposes2();
  void set_allocated_keyframeposes2(std::string* keyframeposes2);
  private:
  const std::string& _internal_keyframeposes2() const;
  void _internal_set_keyframeposes2(const std::string& value);
  std::string* _internal_mutable_keyframeposes2();
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DPointsViewer.display_grpc0Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr points_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keyframeposes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frameposes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr points2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keyframeposes2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DPointsViewerService_2eproto;
};
// -------------------------------------------------------------------

class display_grpc0Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DPointsViewer.display_grpc0Response) */ {
 public:
  inline display_grpc0Response() : display_grpc0Response(nullptr) {}
  virtual ~display_grpc0Response();
  explicit constexpr display_grpc0Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  display_grpc0Response(const display_grpc0Response& from);
  display_grpc0Response(display_grpc0Response&& from) noexcept
    : display_grpc0Response() {
    *this = ::std::move(from);
  }

  inline display_grpc0Response& operator=(const display_grpc0Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline display_grpc0Response& operator=(display_grpc0Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const display_grpc0Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const display_grpc0Response* internal_default_instance() {
    return reinterpret_cast<const display_grpc0Response*>(
               &_display_grpc0Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(display_grpc0Response& a, display_grpc0Response& b) {
    a.Swap(&b);
  }
  inline void Swap(display_grpc0Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(display_grpc0Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline display_grpc0Response* New() const final {
    return CreateMaybeMessage<display_grpc0Response>(nullptr);
  }

  display_grpc0Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<display_grpc0Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const display_grpc0Response& from);
  void MergeFrom(const display_grpc0Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(display_grpc0Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DPointsViewer.display_grpc0Response";
  }
  protected:
  explicit display_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DPointsViewerService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DPointsViewer.display_grpc0Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DPointsViewerService_2eproto;
};
// -------------------------------------------------------------------

class display_grpc1Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DPointsViewer.display_grpc1Request) */ {
 public:
  inline display_grpc1Request() : display_grpc1Request(nullptr) {}
  virtual ~display_grpc1Request();
  explicit constexpr display_grpc1Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  display_grpc1Request(const display_grpc1Request& from);
  display_grpc1Request(display_grpc1Request&& from) noexcept
    : display_grpc1Request() {
    *this = ::std::move(from);
  }

  inline display_grpc1Request& operator=(const display_grpc1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline display_grpc1Request& operator=(display_grpc1Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const display_grpc1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const display_grpc1Request* internal_default_instance() {
    return reinterpret_cast<const display_grpc1Request*>(
               &_display_grpc1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(display_grpc1Request& a, display_grpc1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(display_grpc1Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(display_grpc1Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline display_grpc1Request* New() const final {
    return CreateMaybeMessage<display_grpc1Request>(nullptr);
  }

  display_grpc1Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<display_grpc1Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const display_grpc1Request& from);
  void MergeFrom(const display_grpc1Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(display_grpc1Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DPointsViewer.display_grpc1Request";
  }
  protected:
  explicit display_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DPointsViewerService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 1,
    kPoseFieldNumber = 2,
    kKeyframePosesFieldNumber = 3,
    kFramePosesFieldNumber = 4,
    kPoints2FieldNumber = 5,
    kKeyframePoses2FieldNumber = 6,
  };
  // bytes points = 1;
  void clear_points();
  const std::string& points() const;
  void set_points(const std::string& value);
  void set_points(std::string&& value);
  void set_points(const char* value);
  void set_points(const void* value, size_t size);
  std::string* mutable_points();
  std::string* release_points();
  void set_allocated_points(std::string* points);
  private:
  const std::string& _internal_points() const;
  void _internal_set_points(const std::string& value);
  std::string* _internal_mutable_points();
  public:

  // bytes pose = 2;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes keyframePoses = 3;
  void clear_keyframeposes();
  const std::string& keyframeposes() const;
  void set_keyframeposes(const std::string& value);
  void set_keyframeposes(std::string&& value);
  void set_keyframeposes(const char* value);
  void set_keyframeposes(const void* value, size_t size);
  std::string* mutable_keyframeposes();
  std::string* release_keyframeposes();
  void set_allocated_keyframeposes(std::string* keyframeposes);
  private:
  const std::string& _internal_keyframeposes() const;
  void _internal_set_keyframeposes(const std::string& value);
  std::string* _internal_mutable_keyframeposes();
  public:

  // bytes framePoses = 4;
  void clear_frameposes();
  const std::string& frameposes() const;
  void set_frameposes(const std::string& value);
  void set_frameposes(std::string&& value);
  void set_frameposes(const char* value);
  void set_frameposes(const void* value, size_t size);
  std::string* mutable_frameposes();
  std::string* release_frameposes();
  void set_allocated_frameposes(std::string* frameposes);
  private:
  const std::string& _internal_frameposes() const;
  void _internal_set_frameposes(const std::string& value);
  std::string* _internal_mutable_frameposes();
  public:

  // bytes points2 = 5;
  void clear_points2();
  const std::string& points2() const;
  void set_points2(const std::string& value);
  void set_points2(std::string&& value);
  void set_points2(const char* value);
  void set_points2(const void* value, size_t size);
  std::string* mutable_points2();
  std::string* release_points2();
  void set_allocated_points2(std::string* points2);
  private:
  const std::string& _internal_points2() const;
  void _internal_set_points2(const std::string& value);
  std::string* _internal_mutable_points2();
  public:

  // bytes keyframePoses2 = 6;
  void clear_keyframeposes2();
  const std::string& keyframeposes2() const;
  void set_keyframeposes2(const std::string& value);
  void set_keyframeposes2(std::string&& value);
  void set_keyframeposes2(const char* value);
  void set_keyframeposes2(const void* value, size_t size);
  std::string* mutable_keyframeposes2();
  std::string* release_keyframeposes2();
  void set_allocated_keyframeposes2(std::string* keyframeposes2);
  private:
  const std::string& _internal_keyframeposes2() const;
  void _internal_set_keyframeposes2(const std::string& value);
  std::string* _internal_mutable_keyframeposes2();
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DPointsViewer.display_grpc1Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr points_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keyframeposes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frameposes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr points2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr keyframeposes2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DPointsViewerService_2eproto;
};
// -------------------------------------------------------------------

class display_grpc1Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DPointsViewer.display_grpc1Response) */ {
 public:
  inline display_grpc1Response() : display_grpc1Response(nullptr) {}
  virtual ~display_grpc1Response();
  explicit constexpr display_grpc1Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  display_grpc1Response(const display_grpc1Response& from);
  display_grpc1Response(display_grpc1Response&& from) noexcept
    : display_grpc1Response() {
    *this = ::std::move(from);
  }

  inline display_grpc1Response& operator=(const display_grpc1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline display_grpc1Response& operator=(display_grpc1Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const display_grpc1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const display_grpc1Response* internal_default_instance() {
    return reinterpret_cast<const display_grpc1Response*>(
               &_display_grpc1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(display_grpc1Response& a, display_grpc1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(display_grpc1Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(display_grpc1Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline display_grpc1Response* New() const final {
    return CreateMaybeMessage<display_grpc1Response>(nullptr);
  }

  display_grpc1Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<display_grpc1Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const display_grpc1Response& from);
  void MergeFrom(const display_grpc1Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(display_grpc1Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DPointsViewer.display_grpc1Response";
  }
  protected:
  explicit display_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DPointsViewerService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DPointsViewer.display_grpc1Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DPointsViewerService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// display_grpc0Request

// bytes points = 1;
inline void display_grpc0Request::clear_points() {
  points_.ClearToEmpty();
}
inline const std::string& display_grpc0Request::points() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc0Request.points)
  return _internal_points();
}
inline void display_grpc0Request::set_points(const std::string& value) {
  _internal_set_points(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc0Request.points)
}
inline std::string* display_grpc0Request::mutable_points() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc0Request.points)
  return _internal_mutable_points();
}
inline const std::string& display_grpc0Request::_internal_points() const {
  return points_.Get();
}
inline void display_grpc0Request::_internal_set_points(const std::string& value) {
  
  points_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc0Request::set_points(std::string&& value) {
  
  points_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc0Request.points)
}
inline void display_grpc0Request::set_points(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  points_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc0Request.points)
}
inline void display_grpc0Request::set_points(const void* value,
    size_t size) {
  
  points_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc0Request.points)
}
inline std::string* display_grpc0Request::_internal_mutable_points() {
  
  return points_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc0Request::release_points() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc0Request.points)
  return points_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc0Request::set_allocated_points(std::string* points) {
  if (points != nullptr) {
    
  } else {
    
  }
  points_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), points,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc0Request.points)
}

// bytes pose = 2;
inline void display_grpc0Request::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& display_grpc0Request::pose() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc0Request.pose)
  return _internal_pose();
}
inline void display_grpc0Request::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc0Request.pose)
}
inline std::string* display_grpc0Request::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc0Request.pose)
  return _internal_mutable_pose();
}
inline const std::string& display_grpc0Request::_internal_pose() const {
  return pose_.Get();
}
inline void display_grpc0Request::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc0Request::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc0Request.pose)
}
inline void display_grpc0Request::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc0Request.pose)
}
inline void display_grpc0Request::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc0Request.pose)
}
inline std::string* display_grpc0Request::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc0Request::release_pose() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc0Request.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc0Request::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc0Request.pose)
}

// bytes keyframePoses = 3;
inline void display_grpc0Request::clear_keyframeposes() {
  keyframeposes_.ClearToEmpty();
}
inline const std::string& display_grpc0Request::keyframeposes() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc0Request.keyframePoses)
  return _internal_keyframeposes();
}
inline void display_grpc0Request::set_keyframeposes(const std::string& value) {
  _internal_set_keyframeposes(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc0Request.keyframePoses)
}
inline std::string* display_grpc0Request::mutable_keyframeposes() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc0Request.keyframePoses)
  return _internal_mutable_keyframeposes();
}
inline const std::string& display_grpc0Request::_internal_keyframeposes() const {
  return keyframeposes_.Get();
}
inline void display_grpc0Request::_internal_set_keyframeposes(const std::string& value) {
  
  keyframeposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc0Request::set_keyframeposes(std::string&& value) {
  
  keyframeposes_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc0Request.keyframePoses)
}
inline void display_grpc0Request::set_keyframeposes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  keyframeposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc0Request.keyframePoses)
}
inline void display_grpc0Request::set_keyframeposes(const void* value,
    size_t size) {
  
  keyframeposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc0Request.keyframePoses)
}
inline std::string* display_grpc0Request::_internal_mutable_keyframeposes() {
  
  return keyframeposes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc0Request::release_keyframeposes() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc0Request.keyframePoses)
  return keyframeposes_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc0Request::set_allocated_keyframeposes(std::string* keyframeposes) {
  if (keyframeposes != nullptr) {
    
  } else {
    
  }
  keyframeposes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keyframeposes,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc0Request.keyframePoses)
}

// bytes framePoses = 4;
inline void display_grpc0Request::clear_frameposes() {
  frameposes_.ClearToEmpty();
}
inline const std::string& display_grpc0Request::frameposes() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc0Request.framePoses)
  return _internal_frameposes();
}
inline void display_grpc0Request::set_frameposes(const std::string& value) {
  _internal_set_frameposes(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc0Request.framePoses)
}
inline std::string* display_grpc0Request::mutable_frameposes() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc0Request.framePoses)
  return _internal_mutable_frameposes();
}
inline const std::string& display_grpc0Request::_internal_frameposes() const {
  return frameposes_.Get();
}
inline void display_grpc0Request::_internal_set_frameposes(const std::string& value) {
  
  frameposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc0Request::set_frameposes(std::string&& value) {
  
  frameposes_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc0Request.framePoses)
}
inline void display_grpc0Request::set_frameposes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frameposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc0Request.framePoses)
}
inline void display_grpc0Request::set_frameposes(const void* value,
    size_t size) {
  
  frameposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc0Request.framePoses)
}
inline std::string* display_grpc0Request::_internal_mutable_frameposes() {
  
  return frameposes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc0Request::release_frameposes() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc0Request.framePoses)
  return frameposes_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc0Request::set_allocated_frameposes(std::string* frameposes) {
  if (frameposes != nullptr) {
    
  } else {
    
  }
  frameposes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frameposes,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc0Request.framePoses)
}

// bytes points2 = 5;
inline void display_grpc0Request::clear_points2() {
  points2_.ClearToEmpty();
}
inline const std::string& display_grpc0Request::points2() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc0Request.points2)
  return _internal_points2();
}
inline void display_grpc0Request::set_points2(const std::string& value) {
  _internal_set_points2(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc0Request.points2)
}
inline std::string* display_grpc0Request::mutable_points2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc0Request.points2)
  return _internal_mutable_points2();
}
inline const std::string& display_grpc0Request::_internal_points2() const {
  return points2_.Get();
}
inline void display_grpc0Request::_internal_set_points2(const std::string& value) {
  
  points2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc0Request::set_points2(std::string&& value) {
  
  points2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc0Request.points2)
}
inline void display_grpc0Request::set_points2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  points2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc0Request.points2)
}
inline void display_grpc0Request::set_points2(const void* value,
    size_t size) {
  
  points2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc0Request.points2)
}
inline std::string* display_grpc0Request::_internal_mutable_points2() {
  
  return points2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc0Request::release_points2() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc0Request.points2)
  return points2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc0Request::set_allocated_points2(std::string* points2) {
  if (points2 != nullptr) {
    
  } else {
    
  }
  points2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), points2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc0Request.points2)
}

// bytes keyframePoses2 = 6;
inline void display_grpc0Request::clear_keyframeposes2() {
  keyframeposes2_.ClearToEmpty();
}
inline const std::string& display_grpc0Request::keyframeposes2() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc0Request.keyframePoses2)
  return _internal_keyframeposes2();
}
inline void display_grpc0Request::set_keyframeposes2(const std::string& value) {
  _internal_set_keyframeposes2(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc0Request.keyframePoses2)
}
inline std::string* display_grpc0Request::mutable_keyframeposes2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc0Request.keyframePoses2)
  return _internal_mutable_keyframeposes2();
}
inline const std::string& display_grpc0Request::_internal_keyframeposes2() const {
  return keyframeposes2_.Get();
}
inline void display_grpc0Request::_internal_set_keyframeposes2(const std::string& value) {
  
  keyframeposes2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc0Request::set_keyframeposes2(std::string&& value) {
  
  keyframeposes2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc0Request.keyframePoses2)
}
inline void display_grpc0Request::set_keyframeposes2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  keyframeposes2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc0Request.keyframePoses2)
}
inline void display_grpc0Request::set_keyframeposes2(const void* value,
    size_t size) {
  
  keyframeposes2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc0Request.keyframePoses2)
}
inline std::string* display_grpc0Request::_internal_mutable_keyframeposes2() {
  
  return keyframeposes2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc0Request::release_keyframeposes2() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc0Request.keyframePoses2)
  return keyframeposes2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc0Request::set_allocated_keyframeposes2(std::string* keyframeposes2) {
  if (keyframeposes2 != nullptr) {
    
  } else {
    
  }
  keyframeposes2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keyframeposes2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc0Request.keyframePoses2)
}

// -------------------------------------------------------------------

// display_grpc0Response

// sint32 xpcfGrpcReturnValue = 1;
inline void display_grpc0Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 display_grpc0Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 display_grpc0Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc0Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void display_grpc0Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void display_grpc0Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc0Response.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// display_grpc1Request

// bytes points = 1;
inline void display_grpc1Request::clear_points() {
  points_.ClearToEmpty();
}
inline const std::string& display_grpc1Request::points() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc1Request.points)
  return _internal_points();
}
inline void display_grpc1Request::set_points(const std::string& value) {
  _internal_set_points(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc1Request.points)
}
inline std::string* display_grpc1Request::mutable_points() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc1Request.points)
  return _internal_mutable_points();
}
inline const std::string& display_grpc1Request::_internal_points() const {
  return points_.Get();
}
inline void display_grpc1Request::_internal_set_points(const std::string& value) {
  
  points_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc1Request::set_points(std::string&& value) {
  
  points_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc1Request.points)
}
inline void display_grpc1Request::set_points(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  points_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc1Request.points)
}
inline void display_grpc1Request::set_points(const void* value,
    size_t size) {
  
  points_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc1Request.points)
}
inline std::string* display_grpc1Request::_internal_mutable_points() {
  
  return points_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc1Request::release_points() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc1Request.points)
  return points_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc1Request::set_allocated_points(std::string* points) {
  if (points != nullptr) {
    
  } else {
    
  }
  points_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), points,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc1Request.points)
}

// bytes pose = 2;
inline void display_grpc1Request::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& display_grpc1Request::pose() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc1Request.pose)
  return _internal_pose();
}
inline void display_grpc1Request::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc1Request.pose)
}
inline std::string* display_grpc1Request::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc1Request.pose)
  return _internal_mutable_pose();
}
inline const std::string& display_grpc1Request::_internal_pose() const {
  return pose_.Get();
}
inline void display_grpc1Request::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc1Request::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc1Request.pose)
}
inline void display_grpc1Request::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc1Request.pose)
}
inline void display_grpc1Request::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc1Request.pose)
}
inline std::string* display_grpc1Request::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc1Request::release_pose() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc1Request.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc1Request::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc1Request.pose)
}

// bytes keyframePoses = 3;
inline void display_grpc1Request::clear_keyframeposes() {
  keyframeposes_.ClearToEmpty();
}
inline const std::string& display_grpc1Request::keyframeposes() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc1Request.keyframePoses)
  return _internal_keyframeposes();
}
inline void display_grpc1Request::set_keyframeposes(const std::string& value) {
  _internal_set_keyframeposes(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc1Request.keyframePoses)
}
inline std::string* display_grpc1Request::mutable_keyframeposes() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc1Request.keyframePoses)
  return _internal_mutable_keyframeposes();
}
inline const std::string& display_grpc1Request::_internal_keyframeposes() const {
  return keyframeposes_.Get();
}
inline void display_grpc1Request::_internal_set_keyframeposes(const std::string& value) {
  
  keyframeposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc1Request::set_keyframeposes(std::string&& value) {
  
  keyframeposes_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc1Request.keyframePoses)
}
inline void display_grpc1Request::set_keyframeposes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  keyframeposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc1Request.keyframePoses)
}
inline void display_grpc1Request::set_keyframeposes(const void* value,
    size_t size) {
  
  keyframeposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc1Request.keyframePoses)
}
inline std::string* display_grpc1Request::_internal_mutable_keyframeposes() {
  
  return keyframeposes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc1Request::release_keyframeposes() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc1Request.keyframePoses)
  return keyframeposes_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc1Request::set_allocated_keyframeposes(std::string* keyframeposes) {
  if (keyframeposes != nullptr) {
    
  } else {
    
  }
  keyframeposes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keyframeposes,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc1Request.keyframePoses)
}

// bytes framePoses = 4;
inline void display_grpc1Request::clear_frameposes() {
  frameposes_.ClearToEmpty();
}
inline const std::string& display_grpc1Request::frameposes() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc1Request.framePoses)
  return _internal_frameposes();
}
inline void display_grpc1Request::set_frameposes(const std::string& value) {
  _internal_set_frameposes(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc1Request.framePoses)
}
inline std::string* display_grpc1Request::mutable_frameposes() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc1Request.framePoses)
  return _internal_mutable_frameposes();
}
inline const std::string& display_grpc1Request::_internal_frameposes() const {
  return frameposes_.Get();
}
inline void display_grpc1Request::_internal_set_frameposes(const std::string& value) {
  
  frameposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc1Request::set_frameposes(std::string&& value) {
  
  frameposes_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc1Request.framePoses)
}
inline void display_grpc1Request::set_frameposes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frameposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc1Request.framePoses)
}
inline void display_grpc1Request::set_frameposes(const void* value,
    size_t size) {
  
  frameposes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc1Request.framePoses)
}
inline std::string* display_grpc1Request::_internal_mutable_frameposes() {
  
  return frameposes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc1Request::release_frameposes() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc1Request.framePoses)
  return frameposes_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc1Request::set_allocated_frameposes(std::string* frameposes) {
  if (frameposes != nullptr) {
    
  } else {
    
  }
  frameposes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frameposes,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc1Request.framePoses)
}

// bytes points2 = 5;
inline void display_grpc1Request::clear_points2() {
  points2_.ClearToEmpty();
}
inline const std::string& display_grpc1Request::points2() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc1Request.points2)
  return _internal_points2();
}
inline void display_grpc1Request::set_points2(const std::string& value) {
  _internal_set_points2(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc1Request.points2)
}
inline std::string* display_grpc1Request::mutable_points2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc1Request.points2)
  return _internal_mutable_points2();
}
inline const std::string& display_grpc1Request::_internal_points2() const {
  return points2_.Get();
}
inline void display_grpc1Request::_internal_set_points2(const std::string& value) {
  
  points2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc1Request::set_points2(std::string&& value) {
  
  points2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc1Request.points2)
}
inline void display_grpc1Request::set_points2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  points2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc1Request.points2)
}
inline void display_grpc1Request::set_points2(const void* value,
    size_t size) {
  
  points2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc1Request.points2)
}
inline std::string* display_grpc1Request::_internal_mutable_points2() {
  
  return points2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc1Request::release_points2() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc1Request.points2)
  return points2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc1Request::set_allocated_points2(std::string* points2) {
  if (points2 != nullptr) {
    
  } else {
    
  }
  points2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), points2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc1Request.points2)
}

// bytes keyframePoses2 = 6;
inline void display_grpc1Request::clear_keyframeposes2() {
  keyframeposes2_.ClearToEmpty();
}
inline const std::string& display_grpc1Request::keyframeposes2() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc1Request.keyframePoses2)
  return _internal_keyframeposes2();
}
inline void display_grpc1Request::set_keyframeposes2(const std::string& value) {
  _internal_set_keyframeposes2(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc1Request.keyframePoses2)
}
inline std::string* display_grpc1Request::mutable_keyframeposes2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DPointsViewer.display_grpc1Request.keyframePoses2)
  return _internal_mutable_keyframeposes2();
}
inline const std::string& display_grpc1Request::_internal_keyframeposes2() const {
  return keyframeposes2_.Get();
}
inline void display_grpc1Request::_internal_set_keyframeposes2(const std::string& value) {
  
  keyframeposes2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void display_grpc1Request::set_keyframeposes2(std::string&& value) {
  
  keyframeposes2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DPointsViewer.display_grpc1Request.keyframePoses2)
}
inline void display_grpc1Request::set_keyframeposes2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  keyframeposes2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DPointsViewer.display_grpc1Request.keyframePoses2)
}
inline void display_grpc1Request::set_keyframeposes2(const void* value,
    size_t size) {
  
  keyframeposes2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DPointsViewer.display_grpc1Request.keyframePoses2)
}
inline std::string* display_grpc1Request::_internal_mutable_keyframeposes2() {
  
  return keyframeposes2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* display_grpc1Request::release_keyframeposes2() {
  // @@protoc_insertion_point(field_release:grpcI3DPointsViewer.display_grpc1Request.keyframePoses2)
  return keyframeposes2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void display_grpc1Request::set_allocated_keyframeposes2(std::string* keyframeposes2) {
  if (keyframeposes2 != nullptr) {
    
  } else {
    
  }
  keyframeposes2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), keyframeposes2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DPointsViewer.display_grpc1Request.keyframePoses2)
}

// -------------------------------------------------------------------

// display_grpc1Response

// sint32 xpcfGrpcReturnValue = 1;
inline void display_grpc1Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 display_grpc1Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 display_grpc1Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcI3DPointsViewer.display_grpc1Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void display_grpc1Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void display_grpc1Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcI3DPointsViewer.display_grpc1Response.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcI3DPointsViewer

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcI3DPointsViewerService_2eproto
