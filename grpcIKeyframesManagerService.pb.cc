// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIKeyframesManagerService.proto

#include "grpcIKeyframesManagerService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIKeyframesManager {
constexpr addKeyframe_grpc0Request::addKeyframe_grpc0Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframe_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct addKeyframe_grpc0RequestDefaultTypeInternal {
  constexpr addKeyframe_grpc0RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addKeyframe_grpc0RequestDefaultTypeInternal() {}
  union {
    addKeyframe_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addKeyframe_grpc0RequestDefaultTypeInternal _addKeyframe_grpc0Request_default_instance_;
constexpr addKeyframe_grpc0Response::addKeyframe_grpc0Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct addKeyframe_grpc0ResponseDefaultTypeInternal {
  constexpr addKeyframe_grpc0ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addKeyframe_grpc0ResponseDefaultTypeInternal() {}
  union {
    addKeyframe_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addKeyframe_grpc0ResponseDefaultTypeInternal _addKeyframe_grpc0Response_default_instance_;
constexpr addKeyframe_grpc1Request::addKeyframe_grpc1Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframe_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct addKeyframe_grpc1RequestDefaultTypeInternal {
  constexpr addKeyframe_grpc1RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addKeyframe_grpc1RequestDefaultTypeInternal() {}
  union {
    addKeyframe_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addKeyframe_grpc1RequestDefaultTypeInternal _addKeyframe_grpc1Request_default_instance_;
constexpr addKeyframe_grpc1Response::addKeyframe_grpc1Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct addKeyframe_grpc1ResponseDefaultTypeInternal {
  constexpr addKeyframe_grpc1ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~addKeyframe_grpc1ResponseDefaultTypeInternal() {}
  union {
    addKeyframe_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT addKeyframe_grpc1ResponseDefaultTypeInternal _addKeyframe_grpc1Response_default_instance_;
constexpr getKeyframeRequest::getKeyframeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframe_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0)
  , id_(0u){}
struct getKeyframeRequestDefaultTypeInternal {
  constexpr getKeyframeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getKeyframeRequestDefaultTypeInternal() {}
  union {
    getKeyframeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getKeyframeRequestDefaultTypeInternal _getKeyframeRequest_default_instance_;
constexpr getKeyframeResponse::getKeyframeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframe_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getKeyframeResponseDefaultTypeInternal {
  constexpr getKeyframeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getKeyframeResponseDefaultTypeInternal() {}
  union {
    getKeyframeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getKeyframeResponseDefaultTypeInternal _getKeyframeResponse_default_instance_;
constexpr getKeyframesRequest::getKeyframesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ids_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , keyframes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct getKeyframesRequestDefaultTypeInternal {
  constexpr getKeyframesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getKeyframesRequestDefaultTypeInternal() {}
  union {
    getKeyframesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getKeyframesRequestDefaultTypeInternal _getKeyframesRequest_default_instance_;
constexpr getKeyframesResponse::getKeyframesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getKeyframesResponseDefaultTypeInternal {
  constexpr getKeyframesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getKeyframesResponseDefaultTypeInternal() {}
  union {
    getKeyframesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getKeyframesResponseDefaultTypeInternal _getKeyframesResponse_default_instance_;
constexpr getAllKeyframesRequest::getAllKeyframesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct getAllKeyframesRequestDefaultTypeInternal {
  constexpr getAllKeyframesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getAllKeyframesRequestDefaultTypeInternal() {}
  union {
    getAllKeyframesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getAllKeyframesRequestDefaultTypeInternal _getAllKeyframesRequest_default_instance_;
constexpr getAllKeyframesResponse::getAllKeyframesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframes_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getAllKeyframesResponseDefaultTypeInternal {
  constexpr getAllKeyframesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getAllKeyframesResponseDefaultTypeInternal() {}
  union {
    getAllKeyframesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getAllKeyframesResponseDefaultTypeInternal _getAllKeyframesResponse_default_instance_;
constexpr suppressKeyframeRequest::suppressKeyframeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0)
  , id_(0u){}
struct suppressKeyframeRequestDefaultTypeInternal {
  constexpr suppressKeyframeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~suppressKeyframeRequestDefaultTypeInternal() {}
  union {
    suppressKeyframeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT suppressKeyframeRequestDefaultTypeInternal _suppressKeyframeRequest_default_instance_;
constexpr suppressKeyframeResponse::suppressKeyframeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct suppressKeyframeResponseDefaultTypeInternal {
  constexpr suppressKeyframeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~suppressKeyframeResponseDefaultTypeInternal() {}
  union {
    suppressKeyframeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT suppressKeyframeResponseDefaultTypeInternal _suppressKeyframeResponse_default_instance_;
constexpr getDescriptorTypeRequest::getDescriptorTypeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct getDescriptorTypeRequestDefaultTypeInternal {
  constexpr getDescriptorTypeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getDescriptorTypeRequestDefaultTypeInternal() {}
  union {
    getDescriptorTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getDescriptorTypeRequestDefaultTypeInternal _getDescriptorTypeRequest_default_instance_;
constexpr getDescriptorTypeResponse::getDescriptorTypeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct getDescriptorTypeResponseDefaultTypeInternal {
  constexpr getDescriptorTypeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getDescriptorTypeResponseDefaultTypeInternal() {}
  union {
    getDescriptorTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getDescriptorTypeResponseDefaultTypeInternal _getDescriptorTypeResponse_default_instance_;
constexpr setDescriptorTypeRequest::setDescriptorTypeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0)
  , type_(0){}
struct setDescriptorTypeRequestDefaultTypeInternal {
  constexpr setDescriptorTypeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setDescriptorTypeRequestDefaultTypeInternal() {}
  union {
    setDescriptorTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setDescriptorTypeRequestDefaultTypeInternal _setDescriptorTypeRequest_default_instance_;
constexpr setDescriptorTypeResponse::setDescriptorTypeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct setDescriptorTypeResponseDefaultTypeInternal {
  constexpr setDescriptorTypeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setDescriptorTypeResponseDefaultTypeInternal() {}
  union {
    setDescriptorTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setDescriptorTypeResponseDefaultTypeInternal _setDescriptorTypeResponse_default_instance_;
constexpr isExistKeyframeRequest::isExistKeyframeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0)
  , id_(0u){}
struct isExistKeyframeRequestDefaultTypeInternal {
  constexpr isExistKeyframeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~isExistKeyframeRequestDefaultTypeInternal() {}
  union {
    isExistKeyframeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT isExistKeyframeRequestDefaultTypeInternal _isExistKeyframeRequest_default_instance_;
constexpr isExistKeyframeResponse::isExistKeyframeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(false){}
struct isExistKeyframeResponseDefaultTypeInternal {
  constexpr isExistKeyframeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~isExistKeyframeResponseDefaultTypeInternal() {}
  union {
    isExistKeyframeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT isExistKeyframeResponseDefaultTypeInternal _isExistKeyframeResponse_default_instance_;
constexpr getNbKeyframesRequest::getNbKeyframesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct getNbKeyframesRequestDefaultTypeInternal {
  constexpr getNbKeyframesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getNbKeyframesRequestDefaultTypeInternal() {}
  union {
    getNbKeyframesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getNbKeyframesRequestDefaultTypeInternal _getNbKeyframesRequest_default_instance_;
constexpr getNbKeyframesResponse::getNbKeyframesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct getNbKeyframesResponseDefaultTypeInternal {
  constexpr getNbKeyframesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getNbKeyframesResponseDefaultTypeInternal() {}
  union {
    getNbKeyframesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getNbKeyframesResponseDefaultTypeInternal _getNbKeyframesResponse_default_instance_;
constexpr saveToFileRequest::saveToFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct saveToFileRequestDefaultTypeInternal {
  constexpr saveToFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~saveToFileRequestDefaultTypeInternal() {}
  union {
    saveToFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT saveToFileRequestDefaultTypeInternal _saveToFileRequest_default_instance_;
constexpr saveToFileResponse::saveToFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct saveToFileResponseDefaultTypeInternal {
  constexpr saveToFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~saveToFileResponseDefaultTypeInternal() {}
  union {
    saveToFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT saveToFileResponseDefaultTypeInternal _saveToFileResponse_default_instance_;
constexpr loadFromFileRequest::loadFromFileRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct loadFromFileRequestDefaultTypeInternal {
  constexpr loadFromFileRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~loadFromFileRequestDefaultTypeInternal() {}
  union {
    loadFromFileRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT loadFromFileRequestDefaultTypeInternal _loadFromFileRequest_default_instance_;
constexpr loadFromFileResponse::loadFromFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct loadFromFileResponseDefaultTypeInternal {
  constexpr loadFromFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~loadFromFileResponseDefaultTypeInternal() {}
  union {
    loadFromFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT loadFromFileResponseDefaultTypeInternal _loadFromFileResponse_default_instance_;
constexpr getConstKeyframeCollectionRequest::getConstKeyframeCollectionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct getConstKeyframeCollectionRequestDefaultTypeInternal {
  constexpr getConstKeyframeCollectionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getConstKeyframeCollectionRequestDefaultTypeInternal() {}
  union {
    getConstKeyframeCollectionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getConstKeyframeCollectionRequestDefaultTypeInternal _getConstKeyframeCollectionRequest_default_instance_;
constexpr getConstKeyframeCollectionResponse::getConstKeyframeCollectionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getConstKeyframeCollectionResponseDefaultTypeInternal {
  constexpr getConstKeyframeCollectionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getConstKeyframeCollectionResponseDefaultTypeInternal() {}
  union {
    getConstKeyframeCollectionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getConstKeyframeCollectionResponseDefaultTypeInternal _getConstKeyframeCollectionResponse_default_instance_;
constexpr getKeyframeCollectionRequest::getKeyframeCollectionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframecollection_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct getKeyframeCollectionRequestDefaultTypeInternal {
  constexpr getKeyframeCollectionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getKeyframeCollectionRequestDefaultTypeInternal() {}
  union {
    getKeyframeCollectionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getKeyframeCollectionRequestDefaultTypeInternal _getKeyframeCollectionRequest_default_instance_;
constexpr getKeyframeCollectionResponse::getKeyframeCollectionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframecollection_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getKeyframeCollectionResponseDefaultTypeInternal {
  constexpr getKeyframeCollectionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getKeyframeCollectionResponseDefaultTypeInternal() {}
  union {
    getKeyframeCollectionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getKeyframeCollectionResponseDefaultTypeInternal _getKeyframeCollectionResponse_default_instance_;
constexpr setKeyframeCollectionRequest::setKeyframeCollectionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keyframecollection_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setKeyframeCollectionRequestDefaultTypeInternal {
  constexpr setKeyframeCollectionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setKeyframeCollectionRequestDefaultTypeInternal() {}
  union {
    setKeyframeCollectionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setKeyframeCollectionRequestDefaultTypeInternal _setKeyframeCollectionRequest_default_instance_;
}  // namespace grpcIKeyframesManager
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIKeyframesManagerService_2eproto[29];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIKeyframesManagerService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIKeyframesManagerService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIKeyframesManagerService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc0Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc0Request, keyframe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc0Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc1Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc1Request, keyframe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::addKeyframe_grpc1Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeRequest, id_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeRequest, keyframe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeResponse, keyframe_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframesRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframesRequest, ids_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframesRequest, keyframes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframesResponse, keyframes_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframesResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getAllKeyframesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getAllKeyframesRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getAllKeyframesRequest, keyframes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getAllKeyframesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getAllKeyframesResponse, keyframes_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getAllKeyframesResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::suppressKeyframeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::suppressKeyframeRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::suppressKeyframeRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::suppressKeyframeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::suppressKeyframeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getDescriptorTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getDescriptorTypeRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getDescriptorTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getDescriptorTypeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::setDescriptorTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::setDescriptorTypeRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::setDescriptorTypeRequest, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::setDescriptorTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::setDescriptorTypeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::isExistKeyframeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::isExistKeyframeRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::isExistKeyframeRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::isExistKeyframeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::isExistKeyframeResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getNbKeyframesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getNbKeyframesRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getNbKeyframesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getNbKeyframesResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::saveToFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::saveToFileRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::saveToFileRequest, file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::saveToFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::saveToFileResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::loadFromFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::loadFromFileRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::loadFromFileRequest, file_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::loadFromFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::loadFromFileResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getConstKeyframeCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getConstKeyframeCollectionRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getConstKeyframeCollectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getConstKeyframeCollectionResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeCollectionRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeCollectionRequest, keyframecollection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeCollectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeCollectionResponse, keyframecollection_),
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::getKeyframeCollectionResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::setKeyframeCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIKeyframesManager::setKeyframeCollectionRequest, keyframecollection_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIKeyframesManager::addKeyframe_grpc0Request)},
  { 7, -1, sizeof(::grpcIKeyframesManager::addKeyframe_grpc0Response)},
  { 13, -1, sizeof(::grpcIKeyframesManager::addKeyframe_grpc1Request)},
  { 20, -1, sizeof(::grpcIKeyframesManager::addKeyframe_grpc1Response)},
  { 26, -1, sizeof(::grpcIKeyframesManager::getKeyframeRequest)},
  { 34, -1, sizeof(::grpcIKeyframesManager::getKeyframeResponse)},
  { 41, -1, sizeof(::grpcIKeyframesManager::getKeyframesRequest)},
  { 49, -1, sizeof(::grpcIKeyframesManager::getKeyframesResponse)},
  { 56, -1, sizeof(::grpcIKeyframesManager::getAllKeyframesRequest)},
  { 63, -1, sizeof(::grpcIKeyframesManager::getAllKeyframesResponse)},
  { 70, -1, sizeof(::grpcIKeyframesManager::suppressKeyframeRequest)},
  { 77, -1, sizeof(::grpcIKeyframesManager::suppressKeyframeResponse)},
  { 83, -1, sizeof(::grpcIKeyframesManager::getDescriptorTypeRequest)},
  { 89, -1, sizeof(::grpcIKeyframesManager::getDescriptorTypeResponse)},
  { 95, -1, sizeof(::grpcIKeyframesManager::setDescriptorTypeRequest)},
  { 102, -1, sizeof(::grpcIKeyframesManager::setDescriptorTypeResponse)},
  { 108, -1, sizeof(::grpcIKeyframesManager::isExistKeyframeRequest)},
  { 115, -1, sizeof(::grpcIKeyframesManager::isExistKeyframeResponse)},
  { 121, -1, sizeof(::grpcIKeyframesManager::getNbKeyframesRequest)},
  { 127, -1, sizeof(::grpcIKeyframesManager::getNbKeyframesResponse)},
  { 133, -1, sizeof(::grpcIKeyframesManager::saveToFileRequest)},
  { 140, -1, sizeof(::grpcIKeyframesManager::saveToFileResponse)},
  { 146, -1, sizeof(::grpcIKeyframesManager::loadFromFileRequest)},
  { 153, -1, sizeof(::grpcIKeyframesManager::loadFromFileResponse)},
  { 159, -1, sizeof(::grpcIKeyframesManager::getConstKeyframeCollectionRequest)},
  { 165, -1, sizeof(::grpcIKeyframesManager::getConstKeyframeCollectionResponse)},
  { 171, -1, sizeof(::grpcIKeyframesManager::getKeyframeCollectionRequest)},
  { 178, -1, sizeof(::grpcIKeyframesManager::getKeyframeCollectionResponse)},
  { 185, -1, sizeof(::grpcIKeyframesManager::setKeyframeCollectionRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_addKeyframe_grpc0Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_addKeyframe_grpc0Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_addKeyframe_grpc1Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_addKeyframe_grpc1Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getKeyframeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getKeyframeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getKeyframesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getKeyframesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getAllKeyframesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getAllKeyframesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_suppressKeyframeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_suppressKeyframeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getDescriptorTypeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getDescriptorTypeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_setDescriptorTypeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_setDescriptorTypeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_isExistKeyframeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_isExistKeyframeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getNbKeyframesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getNbKeyframesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_saveToFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_saveToFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_loadFromFileRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_loadFromFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getConstKeyframeCollectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getConstKeyframeCollectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getKeyframeCollectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_getKeyframeCollectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIKeyframesManager::_setKeyframeCollectionRequest_default_instance_),
};

const char descriptor_table_protodef_grpcIKeyframesManagerService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"grpcIKeyframesManagerService.proto\022\025gr"
  "pcIKeyframesManager\032\033google/protobuf/emp"
  "ty.proto\"Q\n\030addKeyframe_grpc0Request\022#\n\033"
  "grpcServerCompressionFormat\030\001 \001(\005\022\020\n\010key"
  "frame\030\002 \001(\014\"8\n\031addKeyframe_grpc0Response"
  "\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"Q\n\030addKeyf"
  "rame_grpc1Request\022#\n\033grpcServerCompressi"
  "onFormat\030\001 \001(\005\022\020\n\010keyframe\030\002 \001(\014\"8\n\031addK"
  "eyframe_grpc1Response\022\033\n\023xpcfGrpcReturnV"
  "alue\030\001 \001(\021\"W\n\022getKeyframeRequest\022#\n\033grpc"
  "ServerCompressionFormat\030\001 \001(\005\022\n\n\002id\030\002 \001("
  "\r\022\020\n\010keyframe\030\003 \001(\014\"D\n\023getKeyframeRespon"
  "se\022\020\n\010keyframe\030\001 \001(\014\022\033\n\023xpcfGrpcReturnVa"
  "lue\030\002 \001(\021\"Z\n\023getKeyframesRequest\022#\n\033grpc"
  "ServerCompressionFormat\030\001 \001(\005\022\013\n\003ids\030\002 \001"
  "(\014\022\021\n\tkeyframes\030\003 \001(\014\"F\n\024getKeyframesRes"
  "ponse\022\021\n\tkeyframes\030\001 \001(\014\022\033\n\023xpcfGrpcRetu"
  "rnValue\030\002 \001(\021\"P\n\026getAllKeyframesRequest\022"
  "#\n\033grpcServerCompressionFormat\030\001 \001(\005\022\021\n\t"
  "keyframes\030\002 \001(\014\"I\n\027getAllKeyframesRespon"
  "se\022\021\n\tkeyframes\030\001 \001(\014\022\033\n\023xpcfGrpcReturnV"
  "alue\030\002 \001(\021\"J\n\027suppressKeyframeRequest\022#\n"
  "\033grpcServerCompressionFormat\030\001 \001(\005\022\n\n\002id"
  "\030\002 \001(\r\"7\n\030suppressKeyframeResponse\022\033\n\023xp"
  "cfGrpcReturnValue\030\001 \001(\021\"\?\n\030getDescriptor"
  "TypeRequest\022#\n\033grpcServerCompressionForm"
  "at\030\001 \001(\005\"8\n\031getDescriptorTypeResponse\022\033\n"
  "\023xpcfGrpcReturnValue\030\001 \001(\021\"M\n\030setDescrip"
  "torTypeRequest\022#\n\033grpcServerCompressionF"
  "ormat\030\001 \001(\005\022\014\n\004type\030\002 \001(\021\"8\n\031setDescript"
  "orTypeResponse\022\033\n\023xpcfGrpcReturnValue\030\001 "
  "\001(\021\"I\n\026isExistKeyframeRequest\022#\n\033grpcSer"
  "verCompressionFormat\030\001 \001(\005\022\n\n\002id\030\002 \001(\r\"6"
  "\n\027isExistKeyframeResponse\022\033\n\023xpcfGrpcRet"
  "urnValue\030\001 \001(\010\"<\n\025getNbKeyframesRequest\022"
  "#\n\033grpcServerCompressionFormat\030\001 \001(\005\"5\n\026"
  "getNbKeyframesResponse\022\033\n\023xpcfGrpcReturn"
  "Value\030\001 \001(\021\"F\n\021saveToFileRequest\022#\n\033grpc"
  "ServerCompressionFormat\030\001 \001(\005\022\014\n\004file\030\002 "
  "\001(\t\"1\n\022saveToFileResponse\022\033\n\023xpcfGrpcRet"
  "urnValue\030\001 \001(\021\"H\n\023loadFromFileRequest\022#\n"
  "\033grpcServerCompressionFormat\030\001 \001(\005\022\014\n\004fi"
  "le\030\002 \001(\t\"3\n\024loadFromFileResponse\022\033\n\023xpcf"
  "GrpcReturnValue\030\001 \001(\021\"H\n!getConstKeyfram"
  "eCollectionRequest\022#\n\033grpcServerCompress"
  "ionFormat\030\001 \001(\005\"A\n\"getConstKeyframeColle"
  "ctionResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001"
  "(\014\"_\n\034getKeyframeCollectionRequest\022#\n\033gr"
  "pcServerCompressionFormat\030\001 \001(\005\022\032\n\022keyfr"
  "ameCollection\030\002 \001(\014\"X\n\035getKeyframeCollec"
  "tionResponse\022\032\n\022keyframeCollection\030\001 \001(\014"
  "\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\014\":\n\034setKeyf"
  "rameCollectionRequest\022\032\n\022keyframeCollect"
  "ion\030\001 \001(\0142\376\r\n\034grpcIKeyframesManagerServi"
  "ce\022x\n\021addKeyframe_grpc0\022/.grpcIKeyframes"
  "Manager.addKeyframe_grpc0Request\0320.grpcI"
  "KeyframesManager.addKeyframe_grpc0Respon"
  "se\"\000\022x\n\021addKeyframe_grpc1\022/.grpcIKeyfram"
  "esManager.addKeyframe_grpc1Request\0320.grp"
  "cIKeyframesManager.addKeyframe_grpc1Resp"
  "onse\"\000\022f\n\013getKeyframe\022).grpcIKeyframesMa"
  "nager.getKeyframeRequest\032*.grpcIKeyframe"
  "sManager.getKeyframeResponse\"\000\022i\n\014getKey"
  "frames\022*.grpcIKeyframesManager.getKeyfra"
  "mesRequest\032+.grpcIKeyframesManager.getKe"
  "yframesResponse\"\000\022r\n\017getAllKeyframes\022-.g"
  "rpcIKeyframesManager.getAllKeyframesRequ"
  "est\032..grpcIKeyframesManager.getAllKeyfra"
  "mesResponse\"\000\022u\n\020suppressKeyframe\022..grpc"
  "IKeyframesManager.suppressKeyframeReques"
  "t\032/.grpcIKeyframesManager.suppressKeyfra"
  "meResponse\"\000\022x\n\021getDescriptorType\022/.grpc"
  "IKeyframesManager.getDescriptorTypeReque"
  "st\0320.grpcIKeyframesManager.getDescriptor"
  "TypeResponse\"\000\022x\n\021setDescriptorType\022/.gr"
  "pcIKeyframesManager.setDescriptorTypeReq"
  "uest\0320.grpcIKeyframesManager.setDescript"
  "orTypeResponse\"\000\022r\n\017isExistKeyframe\022-.gr"
  "pcIKeyframesManager.isExistKeyframeReque"
  "st\032..grpcIKeyframesManager.isExistKeyfra"
  "meResponse\"\000\022o\n\016getNbKeyframes\022,.grpcIKe"
  "yframesManager.getNbKeyframesRequest\032-.g"
  "rpcIKeyframesManager.getNbKeyframesRespo"
  "nse\"\000\022c\n\nsaveToFile\022(.grpcIKeyframesMana"
  "ger.saveToFileRequest\032).grpcIKeyframesMa"
  "nager.saveToFileResponse\"\000\022i\n\014loadFromFi"
  "le\022*.grpcIKeyframesManager.loadFromFileR"
  "equest\032+.grpcIKeyframesManager.loadFromF"
  "ileResponse\"\000\022\223\001\n\032getConstKeyframeCollec"
  "tion\0228.grpcIKeyframesManager.getConstKey"
  "frameCollectionRequest\0329.grpcIKeyframesM"
  "anager.getConstKeyframeCollectionRespons"
  "e\"\000\022\204\001\n\025getKeyframeCollection\0223.grpcIKey"
  "framesManager.getKeyframeCollectionReque"
  "st\0324.grpcIKeyframesManager.getKeyframeCo"
  "llectionResponse\"\000\022f\n\025setKeyframeCollect"
  "ion\0223.grpcIKeyframesManager.setKeyframeC"
  "ollectionRequest\032\026.google.protobuf.Empty"
  "\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIKeyframesManagerService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIKeyframesManagerService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIKeyframesManagerService_2eproto = {
  false, false, 3930, descriptor_table_protodef_grpcIKeyframesManagerService_2eproto, "grpcIKeyframesManagerService.proto", 
  &descriptor_table_grpcIKeyframesManagerService_2eproto_once, descriptor_table_grpcIKeyframesManagerService_2eproto_deps, 1, 29,
  schemas, file_default_instances, TableStruct_grpcIKeyframesManagerService_2eproto::offsets,
  file_level_metadata_grpcIKeyframesManagerService_2eproto, file_level_enum_descriptors_grpcIKeyframesManagerService_2eproto, file_level_service_descriptors_grpcIKeyframesManagerService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIKeyframesManagerService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIKeyframesManagerService_2eproto);
  return descriptor_table_grpcIKeyframesManagerService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIKeyframesManagerService_2eproto(&descriptor_table_grpcIKeyframesManagerService_2eproto);
namespace grpcIKeyframesManager {

// ===================================================================

class addKeyframe_grpc0Request::_Internal {
 public:
};

addKeyframe_grpc0Request::addKeyframe_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.addKeyframe_grpc0Request)
}
addKeyframe_grpc0Request::addKeyframe_grpc0Request(const addKeyframe_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframe(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.addKeyframe_grpc0Request)
}

void addKeyframe_grpc0Request::SharedCtor() {
keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

addKeyframe_grpc0Request::~addKeyframe_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.addKeyframe_grpc0Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void addKeyframe_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void addKeyframe_grpc0Request::ArenaDtor(void* object) {
  addKeyframe_grpc0Request* _this = reinterpret_cast< addKeyframe_grpc0Request* >(object);
  (void)_this;
}
void addKeyframe_grpc0Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addKeyframe_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addKeyframe_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.addKeyframe_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframe_grpc0Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addKeyframe_grpc0Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.addKeyframe_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.addKeyframe_grpc0Request)
  return target;
}

size_t addKeyframe_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.addKeyframe_grpc0Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addKeyframe_grpc0Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.addKeyframe_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  const addKeyframe_grpc0Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addKeyframe_grpc0Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.addKeyframe_grpc0Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.addKeyframe_grpc0Request)
    MergeFrom(*source);
  }
}

void addKeyframe_grpc0Request::MergeFrom(const addKeyframe_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.addKeyframe_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframe().size() > 0) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void addKeyframe_grpc0Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.addKeyframe_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addKeyframe_grpc0Request::CopyFrom(const addKeyframe_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.addKeyframe_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframe_grpc0Request::IsInitialized() const {
  return true;
}

void addKeyframe_grpc0Request::InternalSwap(addKeyframe_grpc0Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframe_.Swap(&other->keyframe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframe_grpc0Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class addKeyframe_grpc0Response::_Internal {
 public:
};

addKeyframe_grpc0Response::addKeyframe_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.addKeyframe_grpc0Response)
}
addKeyframe_grpc0Response::addKeyframe_grpc0Response(const addKeyframe_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.addKeyframe_grpc0Response)
}

void addKeyframe_grpc0Response::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

addKeyframe_grpc0Response::~addKeyframe_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.addKeyframe_grpc0Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void addKeyframe_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void addKeyframe_grpc0Response::ArenaDtor(void* object) {
  addKeyframe_grpc0Response* _this = reinterpret_cast< addKeyframe_grpc0Response* >(object);
  (void)_this;
}
void addKeyframe_grpc0Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addKeyframe_grpc0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addKeyframe_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.addKeyframe_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframe_grpc0Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addKeyframe_grpc0Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.addKeyframe_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.addKeyframe_grpc0Response)
  return target;
}

size_t addKeyframe_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.addKeyframe_grpc0Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addKeyframe_grpc0Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.addKeyframe_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  const addKeyframe_grpc0Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addKeyframe_grpc0Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.addKeyframe_grpc0Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.addKeyframe_grpc0Response)
    MergeFrom(*source);
  }
}

void addKeyframe_grpc0Response::MergeFrom(const addKeyframe_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.addKeyframe_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void addKeyframe_grpc0Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.addKeyframe_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addKeyframe_grpc0Response::CopyFrom(const addKeyframe_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.addKeyframe_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframe_grpc0Response::IsInitialized() const {
  return true;
}

void addKeyframe_grpc0Response::InternalSwap(addKeyframe_grpc0Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframe_grpc0Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class addKeyframe_grpc1Request::_Internal {
 public:
};

addKeyframe_grpc1Request::addKeyframe_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.addKeyframe_grpc1Request)
}
addKeyframe_grpc1Request::addKeyframe_grpc1Request(const addKeyframe_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframe(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.addKeyframe_grpc1Request)
}

void addKeyframe_grpc1Request::SharedCtor() {
keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

addKeyframe_grpc1Request::~addKeyframe_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.addKeyframe_grpc1Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void addKeyframe_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void addKeyframe_grpc1Request::ArenaDtor(void* object) {
  addKeyframe_grpc1Request* _this = reinterpret_cast< addKeyframe_grpc1Request* >(object);
  (void)_this;
}
void addKeyframe_grpc1Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addKeyframe_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addKeyframe_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.addKeyframe_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframe_grpc1Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addKeyframe_grpc1Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.addKeyframe_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.addKeyframe_grpc1Request)
  return target;
}

size_t addKeyframe_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.addKeyframe_grpc1Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 2;
  if (this->keyframe().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addKeyframe_grpc1Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.addKeyframe_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  const addKeyframe_grpc1Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addKeyframe_grpc1Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.addKeyframe_grpc1Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.addKeyframe_grpc1Request)
    MergeFrom(*source);
  }
}

void addKeyframe_grpc1Request::MergeFrom(const addKeyframe_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.addKeyframe_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframe().size() > 0) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void addKeyframe_grpc1Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.addKeyframe_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addKeyframe_grpc1Request::CopyFrom(const addKeyframe_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.addKeyframe_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframe_grpc1Request::IsInitialized() const {
  return true;
}

void addKeyframe_grpc1Request::InternalSwap(addKeyframe_grpc1Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframe_.Swap(&other->keyframe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframe_grpc1Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class addKeyframe_grpc1Response::_Internal {
 public:
};

addKeyframe_grpc1Response::addKeyframe_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.addKeyframe_grpc1Response)
}
addKeyframe_grpc1Response::addKeyframe_grpc1Response(const addKeyframe_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.addKeyframe_grpc1Response)
}

void addKeyframe_grpc1Response::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

addKeyframe_grpc1Response::~addKeyframe_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.addKeyframe_grpc1Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void addKeyframe_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void addKeyframe_grpc1Response::ArenaDtor(void* object) {
  addKeyframe_grpc1Response* _this = reinterpret_cast< addKeyframe_grpc1Response* >(object);
  (void)_this;
}
void addKeyframe_grpc1Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void addKeyframe_grpc1Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void addKeyframe_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.addKeyframe_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* addKeyframe_grpc1Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* addKeyframe_grpc1Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.addKeyframe_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.addKeyframe_grpc1Response)
  return target;
}

size_t addKeyframe_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.addKeyframe_grpc1Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void addKeyframe_grpc1Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.addKeyframe_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  const addKeyframe_grpc1Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<addKeyframe_grpc1Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.addKeyframe_grpc1Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.addKeyframe_grpc1Response)
    MergeFrom(*source);
  }
}

void addKeyframe_grpc1Response::MergeFrom(const addKeyframe_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.addKeyframe_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void addKeyframe_grpc1Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.addKeyframe_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void addKeyframe_grpc1Response::CopyFrom(const addKeyframe_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.addKeyframe_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool addKeyframe_grpc1Response::IsInitialized() const {
  return true;
}

void addKeyframe_grpc1Response::InternalSwap(addKeyframe_grpc1Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata addKeyframe_grpc1Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getKeyframeRequest::_Internal {
 public:
};

getKeyframeRequest::getKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getKeyframeRequest)
}
getKeyframeRequest::getKeyframeRequest(const getKeyframeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframe(), 
      GetArena());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getKeyframeRequest)
}

void getKeyframeRequest::SharedCtor() {
keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
}

getKeyframeRequest::~getKeyframeRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getKeyframeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getKeyframeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getKeyframeRequest::ArenaDtor(void* object) {
  getKeyframeRequest* _this = reinterpret_cast< getKeyframeRequest* >(object);
  (void)_this;
}
void getKeyframeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getKeyframeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getKeyframeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getKeyframeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframe = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getKeyframeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // bytes keyframe = 3;
  if (this->keyframe().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_keyframe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getKeyframeRequest)
  return target;
}

size_t getKeyframeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getKeyframeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 3;
  if (this->keyframe().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getKeyframeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getKeyframeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getKeyframeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getKeyframeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getKeyframeRequest)
    MergeFrom(*source);
  }
}

void getKeyframeRequest::MergeFrom(const getKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframe().size() > 0) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void getKeyframeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getKeyframeRequest::CopyFrom(const getKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getKeyframeRequest::IsInitialized() const {
  return true;
}

void getKeyframeRequest::InternalSwap(getKeyframeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframe_.Swap(&other->keyframe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(getKeyframeRequest, id_)
      + sizeof(getKeyframeRequest::id_)
      - PROTOBUF_FIELD_OFFSET(getKeyframeRequest, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata getKeyframeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getKeyframeResponse::_Internal {
 public:
};

getKeyframeResponse::getKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getKeyframeResponse)
}
getKeyframeResponse::getKeyframeResponse(const getKeyframeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframe().empty()) {
    keyframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframe(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getKeyframeResponse)
}

void getKeyframeResponse::SharedCtor() {
keyframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getKeyframeResponse::~getKeyframeResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getKeyframeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getKeyframeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getKeyframeResponse::ArenaDtor(void* object) {
  getKeyframeResponse* _this = reinterpret_cast< getKeyframeResponse* >(object);
  (void)_this;
}
void getKeyframeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getKeyframeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getKeyframeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframe_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getKeyframeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes keyframe = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_keyframe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getKeyframeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes keyframe = 1;
  if (this->keyframe().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_keyframe(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getKeyframeResponse)
  return target;
}

size_t getKeyframeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getKeyframeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframe = 1;
  if (this->keyframe().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframe());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getKeyframeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getKeyframeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getKeyframeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getKeyframeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getKeyframeResponse)
    MergeFrom(*source);
  }
}

void getKeyframeResponse::MergeFrom(const getKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframe().size() > 0) {
    _internal_set_keyframe(from._internal_keyframe());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getKeyframeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getKeyframeResponse::CopyFrom(const getKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getKeyframeResponse::IsInitialized() const {
  return true;
}

void getKeyframeResponse::InternalSwap(getKeyframeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframe_.Swap(&other->keyframe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getKeyframeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getKeyframesRequest::_Internal {
 public:
};

getKeyframesRequest::getKeyframesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getKeyframesRequest)
}
getKeyframesRequest::getKeyframesRequest(const getKeyframesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ids().empty()) {
    ids_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ids(), 
      GetArena());
  }
  keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframes().empty()) {
    keyframes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframes(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getKeyframesRequest)
}

void getKeyframesRequest::SharedCtor() {
ids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

getKeyframesRequest::~getKeyframesRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getKeyframesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getKeyframesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keyframes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getKeyframesRequest::ArenaDtor(void* object) {
  getKeyframesRequest* _this = reinterpret_cast< getKeyframesRequest* >(object);
  (void)_this;
}
void getKeyframesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getKeyframesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getKeyframesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getKeyframesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.ClearToEmpty();
  keyframes_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getKeyframesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_ids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_keyframes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getKeyframesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getKeyframesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes ids = 2;
  if (this->ids().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_ids(), target);
  }

  // bytes keyframes = 3;
  if (this->keyframes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_keyframes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getKeyframesRequest)
  return target;
}

size_t getKeyframesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getKeyframesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes ids = 2;
  if (this->ids().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_ids());
  }

  // bytes keyframes = 3;
  if (this->keyframes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframes());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getKeyframesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getKeyframesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getKeyframesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getKeyframesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getKeyframesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getKeyframesRequest)
    MergeFrom(*source);
  }
}

void getKeyframesRequest::MergeFrom(const getKeyframesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getKeyframesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ids().size() > 0) {
    _internal_set_ids(from._internal_ids());
  }
  if (from.keyframes().size() > 0) {
    _internal_set_keyframes(from._internal_keyframes());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getKeyframesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getKeyframesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getKeyframesRequest::CopyFrom(const getKeyframesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getKeyframesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getKeyframesRequest::IsInitialized() const {
  return true;
}

void getKeyframesRequest::InternalSwap(getKeyframesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ids_.Swap(&other->ids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  keyframes_.Swap(&other->keyframes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getKeyframesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getKeyframesResponse::_Internal {
 public:
};

getKeyframesResponse::getKeyframesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getKeyframesResponse)
}
getKeyframesResponse::getKeyframesResponse(const getKeyframesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframes().empty()) {
    keyframes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframes(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getKeyframesResponse)
}

void getKeyframesResponse::SharedCtor() {
keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getKeyframesResponse::~getKeyframesResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getKeyframesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getKeyframesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getKeyframesResponse::ArenaDtor(void* object) {
  getKeyframesResponse* _this = reinterpret_cast< getKeyframesResponse* >(object);
  (void)_this;
}
void getKeyframesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getKeyframesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getKeyframesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getKeyframesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframes_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getKeyframesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes keyframes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_keyframes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getKeyframesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getKeyframesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes keyframes = 1;
  if (this->keyframes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_keyframes(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getKeyframesResponse)
  return target;
}

size_t getKeyframesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getKeyframesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframes = 1;
  if (this->keyframes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframes());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getKeyframesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getKeyframesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getKeyframesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getKeyframesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getKeyframesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getKeyframesResponse)
    MergeFrom(*source);
  }
}

void getKeyframesResponse::MergeFrom(const getKeyframesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getKeyframesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframes().size() > 0) {
    _internal_set_keyframes(from._internal_keyframes());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getKeyframesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getKeyframesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getKeyframesResponse::CopyFrom(const getKeyframesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getKeyframesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getKeyframesResponse::IsInitialized() const {
  return true;
}

void getKeyframesResponse::InternalSwap(getKeyframesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframes_.Swap(&other->keyframes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getKeyframesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getAllKeyframesRequest::_Internal {
 public:
};

getAllKeyframesRequest::getAllKeyframesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getAllKeyframesRequest)
}
getAllKeyframesRequest::getAllKeyframesRequest(const getAllKeyframesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframes().empty()) {
    keyframes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframes(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getAllKeyframesRequest)
}

void getAllKeyframesRequest::SharedCtor() {
keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

getAllKeyframesRequest::~getAllKeyframesRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getAllKeyframesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getAllKeyframesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getAllKeyframesRequest::ArenaDtor(void* object) {
  getAllKeyframesRequest* _this = reinterpret_cast< getAllKeyframesRequest* >(object);
  (void)_this;
}
void getAllKeyframesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getAllKeyframesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getAllKeyframesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getAllKeyframesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframes_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getAllKeyframesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyframes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getAllKeyframesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getAllKeyframesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframes = 2;
  if (this->keyframes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframes(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getAllKeyframesRequest)
  return target;
}

size_t getAllKeyframesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getAllKeyframesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframes = 2;
  if (this->keyframes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframes());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getAllKeyframesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getAllKeyframesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getAllKeyframesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getAllKeyframesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getAllKeyframesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getAllKeyframesRequest)
    MergeFrom(*source);
  }
}

void getAllKeyframesRequest::MergeFrom(const getAllKeyframesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getAllKeyframesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframes().size() > 0) {
    _internal_set_keyframes(from._internal_keyframes());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getAllKeyframesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getAllKeyframesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getAllKeyframesRequest::CopyFrom(const getAllKeyframesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getAllKeyframesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getAllKeyframesRequest::IsInitialized() const {
  return true;
}

void getAllKeyframesRequest::InternalSwap(getAllKeyframesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframes_.Swap(&other->keyframes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getAllKeyframesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getAllKeyframesResponse::_Internal {
 public:
};

getAllKeyframesResponse::getAllKeyframesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getAllKeyframesResponse)
}
getAllKeyframesResponse::getAllKeyframesResponse(const getAllKeyframesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframes().empty()) {
    keyframes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframes(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getAllKeyframesResponse)
}

void getAllKeyframesResponse::SharedCtor() {
keyframes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getAllKeyframesResponse::~getAllKeyframesResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getAllKeyframesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getAllKeyframesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getAllKeyframesResponse::ArenaDtor(void* object) {
  getAllKeyframesResponse* _this = reinterpret_cast< getAllKeyframesResponse* >(object);
  (void)_this;
}
void getAllKeyframesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getAllKeyframesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getAllKeyframesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getAllKeyframesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframes_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getAllKeyframesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes keyframes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_keyframes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getAllKeyframesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getAllKeyframesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes keyframes = 1;
  if (this->keyframes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_keyframes(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getAllKeyframesResponse)
  return target;
}

size_t getAllKeyframesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getAllKeyframesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframes = 1;
  if (this->keyframes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframes());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getAllKeyframesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getAllKeyframesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getAllKeyframesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getAllKeyframesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getAllKeyframesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getAllKeyframesResponse)
    MergeFrom(*source);
  }
}

void getAllKeyframesResponse::MergeFrom(const getAllKeyframesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getAllKeyframesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframes().size() > 0) {
    _internal_set_keyframes(from._internal_keyframes());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getAllKeyframesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getAllKeyframesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getAllKeyframesResponse::CopyFrom(const getAllKeyframesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getAllKeyframesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getAllKeyframesResponse::IsInitialized() const {
  return true;
}

void getAllKeyframesResponse::InternalSwap(getAllKeyframesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframes_.Swap(&other->keyframes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getAllKeyframesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class suppressKeyframeRequest::_Internal {
 public:
};

suppressKeyframeRequest::suppressKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.suppressKeyframeRequest)
}
suppressKeyframeRequest::suppressKeyframeRequest(const suppressKeyframeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.suppressKeyframeRequest)
}

void suppressKeyframeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
}

suppressKeyframeRequest::~suppressKeyframeRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.suppressKeyframeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void suppressKeyframeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void suppressKeyframeRequest::ArenaDtor(void* object) {
  suppressKeyframeRequest* _this = reinterpret_cast< suppressKeyframeRequest* >(object);
  (void)_this;
}
void suppressKeyframeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void suppressKeyframeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void suppressKeyframeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.suppressKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* suppressKeyframeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* suppressKeyframeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.suppressKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.suppressKeyframeRequest)
  return target;
}

size_t suppressKeyframeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.suppressKeyframeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void suppressKeyframeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.suppressKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const suppressKeyframeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<suppressKeyframeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.suppressKeyframeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.suppressKeyframeRequest)
    MergeFrom(*source);
  }
}

void suppressKeyframeRequest::MergeFrom(const suppressKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.suppressKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void suppressKeyframeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.suppressKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void suppressKeyframeRequest::CopyFrom(const suppressKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.suppressKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool suppressKeyframeRequest::IsInitialized() const {
  return true;
}

void suppressKeyframeRequest::InternalSwap(suppressKeyframeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(suppressKeyframeRequest, id_)
      + sizeof(suppressKeyframeRequest::id_)
      - PROTOBUF_FIELD_OFFSET(suppressKeyframeRequest, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata suppressKeyframeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class suppressKeyframeResponse::_Internal {
 public:
};

suppressKeyframeResponse::suppressKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.suppressKeyframeResponse)
}
suppressKeyframeResponse::suppressKeyframeResponse(const suppressKeyframeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.suppressKeyframeResponse)
}

void suppressKeyframeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

suppressKeyframeResponse::~suppressKeyframeResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.suppressKeyframeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void suppressKeyframeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void suppressKeyframeResponse::ArenaDtor(void* object) {
  suppressKeyframeResponse* _this = reinterpret_cast< suppressKeyframeResponse* >(object);
  (void)_this;
}
void suppressKeyframeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void suppressKeyframeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void suppressKeyframeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.suppressKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* suppressKeyframeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* suppressKeyframeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.suppressKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.suppressKeyframeResponse)
  return target;
}

size_t suppressKeyframeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.suppressKeyframeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void suppressKeyframeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.suppressKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const suppressKeyframeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<suppressKeyframeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.suppressKeyframeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.suppressKeyframeResponse)
    MergeFrom(*source);
  }
}

void suppressKeyframeResponse::MergeFrom(const suppressKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.suppressKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void suppressKeyframeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.suppressKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void suppressKeyframeResponse::CopyFrom(const suppressKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.suppressKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool suppressKeyframeResponse::IsInitialized() const {
  return true;
}

void suppressKeyframeResponse::InternalSwap(suppressKeyframeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata suppressKeyframeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getDescriptorTypeRequest::_Internal {
 public:
};

getDescriptorTypeRequest::getDescriptorTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getDescriptorTypeRequest)
}
getDescriptorTypeRequest::getDescriptorTypeRequest(const getDescriptorTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getDescriptorTypeRequest)
}

void getDescriptorTypeRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

getDescriptorTypeRequest::~getDescriptorTypeRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getDescriptorTypeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getDescriptorTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getDescriptorTypeRequest::ArenaDtor(void* object) {
  getDescriptorTypeRequest* _this = reinterpret_cast< getDescriptorTypeRequest* >(object);
  (void)_this;
}
void getDescriptorTypeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getDescriptorTypeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getDescriptorTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getDescriptorTypeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDescriptorTypeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getDescriptorTypeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getDescriptorTypeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getDescriptorTypeRequest)
  return target;
}

size_t getDescriptorTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getDescriptorTypeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getDescriptorTypeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getDescriptorTypeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getDescriptorTypeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getDescriptorTypeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getDescriptorTypeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getDescriptorTypeRequest)
    MergeFrom(*source);
  }
}

void getDescriptorTypeRequest::MergeFrom(const getDescriptorTypeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getDescriptorTypeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getDescriptorTypeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getDescriptorTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getDescriptorTypeRequest::CopyFrom(const getDescriptorTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getDescriptorTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDescriptorTypeRequest::IsInitialized() const {
  return true;
}

void getDescriptorTypeRequest::InternalSwap(getDescriptorTypeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getDescriptorTypeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getDescriptorTypeResponse::_Internal {
 public:
};

getDescriptorTypeResponse::getDescriptorTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getDescriptorTypeResponse)
}
getDescriptorTypeResponse::getDescriptorTypeResponse(const getDescriptorTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getDescriptorTypeResponse)
}

void getDescriptorTypeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

getDescriptorTypeResponse::~getDescriptorTypeResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getDescriptorTypeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getDescriptorTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getDescriptorTypeResponse::ArenaDtor(void* object) {
  getDescriptorTypeResponse* _this = reinterpret_cast< getDescriptorTypeResponse* >(object);
  (void)_this;
}
void getDescriptorTypeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getDescriptorTypeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getDescriptorTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getDescriptorTypeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDescriptorTypeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getDescriptorTypeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getDescriptorTypeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getDescriptorTypeResponse)
  return target;
}

size_t getDescriptorTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getDescriptorTypeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getDescriptorTypeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getDescriptorTypeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getDescriptorTypeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getDescriptorTypeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getDescriptorTypeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getDescriptorTypeResponse)
    MergeFrom(*source);
  }
}

void getDescriptorTypeResponse::MergeFrom(const getDescriptorTypeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getDescriptorTypeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getDescriptorTypeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getDescriptorTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getDescriptorTypeResponse::CopyFrom(const getDescriptorTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getDescriptorTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDescriptorTypeResponse::IsInitialized() const {
  return true;
}

void getDescriptorTypeResponse::InternalSwap(getDescriptorTypeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getDescriptorTypeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setDescriptorTypeRequest::_Internal {
 public:
};

setDescriptorTypeRequest::setDescriptorTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.setDescriptorTypeRequest)
}
setDescriptorTypeRequest::setDescriptorTypeRequest(const setDescriptorTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.setDescriptorTypeRequest)
}

void setDescriptorTypeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(type_));
}

setDescriptorTypeRequest::~setDescriptorTypeRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.setDescriptorTypeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setDescriptorTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void setDescriptorTypeRequest::ArenaDtor(void* object) {
  setDescriptorTypeRequest* _this = reinterpret_cast< setDescriptorTypeRequest* >(object);
  (void)_this;
}
void setDescriptorTypeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setDescriptorTypeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setDescriptorTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.setDescriptorTypeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDescriptorTypeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setDescriptorTypeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.setDescriptorTypeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // sint32 type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.setDescriptorTypeRequest)
  return target;
}

size_t setDescriptorTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.setDescriptorTypeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  // sint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setDescriptorTypeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.setDescriptorTypeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setDescriptorTypeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setDescriptorTypeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.setDescriptorTypeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.setDescriptorTypeRequest)
    MergeFrom(*source);
  }
}

void setDescriptorTypeRequest::MergeFrom(const setDescriptorTypeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.setDescriptorTypeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void setDescriptorTypeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.setDescriptorTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setDescriptorTypeRequest::CopyFrom(const setDescriptorTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.setDescriptorTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDescriptorTypeRequest::IsInitialized() const {
  return true;
}

void setDescriptorTypeRequest::InternalSwap(setDescriptorTypeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(setDescriptorTypeRequest, type_)
      + sizeof(setDescriptorTypeRequest::type_)
      - PROTOBUF_FIELD_OFFSET(setDescriptorTypeRequest, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata setDescriptorTypeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setDescriptorTypeResponse::_Internal {
 public:
};

setDescriptorTypeResponse::setDescriptorTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.setDescriptorTypeResponse)
}
setDescriptorTypeResponse::setDescriptorTypeResponse(const setDescriptorTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.setDescriptorTypeResponse)
}

void setDescriptorTypeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

setDescriptorTypeResponse::~setDescriptorTypeResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.setDescriptorTypeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setDescriptorTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void setDescriptorTypeResponse::ArenaDtor(void* object) {
  setDescriptorTypeResponse* _this = reinterpret_cast< setDescriptorTypeResponse* >(object);
  (void)_this;
}
void setDescriptorTypeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setDescriptorTypeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setDescriptorTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.setDescriptorTypeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDescriptorTypeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setDescriptorTypeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.setDescriptorTypeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.setDescriptorTypeResponse)
  return target;
}

size_t setDescriptorTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.setDescriptorTypeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setDescriptorTypeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.setDescriptorTypeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const setDescriptorTypeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setDescriptorTypeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.setDescriptorTypeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.setDescriptorTypeResponse)
    MergeFrom(*source);
  }
}

void setDescriptorTypeResponse::MergeFrom(const setDescriptorTypeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.setDescriptorTypeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void setDescriptorTypeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.setDescriptorTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setDescriptorTypeResponse::CopyFrom(const setDescriptorTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.setDescriptorTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDescriptorTypeResponse::IsInitialized() const {
  return true;
}

void setDescriptorTypeResponse::InternalSwap(setDescriptorTypeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setDescriptorTypeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class isExistKeyframeRequest::_Internal {
 public:
};

isExistKeyframeRequest::isExistKeyframeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.isExistKeyframeRequest)
}
isExistKeyframeRequest::isExistKeyframeRequest(const isExistKeyframeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.isExistKeyframeRequest)
}

void isExistKeyframeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
}

isExistKeyframeRequest::~isExistKeyframeRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.isExistKeyframeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void isExistKeyframeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void isExistKeyframeRequest::ArenaDtor(void* object) {
  isExistKeyframeRequest* _this = reinterpret_cast< isExistKeyframeRequest* >(object);
  (void)_this;
}
void isExistKeyframeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void isExistKeyframeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void isExistKeyframeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.isExistKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* isExistKeyframeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* isExistKeyframeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.isExistKeyframeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.isExistKeyframeRequest)
  return target;
}

size_t isExistKeyframeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.isExistKeyframeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void isExistKeyframeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.isExistKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const isExistKeyframeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<isExistKeyframeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.isExistKeyframeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.isExistKeyframeRequest)
    MergeFrom(*source);
  }
}

void isExistKeyframeRequest::MergeFrom(const isExistKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.isExistKeyframeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void isExistKeyframeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.isExistKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void isExistKeyframeRequest::CopyFrom(const isExistKeyframeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.isExistKeyframeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool isExistKeyframeRequest::IsInitialized() const {
  return true;
}

void isExistKeyframeRequest::InternalSwap(isExistKeyframeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(isExistKeyframeRequest, id_)
      + sizeof(isExistKeyframeRequest::id_)
      - PROTOBUF_FIELD_OFFSET(isExistKeyframeRequest, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata isExistKeyframeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class isExistKeyframeResponse::_Internal {
 public:
};

isExistKeyframeResponse::isExistKeyframeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.isExistKeyframeResponse)
}
isExistKeyframeResponse::isExistKeyframeResponse(const isExistKeyframeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.isExistKeyframeResponse)
}

void isExistKeyframeResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = false;
}

isExistKeyframeResponse::~isExistKeyframeResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.isExistKeyframeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void isExistKeyframeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void isExistKeyframeResponse::ArenaDtor(void* object) {
  isExistKeyframeResponse* _this = reinterpret_cast< isExistKeyframeResponse* >(object);
  (void)_this;
}
void isExistKeyframeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void isExistKeyframeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void isExistKeyframeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.isExistKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* isExistKeyframeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* isExistKeyframeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.isExistKeyframeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.isExistKeyframeResponse)
  return target;
}

size_t isExistKeyframeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.isExistKeyframeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void isExistKeyframeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.isExistKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const isExistKeyframeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<isExistKeyframeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.isExistKeyframeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.isExistKeyframeResponse)
    MergeFrom(*source);
  }
}

void isExistKeyframeResponse::MergeFrom(const isExistKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.isExistKeyframeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void isExistKeyframeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.isExistKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void isExistKeyframeResponse::CopyFrom(const isExistKeyframeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.isExistKeyframeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool isExistKeyframeResponse::IsInitialized() const {
  return true;
}

void isExistKeyframeResponse::InternalSwap(isExistKeyframeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata isExistKeyframeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getNbKeyframesRequest::_Internal {
 public:
};

getNbKeyframesRequest::getNbKeyframesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getNbKeyframesRequest)
}
getNbKeyframesRequest::getNbKeyframesRequest(const getNbKeyframesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getNbKeyframesRequest)
}

void getNbKeyframesRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

getNbKeyframesRequest::~getNbKeyframesRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getNbKeyframesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getNbKeyframesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getNbKeyframesRequest::ArenaDtor(void* object) {
  getNbKeyframesRequest* _this = reinterpret_cast< getNbKeyframesRequest* >(object);
  (void)_this;
}
void getNbKeyframesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getNbKeyframesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getNbKeyframesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getNbKeyframesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNbKeyframesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getNbKeyframesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getNbKeyframesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getNbKeyframesRequest)
  return target;
}

size_t getNbKeyframesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getNbKeyframesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getNbKeyframesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getNbKeyframesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getNbKeyframesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getNbKeyframesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getNbKeyframesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getNbKeyframesRequest)
    MergeFrom(*source);
  }
}

void getNbKeyframesRequest::MergeFrom(const getNbKeyframesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getNbKeyframesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getNbKeyframesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getNbKeyframesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getNbKeyframesRequest::CopyFrom(const getNbKeyframesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getNbKeyframesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNbKeyframesRequest::IsInitialized() const {
  return true;
}

void getNbKeyframesRequest::InternalSwap(getNbKeyframesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNbKeyframesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getNbKeyframesResponse::_Internal {
 public:
};

getNbKeyframesResponse::getNbKeyframesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getNbKeyframesResponse)
}
getNbKeyframesResponse::getNbKeyframesResponse(const getNbKeyframesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getNbKeyframesResponse)
}

void getNbKeyframesResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

getNbKeyframesResponse::~getNbKeyframesResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getNbKeyframesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getNbKeyframesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getNbKeyframesResponse::ArenaDtor(void* object) {
  getNbKeyframesResponse* _this = reinterpret_cast< getNbKeyframesResponse* >(object);
  (void)_this;
}
void getNbKeyframesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getNbKeyframesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getNbKeyframesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getNbKeyframesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNbKeyframesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getNbKeyframesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getNbKeyframesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getNbKeyframesResponse)
  return target;
}

size_t getNbKeyframesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getNbKeyframesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getNbKeyframesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getNbKeyframesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getNbKeyframesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getNbKeyframesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getNbKeyframesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getNbKeyframesResponse)
    MergeFrom(*source);
  }
}

void getNbKeyframesResponse::MergeFrom(const getNbKeyframesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getNbKeyframesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getNbKeyframesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getNbKeyframesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getNbKeyframesResponse::CopyFrom(const getNbKeyframesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getNbKeyframesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNbKeyframesResponse::IsInitialized() const {
  return true;
}

void getNbKeyframesResponse::InternalSwap(getNbKeyframesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNbKeyframesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class saveToFileRequest::_Internal {
 public:
};

saveToFileRequest::saveToFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.saveToFileRequest)
}
saveToFileRequest::saveToFileRequest(const saveToFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.saveToFileRequest)
}

void saveToFileRequest::SharedCtor() {
file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

saveToFileRequest::~saveToFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.saveToFileRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void saveToFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void saveToFileRequest::ArenaDtor(void* object) {
  saveToFileRequest* _this = reinterpret_cast< saveToFileRequest* >(object);
  (void)_this;
}
void saveToFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void saveToFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void saveToFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.saveToFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string file = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpcIKeyframesManager.saveToFileRequest.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* saveToFileRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.saveToFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIKeyframesManager.saveToFileRequest.file");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.saveToFileRequest)
  return target;
}

size_t saveToFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.saveToFileRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void saveToFileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.saveToFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const saveToFileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<saveToFileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.saveToFileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.saveToFileRequest)
    MergeFrom(*source);
  }
}

void saveToFileRequest::MergeFrom(const saveToFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.saveToFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {
    _internal_set_file(from._internal_file());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void saveToFileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.saveToFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void saveToFileRequest::CopyFrom(const saveToFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.saveToFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileRequest::IsInitialized() const {
  return true;
}

void saveToFileRequest::InternalSwap(saveToFileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class saveToFileResponse::_Internal {
 public:
};

saveToFileResponse::saveToFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.saveToFileResponse)
}
saveToFileResponse::saveToFileResponse(const saveToFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.saveToFileResponse)
}

void saveToFileResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

saveToFileResponse::~saveToFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.saveToFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void saveToFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void saveToFileResponse::ArenaDtor(void* object) {
  saveToFileResponse* _this = reinterpret_cast< saveToFileResponse* >(object);
  (void)_this;
}
void saveToFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void saveToFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void saveToFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.saveToFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* saveToFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* saveToFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.saveToFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.saveToFileResponse)
  return target;
}

size_t saveToFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.saveToFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void saveToFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.saveToFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const saveToFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<saveToFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.saveToFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.saveToFileResponse)
    MergeFrom(*source);
  }
}

void saveToFileResponse::MergeFrom(const saveToFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.saveToFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void saveToFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.saveToFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void saveToFileResponse::CopyFrom(const saveToFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.saveToFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool saveToFileResponse::IsInitialized() const {
  return true;
}

void saveToFileResponse::InternalSwap(saveToFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata saveToFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class loadFromFileRequest::_Internal {
 public:
};

loadFromFileRequest::loadFromFileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.loadFromFileRequest)
}
loadFromFileRequest::loadFromFileRequest(const loadFromFileRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file().empty()) {
    file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.loadFromFileRequest)
}

void loadFromFileRequest::SharedCtor() {
file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

loadFromFileRequest::~loadFromFileRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.loadFromFileRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void loadFromFileRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void loadFromFileRequest::ArenaDtor(void* object) {
  loadFromFileRequest* _this = reinterpret_cast< loadFromFileRequest* >(object);
  (void)_this;
}
void loadFromFileRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void loadFromFileRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void loadFromFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.loadFromFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string file = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpcIKeyframesManager.loadFromFileRequest.file"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* loadFromFileRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.loadFromFileRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file().data(), static_cast<int>(this->_internal_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIKeyframesManager.loadFromFileRequest.file");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.loadFromFileRequest)
  return target;
}

size_t loadFromFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.loadFromFileRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void loadFromFileRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.loadFromFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const loadFromFileRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<loadFromFileRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.loadFromFileRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.loadFromFileRequest)
    MergeFrom(*source);
  }
}

void loadFromFileRequest::MergeFrom(const loadFromFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.loadFromFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file().size() > 0) {
    _internal_set_file(from._internal_file());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void loadFromFileRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.loadFromFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loadFromFileRequest::CopyFrom(const loadFromFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.loadFromFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileRequest::IsInitialized() const {
  return true;
}

void loadFromFileRequest::InternalSwap(loadFromFileRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  file_.Swap(&other->file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class loadFromFileResponse::_Internal {
 public:
};

loadFromFileResponse::loadFromFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.loadFromFileResponse)
}
loadFromFileResponse::loadFromFileResponse(const loadFromFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.loadFromFileResponse)
}

void loadFromFileResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

loadFromFileResponse::~loadFromFileResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.loadFromFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void loadFromFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void loadFromFileResponse::ArenaDtor(void* object) {
  loadFromFileResponse* _this = reinterpret_cast< loadFromFileResponse* >(object);
  (void)_this;
}
void loadFromFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void loadFromFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void loadFromFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.loadFromFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* loadFromFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* loadFromFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.loadFromFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.loadFromFileResponse)
  return target;
}

size_t loadFromFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.loadFromFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void loadFromFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.loadFromFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const loadFromFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<loadFromFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.loadFromFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.loadFromFileResponse)
    MergeFrom(*source);
  }
}

void loadFromFileResponse::MergeFrom(const loadFromFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.loadFromFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void loadFromFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.loadFromFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void loadFromFileResponse::CopyFrom(const loadFromFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.loadFromFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool loadFromFileResponse::IsInitialized() const {
  return true;
}

void loadFromFileResponse::InternalSwap(loadFromFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata loadFromFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getConstKeyframeCollectionRequest::_Internal {
 public:
};

getConstKeyframeCollectionRequest::getConstKeyframeCollectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
}
getConstKeyframeCollectionRequest::getConstKeyframeCollectionRequest(const getConstKeyframeCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
}

void getConstKeyframeCollectionRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

getConstKeyframeCollectionRequest::~getConstKeyframeCollectionRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getConstKeyframeCollectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getConstKeyframeCollectionRequest::ArenaDtor(void* object) {
  getConstKeyframeCollectionRequest* _this = reinterpret_cast< getConstKeyframeCollectionRequest* >(object);
  (void)_this;
}
void getConstKeyframeCollectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getConstKeyframeCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getConstKeyframeCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getConstKeyframeCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getConstKeyframeCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
  return target;
}

size_t getConstKeyframeCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getConstKeyframeCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getConstKeyframeCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getConstKeyframeCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
    MergeFrom(*source);
  }
}

void getConstKeyframeCollectionRequest::MergeFrom(const getConstKeyframeCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getConstKeyframeCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getConstKeyframeCollectionRequest::CopyFrom(const getConstKeyframeCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getConstKeyframeCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getConstKeyframeCollectionRequest::IsInitialized() const {
  return true;
}

void getConstKeyframeCollectionRequest::InternalSwap(getConstKeyframeCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getConstKeyframeCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getConstKeyframeCollectionResponse::_Internal {
 public:
};

getConstKeyframeCollectionResponse::getConstKeyframeCollectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
}
getConstKeyframeCollectionResponse::getConstKeyframeCollectionResponse(const getConstKeyframeCollectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
}

void getConstKeyframeCollectionResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getConstKeyframeCollectionResponse::~getConstKeyframeCollectionResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getConstKeyframeCollectionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getConstKeyframeCollectionResponse::ArenaDtor(void* object) {
  getConstKeyframeCollectionResponse* _this = reinterpret_cast< getConstKeyframeCollectionResponse* >(object);
  (void)_this;
}
void getConstKeyframeCollectionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getConstKeyframeCollectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getConstKeyframeCollectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getConstKeyframeCollectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getConstKeyframeCollectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
  return target;
}

size_t getConstKeyframeCollectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getConstKeyframeCollectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getConstKeyframeCollectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getConstKeyframeCollectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
    MergeFrom(*source);
  }
}

void getConstKeyframeCollectionResponse::MergeFrom(const getConstKeyframeCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getConstKeyframeCollectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getConstKeyframeCollectionResponse::CopyFrom(const getConstKeyframeCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getConstKeyframeCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getConstKeyframeCollectionResponse::IsInitialized() const {
  return true;
}

void getConstKeyframeCollectionResponse::InternalSwap(getConstKeyframeCollectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getConstKeyframeCollectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getKeyframeCollectionRequest::_Internal {
 public:
};

getKeyframeCollectionRequest::getKeyframeCollectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getKeyframeCollectionRequest)
}
getKeyframeCollectionRequest::getKeyframeCollectionRequest(const getKeyframeCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframecollection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframecollection().empty()) {
    keyframecollection_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframecollection(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getKeyframeCollectionRequest)
}

void getKeyframeCollectionRequest::SharedCtor() {
keyframecollection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

getKeyframeCollectionRequest::~getKeyframeCollectionRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getKeyframeCollectionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getKeyframeCollectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframecollection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getKeyframeCollectionRequest::ArenaDtor(void* object) {
  getKeyframeCollectionRequest* _this = reinterpret_cast< getKeyframeCollectionRequest* >(object);
  (void)_this;
}
void getKeyframeCollectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getKeyframeCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getKeyframeCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getKeyframeCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframecollection_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getKeyframeCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keyframeCollection = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_keyframecollection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getKeyframeCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getKeyframeCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keyframeCollection = 2;
  if (this->keyframecollection().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keyframecollection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getKeyframeCollectionRequest)
  return target;
}

size_t getKeyframeCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getKeyframeCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframeCollection = 2;
  if (this->keyframecollection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframecollection());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getKeyframeCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getKeyframeCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getKeyframeCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getKeyframeCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getKeyframeCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getKeyframeCollectionRequest)
    MergeFrom(*source);
  }
}

void getKeyframeCollectionRequest::MergeFrom(const getKeyframeCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getKeyframeCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframecollection().size() > 0) {
    _internal_set_keyframecollection(from._internal_keyframecollection());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getKeyframeCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getKeyframeCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getKeyframeCollectionRequest::CopyFrom(const getKeyframeCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getKeyframeCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getKeyframeCollectionRequest::IsInitialized() const {
  return true;
}

void getKeyframeCollectionRequest::InternalSwap(getKeyframeCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframecollection_.Swap(&other->keyframecollection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getKeyframeCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getKeyframeCollectionResponse::_Internal {
 public:
};

getKeyframeCollectionResponse::getKeyframeCollectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.getKeyframeCollectionResponse)
}
getKeyframeCollectionResponse::getKeyframeCollectionResponse(const getKeyframeCollectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframecollection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframecollection().empty()) {
    keyframecollection_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframecollection(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.getKeyframeCollectionResponse)
}

void getKeyframeCollectionResponse::SharedCtor() {
keyframecollection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getKeyframeCollectionResponse::~getKeyframeCollectionResponse() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.getKeyframeCollectionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getKeyframeCollectionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframecollection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getKeyframeCollectionResponse::ArenaDtor(void* object) {
  getKeyframeCollectionResponse* _this = reinterpret_cast< getKeyframeCollectionResponse* >(object);
  (void)_this;
}
void getKeyframeCollectionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getKeyframeCollectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getKeyframeCollectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.getKeyframeCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframecollection_.ClearToEmpty();
  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getKeyframeCollectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes keyframeCollection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_keyframecollection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getKeyframeCollectionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.getKeyframeCollectionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes keyframeCollection = 1;
  if (this->keyframecollection().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_keyframecollection(), target);
  }

  // bytes xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.getKeyframeCollectionResponse)
  return target;
}

size_t getKeyframeCollectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.getKeyframeCollectionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframeCollection = 1;
  if (this->keyframecollection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframecollection());
  }

  // bytes xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getKeyframeCollectionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.getKeyframeCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getKeyframeCollectionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getKeyframeCollectionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.getKeyframeCollectionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.getKeyframeCollectionResponse)
    MergeFrom(*source);
  }
}

void getKeyframeCollectionResponse::MergeFrom(const getKeyframeCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.getKeyframeCollectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframecollection().size() > 0) {
    _internal_set_keyframecollection(from._internal_keyframecollection());
  }
  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getKeyframeCollectionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.getKeyframeCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getKeyframeCollectionResponse::CopyFrom(const getKeyframeCollectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.getKeyframeCollectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getKeyframeCollectionResponse::IsInitialized() const {
  return true;
}

void getKeyframeCollectionResponse::InternalSwap(getKeyframeCollectionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframecollection_.Swap(&other->keyframecollection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getKeyframeCollectionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setKeyframeCollectionRequest::_Internal {
 public:
};

setKeyframeCollectionRequest::setKeyframeCollectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIKeyframesManager.setKeyframeCollectionRequest)
}
setKeyframeCollectionRequest::setKeyframeCollectionRequest(const setKeyframeCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyframecollection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keyframecollection().empty()) {
    keyframecollection_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keyframecollection(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIKeyframesManager.setKeyframeCollectionRequest)
}

void setKeyframeCollectionRequest::SharedCtor() {
keyframecollection_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setKeyframeCollectionRequest::~setKeyframeCollectionRequest() {
  // @@protoc_insertion_point(destructor:grpcIKeyframesManager.setKeyframeCollectionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setKeyframeCollectionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  keyframecollection_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setKeyframeCollectionRequest::ArenaDtor(void* object) {
  setKeyframeCollectionRequest* _this = reinterpret_cast< setKeyframeCollectionRequest* >(object);
  (void)_this;
}
void setKeyframeCollectionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setKeyframeCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setKeyframeCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIKeyframesManager.setKeyframeCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframecollection_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setKeyframeCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes keyframeCollection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_keyframecollection();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setKeyframeCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIKeyframesManager.setKeyframeCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes keyframeCollection = 1;
  if (this->keyframecollection().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_keyframecollection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIKeyframesManager.setKeyframeCollectionRequest)
  return target;
}

size_t setKeyframeCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIKeyframesManager.setKeyframeCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keyframeCollection = 1;
  if (this->keyframecollection().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keyframecollection());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setKeyframeCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIKeyframesManager.setKeyframeCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setKeyframeCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setKeyframeCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIKeyframesManager.setKeyframeCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIKeyframesManager.setKeyframeCollectionRequest)
    MergeFrom(*source);
  }
}

void setKeyframeCollectionRequest::MergeFrom(const setKeyframeCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIKeyframesManager.setKeyframeCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keyframecollection().size() > 0) {
    _internal_set_keyframecollection(from._internal_keyframecollection());
  }
}

void setKeyframeCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIKeyframesManager.setKeyframeCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setKeyframeCollectionRequest::CopyFrom(const setKeyframeCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIKeyframesManager.setKeyframeCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setKeyframeCollectionRequest::IsInitialized() const {
  return true;
}

void setKeyframeCollectionRequest::InternalSwap(setKeyframeCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  keyframecollection_.Swap(&other->keyframecollection_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setKeyframeCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIKeyframesManager
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::addKeyframe_grpc0Request* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::addKeyframe_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::addKeyframe_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::addKeyframe_grpc0Response* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::addKeyframe_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::addKeyframe_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::addKeyframe_grpc1Request* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::addKeyframe_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::addKeyframe_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::addKeyframe_grpc1Response* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::addKeyframe_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::addKeyframe_grpc1Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getKeyframeRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getKeyframeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getKeyframeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getKeyframeResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getKeyframeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getKeyframeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getKeyframesRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getKeyframesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getKeyframesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getKeyframesResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getKeyframesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getKeyframesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getAllKeyframesRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getAllKeyframesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getAllKeyframesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getAllKeyframesResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getAllKeyframesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getAllKeyframesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::suppressKeyframeRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::suppressKeyframeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::suppressKeyframeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::suppressKeyframeResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::suppressKeyframeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::suppressKeyframeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getDescriptorTypeRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getDescriptorTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getDescriptorTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getDescriptorTypeResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getDescriptorTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getDescriptorTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::setDescriptorTypeRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::setDescriptorTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::setDescriptorTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::setDescriptorTypeResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::setDescriptorTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::setDescriptorTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::isExistKeyframeRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::isExistKeyframeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::isExistKeyframeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::isExistKeyframeResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::isExistKeyframeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::isExistKeyframeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getNbKeyframesRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getNbKeyframesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getNbKeyframesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getNbKeyframesResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getNbKeyframesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getNbKeyframesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::saveToFileRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::saveToFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::saveToFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::saveToFileResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::saveToFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::saveToFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::loadFromFileRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::loadFromFileRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::loadFromFileRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::loadFromFileResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::loadFromFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::loadFromFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getConstKeyframeCollectionRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getConstKeyframeCollectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getConstKeyframeCollectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getConstKeyframeCollectionResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getConstKeyframeCollectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getConstKeyframeCollectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getKeyframeCollectionRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getKeyframeCollectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getKeyframeCollectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::getKeyframeCollectionResponse* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::getKeyframeCollectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::getKeyframeCollectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIKeyframesManager::setKeyframeCollectionRequest* Arena::CreateMaybeMessage< ::grpcIKeyframesManager::setKeyframeCollectionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIKeyframesManager::setKeyframeCollectionRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
