// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcITriangulatorService.proto

#include "grpcITriangulatorService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcITriangulator {
PROTOBUF_CONSTEXPR triangulate_grpc0Request::triangulate_grpc0Request(
    ::_pbi::ConstantInitialized)
  : pointsview1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pointview2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , working_views_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , poseview1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , poseview2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , camparams1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , camparams2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct triangulate_grpc0RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR triangulate_grpc0RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~triangulate_grpc0RequestDefaultTypeInternal() {}
  union {
    triangulate_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 triangulate_grpc0RequestDefaultTypeInternal _triangulate_grpc0Request_default_instance_;
PROTOBUF_CONSTEXPR triangulate_grpc0Response::triangulate_grpc0Response(
    ::_pbi::ConstantInitialized)
  : pcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct triangulate_grpc0ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR triangulate_grpc0ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~triangulate_grpc0ResponseDefaultTypeInternal() {}
  union {
    triangulate_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 triangulate_grpc0ResponseDefaultTypeInternal _triangulate_grpc0Response_default_instance_;
PROTOBUF_CONSTEXPR triangulate_grpc1Request::triangulate_grpc1Request(
    ::_pbi::ConstantInitialized)
  : keypointsview1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , keypointsview2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , working_views_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , poseview1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , poseview2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , camparams1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , camparams2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct triangulate_grpc1RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR triangulate_grpc1RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~triangulate_grpc1RequestDefaultTypeInternal() {}
  union {
    triangulate_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 triangulate_grpc1RequestDefaultTypeInternal _triangulate_grpc1Request_default_instance_;
PROTOBUF_CONSTEXPR triangulate_grpc1Response::triangulate_grpc1Response(
    ::_pbi::ConstantInitialized)
  : pcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct triangulate_grpc1ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR triangulate_grpc1ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~triangulate_grpc1ResponseDefaultTypeInternal() {}
  union {
    triangulate_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 triangulate_grpc1ResponseDefaultTypeInternal _triangulate_grpc1Response_default_instance_;
PROTOBUF_CONSTEXPR triangulate_grpc2Request::triangulate_grpc2Request(
    ::_pbi::ConstantInitialized)
  : keypointsview1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , keypointsview2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , descriptor1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , descriptor2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , working_views_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , poseview1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , poseview2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , camparams1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , camparams2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct triangulate_grpc2RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR triangulate_grpc2RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~triangulate_grpc2RequestDefaultTypeInternal() {}
  union {
    triangulate_grpc2Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 triangulate_grpc2RequestDefaultTypeInternal _triangulate_grpc2Request_default_instance_;
PROTOBUF_CONSTEXPR triangulate_grpc2Response::triangulate_grpc2Response(
    ::_pbi::ConstantInitialized)
  : pcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct triangulate_grpc2ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR triangulate_grpc2ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~triangulate_grpc2ResponseDefaultTypeInternal() {}
  union {
    triangulate_grpc2Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 triangulate_grpc2ResponseDefaultTypeInternal _triangulate_grpc2Response_default_instance_;
PROTOBUF_CONSTEXPR triangulate_grpc3Request::triangulate_grpc3Request(
    ::_pbi::ConstantInitialized)
  : frame1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , frame2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , working_views_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , camparams1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , camparams2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , pcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0)
  , onlydepth_(false){}
struct triangulate_grpc3RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR triangulate_grpc3RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~triangulate_grpc3RequestDefaultTypeInternal() {}
  union {
    triangulate_grpc3Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 triangulate_grpc3RequestDefaultTypeInternal _triangulate_grpc3Request_default_instance_;
PROTOBUF_CONSTEXPR triangulate_grpc3Response::triangulate_grpc3Response(
    ::_pbi::ConstantInitialized)
  : pcloud_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct triangulate_grpc3ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR triangulate_grpc3ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~triangulate_grpc3ResponseDefaultTypeInternal() {}
  union {
    triangulate_grpc3Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 triangulate_grpc3ResponseDefaultTypeInternal _triangulate_grpc3Response_default_instance_;
}  // namespace grpcITriangulator
static ::_pb::Metadata file_level_metadata_grpcITriangulatorService_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcITriangulatorService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcITriangulatorService_2eproto = nullptr;

const uint32_t TableStruct_grpcITriangulatorService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, pointsview1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, pointview2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, working_views_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, poseview1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, poseview2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, camparams1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, camparams2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Request, pcloud_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Response, pcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc0Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, keypointsview1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, keypointsview2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, working_views_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, poseview1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, poseview2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, camparams1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, camparams2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Request, pcloud_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Response, pcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc1Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, keypointsview1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, keypointsview2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, descriptor1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, descriptor2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, working_views_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, poseview1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, poseview2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, camparams1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, camparams2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Request, pcloud_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Response, pcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc2Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, frame1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, frame2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, working_views_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, camparams1_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, camparams2_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, onlydepth_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Request, pcloud_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Response, pcloud_),
  PROTOBUF_FIELD_OFFSET(::grpcITriangulator::triangulate_grpc3Response, xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcITriangulator::triangulate_grpc0Request)},
  { 16, -1, -1, sizeof(::grpcITriangulator::triangulate_grpc0Response)},
  { 24, -1, -1, sizeof(::grpcITriangulator::triangulate_grpc1Request)},
  { 40, -1, -1, sizeof(::grpcITriangulator::triangulate_grpc1Response)},
  { 48, -1, -1, sizeof(::grpcITriangulator::triangulate_grpc2Request)},
  { 66, -1, -1, sizeof(::grpcITriangulator::triangulate_grpc2Response)},
  { 74, -1, -1, sizeof(::grpcITriangulator::triangulate_grpc3Request)},
  { 89, -1, -1, sizeof(::grpcITriangulator::triangulate_grpc3Response)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcITriangulator::_triangulate_grpc0Request_default_instance_._instance,
  &::grpcITriangulator::_triangulate_grpc0Response_default_instance_._instance,
  &::grpcITriangulator::_triangulate_grpc1Request_default_instance_._instance,
  &::grpcITriangulator::_triangulate_grpc1Response_default_instance_._instance,
  &::grpcITriangulator::_triangulate_grpc2Request_default_instance_._instance,
  &::grpcITriangulator::_triangulate_grpc2Response_default_instance_._instance,
  &::grpcITriangulator::_triangulate_grpc3Request_default_instance_._instance,
  &::grpcITriangulator::_triangulate_grpc3Response_default_instance_._instance,
};

const char descriptor_table_protodef_grpcITriangulatorService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036grpcITriangulatorService.proto\022\021grpcIT"
  "riangulator\032\033google/protobuf/empty.proto"
  "\"\356\001\n\030triangulate_grpc0Request\022#\n\033grpcSer"
  "verCompressionFormat\030\001 \001(\005\022\023\n\013pointsView"
  "1\030\002 \001(\014\022\022\n\npointView2\030\003 \001(\014\022\017\n\007matches\030\004"
  " \001(\014\022\025\n\rworking_views\030\005 \001(\014\022\021\n\tposeView1"
  "\030\006 \001(\014\022\021\n\tposeView2\030\007 \001(\014\022\022\n\ncamParams1\030"
  "\010 \001(\014\022\022\n\ncamParams2\030\t \001(\014\022\016\n\006pcloud\030\n \001("
  "\014\"H\n\031triangulate_grpc0Response\022\016\n\006pcloud"
  "\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\001\"\365\001\n\030"
  "triangulate_grpc1Request\022#\n\033grpcServerCo"
  "mpressionFormat\030\001 \001(\005\022\026\n\016keypointsView1\030"
  "\002 \001(\014\022\026\n\016keypointsView2\030\003 \001(\014\022\017\n\007matches"
  "\030\004 \001(\014\022\025\n\rworking_views\030\005 \001(\014\022\021\n\tposeVie"
  "w1\030\006 \001(\014\022\021\n\tposeView2\030\007 \001(\014\022\022\n\ncamParams"
  "1\030\010 \001(\014\022\022\n\ncamParams2\030\t \001(\014\022\016\n\006pcloud\030\n "
  "\001(\014\"H\n\031triangulate_grpc1Response\022\016\n\006pclo"
  "ud\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\001\"\237\002"
  "\n\030triangulate_grpc2Request\022#\n\033grpcServer"
  "CompressionFormat\030\001 \001(\005\022\026\n\016keypointsView"
  "1\030\002 \001(\014\022\026\n\016keypointsView2\030\003 \001(\014\022\023\n\013descr"
  "iptor1\030\004 \001(\014\022\023\n\013descriptor2\030\005 \001(\014\022\017\n\007mat"
  "ches\030\006 \001(\014\022\025\n\rworking_views\030\007 \001(\014\022\021\n\tpos"
  "eView1\030\010 \001(\014\022\021\n\tposeView2\030\t \001(\014\022\022\n\ncamPa"
  "rams1\030\n \001(\014\022\022\n\ncamParams2\030\013 \001(\014\022\016\n\006pclou"
  "d\030\014 \001(\014\"H\n\031triangulate_grpc2Response\022\016\n\006"
  "pcloud\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001("
  "\001\"\322\001\n\030triangulate_grpc3Request\022#\n\033grpcSe"
  "rverCompressionFormat\030\001 \001(\005\022\016\n\006frame1\030\002 "
  "\001(\014\022\016\n\006frame2\030\003 \001(\014\022\017\n\007matches\030\004 \001(\014\022\025\n\r"
  "working_views\030\005 \001(\014\022\022\n\ncamParams1\030\006 \001(\014\022"
  "\022\n\ncamParams2\030\007 \001(\014\022\021\n\tonlyDepth\030\010 \001(\010\022\016"
  "\n\006pcloud\030\t \001(\014\"H\n\031triangulate_grpc3Respo"
  "nse\022\016\n\006pcloud\030\001 \001(\014\022\033\n\023xpcfGrpcReturnVal"
  "ue\030\002 \001(\0012\342\003\n\030grpcITriangulatorService\022p\n"
  "\021triangulate_grpc0\022+.grpcITriangulator.t"
  "riangulate_grpc0Request\032,.grpcITriangula"
  "tor.triangulate_grpc0Response\"\000\022p\n\021trian"
  "gulate_grpc1\022+.grpcITriangulator.triangu"
  "late_grpc1Request\032,.grpcITriangulator.tr"
  "iangulate_grpc1Response\"\000\022p\n\021triangulate"
  "_grpc2\022+.grpcITriangulator.triangulate_g"
  "rpc2Request\032,.grpcITriangulator.triangul"
  "ate_grpc2Response\"\000\022p\n\021triangulate_grpc3"
  "\022+.grpcITriangulator.triangulate_grpc3Re"
  "quest\032,.grpcITriangulator.triangulate_gr"
  "pc3Response\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcITriangulatorService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcITriangulatorService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcITriangulatorService_2eproto = {
    false, false, 1861, descriptor_table_protodef_grpcITriangulatorService_2eproto,
    "grpcITriangulatorService.proto",
    &descriptor_table_grpcITriangulatorService_2eproto_once, descriptor_table_grpcITriangulatorService_2eproto_deps, 1, 8,
    schemas, file_default_instances, TableStruct_grpcITriangulatorService_2eproto::offsets,
    file_level_metadata_grpcITriangulatorService_2eproto, file_level_enum_descriptors_grpcITriangulatorService_2eproto,
    file_level_service_descriptors_grpcITriangulatorService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcITriangulatorService_2eproto_getter() {
  return &descriptor_table_grpcITriangulatorService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcITriangulatorService_2eproto(&descriptor_table_grpcITriangulatorService_2eproto);
namespace grpcITriangulator {

// ===================================================================

class triangulate_grpc0Request::_Internal {
 public:
};

triangulate_grpc0Request::triangulate_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcITriangulator.triangulate_grpc0Request)
}
triangulate_grpc0Request::triangulate_grpc0Request(const triangulate_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pointsview1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pointsview1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pointsview1().empty()) {
    pointsview1_.Set(from._internal_pointsview1(), 
      GetArenaForAllocation());
  }
  pointview2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pointview2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pointview2().empty()) {
    pointview2_.Set(from._internal_pointview2(), 
      GetArenaForAllocation());
  }
  matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matches().empty()) {
    matches_.Set(from._internal_matches(), 
      GetArenaForAllocation());
  }
  working_views_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    working_views_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_working_views().empty()) {
    working_views_.Set(from._internal_working_views(), 
      GetArenaForAllocation());
  }
  poseview1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    poseview1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_poseview1().empty()) {
    poseview1_.Set(from._internal_poseview1(), 
      GetArenaForAllocation());
  }
  poseview2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    poseview2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_poseview2().empty()) {
    poseview2_.Set(from._internal_poseview2(), 
      GetArenaForAllocation());
  }
  camparams1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    camparams1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camparams1().empty()) {
    camparams1_.Set(from._internal_camparams1(), 
      GetArenaForAllocation());
  }
  camparams2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    camparams2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camparams2().empty()) {
    camparams2_.Set(from._internal_camparams2(), 
      GetArenaForAllocation());
  }
  pcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pcloud().empty()) {
    pcloud_.Set(from._internal_pcloud(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcITriangulator.triangulate_grpc0Request)
}

inline void triangulate_grpc0Request::SharedCtor() {
pointsview1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pointsview1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pointview2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pointview2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
working_views_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  working_views_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
poseview1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  poseview1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
poseview2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  poseview2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
camparams1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  camparams1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
camparams2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  camparams2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

triangulate_grpc0Request::~triangulate_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcITriangulator.triangulate_grpc0Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void triangulate_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pointsview1_.Destroy();
  pointview2_.Destroy();
  matches_.Destroy();
  working_views_.Destroy();
  poseview1_.Destroy();
  poseview2_.Destroy();
  camparams1_.Destroy();
  camparams2_.Destroy();
  pcloud_.Destroy();
}

void triangulate_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void triangulate_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcITriangulator.triangulate_grpc0Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pointsview1_.ClearToEmpty();
  pointview2_.ClearToEmpty();
  matches_.ClearToEmpty();
  working_views_.ClearToEmpty();
  poseview1_.ClearToEmpty();
  poseview2_.ClearToEmpty();
  camparams1_.ClearToEmpty();
  camparams2_.ClearToEmpty();
  pcloud_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* triangulate_grpc0Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes pointsView1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pointsview1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes pointView2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_pointview2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matches = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes working_views = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_working_views();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes poseView1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_poseview1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes poseView2 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_poseview2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes camParams1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_camparams1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes camParams2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_camparams2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes pcloud = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_pcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* triangulate_grpc0Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcITriangulator.triangulate_grpc0Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes pointsView1 = 2;
  if (!this->_internal_pointsview1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_pointsview1(), target);
  }

  // bytes pointView2 = 3;
  if (!this->_internal_pointview2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_pointview2(), target);
  }

  // bytes matches = 4;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_matches(), target);
  }

  // bytes working_views = 5;
  if (!this->_internal_working_views().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_working_views(), target);
  }

  // bytes poseView1 = 6;
  if (!this->_internal_poseview1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_poseview1(), target);
  }

  // bytes poseView2 = 7;
  if (!this->_internal_poseview2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_poseview2(), target);
  }

  // bytes camParams1 = 8;
  if (!this->_internal_camparams1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_camparams1(), target);
  }

  // bytes camParams2 = 9;
  if (!this->_internal_camparams2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_camparams2(), target);
  }

  // bytes pcloud = 10;
  if (!this->_internal_pcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_pcloud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcITriangulator.triangulate_grpc0Request)
  return target;
}

size_t triangulate_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcITriangulator.triangulate_grpc0Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pointsView1 = 2;
  if (!this->_internal_pointsview1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pointsview1());
  }

  // bytes pointView2 = 3;
  if (!this->_internal_pointview2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pointview2());
  }

  // bytes matches = 4;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes working_views = 5;
  if (!this->_internal_working_views().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_working_views());
  }

  // bytes poseView1 = 6;
  if (!this->_internal_poseview1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_poseview1());
  }

  // bytes poseView2 = 7;
  if (!this->_internal_poseview2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_poseview2());
  }

  // bytes camParams1 = 8;
  if (!this->_internal_camparams1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams1());
  }

  // bytes camParams2 = 9;
  if (!this->_internal_camparams2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams2());
  }

  // bytes pcloud = 10;
  if (!this->_internal_pcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pcloud());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData triangulate_grpc0Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    triangulate_grpc0Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*triangulate_grpc0Request::GetClassData() const { return &_class_data_; }

void triangulate_grpc0Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<triangulate_grpc0Request *>(to)->MergeFrom(
      static_cast<const triangulate_grpc0Request &>(from));
}


void triangulate_grpc0Request::MergeFrom(const triangulate_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcITriangulator.triangulate_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pointsview1().empty()) {
    _internal_set_pointsview1(from._internal_pointsview1());
  }
  if (!from._internal_pointview2().empty()) {
    _internal_set_pointview2(from._internal_pointview2());
  }
  if (!from._internal_matches().empty()) {
    _internal_set_matches(from._internal_matches());
  }
  if (!from._internal_working_views().empty()) {
    _internal_set_working_views(from._internal_working_views());
  }
  if (!from._internal_poseview1().empty()) {
    _internal_set_poseview1(from._internal_poseview1());
  }
  if (!from._internal_poseview2().empty()) {
    _internal_set_poseview2(from._internal_poseview2());
  }
  if (!from._internal_camparams1().empty()) {
    _internal_set_camparams1(from._internal_camparams1());
  }
  if (!from._internal_camparams2().empty()) {
    _internal_set_camparams2(from._internal_camparams2());
  }
  if (!from._internal_pcloud().empty()) {
    _internal_set_pcloud(from._internal_pcloud());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void triangulate_grpc0Request::CopyFrom(const triangulate_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcITriangulator.triangulate_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool triangulate_grpc0Request::IsInitialized() const {
  return true;
}

void triangulate_grpc0Request::InternalSwap(triangulate_grpc0Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pointsview1_, lhs_arena,
      &other->pointsview1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pointview2_, lhs_arena,
      &other->pointview2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &matches_, lhs_arena,
      &other->matches_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &working_views_, lhs_arena,
      &other->working_views_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &poseview1_, lhs_arena,
      &other->poseview1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &poseview2_, lhs_arena,
      &other->poseview2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &camparams1_, lhs_arena,
      &other->camparams1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &camparams2_, lhs_arena,
      &other->camparams2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pcloud_, lhs_arena,
      &other->pcloud_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata triangulate_grpc0Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcITriangulatorService_2eproto_getter, &descriptor_table_grpcITriangulatorService_2eproto_once,
      file_level_metadata_grpcITriangulatorService_2eproto[0]);
}

// ===================================================================

class triangulate_grpc0Response::_Internal {
 public:
};

triangulate_grpc0Response::triangulate_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcITriangulator.triangulate_grpc0Response)
}
triangulate_grpc0Response::triangulate_grpc0Response(const triangulate_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pcloud().empty()) {
    pcloud_.Set(from._internal_pcloud(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcITriangulator.triangulate_grpc0Response)
}

inline void triangulate_grpc0Response::SharedCtor() {
pcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

triangulate_grpc0Response::~triangulate_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcITriangulator.triangulate_grpc0Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void triangulate_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pcloud_.Destroy();
}

void triangulate_grpc0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void triangulate_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcITriangulator.triangulate_grpc0Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pcloud_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* triangulate_grpc0Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes pcloud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* triangulate_grpc0Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcITriangulator.triangulate_grpc0Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pcloud = 1;
  if (!this->_internal_pcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pcloud(), target);
  }

  // double xpcfGrpcReturnValue = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = this->_internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcITriangulator.triangulate_grpc0Response)
  return target;
}

size_t triangulate_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcITriangulator.triangulate_grpc0Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pcloud = 1;
  if (!this->_internal_pcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pcloud());
  }

  // double xpcfGrpcReturnValue = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = this->_internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData triangulate_grpc0Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    triangulate_grpc0Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*triangulate_grpc0Response::GetClassData() const { return &_class_data_; }

void triangulate_grpc0Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<triangulate_grpc0Response *>(to)->MergeFrom(
      static_cast<const triangulate_grpc0Response &>(from));
}


void triangulate_grpc0Response::MergeFrom(const triangulate_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcITriangulator.triangulate_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pcloud().empty()) {
    _internal_set_pcloud(from._internal_pcloud());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = from._internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void triangulate_grpc0Response::CopyFrom(const triangulate_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcITriangulator.triangulate_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool triangulate_grpc0Response::IsInitialized() const {
  return true;
}

void triangulate_grpc0Response::InternalSwap(triangulate_grpc0Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pcloud_, lhs_arena,
      &other->pcloud_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata triangulate_grpc0Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcITriangulatorService_2eproto_getter, &descriptor_table_grpcITriangulatorService_2eproto_once,
      file_level_metadata_grpcITriangulatorService_2eproto[1]);
}

// ===================================================================

class triangulate_grpc1Request::_Internal {
 public:
};

triangulate_grpc1Request::triangulate_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcITriangulator.triangulate_grpc1Request)
}
triangulate_grpc1Request::triangulate_grpc1Request(const triangulate_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keypointsview1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    keypointsview1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keypointsview1().empty()) {
    keypointsview1_.Set(from._internal_keypointsview1(), 
      GetArenaForAllocation());
  }
  keypointsview2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    keypointsview2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keypointsview2().empty()) {
    keypointsview2_.Set(from._internal_keypointsview2(), 
      GetArenaForAllocation());
  }
  matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matches().empty()) {
    matches_.Set(from._internal_matches(), 
      GetArenaForAllocation());
  }
  working_views_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    working_views_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_working_views().empty()) {
    working_views_.Set(from._internal_working_views(), 
      GetArenaForAllocation());
  }
  poseview1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    poseview1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_poseview1().empty()) {
    poseview1_.Set(from._internal_poseview1(), 
      GetArenaForAllocation());
  }
  poseview2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    poseview2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_poseview2().empty()) {
    poseview2_.Set(from._internal_poseview2(), 
      GetArenaForAllocation());
  }
  camparams1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    camparams1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camparams1().empty()) {
    camparams1_.Set(from._internal_camparams1(), 
      GetArenaForAllocation());
  }
  camparams2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    camparams2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camparams2().empty()) {
    camparams2_.Set(from._internal_camparams2(), 
      GetArenaForAllocation());
  }
  pcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pcloud().empty()) {
    pcloud_.Set(from._internal_pcloud(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcITriangulator.triangulate_grpc1Request)
}

inline void triangulate_grpc1Request::SharedCtor() {
keypointsview1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  keypointsview1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
keypointsview2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  keypointsview2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
working_views_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  working_views_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
poseview1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  poseview1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
poseview2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  poseview2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
camparams1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  camparams1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
camparams2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  camparams2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

triangulate_grpc1Request::~triangulate_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcITriangulator.triangulate_grpc1Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void triangulate_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  keypointsview1_.Destroy();
  keypointsview2_.Destroy();
  matches_.Destroy();
  working_views_.Destroy();
  poseview1_.Destroy();
  poseview2_.Destroy();
  camparams1_.Destroy();
  camparams2_.Destroy();
  pcloud_.Destroy();
}

void triangulate_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void triangulate_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcITriangulator.triangulate_grpc1Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keypointsview1_.ClearToEmpty();
  keypointsview2_.ClearToEmpty();
  matches_.ClearToEmpty();
  working_views_.ClearToEmpty();
  poseview1_.ClearToEmpty();
  poseview2_.ClearToEmpty();
  camparams1_.ClearToEmpty();
  camparams2_.ClearToEmpty();
  pcloud_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* triangulate_grpc1Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keypointsView1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keypointsview1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keypointsView2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_keypointsview2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matches = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes working_views = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_working_views();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes poseView1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_poseview1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes poseView2 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_poseview2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes camParams1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_camparams1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes camParams2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_camparams2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes pcloud = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_pcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* triangulate_grpc1Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcITriangulator.triangulate_grpc1Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keypointsView1 = 2;
  if (!this->_internal_keypointsview1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keypointsview1(), target);
  }

  // bytes keypointsView2 = 3;
  if (!this->_internal_keypointsview2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_keypointsview2(), target);
  }

  // bytes matches = 4;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_matches(), target);
  }

  // bytes working_views = 5;
  if (!this->_internal_working_views().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_working_views(), target);
  }

  // bytes poseView1 = 6;
  if (!this->_internal_poseview1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_poseview1(), target);
  }

  // bytes poseView2 = 7;
  if (!this->_internal_poseview2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_poseview2(), target);
  }

  // bytes camParams1 = 8;
  if (!this->_internal_camparams1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_camparams1(), target);
  }

  // bytes camParams2 = 9;
  if (!this->_internal_camparams2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_camparams2(), target);
  }

  // bytes pcloud = 10;
  if (!this->_internal_pcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_pcloud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcITriangulator.triangulate_grpc1Request)
  return target;
}

size_t triangulate_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcITriangulator.triangulate_grpc1Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keypointsView1 = 2;
  if (!this->_internal_keypointsview1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypointsview1());
  }

  // bytes keypointsView2 = 3;
  if (!this->_internal_keypointsview2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypointsview2());
  }

  // bytes matches = 4;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes working_views = 5;
  if (!this->_internal_working_views().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_working_views());
  }

  // bytes poseView1 = 6;
  if (!this->_internal_poseview1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_poseview1());
  }

  // bytes poseView2 = 7;
  if (!this->_internal_poseview2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_poseview2());
  }

  // bytes camParams1 = 8;
  if (!this->_internal_camparams1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams1());
  }

  // bytes camParams2 = 9;
  if (!this->_internal_camparams2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams2());
  }

  // bytes pcloud = 10;
  if (!this->_internal_pcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pcloud());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData triangulate_grpc1Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    triangulate_grpc1Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*triangulate_grpc1Request::GetClassData() const { return &_class_data_; }

void triangulate_grpc1Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<triangulate_grpc1Request *>(to)->MergeFrom(
      static_cast<const triangulate_grpc1Request &>(from));
}


void triangulate_grpc1Request::MergeFrom(const triangulate_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcITriangulator.triangulate_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keypointsview1().empty()) {
    _internal_set_keypointsview1(from._internal_keypointsview1());
  }
  if (!from._internal_keypointsview2().empty()) {
    _internal_set_keypointsview2(from._internal_keypointsview2());
  }
  if (!from._internal_matches().empty()) {
    _internal_set_matches(from._internal_matches());
  }
  if (!from._internal_working_views().empty()) {
    _internal_set_working_views(from._internal_working_views());
  }
  if (!from._internal_poseview1().empty()) {
    _internal_set_poseview1(from._internal_poseview1());
  }
  if (!from._internal_poseview2().empty()) {
    _internal_set_poseview2(from._internal_poseview2());
  }
  if (!from._internal_camparams1().empty()) {
    _internal_set_camparams1(from._internal_camparams1());
  }
  if (!from._internal_camparams2().empty()) {
    _internal_set_camparams2(from._internal_camparams2());
  }
  if (!from._internal_pcloud().empty()) {
    _internal_set_pcloud(from._internal_pcloud());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void triangulate_grpc1Request::CopyFrom(const triangulate_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcITriangulator.triangulate_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool triangulate_grpc1Request::IsInitialized() const {
  return true;
}

void triangulate_grpc1Request::InternalSwap(triangulate_grpc1Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &keypointsview1_, lhs_arena,
      &other->keypointsview1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &keypointsview2_, lhs_arena,
      &other->keypointsview2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &matches_, lhs_arena,
      &other->matches_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &working_views_, lhs_arena,
      &other->working_views_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &poseview1_, lhs_arena,
      &other->poseview1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &poseview2_, lhs_arena,
      &other->poseview2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &camparams1_, lhs_arena,
      &other->camparams1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &camparams2_, lhs_arena,
      &other->camparams2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pcloud_, lhs_arena,
      &other->pcloud_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata triangulate_grpc1Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcITriangulatorService_2eproto_getter, &descriptor_table_grpcITriangulatorService_2eproto_once,
      file_level_metadata_grpcITriangulatorService_2eproto[2]);
}

// ===================================================================

class triangulate_grpc1Response::_Internal {
 public:
};

triangulate_grpc1Response::triangulate_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcITriangulator.triangulate_grpc1Response)
}
triangulate_grpc1Response::triangulate_grpc1Response(const triangulate_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pcloud().empty()) {
    pcloud_.Set(from._internal_pcloud(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcITriangulator.triangulate_grpc1Response)
}

inline void triangulate_grpc1Response::SharedCtor() {
pcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

triangulate_grpc1Response::~triangulate_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcITriangulator.triangulate_grpc1Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void triangulate_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pcloud_.Destroy();
}

void triangulate_grpc1Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void triangulate_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcITriangulator.triangulate_grpc1Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pcloud_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* triangulate_grpc1Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes pcloud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* triangulate_grpc1Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcITriangulator.triangulate_grpc1Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pcloud = 1;
  if (!this->_internal_pcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pcloud(), target);
  }

  // double xpcfGrpcReturnValue = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = this->_internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcITriangulator.triangulate_grpc1Response)
  return target;
}

size_t triangulate_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcITriangulator.triangulate_grpc1Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pcloud = 1;
  if (!this->_internal_pcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pcloud());
  }

  // double xpcfGrpcReturnValue = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = this->_internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData triangulate_grpc1Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    triangulate_grpc1Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*triangulate_grpc1Response::GetClassData() const { return &_class_data_; }

void triangulate_grpc1Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<triangulate_grpc1Response *>(to)->MergeFrom(
      static_cast<const triangulate_grpc1Response &>(from));
}


void triangulate_grpc1Response::MergeFrom(const triangulate_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcITriangulator.triangulate_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pcloud().empty()) {
    _internal_set_pcloud(from._internal_pcloud());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = from._internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void triangulate_grpc1Response::CopyFrom(const triangulate_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcITriangulator.triangulate_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool triangulate_grpc1Response::IsInitialized() const {
  return true;
}

void triangulate_grpc1Response::InternalSwap(triangulate_grpc1Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pcloud_, lhs_arena,
      &other->pcloud_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata triangulate_grpc1Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcITriangulatorService_2eproto_getter, &descriptor_table_grpcITriangulatorService_2eproto_once,
      file_level_metadata_grpcITriangulatorService_2eproto[3]);
}

// ===================================================================

class triangulate_grpc2Request::_Internal {
 public:
};

triangulate_grpc2Request::triangulate_grpc2Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcITriangulator.triangulate_grpc2Request)
}
triangulate_grpc2Request::triangulate_grpc2Request(const triangulate_grpc2Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keypointsview1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    keypointsview1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keypointsview1().empty()) {
    keypointsview1_.Set(from._internal_keypointsview1(), 
      GetArenaForAllocation());
  }
  keypointsview2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    keypointsview2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keypointsview2().empty()) {
    keypointsview2_.Set(from._internal_keypointsview2(), 
      GetArenaForAllocation());
  }
  descriptor1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    descriptor1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_descriptor1().empty()) {
    descriptor1_.Set(from._internal_descriptor1(), 
      GetArenaForAllocation());
  }
  descriptor2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    descriptor2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_descriptor2().empty()) {
    descriptor2_.Set(from._internal_descriptor2(), 
      GetArenaForAllocation());
  }
  matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matches().empty()) {
    matches_.Set(from._internal_matches(), 
      GetArenaForAllocation());
  }
  working_views_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    working_views_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_working_views().empty()) {
    working_views_.Set(from._internal_working_views(), 
      GetArenaForAllocation());
  }
  poseview1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    poseview1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_poseview1().empty()) {
    poseview1_.Set(from._internal_poseview1(), 
      GetArenaForAllocation());
  }
  poseview2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    poseview2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_poseview2().empty()) {
    poseview2_.Set(from._internal_poseview2(), 
      GetArenaForAllocation());
  }
  camparams1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    camparams1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camparams1().empty()) {
    camparams1_.Set(from._internal_camparams1(), 
      GetArenaForAllocation());
  }
  camparams2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    camparams2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camparams2().empty()) {
    camparams2_.Set(from._internal_camparams2(), 
      GetArenaForAllocation());
  }
  pcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pcloud().empty()) {
    pcloud_.Set(from._internal_pcloud(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcITriangulator.triangulate_grpc2Request)
}

inline void triangulate_grpc2Request::SharedCtor() {
keypointsview1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  keypointsview1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
keypointsview2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  keypointsview2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
descriptor1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  descriptor1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
descriptor2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  descriptor2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
working_views_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  working_views_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
poseview1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  poseview1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
poseview2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  poseview2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
camparams1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  camparams1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
camparams2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  camparams2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

triangulate_grpc2Request::~triangulate_grpc2Request() {
  // @@protoc_insertion_point(destructor:grpcITriangulator.triangulate_grpc2Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void triangulate_grpc2Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  keypointsview1_.Destroy();
  keypointsview2_.Destroy();
  descriptor1_.Destroy();
  descriptor2_.Destroy();
  matches_.Destroy();
  working_views_.Destroy();
  poseview1_.Destroy();
  poseview2_.Destroy();
  camparams1_.Destroy();
  camparams2_.Destroy();
  pcloud_.Destroy();
}

void triangulate_grpc2Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void triangulate_grpc2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcITriangulator.triangulate_grpc2Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keypointsview1_.ClearToEmpty();
  keypointsview2_.ClearToEmpty();
  descriptor1_.ClearToEmpty();
  descriptor2_.ClearToEmpty();
  matches_.ClearToEmpty();
  working_views_.ClearToEmpty();
  poseview1_.ClearToEmpty();
  poseview2_.ClearToEmpty();
  camparams1_.ClearToEmpty();
  camparams2_.ClearToEmpty();
  pcloud_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* triangulate_grpc2Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keypointsView1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_keypointsview1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keypointsView2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_keypointsview2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes descriptor1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_descriptor1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes descriptor2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_descriptor2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matches = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes working_views = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_working_views();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes poseView1 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_poseview1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes poseView2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_poseview2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes camParams1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_camparams1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes camParams2 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_camparams2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes pcloud = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_pcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* triangulate_grpc2Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcITriangulator.triangulate_grpc2Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes keypointsView1 = 2;
  if (!this->_internal_keypointsview1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_keypointsview1(), target);
  }

  // bytes keypointsView2 = 3;
  if (!this->_internal_keypointsview2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_keypointsview2(), target);
  }

  // bytes descriptor1 = 4;
  if (!this->_internal_descriptor1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_descriptor1(), target);
  }

  // bytes descriptor2 = 5;
  if (!this->_internal_descriptor2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_descriptor2(), target);
  }

  // bytes matches = 6;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_matches(), target);
  }

  // bytes working_views = 7;
  if (!this->_internal_working_views().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_working_views(), target);
  }

  // bytes poseView1 = 8;
  if (!this->_internal_poseview1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_poseview1(), target);
  }

  // bytes poseView2 = 9;
  if (!this->_internal_poseview2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_poseview2(), target);
  }

  // bytes camParams1 = 10;
  if (!this->_internal_camparams1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_camparams1(), target);
  }

  // bytes camParams2 = 11;
  if (!this->_internal_camparams2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        11, this->_internal_camparams2(), target);
  }

  // bytes pcloud = 12;
  if (!this->_internal_pcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        12, this->_internal_pcloud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcITriangulator.triangulate_grpc2Request)
  return target;
}

size_t triangulate_grpc2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcITriangulator.triangulate_grpc2Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes keypointsView1 = 2;
  if (!this->_internal_keypointsview1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypointsview1());
  }

  // bytes keypointsView2 = 3;
  if (!this->_internal_keypointsview2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypointsview2());
  }

  // bytes descriptor1 = 4;
  if (!this->_internal_descriptor1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptor1());
  }

  // bytes descriptor2 = 5;
  if (!this->_internal_descriptor2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptor2());
  }

  // bytes matches = 6;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes working_views = 7;
  if (!this->_internal_working_views().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_working_views());
  }

  // bytes poseView1 = 8;
  if (!this->_internal_poseview1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_poseview1());
  }

  // bytes poseView2 = 9;
  if (!this->_internal_poseview2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_poseview2());
  }

  // bytes camParams1 = 10;
  if (!this->_internal_camparams1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams1());
  }

  // bytes camParams2 = 11;
  if (!this->_internal_camparams2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams2());
  }

  // bytes pcloud = 12;
  if (!this->_internal_pcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pcloud());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData triangulate_grpc2Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    triangulate_grpc2Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*triangulate_grpc2Request::GetClassData() const { return &_class_data_; }

void triangulate_grpc2Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<triangulate_grpc2Request *>(to)->MergeFrom(
      static_cast<const triangulate_grpc2Request &>(from));
}


void triangulate_grpc2Request::MergeFrom(const triangulate_grpc2Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcITriangulator.triangulate_grpc2Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_keypointsview1().empty()) {
    _internal_set_keypointsview1(from._internal_keypointsview1());
  }
  if (!from._internal_keypointsview2().empty()) {
    _internal_set_keypointsview2(from._internal_keypointsview2());
  }
  if (!from._internal_descriptor1().empty()) {
    _internal_set_descriptor1(from._internal_descriptor1());
  }
  if (!from._internal_descriptor2().empty()) {
    _internal_set_descriptor2(from._internal_descriptor2());
  }
  if (!from._internal_matches().empty()) {
    _internal_set_matches(from._internal_matches());
  }
  if (!from._internal_working_views().empty()) {
    _internal_set_working_views(from._internal_working_views());
  }
  if (!from._internal_poseview1().empty()) {
    _internal_set_poseview1(from._internal_poseview1());
  }
  if (!from._internal_poseview2().empty()) {
    _internal_set_poseview2(from._internal_poseview2());
  }
  if (!from._internal_camparams1().empty()) {
    _internal_set_camparams1(from._internal_camparams1());
  }
  if (!from._internal_camparams2().empty()) {
    _internal_set_camparams2(from._internal_camparams2());
  }
  if (!from._internal_pcloud().empty()) {
    _internal_set_pcloud(from._internal_pcloud());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void triangulate_grpc2Request::CopyFrom(const triangulate_grpc2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcITriangulator.triangulate_grpc2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool triangulate_grpc2Request::IsInitialized() const {
  return true;
}

void triangulate_grpc2Request::InternalSwap(triangulate_grpc2Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &keypointsview1_, lhs_arena,
      &other->keypointsview1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &keypointsview2_, lhs_arena,
      &other->keypointsview2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &descriptor1_, lhs_arena,
      &other->descriptor1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &descriptor2_, lhs_arena,
      &other->descriptor2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &matches_, lhs_arena,
      &other->matches_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &working_views_, lhs_arena,
      &other->working_views_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &poseview1_, lhs_arena,
      &other->poseview1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &poseview2_, lhs_arena,
      &other->poseview2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &camparams1_, lhs_arena,
      &other->camparams1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &camparams2_, lhs_arena,
      &other->camparams2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pcloud_, lhs_arena,
      &other->pcloud_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata triangulate_grpc2Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcITriangulatorService_2eproto_getter, &descriptor_table_grpcITriangulatorService_2eproto_once,
      file_level_metadata_grpcITriangulatorService_2eproto[4]);
}

// ===================================================================

class triangulate_grpc2Response::_Internal {
 public:
};

triangulate_grpc2Response::triangulate_grpc2Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcITriangulator.triangulate_grpc2Response)
}
triangulate_grpc2Response::triangulate_grpc2Response(const triangulate_grpc2Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pcloud().empty()) {
    pcloud_.Set(from._internal_pcloud(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcITriangulator.triangulate_grpc2Response)
}

inline void triangulate_grpc2Response::SharedCtor() {
pcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

triangulate_grpc2Response::~triangulate_grpc2Response() {
  // @@protoc_insertion_point(destructor:grpcITriangulator.triangulate_grpc2Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void triangulate_grpc2Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pcloud_.Destroy();
}

void triangulate_grpc2Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void triangulate_grpc2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcITriangulator.triangulate_grpc2Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pcloud_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* triangulate_grpc2Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes pcloud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* triangulate_grpc2Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcITriangulator.triangulate_grpc2Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pcloud = 1;
  if (!this->_internal_pcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pcloud(), target);
  }

  // double xpcfGrpcReturnValue = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = this->_internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcITriangulator.triangulate_grpc2Response)
  return target;
}

size_t triangulate_grpc2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcITriangulator.triangulate_grpc2Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pcloud = 1;
  if (!this->_internal_pcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pcloud());
  }

  // double xpcfGrpcReturnValue = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = this->_internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData triangulate_grpc2Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    triangulate_grpc2Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*triangulate_grpc2Response::GetClassData() const { return &_class_data_; }

void triangulate_grpc2Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<triangulate_grpc2Response *>(to)->MergeFrom(
      static_cast<const triangulate_grpc2Response &>(from));
}


void triangulate_grpc2Response::MergeFrom(const triangulate_grpc2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcITriangulator.triangulate_grpc2Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pcloud().empty()) {
    _internal_set_pcloud(from._internal_pcloud());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = from._internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void triangulate_grpc2Response::CopyFrom(const triangulate_grpc2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcITriangulator.triangulate_grpc2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool triangulate_grpc2Response::IsInitialized() const {
  return true;
}

void triangulate_grpc2Response::InternalSwap(triangulate_grpc2Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pcloud_, lhs_arena,
      &other->pcloud_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata triangulate_grpc2Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcITriangulatorService_2eproto_getter, &descriptor_table_grpcITriangulatorService_2eproto_once,
      file_level_metadata_grpcITriangulatorService_2eproto[5]);
}

// ===================================================================

class triangulate_grpc3Request::_Internal {
 public:
};

triangulate_grpc3Request::triangulate_grpc3Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcITriangulator.triangulate_grpc3Request)
}
triangulate_grpc3Request::triangulate_grpc3Request(const triangulate_grpc3Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  frame1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    frame1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_frame1().empty()) {
    frame1_.Set(from._internal_frame1(), 
      GetArenaForAllocation());
  }
  frame2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    frame2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_frame2().empty()) {
    frame2_.Set(from._internal_frame2(), 
      GetArenaForAllocation());
  }
  matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matches().empty()) {
    matches_.Set(from._internal_matches(), 
      GetArenaForAllocation());
  }
  working_views_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    working_views_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_working_views().empty()) {
    working_views_.Set(from._internal_working_views(), 
      GetArenaForAllocation());
  }
  camparams1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    camparams1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camparams1().empty()) {
    camparams1_.Set(from._internal_camparams1(), 
      GetArenaForAllocation());
  }
  camparams2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    camparams2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_camparams2().empty()) {
    camparams2_.Set(from._internal_camparams2(), 
      GetArenaForAllocation());
  }
  pcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pcloud().empty()) {
    pcloud_.Set(from._internal_pcloud(), 
      GetArenaForAllocation());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&onlydepth_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(onlydepth_));
  // @@protoc_insertion_point(copy_constructor:grpcITriangulator.triangulate_grpc3Request)
}

inline void triangulate_grpc3Request::SharedCtor() {
frame1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  frame1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
frame2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  frame2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
working_views_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  working_views_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
camparams1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  camparams1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
camparams2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  camparams2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
pcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&onlydepth_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(onlydepth_));
}

triangulate_grpc3Request::~triangulate_grpc3Request() {
  // @@protoc_insertion_point(destructor:grpcITriangulator.triangulate_grpc3Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void triangulate_grpc3Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  frame1_.Destroy();
  frame2_.Destroy();
  matches_.Destroy();
  working_views_.Destroy();
  camparams1_.Destroy();
  camparams2_.Destroy();
  pcloud_.Destroy();
}

void triangulate_grpc3Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void triangulate_grpc3Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcITriangulator.triangulate_grpc3Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame1_.ClearToEmpty();
  frame2_.ClearToEmpty();
  matches_.ClearToEmpty();
  working_views_.ClearToEmpty();
  camparams1_.ClearToEmpty();
  camparams2_.ClearToEmpty();
  pcloud_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&onlydepth_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(onlydepth_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* triangulate_grpc3Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes frame1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_frame1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes frame2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_frame2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matches = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes working_views = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_working_views();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes camParams1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_camparams1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes camParams2 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_camparams2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool onlyDepth = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          onlydepth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes pcloud = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_pcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* triangulate_grpc3Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcITriangulator.triangulate_grpc3Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes frame1 = 2;
  if (!this->_internal_frame1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_frame1(), target);
  }

  // bytes frame2 = 3;
  if (!this->_internal_frame2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_frame2(), target);
  }

  // bytes matches = 4;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_matches(), target);
  }

  // bytes working_views = 5;
  if (!this->_internal_working_views().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_working_views(), target);
  }

  // bytes camParams1 = 6;
  if (!this->_internal_camparams1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_camparams1(), target);
  }

  // bytes camParams2 = 7;
  if (!this->_internal_camparams2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_camparams2(), target);
  }

  // bool onlyDepth = 8;
  if (this->_internal_onlydepth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_onlydepth(), target);
  }

  // bytes pcloud = 9;
  if (!this->_internal_pcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_pcloud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcITriangulator.triangulate_grpc3Request)
  return target;
}

size_t triangulate_grpc3Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcITriangulator.triangulate_grpc3Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frame1 = 2;
  if (!this->_internal_frame1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frame1());
  }

  // bytes frame2 = 3;
  if (!this->_internal_frame2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frame2());
  }

  // bytes matches = 4;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes working_views = 5;
  if (!this->_internal_working_views().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_working_views());
  }

  // bytes camParams1 = 6;
  if (!this->_internal_camparams1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams1());
  }

  // bytes camParams2 = 7;
  if (!this->_internal_camparams2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams2());
  }

  // bytes pcloud = 9;
  if (!this->_internal_pcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pcloud());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  // bool onlyDepth = 8;
  if (this->_internal_onlydepth() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData triangulate_grpc3Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    triangulate_grpc3Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*triangulate_grpc3Request::GetClassData() const { return &_class_data_; }

void triangulate_grpc3Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<triangulate_grpc3Request *>(to)->MergeFrom(
      static_cast<const triangulate_grpc3Request &>(from));
}


void triangulate_grpc3Request::MergeFrom(const triangulate_grpc3Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcITriangulator.triangulate_grpc3Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_frame1().empty()) {
    _internal_set_frame1(from._internal_frame1());
  }
  if (!from._internal_frame2().empty()) {
    _internal_set_frame2(from._internal_frame2());
  }
  if (!from._internal_matches().empty()) {
    _internal_set_matches(from._internal_matches());
  }
  if (!from._internal_working_views().empty()) {
    _internal_set_working_views(from._internal_working_views());
  }
  if (!from._internal_camparams1().empty()) {
    _internal_set_camparams1(from._internal_camparams1());
  }
  if (!from._internal_camparams2().empty()) {
    _internal_set_camparams2(from._internal_camparams2());
  }
  if (!from._internal_pcloud().empty()) {
    _internal_set_pcloud(from._internal_pcloud());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (from._internal_onlydepth() != 0) {
    _internal_set_onlydepth(from._internal_onlydepth());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void triangulate_grpc3Request::CopyFrom(const triangulate_grpc3Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcITriangulator.triangulate_grpc3Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool triangulate_grpc3Request::IsInitialized() const {
  return true;
}

void triangulate_grpc3Request::InternalSwap(triangulate_grpc3Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &frame1_, lhs_arena,
      &other->frame1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &frame2_, lhs_arena,
      &other->frame2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &matches_, lhs_arena,
      &other->matches_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &working_views_, lhs_arena,
      &other->working_views_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &camparams1_, lhs_arena,
      &other->camparams1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &camparams2_, lhs_arena,
      &other->camparams2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pcloud_, lhs_arena,
      &other->pcloud_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(triangulate_grpc3Request, onlydepth_)
      + sizeof(triangulate_grpc3Request::onlydepth_)
      - PROTOBUF_FIELD_OFFSET(triangulate_grpc3Request, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata triangulate_grpc3Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcITriangulatorService_2eproto_getter, &descriptor_table_grpcITriangulatorService_2eproto_once,
      file_level_metadata_grpcITriangulatorService_2eproto[6]);
}

// ===================================================================

class triangulate_grpc3Response::_Internal {
 public:
};

triangulate_grpc3Response::triangulate_grpc3Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcITriangulator.triangulate_grpc3Response)
}
triangulate_grpc3Response::triangulate_grpc3Response(const triangulate_grpc3Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pcloud_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pcloud_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pcloud().empty()) {
    pcloud_.Set(from._internal_pcloud(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcITriangulator.triangulate_grpc3Response)
}

inline void triangulate_grpc3Response::SharedCtor() {
pcloud_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pcloud_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

triangulate_grpc3Response::~triangulate_grpc3Response() {
  // @@protoc_insertion_point(destructor:grpcITriangulator.triangulate_grpc3Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void triangulate_grpc3Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pcloud_.Destroy();
}

void triangulate_grpc3Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void triangulate_grpc3Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcITriangulator.triangulate_grpc3Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pcloud_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* triangulate_grpc3Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes pcloud = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pcloud();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* triangulate_grpc3Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcITriangulator.triangulate_grpc3Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pcloud = 1;
  if (!this->_internal_pcloud().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pcloud(), target);
  }

  // double xpcfGrpcReturnValue = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = this->_internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcITriangulator.triangulate_grpc3Response)
  return target;
}

size_t triangulate_grpc3Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcITriangulator.triangulate_grpc3Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pcloud = 1;
  if (!this->_internal_pcloud().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pcloud());
  }

  // double xpcfGrpcReturnValue = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = this->_internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData triangulate_grpc3Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    triangulate_grpc3Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*triangulate_grpc3Response::GetClassData() const { return &_class_data_; }

void triangulate_grpc3Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<triangulate_grpc3Response *>(to)->MergeFrom(
      static_cast<const triangulate_grpc3Response &>(from));
}


void triangulate_grpc3Response::MergeFrom(const triangulate_grpc3Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcITriangulator.triangulate_grpc3Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pcloud().empty()) {
    _internal_set_pcloud(from._internal_pcloud());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_xpcfgrpcreturnvalue = from._internal_xpcfgrpcreturnvalue();
  uint64_t raw_xpcfgrpcreturnvalue;
  memcpy(&raw_xpcfgrpcreturnvalue, &tmp_xpcfgrpcreturnvalue, sizeof(tmp_xpcfgrpcreturnvalue));
  if (raw_xpcfgrpcreturnvalue != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void triangulate_grpc3Response::CopyFrom(const triangulate_grpc3Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcITriangulator.triangulate_grpc3Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool triangulate_grpc3Response::IsInitialized() const {
  return true;
}

void triangulate_grpc3Response::InternalSwap(triangulate_grpc3Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &pcloud_, lhs_arena,
      &other->pcloud_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata triangulate_grpc3Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcITriangulatorService_2eproto_getter, &descriptor_table_grpcITriangulatorService_2eproto_once,
      file_level_metadata_grpcITriangulatorService_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcITriangulator
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcITriangulator::triangulate_grpc0Request*
Arena::CreateMaybeMessage< ::grpcITriangulator::triangulate_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcITriangulator::triangulate_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcITriangulator::triangulate_grpc0Response*
Arena::CreateMaybeMessage< ::grpcITriangulator::triangulate_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcITriangulator::triangulate_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcITriangulator::triangulate_grpc1Request*
Arena::CreateMaybeMessage< ::grpcITriangulator::triangulate_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcITriangulator::triangulate_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcITriangulator::triangulate_grpc1Response*
Arena::CreateMaybeMessage< ::grpcITriangulator::triangulate_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcITriangulator::triangulate_grpc1Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcITriangulator::triangulate_grpc2Request*
Arena::CreateMaybeMessage< ::grpcITriangulator::triangulate_grpc2Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcITriangulator::triangulate_grpc2Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcITriangulator::triangulate_grpc2Response*
Arena::CreateMaybeMessage< ::grpcITriangulator::triangulate_grpc2Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcITriangulator::triangulate_grpc2Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcITriangulator::triangulate_grpc3Request*
Arena::CreateMaybeMessage< ::grpcITriangulator::triangulate_grpc3Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcITriangulator::triangulate_grpc3Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcITriangulator::triangulate_grpc3Response*
Arena::CreateMaybeMessage< ::grpcITriangulator::triangulate_grpc3Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcITriangulator::triangulate_grpc3Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
