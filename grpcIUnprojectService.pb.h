// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIUnprojectService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcIUnprojectService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcIUnprojectService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcIUnprojectService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcIUnprojectService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIUnprojectService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcIUnprojectService_2eproto_metadata_getter(int index);
namespace grpcIUnproject {
class setCameraParametersRequest;
struct setCameraParametersRequestDefaultTypeInternal;
extern setCameraParametersRequestDefaultTypeInternal _setCameraParametersRequest_default_instance_;
class unproject_grpc0Request;
struct unproject_grpc0RequestDefaultTypeInternal;
extern unproject_grpc0RequestDefaultTypeInternal _unproject_grpc0Request_default_instance_;
class unproject_grpc0Response;
struct unproject_grpc0ResponseDefaultTypeInternal;
extern unproject_grpc0ResponseDefaultTypeInternal _unproject_grpc0Response_default_instance_;
class unproject_grpc1Request;
struct unproject_grpc1RequestDefaultTypeInternal;
extern unproject_grpc1RequestDefaultTypeInternal _unproject_grpc1Request_default_instance_;
class unproject_grpc1Response;
struct unproject_grpc1ResponseDefaultTypeInternal;
extern unproject_grpc1ResponseDefaultTypeInternal _unproject_grpc1Response_default_instance_;
}  // namespace grpcIUnproject
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcIUnproject::setCameraParametersRequest* Arena::CreateMaybeMessage<::grpcIUnproject::setCameraParametersRequest>(Arena*);
template<> ::grpcIUnproject::unproject_grpc0Request* Arena::CreateMaybeMessage<::grpcIUnproject::unproject_grpc0Request>(Arena*);
template<> ::grpcIUnproject::unproject_grpc0Response* Arena::CreateMaybeMessage<::grpcIUnproject::unproject_grpc0Response>(Arena*);
template<> ::grpcIUnproject::unproject_grpc1Request* Arena::CreateMaybeMessage<::grpcIUnproject::unproject_grpc1Request>(Arena*);
template<> ::grpcIUnproject::unproject_grpc1Response* Arena::CreateMaybeMessage<::grpcIUnproject::unproject_grpc1Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcIUnproject {

// ===================================================================

class setCameraParametersRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIUnproject.setCameraParametersRequest) */ {
 public:
  inline setCameraParametersRequest() : setCameraParametersRequest(nullptr) {}
  virtual ~setCameraParametersRequest();
  explicit constexpr setCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  setCameraParametersRequest(const setCameraParametersRequest& from);
  setCameraParametersRequest(setCameraParametersRequest&& from) noexcept
    : setCameraParametersRequest() {
    *this = ::std::move(from);
  }

  inline setCameraParametersRequest& operator=(const setCameraParametersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline setCameraParametersRequest& operator=(setCameraParametersRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const setCameraParametersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const setCameraParametersRequest* internal_default_instance() {
    return reinterpret_cast<const setCameraParametersRequest*>(
               &_setCameraParametersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(setCameraParametersRequest& a, setCameraParametersRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(setCameraParametersRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(setCameraParametersRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline setCameraParametersRequest* New() const final {
    return CreateMaybeMessage<setCameraParametersRequest>(nullptr);
  }

  setCameraParametersRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<setCameraParametersRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const setCameraParametersRequest& from);
  void MergeFrom(const setCameraParametersRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(setCameraParametersRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIUnproject.setCameraParametersRequest";
  }
  protected:
  explicit setCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIUnprojectService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntrinsicParamsFieldNumber = 1,
    kDistorsionParamsFieldNumber = 2,
  };
  // bytes intrinsicParams = 1;
  void clear_intrinsicparams();
  const std::string& intrinsicparams() const;
  void set_intrinsicparams(const std::string& value);
  void set_intrinsicparams(std::string&& value);
  void set_intrinsicparams(const char* value);
  void set_intrinsicparams(const void* value, size_t size);
  std::string* mutable_intrinsicparams();
  std::string* release_intrinsicparams();
  void set_allocated_intrinsicparams(std::string* intrinsicparams);
  private:
  const std::string& _internal_intrinsicparams() const;
  void _internal_set_intrinsicparams(const std::string& value);
  std::string* _internal_mutable_intrinsicparams();
  public:

  // bytes distorsionParams = 2;
  void clear_distorsionparams();
  const std::string& distorsionparams() const;
  void set_distorsionparams(const std::string& value);
  void set_distorsionparams(std::string&& value);
  void set_distorsionparams(const char* value);
  void set_distorsionparams(const void* value, size_t size);
  std::string* mutable_distorsionparams();
  std::string* release_distorsionparams();
  void set_allocated_distorsionparams(std::string* distorsionparams);
  private:
  const std::string& _internal_distorsionparams() const;
  void _internal_set_distorsionparams(const std::string& value);
  std::string* _internal_mutable_distorsionparams();
  public:

  // @@protoc_insertion_point(class_scope:grpcIUnproject.setCameraParametersRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr intrinsicparams_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr distorsionparams_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIUnprojectService_2eproto;
};
// -------------------------------------------------------------------

class unproject_grpc0Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIUnproject.unproject_grpc0Request) */ {
 public:
  inline unproject_grpc0Request() : unproject_grpc0Request(nullptr) {}
  virtual ~unproject_grpc0Request();
  explicit constexpr unproject_grpc0Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  unproject_grpc0Request(const unproject_grpc0Request& from);
  unproject_grpc0Request(unproject_grpc0Request&& from) noexcept
    : unproject_grpc0Request() {
    *this = ::std::move(from);
  }

  inline unproject_grpc0Request& operator=(const unproject_grpc0Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline unproject_grpc0Request& operator=(unproject_grpc0Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const unproject_grpc0Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const unproject_grpc0Request* internal_default_instance() {
    return reinterpret_cast<const unproject_grpc0Request*>(
               &_unproject_grpc0Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(unproject_grpc0Request& a, unproject_grpc0Request& b) {
    a.Swap(&b);
  }
  inline void Swap(unproject_grpc0Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(unproject_grpc0Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline unproject_grpc0Request* New() const final {
    return CreateMaybeMessage<unproject_grpc0Request>(nullptr);
  }

  unproject_grpc0Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<unproject_grpc0Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const unproject_grpc0Request& from);
  void MergeFrom(const unproject_grpc0Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(unproject_grpc0Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIUnproject.unproject_grpc0Request";
  }
  protected:
  explicit unproject_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIUnprojectService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImagePointsFieldNumber = 2,
    kPoseFieldNumber = 3,
    kWorldPointsFieldNumber = 4,
    kGrpcServerCompressionFormatFieldNumber = 1,
  };
  // bytes imagePoints = 2;
  void clear_imagepoints();
  const std::string& imagepoints() const;
  void set_imagepoints(const std::string& value);
  void set_imagepoints(std::string&& value);
  void set_imagepoints(const char* value);
  void set_imagepoints(const void* value, size_t size);
  std::string* mutable_imagepoints();
  std::string* release_imagepoints();
  void set_allocated_imagepoints(std::string* imagepoints);
  private:
  const std::string& _internal_imagepoints() const;
  void _internal_set_imagepoints(const std::string& value);
  std::string* _internal_mutable_imagepoints();
  public:

  // bytes pose = 3;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes worldPoints = 4;
  void clear_worldpoints();
  const std::string& worldpoints() const;
  void set_worldpoints(const std::string& value);
  void set_worldpoints(std::string&& value);
  void set_worldpoints(const char* value);
  void set_worldpoints(const void* value, size_t size);
  std::string* mutable_worldpoints();
  std::string* release_worldpoints();
  void set_allocated_worldpoints(std::string* worldpoints);
  private:
  const std::string& _internal_worldpoints() const;
  void _internal_set_worldpoints(const std::string& value);
  std::string* _internal_mutable_worldpoints();
  public:

  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat();
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIUnproject.unproject_grpc0Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr imagepoints_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr worldpoints_;
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIUnprojectService_2eproto;
};
// -------------------------------------------------------------------

class unproject_grpc0Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIUnproject.unproject_grpc0Response) */ {
 public:
  inline unproject_grpc0Response() : unproject_grpc0Response(nullptr) {}
  virtual ~unproject_grpc0Response();
  explicit constexpr unproject_grpc0Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  unproject_grpc0Response(const unproject_grpc0Response& from);
  unproject_grpc0Response(unproject_grpc0Response&& from) noexcept
    : unproject_grpc0Response() {
    *this = ::std::move(from);
  }

  inline unproject_grpc0Response& operator=(const unproject_grpc0Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline unproject_grpc0Response& operator=(unproject_grpc0Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const unproject_grpc0Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const unproject_grpc0Response* internal_default_instance() {
    return reinterpret_cast<const unproject_grpc0Response*>(
               &_unproject_grpc0Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(unproject_grpc0Response& a, unproject_grpc0Response& b) {
    a.Swap(&b);
  }
  inline void Swap(unproject_grpc0Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(unproject_grpc0Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline unproject_grpc0Response* New() const final {
    return CreateMaybeMessage<unproject_grpc0Response>(nullptr);
  }

  unproject_grpc0Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<unproject_grpc0Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const unproject_grpc0Response& from);
  void MergeFrom(const unproject_grpc0Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(unproject_grpc0Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIUnproject.unproject_grpc0Response";
  }
  protected:
  explicit unproject_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIUnprojectService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWorldPointsFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes worldPoints = 1;
  void clear_worldpoints();
  const std::string& worldpoints() const;
  void set_worldpoints(const std::string& value);
  void set_worldpoints(std::string&& value);
  void set_worldpoints(const char* value);
  void set_worldpoints(const void* value, size_t size);
  std::string* mutable_worldpoints();
  std::string* release_worldpoints();
  void set_allocated_worldpoints(std::string* worldpoints);
  private:
  const std::string& _internal_worldpoints() const;
  void _internal_set_worldpoints(const std::string& value);
  std::string* _internal_mutable_worldpoints();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIUnproject.unproject_grpc0Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr worldpoints_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIUnprojectService_2eproto;
};
// -------------------------------------------------------------------

class unproject_grpc1Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIUnproject.unproject_grpc1Request) */ {
 public:
  inline unproject_grpc1Request() : unproject_grpc1Request(nullptr) {}
  virtual ~unproject_grpc1Request();
  explicit constexpr unproject_grpc1Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  unproject_grpc1Request(const unproject_grpc1Request& from);
  unproject_grpc1Request(unproject_grpc1Request&& from) noexcept
    : unproject_grpc1Request() {
    *this = ::std::move(from);
  }

  inline unproject_grpc1Request& operator=(const unproject_grpc1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline unproject_grpc1Request& operator=(unproject_grpc1Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const unproject_grpc1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const unproject_grpc1Request* internal_default_instance() {
    return reinterpret_cast<const unproject_grpc1Request*>(
               &_unproject_grpc1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(unproject_grpc1Request& a, unproject_grpc1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(unproject_grpc1Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(unproject_grpc1Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline unproject_grpc1Request* New() const final {
    return CreateMaybeMessage<unproject_grpc1Request>(nullptr);
  }

  unproject_grpc1Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<unproject_grpc1Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const unproject_grpc1Request& from);
  void MergeFrom(const unproject_grpc1Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(unproject_grpc1Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIUnproject.unproject_grpc1Request";
  }
  protected:
  explicit unproject_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIUnprojectService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImageKeypointsFieldNumber = 2,
    kPoseFieldNumber = 3,
    kWorldPointsFieldNumber = 4,
    kGrpcServerCompressionFormatFieldNumber = 1,
  };
  // bytes imageKeypoints = 2;
  void clear_imagekeypoints();
  const std::string& imagekeypoints() const;
  void set_imagekeypoints(const std::string& value);
  void set_imagekeypoints(std::string&& value);
  void set_imagekeypoints(const char* value);
  void set_imagekeypoints(const void* value, size_t size);
  std::string* mutable_imagekeypoints();
  std::string* release_imagekeypoints();
  void set_allocated_imagekeypoints(std::string* imagekeypoints);
  private:
  const std::string& _internal_imagekeypoints() const;
  void _internal_set_imagekeypoints(const std::string& value);
  std::string* _internal_mutable_imagekeypoints();
  public:

  // bytes pose = 3;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes worldPoints = 4;
  void clear_worldpoints();
  const std::string& worldpoints() const;
  void set_worldpoints(const std::string& value);
  void set_worldpoints(std::string&& value);
  void set_worldpoints(const char* value);
  void set_worldpoints(const void* value, size_t size);
  std::string* mutable_worldpoints();
  std::string* release_worldpoints();
  void set_allocated_worldpoints(std::string* worldpoints);
  private:
  const std::string& _internal_worldpoints() const;
  void _internal_set_worldpoints(const std::string& value);
  std::string* _internal_mutable_worldpoints();
  public:

  // int32 grpcServerCompressionFormat = 1;
  void clear_grpcservercompressionformat();
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat() const;
  void set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_grpcservercompressionformat() const;
  void _internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIUnproject.unproject_grpc1Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr imagekeypoints_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr worldpoints_;
  ::PROTOBUF_NAMESPACE_ID::int32 grpcservercompressionformat_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIUnprojectService_2eproto;
};
// -------------------------------------------------------------------

class unproject_grpc1Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIUnproject.unproject_grpc1Response) */ {
 public:
  inline unproject_grpc1Response() : unproject_grpc1Response(nullptr) {}
  virtual ~unproject_grpc1Response();
  explicit constexpr unproject_grpc1Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  unproject_grpc1Response(const unproject_grpc1Response& from);
  unproject_grpc1Response(unproject_grpc1Response&& from) noexcept
    : unproject_grpc1Response() {
    *this = ::std::move(from);
  }

  inline unproject_grpc1Response& operator=(const unproject_grpc1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline unproject_grpc1Response& operator=(unproject_grpc1Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const unproject_grpc1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const unproject_grpc1Response* internal_default_instance() {
    return reinterpret_cast<const unproject_grpc1Response*>(
               &_unproject_grpc1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(unproject_grpc1Response& a, unproject_grpc1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(unproject_grpc1Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(unproject_grpc1Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline unproject_grpc1Response* New() const final {
    return CreateMaybeMessage<unproject_grpc1Response>(nullptr);
  }

  unproject_grpc1Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<unproject_grpc1Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const unproject_grpc1Response& from);
  void MergeFrom(const unproject_grpc1Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(unproject_grpc1Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIUnproject.unproject_grpc1Response";
  }
  protected:
  explicit unproject_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIUnprojectService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWorldPointsFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes worldPoints = 1;
  void clear_worldpoints();
  const std::string& worldpoints() const;
  void set_worldpoints(const std::string& value);
  void set_worldpoints(std::string&& value);
  void set_worldpoints(const char* value);
  void set_worldpoints(const void* value, size_t size);
  std::string* mutable_worldpoints();
  std::string* release_worldpoints();
  void set_allocated_worldpoints(std::string* worldpoints);
  private:
  const std::string& _internal_worldpoints() const;
  void _internal_set_worldpoints(const std::string& value);
  std::string* _internal_mutable_worldpoints();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIUnproject.unproject_grpc1Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr worldpoints_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIUnprojectService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// setCameraParametersRequest

// bytes intrinsicParams = 1;
inline void setCameraParametersRequest::clear_intrinsicparams() {
  intrinsicparams_.ClearToEmpty();
}
inline const std::string& setCameraParametersRequest::intrinsicparams() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.setCameraParametersRequest.intrinsicParams)
  return _internal_intrinsicparams();
}
inline void setCameraParametersRequest::set_intrinsicparams(const std::string& value) {
  _internal_set_intrinsicparams(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.setCameraParametersRequest.intrinsicParams)
}
inline std::string* setCameraParametersRequest::mutable_intrinsicparams() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.setCameraParametersRequest.intrinsicParams)
  return _internal_mutable_intrinsicparams();
}
inline const std::string& setCameraParametersRequest::_internal_intrinsicparams() const {
  return intrinsicparams_.Get();
}
inline void setCameraParametersRequest::_internal_set_intrinsicparams(const std::string& value) {
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void setCameraParametersRequest::set_intrinsicparams(std::string&& value) {
  
  intrinsicparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.setCameraParametersRequest.intrinsicParams)
}
inline void setCameraParametersRequest::set_intrinsicparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.setCameraParametersRequest.intrinsicParams)
}
inline void setCameraParametersRequest::set_intrinsicparams(const void* value,
    size_t size) {
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.setCameraParametersRequest.intrinsicParams)
}
inline std::string* setCameraParametersRequest::_internal_mutable_intrinsicparams() {
  
  return intrinsicparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* setCameraParametersRequest::release_intrinsicparams() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.setCameraParametersRequest.intrinsicParams)
  return intrinsicparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void setCameraParametersRequest::set_allocated_intrinsicparams(std::string* intrinsicparams) {
  if (intrinsicparams != nullptr) {
    
  } else {
    
  }
  intrinsicparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), intrinsicparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.setCameraParametersRequest.intrinsicParams)
}

// bytes distorsionParams = 2;
inline void setCameraParametersRequest::clear_distorsionparams() {
  distorsionparams_.ClearToEmpty();
}
inline const std::string& setCameraParametersRequest::distorsionparams() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.setCameraParametersRequest.distorsionParams)
  return _internal_distorsionparams();
}
inline void setCameraParametersRequest::set_distorsionparams(const std::string& value) {
  _internal_set_distorsionparams(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.setCameraParametersRequest.distorsionParams)
}
inline std::string* setCameraParametersRequest::mutable_distorsionparams() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.setCameraParametersRequest.distorsionParams)
  return _internal_mutable_distorsionparams();
}
inline const std::string& setCameraParametersRequest::_internal_distorsionparams() const {
  return distorsionparams_.Get();
}
inline void setCameraParametersRequest::_internal_set_distorsionparams(const std::string& value) {
  
  distorsionparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void setCameraParametersRequest::set_distorsionparams(std::string&& value) {
  
  distorsionparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.setCameraParametersRequest.distorsionParams)
}
inline void setCameraParametersRequest::set_distorsionparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  distorsionparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.setCameraParametersRequest.distorsionParams)
}
inline void setCameraParametersRequest::set_distorsionparams(const void* value,
    size_t size) {
  
  distorsionparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.setCameraParametersRequest.distorsionParams)
}
inline std::string* setCameraParametersRequest::_internal_mutable_distorsionparams() {
  
  return distorsionparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* setCameraParametersRequest::release_distorsionparams() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.setCameraParametersRequest.distorsionParams)
  return distorsionparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void setCameraParametersRequest::set_allocated_distorsionparams(std::string* distorsionparams) {
  if (distorsionparams != nullptr) {
    
  } else {
    
  }
  distorsionparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), distorsionparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.setCameraParametersRequest.distorsionParams)
}

// -------------------------------------------------------------------

// unproject_grpc0Request

// int32 grpcServerCompressionFormat = 1;
inline void unproject_grpc0Request::clear_grpcservercompressionformat() {
  grpcservercompressionformat_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 unproject_grpc0Request::_internal_grpcservercompressionformat() const {
  return grpcservercompressionformat_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 unproject_grpc0Request::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc0Request.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void unproject_grpc0Request::_internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  grpcservercompressionformat_ = value;
}
inline void unproject_grpc0Request::set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc0Request.grpcServerCompressionFormat)
}

// bytes imagePoints = 2;
inline void unproject_grpc0Request::clear_imagepoints() {
  imagepoints_.ClearToEmpty();
}
inline const std::string& unproject_grpc0Request::imagepoints() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc0Request.imagePoints)
  return _internal_imagepoints();
}
inline void unproject_grpc0Request::set_imagepoints(const std::string& value) {
  _internal_set_imagepoints(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc0Request.imagePoints)
}
inline std::string* unproject_grpc0Request::mutable_imagepoints() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.unproject_grpc0Request.imagePoints)
  return _internal_mutable_imagepoints();
}
inline const std::string& unproject_grpc0Request::_internal_imagepoints() const {
  return imagepoints_.Get();
}
inline void unproject_grpc0Request::_internal_set_imagepoints(const std::string& value) {
  
  imagepoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void unproject_grpc0Request::set_imagepoints(std::string&& value) {
  
  imagepoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.unproject_grpc0Request.imagePoints)
}
inline void unproject_grpc0Request::set_imagepoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  imagepoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.unproject_grpc0Request.imagePoints)
}
inline void unproject_grpc0Request::set_imagepoints(const void* value,
    size_t size) {
  
  imagepoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.unproject_grpc0Request.imagePoints)
}
inline std::string* unproject_grpc0Request::_internal_mutable_imagepoints() {
  
  return imagepoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* unproject_grpc0Request::release_imagepoints() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.unproject_grpc0Request.imagePoints)
  return imagepoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void unproject_grpc0Request::set_allocated_imagepoints(std::string* imagepoints) {
  if (imagepoints != nullptr) {
    
  } else {
    
  }
  imagepoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), imagepoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.unproject_grpc0Request.imagePoints)
}

// bytes pose = 3;
inline void unproject_grpc0Request::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& unproject_grpc0Request::pose() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc0Request.pose)
  return _internal_pose();
}
inline void unproject_grpc0Request::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc0Request.pose)
}
inline std::string* unproject_grpc0Request::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.unproject_grpc0Request.pose)
  return _internal_mutable_pose();
}
inline const std::string& unproject_grpc0Request::_internal_pose() const {
  return pose_.Get();
}
inline void unproject_grpc0Request::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void unproject_grpc0Request::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.unproject_grpc0Request.pose)
}
inline void unproject_grpc0Request::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.unproject_grpc0Request.pose)
}
inline void unproject_grpc0Request::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.unproject_grpc0Request.pose)
}
inline std::string* unproject_grpc0Request::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* unproject_grpc0Request::release_pose() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.unproject_grpc0Request.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void unproject_grpc0Request::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.unproject_grpc0Request.pose)
}

// bytes worldPoints = 4;
inline void unproject_grpc0Request::clear_worldpoints() {
  worldpoints_.ClearToEmpty();
}
inline const std::string& unproject_grpc0Request::worldpoints() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc0Request.worldPoints)
  return _internal_worldpoints();
}
inline void unproject_grpc0Request::set_worldpoints(const std::string& value) {
  _internal_set_worldpoints(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc0Request.worldPoints)
}
inline std::string* unproject_grpc0Request::mutable_worldpoints() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.unproject_grpc0Request.worldPoints)
  return _internal_mutable_worldpoints();
}
inline const std::string& unproject_grpc0Request::_internal_worldpoints() const {
  return worldpoints_.Get();
}
inline void unproject_grpc0Request::_internal_set_worldpoints(const std::string& value) {
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void unproject_grpc0Request::set_worldpoints(std::string&& value) {
  
  worldpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.unproject_grpc0Request.worldPoints)
}
inline void unproject_grpc0Request::set_worldpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.unproject_grpc0Request.worldPoints)
}
inline void unproject_grpc0Request::set_worldpoints(const void* value,
    size_t size) {
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.unproject_grpc0Request.worldPoints)
}
inline std::string* unproject_grpc0Request::_internal_mutable_worldpoints() {
  
  return worldpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* unproject_grpc0Request::release_worldpoints() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.unproject_grpc0Request.worldPoints)
  return worldpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void unproject_grpc0Request::set_allocated_worldpoints(std::string* worldpoints) {
  if (worldpoints != nullptr) {
    
  } else {
    
  }
  worldpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), worldpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.unproject_grpc0Request.worldPoints)
}

// -------------------------------------------------------------------

// unproject_grpc0Response

// bytes worldPoints = 1;
inline void unproject_grpc0Response::clear_worldpoints() {
  worldpoints_.ClearToEmpty();
}
inline const std::string& unproject_grpc0Response::worldpoints() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc0Response.worldPoints)
  return _internal_worldpoints();
}
inline void unproject_grpc0Response::set_worldpoints(const std::string& value) {
  _internal_set_worldpoints(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc0Response.worldPoints)
}
inline std::string* unproject_grpc0Response::mutable_worldpoints() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.unproject_grpc0Response.worldPoints)
  return _internal_mutable_worldpoints();
}
inline const std::string& unproject_grpc0Response::_internal_worldpoints() const {
  return worldpoints_.Get();
}
inline void unproject_grpc0Response::_internal_set_worldpoints(const std::string& value) {
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void unproject_grpc0Response::set_worldpoints(std::string&& value) {
  
  worldpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.unproject_grpc0Response.worldPoints)
}
inline void unproject_grpc0Response::set_worldpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.unproject_grpc0Response.worldPoints)
}
inline void unproject_grpc0Response::set_worldpoints(const void* value,
    size_t size) {
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.unproject_grpc0Response.worldPoints)
}
inline std::string* unproject_grpc0Response::_internal_mutable_worldpoints() {
  
  return worldpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* unproject_grpc0Response::release_worldpoints() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.unproject_grpc0Response.worldPoints)
  return worldpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void unproject_grpc0Response::set_allocated_worldpoints(std::string* worldpoints) {
  if (worldpoints != nullptr) {
    
  } else {
    
  }
  worldpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), worldpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.unproject_grpc0Response.worldPoints)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void unproject_grpc0Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 unproject_grpc0Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 unproject_grpc0Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc0Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void unproject_grpc0Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void unproject_grpc0Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc0Response.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// unproject_grpc1Request

// int32 grpcServerCompressionFormat = 1;
inline void unproject_grpc1Request::clear_grpcservercompressionformat() {
  grpcservercompressionformat_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 unproject_grpc1Request::_internal_grpcservercompressionformat() const {
  return grpcservercompressionformat_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 unproject_grpc1Request::grpcservercompressionformat() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc1Request.grpcServerCompressionFormat)
  return _internal_grpcservercompressionformat();
}
inline void unproject_grpc1Request::_internal_set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  grpcservercompressionformat_ = value;
}
inline void unproject_grpc1Request::set_grpcservercompressionformat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_grpcservercompressionformat(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc1Request.grpcServerCompressionFormat)
}

// bytes imageKeypoints = 2;
inline void unproject_grpc1Request::clear_imagekeypoints() {
  imagekeypoints_.ClearToEmpty();
}
inline const std::string& unproject_grpc1Request::imagekeypoints() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc1Request.imageKeypoints)
  return _internal_imagekeypoints();
}
inline void unproject_grpc1Request::set_imagekeypoints(const std::string& value) {
  _internal_set_imagekeypoints(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc1Request.imageKeypoints)
}
inline std::string* unproject_grpc1Request::mutable_imagekeypoints() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.unproject_grpc1Request.imageKeypoints)
  return _internal_mutable_imagekeypoints();
}
inline const std::string& unproject_grpc1Request::_internal_imagekeypoints() const {
  return imagekeypoints_.Get();
}
inline void unproject_grpc1Request::_internal_set_imagekeypoints(const std::string& value) {
  
  imagekeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void unproject_grpc1Request::set_imagekeypoints(std::string&& value) {
  
  imagekeypoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.unproject_grpc1Request.imageKeypoints)
}
inline void unproject_grpc1Request::set_imagekeypoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  imagekeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.unproject_grpc1Request.imageKeypoints)
}
inline void unproject_grpc1Request::set_imagekeypoints(const void* value,
    size_t size) {
  
  imagekeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.unproject_grpc1Request.imageKeypoints)
}
inline std::string* unproject_grpc1Request::_internal_mutable_imagekeypoints() {
  
  return imagekeypoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* unproject_grpc1Request::release_imagekeypoints() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.unproject_grpc1Request.imageKeypoints)
  return imagekeypoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void unproject_grpc1Request::set_allocated_imagekeypoints(std::string* imagekeypoints) {
  if (imagekeypoints != nullptr) {
    
  } else {
    
  }
  imagekeypoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), imagekeypoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.unproject_grpc1Request.imageKeypoints)
}

// bytes pose = 3;
inline void unproject_grpc1Request::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& unproject_grpc1Request::pose() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc1Request.pose)
  return _internal_pose();
}
inline void unproject_grpc1Request::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc1Request.pose)
}
inline std::string* unproject_grpc1Request::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.unproject_grpc1Request.pose)
  return _internal_mutable_pose();
}
inline const std::string& unproject_grpc1Request::_internal_pose() const {
  return pose_.Get();
}
inline void unproject_grpc1Request::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void unproject_grpc1Request::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.unproject_grpc1Request.pose)
}
inline void unproject_grpc1Request::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.unproject_grpc1Request.pose)
}
inline void unproject_grpc1Request::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.unproject_grpc1Request.pose)
}
inline std::string* unproject_grpc1Request::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* unproject_grpc1Request::release_pose() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.unproject_grpc1Request.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void unproject_grpc1Request::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.unproject_grpc1Request.pose)
}

// bytes worldPoints = 4;
inline void unproject_grpc1Request::clear_worldpoints() {
  worldpoints_.ClearToEmpty();
}
inline const std::string& unproject_grpc1Request::worldpoints() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc1Request.worldPoints)
  return _internal_worldpoints();
}
inline void unproject_grpc1Request::set_worldpoints(const std::string& value) {
  _internal_set_worldpoints(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc1Request.worldPoints)
}
inline std::string* unproject_grpc1Request::mutable_worldpoints() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.unproject_grpc1Request.worldPoints)
  return _internal_mutable_worldpoints();
}
inline const std::string& unproject_grpc1Request::_internal_worldpoints() const {
  return worldpoints_.Get();
}
inline void unproject_grpc1Request::_internal_set_worldpoints(const std::string& value) {
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void unproject_grpc1Request::set_worldpoints(std::string&& value) {
  
  worldpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.unproject_grpc1Request.worldPoints)
}
inline void unproject_grpc1Request::set_worldpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.unproject_grpc1Request.worldPoints)
}
inline void unproject_grpc1Request::set_worldpoints(const void* value,
    size_t size) {
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.unproject_grpc1Request.worldPoints)
}
inline std::string* unproject_grpc1Request::_internal_mutable_worldpoints() {
  
  return worldpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* unproject_grpc1Request::release_worldpoints() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.unproject_grpc1Request.worldPoints)
  return worldpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void unproject_grpc1Request::set_allocated_worldpoints(std::string* worldpoints) {
  if (worldpoints != nullptr) {
    
  } else {
    
  }
  worldpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), worldpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.unproject_grpc1Request.worldPoints)
}

// -------------------------------------------------------------------

// unproject_grpc1Response

// bytes worldPoints = 1;
inline void unproject_grpc1Response::clear_worldpoints() {
  worldpoints_.ClearToEmpty();
}
inline const std::string& unproject_grpc1Response::worldpoints() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc1Response.worldPoints)
  return _internal_worldpoints();
}
inline void unproject_grpc1Response::set_worldpoints(const std::string& value) {
  _internal_set_worldpoints(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc1Response.worldPoints)
}
inline std::string* unproject_grpc1Response::mutable_worldpoints() {
  // @@protoc_insertion_point(field_mutable:grpcIUnproject.unproject_grpc1Response.worldPoints)
  return _internal_mutable_worldpoints();
}
inline const std::string& unproject_grpc1Response::_internal_worldpoints() const {
  return worldpoints_.Get();
}
inline void unproject_grpc1Response::_internal_set_worldpoints(const std::string& value) {
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void unproject_grpc1Response::set_worldpoints(std::string&& value) {
  
  worldpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIUnproject.unproject_grpc1Response.worldPoints)
}
inline void unproject_grpc1Response::set_worldpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIUnproject.unproject_grpc1Response.worldPoints)
}
inline void unproject_grpc1Response::set_worldpoints(const void* value,
    size_t size) {
  
  worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIUnproject.unproject_grpc1Response.worldPoints)
}
inline std::string* unproject_grpc1Response::_internal_mutable_worldpoints() {
  
  return worldpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* unproject_grpc1Response::release_worldpoints() {
  // @@protoc_insertion_point(field_release:grpcIUnproject.unproject_grpc1Response.worldPoints)
  return worldpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void unproject_grpc1Response::set_allocated_worldpoints(std::string* worldpoints) {
  if (worldpoints != nullptr) {
    
  } else {
    
  }
  worldpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), worldpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIUnproject.unproject_grpc1Response.worldPoints)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void unproject_grpc1Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 unproject_grpc1Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 unproject_grpc1Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIUnproject.unproject_grpc1Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void unproject_grpc1Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void unproject_grpc1Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIUnproject.unproject_grpc1Response.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcIUnproject

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcIUnprojectService_2eproto
