// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcI2DTrackablesDetectorService.proto

#include "grpcI2DTrackablesDetectorService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcI2DTrackablesDetector {
constexpr setTrackablesRequest::setTrackablesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : trackables_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct setTrackablesRequestDefaultTypeInternal {
  constexpr setTrackablesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setTrackablesRequestDefaultTypeInternal() {}
  union {
    setTrackablesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setTrackablesRequestDefaultTypeInternal _setTrackablesRequest_default_instance_;
constexpr setTrackablesResponse::setTrackablesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct setTrackablesResponseDefaultTypeInternal {
  constexpr setTrackablesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setTrackablesResponseDefaultTypeInternal() {}
  union {
    setTrackablesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setTrackablesResponseDefaultTypeInternal _setTrackablesResponse_default_instance_;
constexpr detectRequest::detectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , corners_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct detectRequestDefaultTypeInternal {
  constexpr detectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~detectRequestDefaultTypeInternal() {}
  union {
    detectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT detectRequestDefaultTypeInternal _detectRequest_default_instance_;
constexpr detectResponse::detectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : corners_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct detectResponseDefaultTypeInternal {
  constexpr detectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~detectResponseDefaultTypeInternal() {}
  union {
    detectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT detectResponseDefaultTypeInternal _detectResponse_default_instance_;
}  // namespace grpcI2DTrackablesDetector
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcI2DTrackablesDetectorService_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcI2DTrackablesDetectorService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcI2DTrackablesDetectorService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcI2DTrackablesDetectorService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::setTrackablesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::setTrackablesRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::setTrackablesRequest, trackables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::setTrackablesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::setTrackablesResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::detectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::detectRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::detectRequest, image_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::detectRequest, corners_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::detectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::detectResponse, corners_),
  PROTOBUF_FIELD_OFFSET(::grpcI2DTrackablesDetector::detectResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcI2DTrackablesDetector::setTrackablesRequest)},
  { 7, -1, sizeof(::grpcI2DTrackablesDetector::setTrackablesResponse)},
  { 13, -1, sizeof(::grpcI2DTrackablesDetector::detectRequest)},
  { 21, -1, sizeof(::grpcI2DTrackablesDetector::detectResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DTrackablesDetector::_setTrackablesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DTrackablesDetector::_setTrackablesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DTrackablesDetector::_detectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcI2DTrackablesDetector::_detectResponse_default_instance_),
};

const char descriptor_table_protodef_grpcI2DTrackablesDetectorService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&grpcI2DTrackablesDetectorService.proto"
  "\022\031grpcI2DTrackablesDetector\032\033google/prot"
  "obuf/empty.proto\"O\n\024setTrackablesRequest"
  "\022#\n\033grpcServerCompressionFormat\030\001 \001(\005\022\022\n"
  "\ntrackables\030\002 \001(\014\"4\n\025setTrackablesRespon"
  "se\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\021\"T\n\rdetec"
  "tRequest\022#\n\033grpcServerCompressionFormat\030"
  "\001 \001(\005\022\r\n\005image\030\002 \001(\014\022\017\n\007corners\030\003 \001(\014\">\n"
  "\016detectResponse\022\017\n\007corners\030\001 \001(\014\022\033\n\023xpcf"
  "GrpcReturnValue\030\002 \001(\0212\371\001\n grpcI2DTrackab"
  "lesDetectorService\022t\n\rsetTrackables\022/.gr"
  "pcI2DTrackablesDetector.setTrackablesReq"
  "uest\0320.grpcI2DTrackablesDetector.setTrac"
  "kablesResponse\"\000\022_\n\006detect\022(.grpcI2DTrac"
  "kablesDetector.detectRequest\032).grpcI2DTr"
  "ackablesDetector.detectResponse\"\000b\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcI2DTrackablesDetectorService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcI2DTrackablesDetectorService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcI2DTrackablesDetectorService_2eproto = {
  false, false, 641, descriptor_table_protodef_grpcI2DTrackablesDetectorService_2eproto, "grpcI2DTrackablesDetectorService.proto", 
  &descriptor_table_grpcI2DTrackablesDetectorService_2eproto_once, descriptor_table_grpcI2DTrackablesDetectorService_2eproto_deps, 1, 4,
  schemas, file_default_instances, TableStruct_grpcI2DTrackablesDetectorService_2eproto::offsets,
  file_level_metadata_grpcI2DTrackablesDetectorService_2eproto, file_level_enum_descriptors_grpcI2DTrackablesDetectorService_2eproto, file_level_service_descriptors_grpcI2DTrackablesDetectorService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcI2DTrackablesDetectorService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcI2DTrackablesDetectorService_2eproto);
  return descriptor_table_grpcI2DTrackablesDetectorService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcI2DTrackablesDetectorService_2eproto(&descriptor_table_grpcI2DTrackablesDetectorService_2eproto);
namespace grpcI2DTrackablesDetector {

// ===================================================================

class setTrackablesRequest::_Internal {
 public:
};

setTrackablesRequest::setTrackablesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcI2DTrackablesDetector.setTrackablesRequest)
}
setTrackablesRequest::setTrackablesRequest(const setTrackablesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  trackables_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trackables().empty()) {
    trackables_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trackables(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcI2DTrackablesDetector.setTrackablesRequest)
}

void setTrackablesRequest::SharedCtor() {
trackables_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

setTrackablesRequest::~setTrackablesRequest() {
  // @@protoc_insertion_point(destructor:grpcI2DTrackablesDetector.setTrackablesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setTrackablesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  trackables_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setTrackablesRequest::ArenaDtor(void* object) {
  setTrackablesRequest* _this = reinterpret_cast< setTrackablesRequest* >(object);
  (void)_this;
}
void setTrackablesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setTrackablesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setTrackablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DTrackablesDetector.setTrackablesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trackables_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setTrackablesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes trackables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_trackables();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setTrackablesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DTrackablesDetector.setTrackablesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes trackables = 2;
  if (this->trackables().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_trackables(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DTrackablesDetector.setTrackablesRequest)
  return target;
}

size_t setTrackablesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DTrackablesDetector.setTrackablesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes trackables = 2;
  if (this->trackables().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_trackables());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setTrackablesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcI2DTrackablesDetector.setTrackablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setTrackablesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setTrackablesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcI2DTrackablesDetector.setTrackablesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcI2DTrackablesDetector.setTrackablesRequest)
    MergeFrom(*source);
  }
}

void setTrackablesRequest::MergeFrom(const setTrackablesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DTrackablesDetector.setTrackablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trackables().size() > 0) {
    _internal_set_trackables(from._internal_trackables());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void setTrackablesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcI2DTrackablesDetector.setTrackablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setTrackablesRequest::CopyFrom(const setTrackablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DTrackablesDetector.setTrackablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setTrackablesRequest::IsInitialized() const {
  return true;
}

void setTrackablesRequest::InternalSwap(setTrackablesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  trackables_.Swap(&other->trackables_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setTrackablesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setTrackablesResponse::_Internal {
 public:
};

setTrackablesResponse::setTrackablesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcI2DTrackablesDetector.setTrackablesResponse)
}
setTrackablesResponse::setTrackablesResponse(const setTrackablesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcI2DTrackablesDetector.setTrackablesResponse)
}

void setTrackablesResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

setTrackablesResponse::~setTrackablesResponse() {
  // @@protoc_insertion_point(destructor:grpcI2DTrackablesDetector.setTrackablesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setTrackablesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void setTrackablesResponse::ArenaDtor(void* object) {
  setTrackablesResponse* _this = reinterpret_cast< setTrackablesResponse* >(object);
  (void)_this;
}
void setTrackablesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setTrackablesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setTrackablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DTrackablesDetector.setTrackablesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setTrackablesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setTrackablesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DTrackablesDetector.setTrackablesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DTrackablesDetector.setTrackablesResponse)
  return target;
}

size_t setTrackablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DTrackablesDetector.setTrackablesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setTrackablesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcI2DTrackablesDetector.setTrackablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const setTrackablesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setTrackablesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcI2DTrackablesDetector.setTrackablesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcI2DTrackablesDetector.setTrackablesResponse)
    MergeFrom(*source);
  }
}

void setTrackablesResponse::MergeFrom(const setTrackablesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DTrackablesDetector.setTrackablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void setTrackablesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcI2DTrackablesDetector.setTrackablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setTrackablesResponse::CopyFrom(const setTrackablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DTrackablesDetector.setTrackablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setTrackablesResponse::IsInitialized() const {
  return true;
}

void setTrackablesResponse::InternalSwap(setTrackablesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setTrackablesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class detectRequest::_Internal {
 public:
};

detectRequest::detectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcI2DTrackablesDetector.detectRequest)
}
detectRequest::detectRequest(const detectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArena());
  }
  corners_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_corners().empty()) {
    corners_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_corners(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcI2DTrackablesDetector.detectRequest)
}

void detectRequest::SharedCtor() {
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
corners_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

detectRequest::~detectRequest() {
  // @@protoc_insertion_point(destructor:grpcI2DTrackablesDetector.detectRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void detectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  corners_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void detectRequest::ArenaDtor(void* object) {
  detectRequest* _this = reinterpret_cast< detectRequest* >(object);
  (void)_this;
}
void detectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void detectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void detectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DTrackablesDetector.detectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_.ClearToEmpty();
  corners_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* detectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes corners = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_corners();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* detectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DTrackablesDetector.detectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image(), target);
  }

  // bytes corners = 3;
  if (this->corners().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_corners(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DTrackablesDetector.detectRequest)
  return target;
}

size_t detectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DTrackablesDetector.detectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image());
  }

  // bytes corners = 3;
  if (this->corners().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_corners());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void detectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcI2DTrackablesDetector.detectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const detectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<detectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcI2DTrackablesDetector.detectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcI2DTrackablesDetector.detectRequest)
    MergeFrom(*source);
  }
}

void detectRequest::MergeFrom(const detectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DTrackablesDetector.detectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image().size() > 0) {
    _internal_set_image(from._internal_image());
  }
  if (from.corners().size() > 0) {
    _internal_set_corners(from._internal_corners());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void detectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcI2DTrackablesDetector.detectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void detectRequest::CopyFrom(const detectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DTrackablesDetector.detectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool detectRequest::IsInitialized() const {
  return true;
}

void detectRequest::InternalSwap(detectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_.Swap(&other->image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  corners_.Swap(&other->corners_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata detectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class detectResponse::_Internal {
 public:
};

detectResponse::detectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcI2DTrackablesDetector.detectResponse)
}
detectResponse::detectResponse(const detectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  corners_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_corners().empty()) {
    corners_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_corners(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcI2DTrackablesDetector.detectResponse)
}

void detectResponse::SharedCtor() {
corners_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

detectResponse::~detectResponse() {
  // @@protoc_insertion_point(destructor:grpcI2DTrackablesDetector.detectResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void detectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  corners_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void detectResponse::ArenaDtor(void* object) {
  detectResponse* _this = reinterpret_cast< detectResponse* >(object);
  (void)_this;
}
void detectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void detectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void detectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcI2DTrackablesDetector.detectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  corners_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* detectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes corners = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_corners();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* detectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcI2DTrackablesDetector.detectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes corners = 1;
  if (this->corners().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_corners(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcI2DTrackablesDetector.detectResponse)
  return target;
}

size_t detectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcI2DTrackablesDetector.detectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes corners = 1;
  if (this->corners().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_corners());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void detectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcI2DTrackablesDetector.detectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const detectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<detectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcI2DTrackablesDetector.detectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcI2DTrackablesDetector.detectResponse)
    MergeFrom(*source);
  }
}

void detectResponse::MergeFrom(const detectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcI2DTrackablesDetector.detectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.corners().size() > 0) {
    _internal_set_corners(from._internal_corners());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void detectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcI2DTrackablesDetector.detectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void detectResponse::CopyFrom(const detectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcI2DTrackablesDetector.detectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool detectResponse::IsInitialized() const {
  return true;
}

void detectResponse::InternalSwap(detectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  corners_.Swap(&other->corners_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata detectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcI2DTrackablesDetector
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcI2DTrackablesDetector::setTrackablesRequest* Arena::CreateMaybeMessage< ::grpcI2DTrackablesDetector::setTrackablesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DTrackablesDetector::setTrackablesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI2DTrackablesDetector::setTrackablesResponse* Arena::CreateMaybeMessage< ::grpcI2DTrackablesDetector::setTrackablesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DTrackablesDetector::setTrackablesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI2DTrackablesDetector::detectRequest* Arena::CreateMaybeMessage< ::grpcI2DTrackablesDetector::detectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DTrackablesDetector::detectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcI2DTrackablesDetector::detectResponse* Arena::CreateMaybeMessage< ::grpcI2DTrackablesDetector::detectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcI2DTrackablesDetector::detectResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
