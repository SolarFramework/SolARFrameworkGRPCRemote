// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIDescriptorMatcherStereoService.proto

#include "grpcIDescriptorMatcherStereoService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcIDescriptorMatcherStereo {
PROTOBUF_CONSTEXPR match_grpc0Request::match_grpc0Request(
    ::_pbi::ConstantInitialized)
  : descriptors1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , descriptors2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , undistortedkeypoints1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , undistortedkeypoints2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct match_grpc0RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR match_grpc0RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~match_grpc0RequestDefaultTypeInternal() {}
  union {
    match_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 match_grpc0RequestDefaultTypeInternal _match_grpc0Request_default_instance_;
PROTOBUF_CONSTEXPR match_grpc0Response::match_grpc0Response(
    ::_pbi::ConstantInitialized)
  : matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct match_grpc0ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR match_grpc0ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~match_grpc0ResponseDefaultTypeInternal() {}
  union {
    match_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 match_grpc0ResponseDefaultTypeInternal _match_grpc0Response_default_instance_;
PROTOBUF_CONSTEXPR match_grpc1Request::match_grpc1Request(
    ::_pbi::ConstantInitialized)
  : frame1_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , frame2_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , grpcservercompressionformat_(0){}
struct match_grpc1RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR match_grpc1RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~match_grpc1RequestDefaultTypeInternal() {}
  union {
    match_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 match_grpc1RequestDefaultTypeInternal _match_grpc1Request_default_instance_;
PROTOBUF_CONSTEXPR match_grpc1Response::match_grpc1Response(
    ::_pbi::ConstantInitialized)
  : matches_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , xpcfgrpcreturnvalue_(0){}
struct match_grpc1ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR match_grpc1ResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~match_grpc1ResponseDefaultTypeInternal() {}
  union {
    match_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 match_grpc1ResponseDefaultTypeInternal _match_grpc1Response_default_instance_;
}  // namespace grpcIDescriptorMatcherStereo
static ::_pb::Metadata file_level_metadata_grpcIDescriptorMatcherStereoService_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcIDescriptorMatcherStereoService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcIDescriptorMatcherStereoService_2eproto = nullptr;

const uint32_t TableStruct_grpcIDescriptorMatcherStereoService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Request, descriptors1_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Request, descriptors2_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Request, undistortedkeypoints1_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Request, undistortedkeypoints2_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Request, type_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Request, matches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Response, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc0Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc1Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc1Request, frame1_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc1Request, frame2_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc1Request, type_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc1Request, matches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc1Response, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherStereo::match_grpc1Response, xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcIDescriptorMatcherStereo::match_grpc0Request)},
  { 13, -1, -1, sizeof(::grpcIDescriptorMatcherStereo::match_grpc0Response)},
  { 21, -1, -1, sizeof(::grpcIDescriptorMatcherStereo::match_grpc1Request)},
  { 32, -1, -1, sizeof(::grpcIDescriptorMatcherStereo::match_grpc1Response)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcIDescriptorMatcherStereo::_match_grpc0Request_default_instance_._instance,
  &::grpcIDescriptorMatcherStereo::_match_grpc0Response_default_instance_._instance,
  &::grpcIDescriptorMatcherStereo::_match_grpc1Request_default_instance_._instance,
  &::grpcIDescriptorMatcherStereo::_match_grpc1Response_default_instance_._instance,
};

const char descriptor_table_protodef_grpcIDescriptorMatcherStereoService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n)grpcIDescriptorMatcherStereoService.pr"
  "oto\022\034grpcIDescriptorMatcherStereo\032\033googl"
  "e/protobuf/empty.proto\"\302\001\n\022match_grpc0Re"
  "quest\022#\n\033grpcServerCompressionFormat\030\001 \001"
  "(\005\022\024\n\014descriptors1\030\002 \001(\014\022\024\n\014descriptors2"
  "\030\003 \001(\014\022\035\n\025undistortedKeypoints1\030\004 \001(\014\022\035\n"
  "\025undistortedKeypoints2\030\005 \001(\014\022\014\n\004type\030\006 \001"
  "(\014\022\017\n\007matches\030\007 \001(\014\"C\n\023match_grpc0Respon"
  "se\022\017\n\007matches\030\001 \001(\014\022\033\n\023xpcfGrpcReturnVal"
  "ue\030\002 \001(\021\"x\n\022match_grpc1Request\022#\n\033grpcSe"
  "rverCompressionFormat\030\001 \001(\005\022\016\n\006frame1\030\002 "
  "\001(\014\022\016\n\006frame2\030\003 \001(\014\022\014\n\004type\030\004 \001(\014\022\017\n\007mat"
  "ches\030\005 \001(\014\"C\n\023match_grpc1Response\022\017\n\007mat"
  "ches\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\0212"
  "\221\002\n#grpcIDescriptorMatcherStereoService\022"
  "t\n\013match_grpc0\0220.grpcIDescriptorMatcherS"
  "tereo.match_grpc0Request\0321.grpcIDescript"
  "orMatcherStereo.match_grpc0Response\"\000\022t\n"
  "\013match_grpc1\0220.grpcIDescriptorMatcherSte"
  "reo.match_grpc1Request\0321.grpcIDescriptor"
  "MatcherStereo.match_grpc1Response\"\000b\006pro"
  "to3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcIDescriptorMatcherStereoService_2eproto = {
    false, false, 843, descriptor_table_protodef_grpcIDescriptorMatcherStereoService_2eproto,
    "grpcIDescriptorMatcherStereoService.proto",
    &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_once, descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_grpcIDescriptorMatcherStereoService_2eproto::offsets,
    file_level_metadata_grpcIDescriptorMatcherStereoService_2eproto, file_level_enum_descriptors_grpcIDescriptorMatcherStereoService_2eproto,
    file_level_service_descriptors_grpcIDescriptorMatcherStereoService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_getter() {
  return &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcIDescriptorMatcherStereoService_2eproto(&descriptor_table_grpcIDescriptorMatcherStereoService_2eproto);
namespace grpcIDescriptorMatcherStereo {

// ===================================================================

class match_grpc0Request::_Internal {
 public:
};

match_grpc0Request::match_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherStereo.match_grpc0Request)
}
match_grpc0Request::match_grpc0Request(const match_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  descriptors1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    descriptors1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_descriptors1().empty()) {
    descriptors1_.Set(from._internal_descriptors1(), 
      GetArenaForAllocation());
  }
  descriptors2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    descriptors2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_descriptors2().empty()) {
    descriptors2_.Set(from._internal_descriptors2(), 
      GetArenaForAllocation());
  }
  undistortedkeypoints1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    undistortedkeypoints1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_undistortedkeypoints1().empty()) {
    undistortedkeypoints1_.Set(from._internal_undistortedkeypoints1(), 
      GetArenaForAllocation());
  }
  undistortedkeypoints2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    undistortedkeypoints2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_undistortedkeypoints2().empty()) {
    undistortedkeypoints2_.Set(from._internal_undistortedkeypoints2(), 
      GetArenaForAllocation());
  }
  type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    type_.Set(from._internal_type(), 
      GetArenaForAllocation());
  }
  matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matches().empty()) {
    matches_.Set(from._internal_matches(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherStereo.match_grpc0Request)
}

inline void match_grpc0Request::SharedCtor() {
descriptors1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  descriptors1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
descriptors2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  descriptors2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
undistortedkeypoints1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  undistortedkeypoints1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
undistortedkeypoints2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  undistortedkeypoints2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

match_grpc0Request::~match_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherStereo.match_grpc0Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void match_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  descriptors1_.Destroy();
  descriptors2_.Destroy();
  undistortedkeypoints1_.Destroy();
  undistortedkeypoints2_.Destroy();
  type_.Destroy();
  matches_.Destroy();
}

void match_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherStereo.match_grpc0Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptors1_.ClearToEmpty();
  descriptors2_.ClearToEmpty();
  undistortedkeypoints1_.ClearToEmpty();
  undistortedkeypoints2_.ClearToEmpty();
  type_.ClearToEmpty();
  matches_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc0Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes descriptors1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_descriptors1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes descriptors2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_descriptors2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes undistortedKeypoints1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_undistortedkeypoints1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes undistortedKeypoints2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_undistortedkeypoints2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matches = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* match_grpc0Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherStereo.match_grpc0Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes descriptors1 = 2;
  if (!this->_internal_descriptors1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_descriptors1(), target);
  }

  // bytes descriptors2 = 3;
  if (!this->_internal_descriptors2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_descriptors2(), target);
  }

  // bytes undistortedKeypoints1 = 4;
  if (!this->_internal_undistortedkeypoints1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_undistortedkeypoints1(), target);
  }

  // bytes undistortedKeypoints2 = 5;
  if (!this->_internal_undistortedkeypoints2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_undistortedkeypoints2(), target);
  }

  // bytes type = 6;
  if (!this->_internal_type().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_type(), target);
  }

  // bytes matches = 7;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_matches(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherStereo.match_grpc0Request)
  return target;
}

size_t match_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherStereo.match_grpc0Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes descriptors1 = 2;
  if (!this->_internal_descriptors1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors1());
  }

  // bytes descriptors2 = 3;
  if (!this->_internal_descriptors2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors2());
  }

  // bytes undistortedKeypoints1 = 4;
  if (!this->_internal_undistortedkeypoints1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_undistortedkeypoints1());
  }

  // bytes undistortedKeypoints2 = 5;
  if (!this->_internal_undistortedkeypoints2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_undistortedkeypoints2());
  }

  // bytes type = 6;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_type());
  }

  // bytes matches = 7;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData match_grpc0Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    match_grpc0Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*match_grpc0Request::GetClassData() const { return &_class_data_; }

void match_grpc0Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<match_grpc0Request *>(to)->MergeFrom(
      static_cast<const match_grpc0Request &>(from));
}


void match_grpc0Request::MergeFrom(const match_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherStereo.match_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_descriptors1().empty()) {
    _internal_set_descriptors1(from._internal_descriptors1());
  }
  if (!from._internal_descriptors2().empty()) {
    _internal_set_descriptors2(from._internal_descriptors2());
  }
  if (!from._internal_undistortedkeypoints1().empty()) {
    _internal_set_undistortedkeypoints1(from._internal_undistortedkeypoints1());
  }
  if (!from._internal_undistortedkeypoints2().empty()) {
    _internal_set_undistortedkeypoints2(from._internal_undistortedkeypoints2());
  }
  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  if (!from._internal_matches().empty()) {
    _internal_set_matches(from._internal_matches());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void match_grpc0Request::CopyFrom(const match_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherStereo.match_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc0Request::IsInitialized() const {
  return true;
}

void match_grpc0Request::InternalSwap(match_grpc0Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &descriptors1_, lhs_arena,
      &other->descriptors1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &descriptors2_, lhs_arena,
      &other->descriptors2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &undistortedkeypoints1_, lhs_arena,
      &other->undistortedkeypoints1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &undistortedkeypoints2_, lhs_arena,
      &other->undistortedkeypoints2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &type_, lhs_arena,
      &other->type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &matches_, lhs_arena,
      &other->matches_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc0Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_getter, &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_once,
      file_level_metadata_grpcIDescriptorMatcherStereoService_2eproto[0]);
}

// ===================================================================

class match_grpc0Response::_Internal {
 public:
};

match_grpc0Response::match_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherStereo.match_grpc0Response)
}
match_grpc0Response::match_grpc0Response(const match_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matches().empty()) {
    matches_.Set(from._internal_matches(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherStereo.match_grpc0Response)
}

inline void match_grpc0Response::SharedCtor() {
matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

match_grpc0Response::~match_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherStereo.match_grpc0Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void match_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  matches_.Destroy();
}

void match_grpc0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherStereo.match_grpc0Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matches_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc0Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes matches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* match_grpc0Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherStereo.match_grpc0Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes matches = 1;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_matches(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherStereo.match_grpc0Response)
  return target;
}

size_t match_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherStereo.match_grpc0Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes matches = 1;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData match_grpc0Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    match_grpc0Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*match_grpc0Response::GetClassData() const { return &_class_data_; }

void match_grpc0Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<match_grpc0Response *>(to)->MergeFrom(
      static_cast<const match_grpc0Response &>(from));
}


void match_grpc0Response::MergeFrom(const match_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherStereo.match_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_matches().empty()) {
    _internal_set_matches(from._internal_matches());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void match_grpc0Response::CopyFrom(const match_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherStereo.match_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc0Response::IsInitialized() const {
  return true;
}

void match_grpc0Response::InternalSwap(match_grpc0Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &matches_, lhs_arena,
      &other->matches_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc0Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_getter, &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_once,
      file_level_metadata_grpcIDescriptorMatcherStereoService_2eproto[1]);
}

// ===================================================================

class match_grpc1Request::_Internal {
 public:
};

match_grpc1Request::match_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherStereo.match_grpc1Request)
}
match_grpc1Request::match_grpc1Request(const match_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  frame1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    frame1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_frame1().empty()) {
    frame1_.Set(from._internal_frame1(), 
      GetArenaForAllocation());
  }
  frame2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    frame2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_frame2().empty()) {
    frame2_.Set(from._internal_frame2(), 
      GetArenaForAllocation());
  }
  type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    type_.Set(from._internal_type(), 
      GetArenaForAllocation());
  }
  matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matches().empty()) {
    matches_.Set(from._internal_matches(), 
      GetArenaForAllocation());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherStereo.match_grpc1Request)
}

inline void match_grpc1Request::SharedCtor() {
frame1_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  frame1_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
frame2_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  frame2_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grpcservercompressionformat_ = 0;
}

match_grpc1Request::~match_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherStereo.match_grpc1Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void match_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  frame1_.Destroy();
  frame2_.Destroy();
  type_.Destroy();
  matches_.Destroy();
}

void match_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherStereo.match_grpc1Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame1_.ClearToEmpty();
  frame2_.ClearToEmpty();
  type_.ClearToEmpty();
  matches_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc1Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes frame1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_frame1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes frame2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_frame2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes matches = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* match_grpc1Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherStereo.match_grpc1Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes frame1 = 2;
  if (!this->_internal_frame1().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_frame1(), target);
  }

  // bytes frame2 = 3;
  if (!this->_internal_frame2().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_frame2(), target);
  }

  // bytes type = 4;
  if (!this->_internal_type().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_type(), target);
  }

  // bytes matches = 5;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_matches(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherStereo.match_grpc1Request)
  return target;
}

size_t match_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherStereo.match_grpc1Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frame1 = 2;
  if (!this->_internal_frame1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frame1());
  }

  // bytes frame2 = 3;
  if (!this->_internal_frame2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frame2());
  }

  // bytes type = 4;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_type());
  }

  // bytes matches = 5;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData match_grpc1Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    match_grpc1Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*match_grpc1Request::GetClassData() const { return &_class_data_; }

void match_grpc1Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<match_grpc1Request *>(to)->MergeFrom(
      static_cast<const match_grpc1Request &>(from));
}


void match_grpc1Request::MergeFrom(const match_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherStereo.match_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_frame1().empty()) {
    _internal_set_frame1(from._internal_frame1());
  }
  if (!from._internal_frame2().empty()) {
    _internal_set_frame2(from._internal_frame2());
  }
  if (!from._internal_type().empty()) {
    _internal_set_type(from._internal_type());
  }
  if (!from._internal_matches().empty()) {
    _internal_set_matches(from._internal_matches());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void match_grpc1Request::CopyFrom(const match_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherStereo.match_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc1Request::IsInitialized() const {
  return true;
}

void match_grpc1Request::InternalSwap(match_grpc1Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &frame1_, lhs_arena,
      &other->frame1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &frame2_, lhs_arena,
      &other->frame2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &type_, lhs_arena,
      &other->type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &matches_, lhs_arena,
      &other->matches_, rhs_arena
  );
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc1Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_getter, &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_once,
      file_level_metadata_grpcIDescriptorMatcherStereoService_2eproto[2]);
}

// ===================================================================

class match_grpc1Response::_Internal {
 public:
};

match_grpc1Response::match_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherStereo.match_grpc1Response)
}
match_grpc1Response::match_grpc1Response(const match_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  matches_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    matches_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_matches().empty()) {
    matches_.Set(from._internal_matches(), 
      GetArenaForAllocation());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherStereo.match_grpc1Response)
}

inline void match_grpc1Response::SharedCtor() {
matches_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  matches_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xpcfgrpcreturnvalue_ = 0;
}

match_grpc1Response::~match_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherStereo.match_grpc1Response)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void match_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  matches_.Destroy();
}

void match_grpc1Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherStereo.match_grpc1Response)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matches_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc1Response::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes matches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_matches();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* match_grpc1Response::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherStereo.match_grpc1Response)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes matches = 1;
  if (!this->_internal_matches().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_matches(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherStereo.match_grpc1Response)
  return target;
}

size_t match_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherStereo.match_grpc1Response)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes matches = 1;
  if (!this->_internal_matches().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData match_grpc1Response::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    match_grpc1Response::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*match_grpc1Response::GetClassData() const { return &_class_data_; }

void match_grpc1Response::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<match_grpc1Response *>(to)->MergeFrom(
      static_cast<const match_grpc1Response &>(from));
}


void match_grpc1Response::MergeFrom(const match_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherStereo.match_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_matches().empty()) {
    _internal_set_matches(from._internal_matches());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void match_grpc1Response::CopyFrom(const match_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherStereo.match_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc1Response::IsInitialized() const {
  return true;
}

void match_grpc1Response::InternalSwap(match_grpc1Response* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &matches_, lhs_arena,
      &other->matches_, rhs_arena
  );
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc1Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_getter, &descriptor_table_grpcIDescriptorMatcherStereoService_2eproto_once,
      file_level_metadata_grpcIDescriptorMatcherStereoService_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIDescriptorMatcherStereo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherStereo::match_grpc0Request*
Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherStereo::match_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherStereo::match_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherStereo::match_grpc0Response*
Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherStereo::match_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherStereo::match_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherStereo::match_grpc1Request*
Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherStereo::match_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherStereo::match_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherStereo::match_grpc1Response*
Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherStereo::match_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherStereo::match_grpc1Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
