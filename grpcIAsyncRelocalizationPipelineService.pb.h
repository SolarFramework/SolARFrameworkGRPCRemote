// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIAsyncRelocalizationPipelineService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcIAsyncRelocalizationPipelineService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcIAsyncRelocalizationPipelineService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcIAsyncRelocalizationPipelineService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(int index);
namespace grpcIAsyncRelocalizationPipeline {
class get3DTransformRequestRequest;
struct get3DTransformRequestRequestDefaultTypeInternal;
extern get3DTransformRequestRequestDefaultTypeInternal _get3DTransformRequestRequest_default_instance_;
class get3DTransformRequestResponse;
struct get3DTransformRequestResponseDefaultTypeInternal;
extern get3DTransformRequestResponseDefaultTypeInternal _get3DTransformRequestResponse_default_instance_;
class getCameraParametersRequest;
struct getCameraParametersRequestDefaultTypeInternal;
extern getCameraParametersRequestDefaultTypeInternal _getCameraParametersRequest_default_instance_;
class getCameraParametersResponse;
struct getCameraParametersResponseDefaultTypeInternal;
extern getCameraParametersResponseDefaultTypeInternal _getCameraParametersResponse_default_instance_;
class initResponse;
struct initResponseDefaultTypeInternal;
extern initResponseDefaultTypeInternal _initResponse_default_instance_;
class relocalizeProcessRequestRequest;
struct relocalizeProcessRequestRequestDefaultTypeInternal;
extern relocalizeProcessRequestRequestDefaultTypeInternal _relocalizeProcessRequestRequest_default_instance_;
class relocalizeProcessRequestResponse;
struct relocalizeProcessRequestResponseDefaultTypeInternal;
extern relocalizeProcessRequestResponseDefaultTypeInternal _relocalizeProcessRequestResponse_default_instance_;
class setCameraParametersRequest;
struct setCameraParametersRequestDefaultTypeInternal;
extern setCameraParametersRequestDefaultTypeInternal _setCameraParametersRequest_default_instance_;
class setCameraParametersResponse;
struct setCameraParametersResponseDefaultTypeInternal;
extern setCameraParametersResponseDefaultTypeInternal _setCameraParametersResponse_default_instance_;
class startResponse;
struct startResponseDefaultTypeInternal;
extern startResponseDefaultTypeInternal _startResponse_default_instance_;
class stopResponse;
struct stopResponseDefaultTypeInternal;
extern stopResponseDefaultTypeInternal _stopResponse_default_instance_;
}  // namespace grpcIAsyncRelocalizationPipeline
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::get3DTransformRequestRequest>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::get3DTransformRequestResponse>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::getCameraParametersRequest>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::getCameraParametersResponse>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::initResponse* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::initResponse>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestRequest>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::relocalizeProcessRequestResponse>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::setCameraParametersRequest>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::setCameraParametersResponse>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::startResponse* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::startResponse>(Arena*);
template<> ::grpcIAsyncRelocalizationPipeline::stopResponse* Arena::CreateMaybeMessage<::grpcIAsyncRelocalizationPipeline::stopResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcIAsyncRelocalizationPipeline {

// ===================================================================

class initResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.initResponse) */ {
 public:
  inline initResponse() : initResponse(nullptr) {}
  virtual ~initResponse();
  explicit constexpr initResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  initResponse(const initResponse& from);
  initResponse(initResponse&& from) noexcept
    : initResponse() {
    *this = ::std::move(from);
  }

  inline initResponse& operator=(const initResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline initResponse& operator=(initResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const initResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const initResponse* internal_default_instance() {
    return reinterpret_cast<const initResponse*>(
               &_initResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(initResponse& a, initResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(initResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(initResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline initResponse* New() const final {
    return CreateMaybeMessage<initResponse>(nullptr);
  }

  initResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<initResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const initResponse& from);
  void MergeFrom(const initResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(initResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.initResponse";
  }
  protected:
  explicit initResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.initResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class startResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.startResponse) */ {
 public:
  inline startResponse() : startResponse(nullptr) {}
  virtual ~startResponse();
  explicit constexpr startResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  startResponse(const startResponse& from);
  startResponse(startResponse&& from) noexcept
    : startResponse() {
    *this = ::std::move(from);
  }

  inline startResponse& operator=(const startResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline startResponse& operator=(startResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const startResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const startResponse* internal_default_instance() {
    return reinterpret_cast<const startResponse*>(
               &_startResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(startResponse& a, startResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(startResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(startResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline startResponse* New() const final {
    return CreateMaybeMessage<startResponse>(nullptr);
  }

  startResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<startResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const startResponse& from);
  void MergeFrom(const startResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(startResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.startResponse";
  }
  protected:
  explicit startResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.startResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class stopResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.stopResponse) */ {
 public:
  inline stopResponse() : stopResponse(nullptr) {}
  virtual ~stopResponse();
  explicit constexpr stopResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  stopResponse(const stopResponse& from);
  stopResponse(stopResponse&& from) noexcept
    : stopResponse() {
    *this = ::std::move(from);
  }

  inline stopResponse& operator=(const stopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline stopResponse& operator=(stopResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const stopResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const stopResponse* internal_default_instance() {
    return reinterpret_cast<const stopResponse*>(
               &_stopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(stopResponse& a, stopResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(stopResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(stopResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline stopResponse* New() const final {
    return CreateMaybeMessage<stopResponse>(nullptr);
  }

  stopResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<stopResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const stopResponse& from);
  void MergeFrom(const stopResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(stopResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.stopResponse";
  }
  protected:
  explicit stopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.stopResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class setCameraParametersRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest) */ {
 public:
  inline setCameraParametersRequest() : setCameraParametersRequest(nullptr) {}
  virtual ~setCameraParametersRequest();
  explicit constexpr setCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  setCameraParametersRequest(const setCameraParametersRequest& from);
  setCameraParametersRequest(setCameraParametersRequest&& from) noexcept
    : setCameraParametersRequest() {
    *this = ::std::move(from);
  }

  inline setCameraParametersRequest& operator=(const setCameraParametersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline setCameraParametersRequest& operator=(setCameraParametersRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const setCameraParametersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const setCameraParametersRequest* internal_default_instance() {
    return reinterpret_cast<const setCameraParametersRequest*>(
               &_setCameraParametersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(setCameraParametersRequest& a, setCameraParametersRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(setCameraParametersRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(setCameraParametersRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline setCameraParametersRequest* New() const final {
    return CreateMaybeMessage<setCameraParametersRequest>(nullptr);
  }

  setCameraParametersRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<setCameraParametersRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const setCameraParametersRequest& from);
  void MergeFrom(const setCameraParametersRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(setCameraParametersRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.setCameraParametersRequest";
  }
  protected:
  explicit setCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCameraParamsFieldNumber = 1,
  };
  // bytes cameraParams = 1;
  void clear_cameraparams();
  const std::string& cameraparams() const;
  void set_cameraparams(const std::string& value);
  void set_cameraparams(std::string&& value);
  void set_cameraparams(const char* value);
  void set_cameraparams(const void* value, size_t size);
  std::string* mutable_cameraparams();
  std::string* release_cameraparams();
  void set_allocated_cameraparams(std::string* cameraparams);
  private:
  const std::string& _internal_cameraparams() const;
  void _internal_set_cameraparams(const std::string& value);
  std::string* _internal_mutable_cameraparams();
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cameraparams_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class setCameraParametersResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.setCameraParametersResponse) */ {
 public:
  inline setCameraParametersResponse() : setCameraParametersResponse(nullptr) {}
  virtual ~setCameraParametersResponse();
  explicit constexpr setCameraParametersResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  setCameraParametersResponse(const setCameraParametersResponse& from);
  setCameraParametersResponse(setCameraParametersResponse&& from) noexcept
    : setCameraParametersResponse() {
    *this = ::std::move(from);
  }

  inline setCameraParametersResponse& operator=(const setCameraParametersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline setCameraParametersResponse& operator=(setCameraParametersResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const setCameraParametersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const setCameraParametersResponse* internal_default_instance() {
    return reinterpret_cast<const setCameraParametersResponse*>(
               &_setCameraParametersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(setCameraParametersResponse& a, setCameraParametersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(setCameraParametersResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(setCameraParametersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline setCameraParametersResponse* New() const final {
    return CreateMaybeMessage<setCameraParametersResponse>(nullptr);
  }

  setCameraParametersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<setCameraParametersResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const setCameraParametersResponse& from);
  void MergeFrom(const setCameraParametersResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(setCameraParametersResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.setCameraParametersResponse";
  }
  protected:
  explicit setCameraParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXpcfGrpcReturnValueFieldNumber = 1,
  };
  // sint32 xpcfGrpcReturnValue = 1;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.setCameraParametersResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class getCameraParametersRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest) */ {
 public:
  inline getCameraParametersRequest() : getCameraParametersRequest(nullptr) {}
  virtual ~getCameraParametersRequest();
  explicit constexpr getCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  getCameraParametersRequest(const getCameraParametersRequest& from);
  getCameraParametersRequest(getCameraParametersRequest&& from) noexcept
    : getCameraParametersRequest() {
    *this = ::std::move(from);
  }

  inline getCameraParametersRequest& operator=(const getCameraParametersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline getCameraParametersRequest& operator=(getCameraParametersRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const getCameraParametersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const getCameraParametersRequest* internal_default_instance() {
    return reinterpret_cast<const getCameraParametersRequest*>(
               &_getCameraParametersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(getCameraParametersRequest& a, getCameraParametersRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(getCameraParametersRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(getCameraParametersRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline getCameraParametersRequest* New() const final {
    return CreateMaybeMessage<getCameraParametersRequest>(nullptr);
  }

  getCameraParametersRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<getCameraParametersRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const getCameraParametersRequest& from);
  void MergeFrom(const getCameraParametersRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(getCameraParametersRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.getCameraParametersRequest";
  }
  protected:
  explicit getCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCameraParamsFieldNumber = 1,
  };
  // bytes cameraParams = 1;
  void clear_cameraparams();
  const std::string& cameraparams() const;
  void set_cameraparams(const std::string& value);
  void set_cameraparams(std::string&& value);
  void set_cameraparams(const char* value);
  void set_cameraparams(const void* value, size_t size);
  std::string* mutable_cameraparams();
  std::string* release_cameraparams();
  void set_allocated_cameraparams(std::string* cameraparams);
  private:
  const std::string& _internal_cameraparams() const;
  void _internal_set_cameraparams(const std::string& value);
  std::string* _internal_mutable_cameraparams();
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cameraparams_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class getCameraParametersResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse) */ {
 public:
  inline getCameraParametersResponse() : getCameraParametersResponse(nullptr) {}
  virtual ~getCameraParametersResponse();
  explicit constexpr getCameraParametersResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  getCameraParametersResponse(const getCameraParametersResponse& from);
  getCameraParametersResponse(getCameraParametersResponse&& from) noexcept
    : getCameraParametersResponse() {
    *this = ::std::move(from);
  }

  inline getCameraParametersResponse& operator=(const getCameraParametersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline getCameraParametersResponse& operator=(getCameraParametersResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const getCameraParametersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const getCameraParametersResponse* internal_default_instance() {
    return reinterpret_cast<const getCameraParametersResponse*>(
               &_getCameraParametersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(getCameraParametersResponse& a, getCameraParametersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(getCameraParametersResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(getCameraParametersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline getCameraParametersResponse* New() const final {
    return CreateMaybeMessage<getCameraParametersResponse>(nullptr);
  }

  getCameraParametersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<getCameraParametersResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const getCameraParametersResponse& from);
  void MergeFrom(const getCameraParametersResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(getCameraParametersResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.getCameraParametersResponse";
  }
  protected:
  explicit getCameraParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCameraParamsFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes cameraParams = 1;
  void clear_cameraparams();
  const std::string& cameraparams() const;
  void set_cameraparams(const std::string& value);
  void set_cameraparams(std::string&& value);
  void set_cameraparams(const char* value);
  void set_cameraparams(const void* value, size_t size);
  std::string* mutable_cameraparams();
  std::string* release_cameraparams();
  void set_allocated_cameraparams(std::string* cameraparams);
  private:
  const std::string& _internal_cameraparams() const;
  void _internal_set_cameraparams(const std::string& value);
  std::string* _internal_mutable_cameraparams();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cameraparams_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class relocalizeProcessRequestRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest) */ {
 public:
  inline relocalizeProcessRequestRequest() : relocalizeProcessRequestRequest(nullptr) {}
  virtual ~relocalizeProcessRequestRequest();
  explicit constexpr relocalizeProcessRequestRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  relocalizeProcessRequestRequest(const relocalizeProcessRequestRequest& from);
  relocalizeProcessRequestRequest(relocalizeProcessRequestRequest&& from) noexcept
    : relocalizeProcessRequestRequest() {
    *this = ::std::move(from);
  }

  inline relocalizeProcessRequestRequest& operator=(const relocalizeProcessRequestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline relocalizeProcessRequestRequest& operator=(relocalizeProcessRequestRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const relocalizeProcessRequestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const relocalizeProcessRequestRequest* internal_default_instance() {
    return reinterpret_cast<const relocalizeProcessRequestRequest*>(
               &_relocalizeProcessRequestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(relocalizeProcessRequestRequest& a, relocalizeProcessRequestRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(relocalizeProcessRequestRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(relocalizeProcessRequestRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline relocalizeProcessRequestRequest* New() const final {
    return CreateMaybeMessage<relocalizeProcessRequestRequest>(nullptr);
  }

  relocalizeProcessRequestRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<relocalizeProcessRequestRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const relocalizeProcessRequestRequest& from);
  void MergeFrom(const relocalizeProcessRequestRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(relocalizeProcessRequestRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest";
  }
  protected:
  explicit relocalizeProcessRequestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImageFieldNumber = 1,
    kPoseFieldNumber = 2,
    kTimestampFieldNumber = 3,
    kTransform3DStatusFieldNumber = 4,
    kTransform3DFieldNumber = 5,
    kConfidenceFieldNumber = 6,
  };
  // bytes image = 1;
  void clear_image();
  const std::string& image() const;
  void set_image(const std::string& value);
  void set_image(std::string&& value);
  void set_image(const char* value);
  void set_image(const void* value, size_t size);
  std::string* mutable_image();
  std::string* release_image();
  void set_allocated_image(std::string* image);
  private:
  const std::string& _internal_image() const;
  void _internal_set_image(const std::string& value);
  std::string* _internal_mutable_image();
  public:

  // bytes pose = 2;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes timestamp = 3;
  void clear_timestamp();
  const std::string& timestamp() const;
  void set_timestamp(const std::string& value);
  void set_timestamp(std::string&& value);
  void set_timestamp(const char* value);
  void set_timestamp(const void* value, size_t size);
  std::string* mutable_timestamp();
  std::string* release_timestamp();
  void set_allocated_timestamp(std::string* timestamp);
  private:
  const std::string& _internal_timestamp() const;
  void _internal_set_timestamp(const std::string& value);
  std::string* _internal_mutable_timestamp();
  public:

  // bytes transform3DStatus = 4;
  void clear_transform3dstatus();
  const std::string& transform3dstatus() const;
  void set_transform3dstatus(const std::string& value);
  void set_transform3dstatus(std::string&& value);
  void set_transform3dstatus(const char* value);
  void set_transform3dstatus(const void* value, size_t size);
  std::string* mutable_transform3dstatus();
  std::string* release_transform3dstatus();
  void set_allocated_transform3dstatus(std::string* transform3dstatus);
  private:
  const std::string& _internal_transform3dstatus() const;
  void _internal_set_transform3dstatus(const std::string& value);
  std::string* _internal_mutable_transform3dstatus();
  public:

  // bytes transform3D = 5;
  void clear_transform3d();
  const std::string& transform3d() const;
  void set_transform3d(const std::string& value);
  void set_transform3d(std::string&& value);
  void set_transform3d(const char* value);
  void set_transform3d(const void* value, size_t size);
  std::string* mutable_transform3d();
  std::string* release_transform3d();
  void set_allocated_transform3d(std::string* transform3d);
  private:
  const std::string& _internal_transform3d() const;
  void _internal_set_transform3d(const std::string& value);
  std::string* _internal_mutable_transform3d();
  public:

  // bytes confidence = 6;
  void clear_confidence();
  const std::string& confidence() const;
  void set_confidence(const std::string& value);
  void set_confidence(std::string&& value);
  void set_confidence(const char* value);
  void set_confidence(const void* value, size_t size);
  std::string* mutable_confidence();
  std::string* release_confidence();
  void set_allocated_confidence(std::string* confidence);
  private:
  const std::string& _internal_confidence() const;
  void _internal_set_confidence(const std::string& value);
  std::string* _internal_mutable_confidence();
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr timestamp_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transform3dstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transform3d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr confidence_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class relocalizeProcessRequestResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse) */ {
 public:
  inline relocalizeProcessRequestResponse() : relocalizeProcessRequestResponse(nullptr) {}
  virtual ~relocalizeProcessRequestResponse();
  explicit constexpr relocalizeProcessRequestResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  relocalizeProcessRequestResponse(const relocalizeProcessRequestResponse& from);
  relocalizeProcessRequestResponse(relocalizeProcessRequestResponse&& from) noexcept
    : relocalizeProcessRequestResponse() {
    *this = ::std::move(from);
  }

  inline relocalizeProcessRequestResponse& operator=(const relocalizeProcessRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline relocalizeProcessRequestResponse& operator=(relocalizeProcessRequestResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const relocalizeProcessRequestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const relocalizeProcessRequestResponse* internal_default_instance() {
    return reinterpret_cast<const relocalizeProcessRequestResponse*>(
               &_relocalizeProcessRequestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(relocalizeProcessRequestResponse& a, relocalizeProcessRequestResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(relocalizeProcessRequestResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(relocalizeProcessRequestResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline relocalizeProcessRequestResponse* New() const final {
    return CreateMaybeMessage<relocalizeProcessRequestResponse>(nullptr);
  }

  relocalizeProcessRequestResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<relocalizeProcessRequestResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const relocalizeProcessRequestResponse& from);
  void MergeFrom(const relocalizeProcessRequestResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(relocalizeProcessRequestResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse";
  }
  protected:
  explicit relocalizeProcessRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransform3DStatusFieldNumber = 1,
    kTransform3DFieldNumber = 2,
    kConfidenceFieldNumber = 3,
    kXpcfGrpcReturnValueFieldNumber = 4,
  };
  // bytes transform3DStatus = 1;
  void clear_transform3dstatus();
  const std::string& transform3dstatus() const;
  void set_transform3dstatus(const std::string& value);
  void set_transform3dstatus(std::string&& value);
  void set_transform3dstatus(const char* value);
  void set_transform3dstatus(const void* value, size_t size);
  std::string* mutable_transform3dstatus();
  std::string* release_transform3dstatus();
  void set_allocated_transform3dstatus(std::string* transform3dstatus);
  private:
  const std::string& _internal_transform3dstatus() const;
  void _internal_set_transform3dstatus(const std::string& value);
  std::string* _internal_mutable_transform3dstatus();
  public:

  // bytes transform3D = 2;
  void clear_transform3d();
  const std::string& transform3d() const;
  void set_transform3d(const std::string& value);
  void set_transform3d(std::string&& value);
  void set_transform3d(const char* value);
  void set_transform3d(const void* value, size_t size);
  std::string* mutable_transform3d();
  std::string* release_transform3d();
  void set_allocated_transform3d(std::string* transform3d);
  private:
  const std::string& _internal_transform3d() const;
  void _internal_set_transform3d(const std::string& value);
  std::string* _internal_mutable_transform3d();
  public:

  // bytes confidence = 3;
  void clear_confidence();
  const std::string& confidence() const;
  void set_confidence(const std::string& value);
  void set_confidence(std::string&& value);
  void set_confidence(const char* value);
  void set_confidence(const void* value, size_t size);
  std::string* mutable_confidence();
  std::string* release_confidence();
  void set_allocated_confidence(std::string* confidence);
  private:
  const std::string& _internal_confidence() const;
  void _internal_set_confidence(const std::string& value);
  std::string* _internal_mutable_confidence();
  public:

  // sint32 xpcfGrpcReturnValue = 4;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transform3dstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transform3d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr confidence_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class get3DTransformRequestRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest) */ {
 public:
  inline get3DTransformRequestRequest() : get3DTransformRequestRequest(nullptr) {}
  virtual ~get3DTransformRequestRequest();
  explicit constexpr get3DTransformRequestRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  get3DTransformRequestRequest(const get3DTransformRequestRequest& from);
  get3DTransformRequestRequest(get3DTransformRequestRequest&& from) noexcept
    : get3DTransformRequestRequest() {
    *this = ::std::move(from);
  }

  inline get3DTransformRequestRequest& operator=(const get3DTransformRequestRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline get3DTransformRequestRequest& operator=(get3DTransformRequestRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const get3DTransformRequestRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const get3DTransformRequestRequest* internal_default_instance() {
    return reinterpret_cast<const get3DTransformRequestRequest*>(
               &_get3DTransformRequestRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(get3DTransformRequestRequest& a, get3DTransformRequestRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(get3DTransformRequestRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(get3DTransformRequestRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline get3DTransformRequestRequest* New() const final {
    return CreateMaybeMessage<get3DTransformRequestRequest>(nullptr);
  }

  get3DTransformRequestRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<get3DTransformRequestRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const get3DTransformRequestRequest& from);
  void MergeFrom(const get3DTransformRequestRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(get3DTransformRequestRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest";
  }
  protected:
  explicit get3DTransformRequestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransform3DStatusFieldNumber = 1,
    kTransform3DFieldNumber = 2,
    kConfidenceFieldNumber = 3,
  };
  // bytes transform3DStatus = 1;
  void clear_transform3dstatus();
  const std::string& transform3dstatus() const;
  void set_transform3dstatus(const std::string& value);
  void set_transform3dstatus(std::string&& value);
  void set_transform3dstatus(const char* value);
  void set_transform3dstatus(const void* value, size_t size);
  std::string* mutable_transform3dstatus();
  std::string* release_transform3dstatus();
  void set_allocated_transform3dstatus(std::string* transform3dstatus);
  private:
  const std::string& _internal_transform3dstatus() const;
  void _internal_set_transform3dstatus(const std::string& value);
  std::string* _internal_mutable_transform3dstatus();
  public:

  // bytes transform3D = 2;
  void clear_transform3d();
  const std::string& transform3d() const;
  void set_transform3d(const std::string& value);
  void set_transform3d(std::string&& value);
  void set_transform3d(const char* value);
  void set_transform3d(const void* value, size_t size);
  std::string* mutable_transform3d();
  std::string* release_transform3d();
  void set_allocated_transform3d(std::string* transform3d);
  private:
  const std::string& _internal_transform3d() const;
  void _internal_set_transform3d(const std::string& value);
  std::string* _internal_mutable_transform3d();
  public:

  // bytes confidence = 3;
  void clear_confidence();
  const std::string& confidence() const;
  void set_confidence(const std::string& value);
  void set_confidence(std::string&& value);
  void set_confidence(const char* value);
  void set_confidence(const void* value, size_t size);
  std::string* mutable_confidence();
  std::string* release_confidence();
  void set_allocated_confidence(std::string* confidence);
  private:
  const std::string& _internal_confidence() const;
  void _internal_set_confidence(const std::string& value);
  std::string* _internal_mutable_confidence();
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transform3dstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transform3d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr confidence_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// -------------------------------------------------------------------

class get3DTransformRequestResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse) */ {
 public:
  inline get3DTransformRequestResponse() : get3DTransformRequestResponse(nullptr) {}
  virtual ~get3DTransformRequestResponse();
  explicit constexpr get3DTransformRequestResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  get3DTransformRequestResponse(const get3DTransformRequestResponse& from);
  get3DTransformRequestResponse(get3DTransformRequestResponse&& from) noexcept
    : get3DTransformRequestResponse() {
    *this = ::std::move(from);
  }

  inline get3DTransformRequestResponse& operator=(const get3DTransformRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline get3DTransformRequestResponse& operator=(get3DTransformRequestResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const get3DTransformRequestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const get3DTransformRequestResponse* internal_default_instance() {
    return reinterpret_cast<const get3DTransformRequestResponse*>(
               &_get3DTransformRequestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(get3DTransformRequestResponse& a, get3DTransformRequestResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(get3DTransformRequestResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(get3DTransformRequestResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline get3DTransformRequestResponse* New() const final {
    return CreateMaybeMessage<get3DTransformRequestResponse>(nullptr);
  }

  get3DTransformRequestResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<get3DTransformRequestResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const get3DTransformRequestResponse& from);
  void MergeFrom(const get3DTransformRequestResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(get3DTransformRequestResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse";
  }
  protected:
  explicit get3DTransformRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIAsyncRelocalizationPipelineService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransform3DStatusFieldNumber = 1,
    kTransform3DFieldNumber = 2,
    kConfidenceFieldNumber = 3,
    kXpcfGrpcReturnValueFieldNumber = 4,
  };
  // bytes transform3DStatus = 1;
  void clear_transform3dstatus();
  const std::string& transform3dstatus() const;
  void set_transform3dstatus(const std::string& value);
  void set_transform3dstatus(std::string&& value);
  void set_transform3dstatus(const char* value);
  void set_transform3dstatus(const void* value, size_t size);
  std::string* mutable_transform3dstatus();
  std::string* release_transform3dstatus();
  void set_allocated_transform3dstatus(std::string* transform3dstatus);
  private:
  const std::string& _internal_transform3dstatus() const;
  void _internal_set_transform3dstatus(const std::string& value);
  std::string* _internal_mutable_transform3dstatus();
  public:

  // bytes transform3D = 2;
  void clear_transform3d();
  const std::string& transform3d() const;
  void set_transform3d(const std::string& value);
  void set_transform3d(std::string&& value);
  void set_transform3d(const char* value);
  void set_transform3d(const void* value, size_t size);
  std::string* mutable_transform3d();
  std::string* release_transform3d();
  void set_allocated_transform3d(std::string* transform3d);
  private:
  const std::string& _internal_transform3d() const;
  void _internal_set_transform3d(const std::string& value);
  std::string* _internal_mutable_transform3d();
  public:

  // bytes confidence = 3;
  void clear_confidence();
  const std::string& confidence() const;
  void set_confidence(const std::string& value);
  void set_confidence(std::string&& value);
  void set_confidence(const char* value);
  void set_confidence(const void* value, size_t size);
  std::string* mutable_confidence();
  std::string* release_confidence();
  void set_allocated_confidence(std::string* confidence);
  private:
  const std::string& _internal_confidence() const;
  void _internal_set_confidence(const std::string& value);
  std::string* _internal_mutable_confidence();
  public:

  // sint32 xpcfGrpcReturnValue = 4;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transform3dstatus_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr transform3d_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr confidence_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIAsyncRelocalizationPipelineService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// initResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void initResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 initResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 initResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.initResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void initResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void initResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.initResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// startResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void startResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 startResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 startResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.startResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void startResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void startResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.startResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// stopResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void stopResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 stopResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 stopResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.stopResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void stopResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void stopResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.stopResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// setCameraParametersRequest

// bytes cameraParams = 1;
inline void setCameraParametersRequest::clear_cameraparams() {
  cameraparams_.ClearToEmpty();
}
inline const std::string& setCameraParametersRequest::cameraparams() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest.cameraParams)
  return _internal_cameraparams();
}
inline void setCameraParametersRequest::set_cameraparams(const std::string& value) {
  _internal_set_cameraparams(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest.cameraParams)
}
inline std::string* setCameraParametersRequest::mutable_cameraparams() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest.cameraParams)
  return _internal_mutable_cameraparams();
}
inline const std::string& setCameraParametersRequest::_internal_cameraparams() const {
  return cameraparams_.Get();
}
inline void setCameraParametersRequest::_internal_set_cameraparams(const std::string& value) {
  
  cameraparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void setCameraParametersRequest::set_cameraparams(std::string&& value) {
  
  cameraparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest.cameraParams)
}
inline void setCameraParametersRequest::set_cameraparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cameraparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest.cameraParams)
}
inline void setCameraParametersRequest::set_cameraparams(const void* value,
    size_t size) {
  
  cameraparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest.cameraParams)
}
inline std::string* setCameraParametersRequest::_internal_mutable_cameraparams() {
  
  return cameraparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* setCameraParametersRequest::release_cameraparams() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest.cameraParams)
  return cameraparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void setCameraParametersRequest::set_allocated_cameraparams(std::string* cameraparams) {
  if (cameraparams != nullptr) {
    
  } else {
    
  }
  cameraparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cameraparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.setCameraParametersRequest.cameraParams)
}

// -------------------------------------------------------------------

// setCameraParametersResponse

// sint32 xpcfGrpcReturnValue = 1;
inline void setCameraParametersResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 setCameraParametersResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 setCameraParametersResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.setCameraParametersResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void setCameraParametersResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void setCameraParametersResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.setCameraParametersResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// getCameraParametersRequest

// bytes cameraParams = 1;
inline void getCameraParametersRequest::clear_cameraparams() {
  cameraparams_.ClearToEmpty();
}
inline const std::string& getCameraParametersRequest::cameraparams() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest.cameraParams)
  return _internal_cameraparams();
}
inline void getCameraParametersRequest::set_cameraparams(const std::string& value) {
  _internal_set_cameraparams(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest.cameraParams)
}
inline std::string* getCameraParametersRequest::mutable_cameraparams() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest.cameraParams)
  return _internal_mutable_cameraparams();
}
inline const std::string& getCameraParametersRequest::_internal_cameraparams() const {
  return cameraparams_.Get();
}
inline void getCameraParametersRequest::_internal_set_cameraparams(const std::string& value) {
  
  cameraparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void getCameraParametersRequest::set_cameraparams(std::string&& value) {
  
  cameraparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest.cameraParams)
}
inline void getCameraParametersRequest::set_cameraparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cameraparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest.cameraParams)
}
inline void getCameraParametersRequest::set_cameraparams(const void* value,
    size_t size) {
  
  cameraparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest.cameraParams)
}
inline std::string* getCameraParametersRequest::_internal_mutable_cameraparams() {
  
  return cameraparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* getCameraParametersRequest::release_cameraparams() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest.cameraParams)
  return cameraparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void getCameraParametersRequest::set_allocated_cameraparams(std::string* cameraparams) {
  if (cameraparams != nullptr) {
    
  } else {
    
  }
  cameraparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cameraparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.getCameraParametersRequest.cameraParams)
}

// -------------------------------------------------------------------

// getCameraParametersResponse

// bytes cameraParams = 1;
inline void getCameraParametersResponse::clear_cameraparams() {
  cameraparams_.ClearToEmpty();
}
inline const std::string& getCameraParametersResponse::cameraparams() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.cameraParams)
  return _internal_cameraparams();
}
inline void getCameraParametersResponse::set_cameraparams(const std::string& value) {
  _internal_set_cameraparams(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.cameraParams)
}
inline std::string* getCameraParametersResponse::mutable_cameraparams() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.cameraParams)
  return _internal_mutable_cameraparams();
}
inline const std::string& getCameraParametersResponse::_internal_cameraparams() const {
  return cameraparams_.Get();
}
inline void getCameraParametersResponse::_internal_set_cameraparams(const std::string& value) {
  
  cameraparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void getCameraParametersResponse::set_cameraparams(std::string&& value) {
  
  cameraparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.cameraParams)
}
inline void getCameraParametersResponse::set_cameraparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cameraparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.cameraParams)
}
inline void getCameraParametersResponse::set_cameraparams(const void* value,
    size_t size) {
  
  cameraparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.cameraParams)
}
inline std::string* getCameraParametersResponse::_internal_mutable_cameraparams() {
  
  return cameraparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* getCameraParametersResponse::release_cameraparams() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.cameraParams)
  return cameraparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void getCameraParametersResponse::set_allocated_cameraparams(std::string* cameraparams) {
  if (cameraparams != nullptr) {
    
  } else {
    
  }
  cameraparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cameraparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.cameraParams)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void getCameraParametersResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 getCameraParametersResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 getCameraParametersResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void getCameraParametersResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void getCameraParametersResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.getCameraParametersResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// relocalizeProcessRequestRequest

// bytes image = 1;
inline void relocalizeProcessRequestRequest::clear_image() {
  image_.ClearToEmpty();
}
inline const std::string& relocalizeProcessRequestRequest::image() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.image)
  return _internal_image();
}
inline void relocalizeProcessRequestRequest::set_image(const std::string& value) {
  _internal_set_image(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.image)
}
inline std::string* relocalizeProcessRequestRequest::mutable_image() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.image)
  return _internal_mutable_image();
}
inline const std::string& relocalizeProcessRequestRequest::_internal_image() const {
  return image_.Get();
}
inline void relocalizeProcessRequestRequest::_internal_set_image(const std::string& value) {
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void relocalizeProcessRequestRequest::set_image(std::string&& value) {
  
  image_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.image)
}
inline void relocalizeProcessRequestRequest::set_image(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.image)
}
inline void relocalizeProcessRequestRequest::set_image(const void* value,
    size_t size) {
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.image)
}
inline std::string* relocalizeProcessRequestRequest::_internal_mutable_image() {
  
  return image_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* relocalizeProcessRequestRequest::release_image() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.image)
  return image_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void relocalizeProcessRequestRequest::set_allocated_image(std::string* image) {
  if (image != nullptr) {
    
  } else {
    
  }
  image_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.image)
}

// bytes pose = 2;
inline void relocalizeProcessRequestRequest::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& relocalizeProcessRequestRequest::pose() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.pose)
  return _internal_pose();
}
inline void relocalizeProcessRequestRequest::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.pose)
}
inline std::string* relocalizeProcessRequestRequest::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.pose)
  return _internal_mutable_pose();
}
inline const std::string& relocalizeProcessRequestRequest::_internal_pose() const {
  return pose_.Get();
}
inline void relocalizeProcessRequestRequest::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void relocalizeProcessRequestRequest::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.pose)
}
inline void relocalizeProcessRequestRequest::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.pose)
}
inline void relocalizeProcessRequestRequest::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.pose)
}
inline std::string* relocalizeProcessRequestRequest::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* relocalizeProcessRequestRequest::release_pose() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void relocalizeProcessRequestRequest::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.pose)
}

// bytes timestamp = 3;
inline void relocalizeProcessRequestRequest::clear_timestamp() {
  timestamp_.ClearToEmpty();
}
inline const std::string& relocalizeProcessRequestRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.timestamp)
  return _internal_timestamp();
}
inline void relocalizeProcessRequestRequest::set_timestamp(const std::string& value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.timestamp)
}
inline std::string* relocalizeProcessRequestRequest::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.timestamp)
  return _internal_mutable_timestamp();
}
inline const std::string& relocalizeProcessRequestRequest::_internal_timestamp() const {
  return timestamp_.Get();
}
inline void relocalizeProcessRequestRequest::_internal_set_timestamp(const std::string& value) {
  
  timestamp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void relocalizeProcessRequestRequest::set_timestamp(std::string&& value) {
  
  timestamp_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.timestamp)
}
inline void relocalizeProcessRequestRequest::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  timestamp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.timestamp)
}
inline void relocalizeProcessRequestRequest::set_timestamp(const void* value,
    size_t size) {
  
  timestamp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.timestamp)
}
inline std::string* relocalizeProcessRequestRequest::_internal_mutable_timestamp() {
  
  return timestamp_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* relocalizeProcessRequestRequest::release_timestamp() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.timestamp)
  return timestamp_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void relocalizeProcessRequestRequest::set_allocated_timestamp(std::string* timestamp) {
  if (timestamp != nullptr) {
    
  } else {
    
  }
  timestamp_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), timestamp,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.timestamp)
}

// bytes transform3DStatus = 4;
inline void relocalizeProcessRequestRequest::clear_transform3dstatus() {
  transform3dstatus_.ClearToEmpty();
}
inline const std::string& relocalizeProcessRequestRequest::transform3dstatus() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3DStatus)
  return _internal_transform3dstatus();
}
inline void relocalizeProcessRequestRequest::set_transform3dstatus(const std::string& value) {
  _internal_set_transform3dstatus(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3DStatus)
}
inline std::string* relocalizeProcessRequestRequest::mutable_transform3dstatus() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3DStatus)
  return _internal_mutable_transform3dstatus();
}
inline const std::string& relocalizeProcessRequestRequest::_internal_transform3dstatus() const {
  return transform3dstatus_.Get();
}
inline void relocalizeProcessRequestRequest::_internal_set_transform3dstatus(const std::string& value) {
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void relocalizeProcessRequestRequest::set_transform3dstatus(std::string&& value) {
  
  transform3dstatus_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3DStatus)
}
inline void relocalizeProcessRequestRequest::set_transform3dstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3DStatus)
}
inline void relocalizeProcessRequestRequest::set_transform3dstatus(const void* value,
    size_t size) {
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3DStatus)
}
inline std::string* relocalizeProcessRequestRequest::_internal_mutable_transform3dstatus() {
  
  return transform3dstatus_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* relocalizeProcessRequestRequest::release_transform3dstatus() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3DStatus)
  return transform3dstatus_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void relocalizeProcessRequestRequest::set_allocated_transform3dstatus(std::string* transform3dstatus) {
  if (transform3dstatus != nullptr) {
    
  } else {
    
  }
  transform3dstatus_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transform3dstatus,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3DStatus)
}

// bytes transform3D = 5;
inline void relocalizeProcessRequestRequest::clear_transform3d() {
  transform3d_.ClearToEmpty();
}
inline const std::string& relocalizeProcessRequestRequest::transform3d() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3D)
  return _internal_transform3d();
}
inline void relocalizeProcessRequestRequest::set_transform3d(const std::string& value) {
  _internal_set_transform3d(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3D)
}
inline std::string* relocalizeProcessRequestRequest::mutable_transform3d() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3D)
  return _internal_mutable_transform3d();
}
inline const std::string& relocalizeProcessRequestRequest::_internal_transform3d() const {
  return transform3d_.Get();
}
inline void relocalizeProcessRequestRequest::_internal_set_transform3d(const std::string& value) {
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void relocalizeProcessRequestRequest::set_transform3d(std::string&& value) {
  
  transform3d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3D)
}
inline void relocalizeProcessRequestRequest::set_transform3d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3D)
}
inline void relocalizeProcessRequestRequest::set_transform3d(const void* value,
    size_t size) {
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3D)
}
inline std::string* relocalizeProcessRequestRequest::_internal_mutable_transform3d() {
  
  return transform3d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* relocalizeProcessRequestRequest::release_transform3d() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3D)
  return transform3d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void relocalizeProcessRequestRequest::set_allocated_transform3d(std::string* transform3d) {
  if (transform3d != nullptr) {
    
  } else {
    
  }
  transform3d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transform3d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.transform3D)
}

// bytes confidence = 6;
inline void relocalizeProcessRequestRequest::clear_confidence() {
  confidence_.ClearToEmpty();
}
inline const std::string& relocalizeProcessRequestRequest::confidence() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.confidence)
  return _internal_confidence();
}
inline void relocalizeProcessRequestRequest::set_confidence(const std::string& value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.confidence)
}
inline std::string* relocalizeProcessRequestRequest::mutable_confidence() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.confidence)
  return _internal_mutable_confidence();
}
inline const std::string& relocalizeProcessRequestRequest::_internal_confidence() const {
  return confidence_.Get();
}
inline void relocalizeProcessRequestRequest::_internal_set_confidence(const std::string& value) {
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void relocalizeProcessRequestRequest::set_confidence(std::string&& value) {
  
  confidence_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.confidence)
}
inline void relocalizeProcessRequestRequest::set_confidence(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.confidence)
}
inline void relocalizeProcessRequestRequest::set_confidence(const void* value,
    size_t size) {
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.confidence)
}
inline std::string* relocalizeProcessRequestRequest::_internal_mutable_confidence() {
  
  return confidence_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* relocalizeProcessRequestRequest::release_confidence() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.confidence)
  return confidence_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void relocalizeProcessRequestRequest::set_allocated_confidence(std::string* confidence) {
  if (confidence != nullptr) {
    
  } else {
    
  }
  confidence_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), confidence,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestRequest.confidence)
}

// -------------------------------------------------------------------

// relocalizeProcessRequestResponse

// bytes transform3DStatus = 1;
inline void relocalizeProcessRequestResponse::clear_transform3dstatus() {
  transform3dstatus_.ClearToEmpty();
}
inline const std::string& relocalizeProcessRequestResponse::transform3dstatus() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3DStatus)
  return _internal_transform3dstatus();
}
inline void relocalizeProcessRequestResponse::set_transform3dstatus(const std::string& value) {
  _internal_set_transform3dstatus(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3DStatus)
}
inline std::string* relocalizeProcessRequestResponse::mutable_transform3dstatus() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3DStatus)
  return _internal_mutable_transform3dstatus();
}
inline const std::string& relocalizeProcessRequestResponse::_internal_transform3dstatus() const {
  return transform3dstatus_.Get();
}
inline void relocalizeProcessRequestResponse::_internal_set_transform3dstatus(const std::string& value) {
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void relocalizeProcessRequestResponse::set_transform3dstatus(std::string&& value) {
  
  transform3dstatus_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3DStatus)
}
inline void relocalizeProcessRequestResponse::set_transform3dstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3DStatus)
}
inline void relocalizeProcessRequestResponse::set_transform3dstatus(const void* value,
    size_t size) {
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3DStatus)
}
inline std::string* relocalizeProcessRequestResponse::_internal_mutable_transform3dstatus() {
  
  return transform3dstatus_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* relocalizeProcessRequestResponse::release_transform3dstatus() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3DStatus)
  return transform3dstatus_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void relocalizeProcessRequestResponse::set_allocated_transform3dstatus(std::string* transform3dstatus) {
  if (transform3dstatus != nullptr) {
    
  } else {
    
  }
  transform3dstatus_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transform3dstatus,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3DStatus)
}

// bytes transform3D = 2;
inline void relocalizeProcessRequestResponse::clear_transform3d() {
  transform3d_.ClearToEmpty();
}
inline const std::string& relocalizeProcessRequestResponse::transform3d() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3D)
  return _internal_transform3d();
}
inline void relocalizeProcessRequestResponse::set_transform3d(const std::string& value) {
  _internal_set_transform3d(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3D)
}
inline std::string* relocalizeProcessRequestResponse::mutable_transform3d() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3D)
  return _internal_mutable_transform3d();
}
inline const std::string& relocalizeProcessRequestResponse::_internal_transform3d() const {
  return transform3d_.Get();
}
inline void relocalizeProcessRequestResponse::_internal_set_transform3d(const std::string& value) {
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void relocalizeProcessRequestResponse::set_transform3d(std::string&& value) {
  
  transform3d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3D)
}
inline void relocalizeProcessRequestResponse::set_transform3d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3D)
}
inline void relocalizeProcessRequestResponse::set_transform3d(const void* value,
    size_t size) {
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3D)
}
inline std::string* relocalizeProcessRequestResponse::_internal_mutable_transform3d() {
  
  return transform3d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* relocalizeProcessRequestResponse::release_transform3d() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3D)
  return transform3d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void relocalizeProcessRequestResponse::set_allocated_transform3d(std::string* transform3d) {
  if (transform3d != nullptr) {
    
  } else {
    
  }
  transform3d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transform3d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.transform3D)
}

// bytes confidence = 3;
inline void relocalizeProcessRequestResponse::clear_confidence() {
  confidence_.ClearToEmpty();
}
inline const std::string& relocalizeProcessRequestResponse::confidence() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.confidence)
  return _internal_confidence();
}
inline void relocalizeProcessRequestResponse::set_confidence(const std::string& value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.confidence)
}
inline std::string* relocalizeProcessRequestResponse::mutable_confidence() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.confidence)
  return _internal_mutable_confidence();
}
inline const std::string& relocalizeProcessRequestResponse::_internal_confidence() const {
  return confidence_.Get();
}
inline void relocalizeProcessRequestResponse::_internal_set_confidence(const std::string& value) {
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void relocalizeProcessRequestResponse::set_confidence(std::string&& value) {
  
  confidence_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.confidence)
}
inline void relocalizeProcessRequestResponse::set_confidence(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.confidence)
}
inline void relocalizeProcessRequestResponse::set_confidence(const void* value,
    size_t size) {
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.confidence)
}
inline std::string* relocalizeProcessRequestResponse::_internal_mutable_confidence() {
  
  return confidence_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* relocalizeProcessRequestResponse::release_confidence() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.confidence)
  return confidence_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void relocalizeProcessRequestResponse::set_allocated_confidence(std::string* confidence) {
  if (confidence != nullptr) {
    
  } else {
    
  }
  confidence_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), confidence,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.confidence)
}

// sint32 xpcfGrpcReturnValue = 4;
inline void relocalizeProcessRequestResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 relocalizeProcessRequestResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 relocalizeProcessRequestResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void relocalizeProcessRequestResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void relocalizeProcessRequestResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.relocalizeProcessRequestResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// get3DTransformRequestRequest

// bytes transform3DStatus = 1;
inline void get3DTransformRequestRequest::clear_transform3dstatus() {
  transform3dstatus_.ClearToEmpty();
}
inline const std::string& get3DTransformRequestRequest::transform3dstatus() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3DStatus)
  return _internal_transform3dstatus();
}
inline void get3DTransformRequestRequest::set_transform3dstatus(const std::string& value) {
  _internal_set_transform3dstatus(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3DStatus)
}
inline std::string* get3DTransformRequestRequest::mutable_transform3dstatus() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3DStatus)
  return _internal_mutable_transform3dstatus();
}
inline const std::string& get3DTransformRequestRequest::_internal_transform3dstatus() const {
  return transform3dstatus_.Get();
}
inline void get3DTransformRequestRequest::_internal_set_transform3dstatus(const std::string& value) {
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void get3DTransformRequestRequest::set_transform3dstatus(std::string&& value) {
  
  transform3dstatus_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3DStatus)
}
inline void get3DTransformRequestRequest::set_transform3dstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3DStatus)
}
inline void get3DTransformRequestRequest::set_transform3dstatus(const void* value,
    size_t size) {
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3DStatus)
}
inline std::string* get3DTransformRequestRequest::_internal_mutable_transform3dstatus() {
  
  return transform3dstatus_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* get3DTransformRequestRequest::release_transform3dstatus() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3DStatus)
  return transform3dstatus_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void get3DTransformRequestRequest::set_allocated_transform3dstatus(std::string* transform3dstatus) {
  if (transform3dstatus != nullptr) {
    
  } else {
    
  }
  transform3dstatus_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transform3dstatus,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3DStatus)
}

// bytes transform3D = 2;
inline void get3DTransformRequestRequest::clear_transform3d() {
  transform3d_.ClearToEmpty();
}
inline const std::string& get3DTransformRequestRequest::transform3d() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3D)
  return _internal_transform3d();
}
inline void get3DTransformRequestRequest::set_transform3d(const std::string& value) {
  _internal_set_transform3d(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3D)
}
inline std::string* get3DTransformRequestRequest::mutable_transform3d() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3D)
  return _internal_mutable_transform3d();
}
inline const std::string& get3DTransformRequestRequest::_internal_transform3d() const {
  return transform3d_.Get();
}
inline void get3DTransformRequestRequest::_internal_set_transform3d(const std::string& value) {
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void get3DTransformRequestRequest::set_transform3d(std::string&& value) {
  
  transform3d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3D)
}
inline void get3DTransformRequestRequest::set_transform3d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3D)
}
inline void get3DTransformRequestRequest::set_transform3d(const void* value,
    size_t size) {
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3D)
}
inline std::string* get3DTransformRequestRequest::_internal_mutable_transform3d() {
  
  return transform3d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* get3DTransformRequestRequest::release_transform3d() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3D)
  return transform3d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void get3DTransformRequestRequest::set_allocated_transform3d(std::string* transform3d) {
  if (transform3d != nullptr) {
    
  } else {
    
  }
  transform3d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transform3d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.transform3D)
}

// bytes confidence = 3;
inline void get3DTransformRequestRequest::clear_confidence() {
  confidence_.ClearToEmpty();
}
inline const std::string& get3DTransformRequestRequest::confidence() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.confidence)
  return _internal_confidence();
}
inline void get3DTransformRequestRequest::set_confidence(const std::string& value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.confidence)
}
inline std::string* get3DTransformRequestRequest::mutable_confidence() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.confidence)
  return _internal_mutable_confidence();
}
inline const std::string& get3DTransformRequestRequest::_internal_confidence() const {
  return confidence_.Get();
}
inline void get3DTransformRequestRequest::_internal_set_confidence(const std::string& value) {
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void get3DTransformRequestRequest::set_confidence(std::string&& value) {
  
  confidence_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.confidence)
}
inline void get3DTransformRequestRequest::set_confidence(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.confidence)
}
inline void get3DTransformRequestRequest::set_confidence(const void* value,
    size_t size) {
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.confidence)
}
inline std::string* get3DTransformRequestRequest::_internal_mutable_confidence() {
  
  return confidence_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* get3DTransformRequestRequest::release_confidence() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.confidence)
  return confidence_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void get3DTransformRequestRequest::set_allocated_confidence(std::string* confidence) {
  if (confidence != nullptr) {
    
  } else {
    
  }
  confidence_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), confidence,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.get3DTransformRequestRequest.confidence)
}

// -------------------------------------------------------------------

// get3DTransformRequestResponse

// bytes transform3DStatus = 1;
inline void get3DTransformRequestResponse::clear_transform3dstatus() {
  transform3dstatus_.ClearToEmpty();
}
inline const std::string& get3DTransformRequestResponse::transform3dstatus() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3DStatus)
  return _internal_transform3dstatus();
}
inline void get3DTransformRequestResponse::set_transform3dstatus(const std::string& value) {
  _internal_set_transform3dstatus(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3DStatus)
}
inline std::string* get3DTransformRequestResponse::mutable_transform3dstatus() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3DStatus)
  return _internal_mutable_transform3dstatus();
}
inline const std::string& get3DTransformRequestResponse::_internal_transform3dstatus() const {
  return transform3dstatus_.Get();
}
inline void get3DTransformRequestResponse::_internal_set_transform3dstatus(const std::string& value) {
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void get3DTransformRequestResponse::set_transform3dstatus(std::string&& value) {
  
  transform3dstatus_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3DStatus)
}
inline void get3DTransformRequestResponse::set_transform3dstatus(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3DStatus)
}
inline void get3DTransformRequestResponse::set_transform3dstatus(const void* value,
    size_t size) {
  
  transform3dstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3DStatus)
}
inline std::string* get3DTransformRequestResponse::_internal_mutable_transform3dstatus() {
  
  return transform3dstatus_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* get3DTransformRequestResponse::release_transform3dstatus() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3DStatus)
  return transform3dstatus_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void get3DTransformRequestResponse::set_allocated_transform3dstatus(std::string* transform3dstatus) {
  if (transform3dstatus != nullptr) {
    
  } else {
    
  }
  transform3dstatus_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transform3dstatus,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3DStatus)
}

// bytes transform3D = 2;
inline void get3DTransformRequestResponse::clear_transform3d() {
  transform3d_.ClearToEmpty();
}
inline const std::string& get3DTransformRequestResponse::transform3d() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3D)
  return _internal_transform3d();
}
inline void get3DTransformRequestResponse::set_transform3d(const std::string& value) {
  _internal_set_transform3d(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3D)
}
inline std::string* get3DTransformRequestResponse::mutable_transform3d() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3D)
  return _internal_mutable_transform3d();
}
inline const std::string& get3DTransformRequestResponse::_internal_transform3d() const {
  return transform3d_.Get();
}
inline void get3DTransformRequestResponse::_internal_set_transform3d(const std::string& value) {
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void get3DTransformRequestResponse::set_transform3d(std::string&& value) {
  
  transform3d_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3D)
}
inline void get3DTransformRequestResponse::set_transform3d(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3D)
}
inline void get3DTransformRequestResponse::set_transform3d(const void* value,
    size_t size) {
  
  transform3d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3D)
}
inline std::string* get3DTransformRequestResponse::_internal_mutable_transform3d() {
  
  return transform3d_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* get3DTransformRequestResponse::release_transform3d() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3D)
  return transform3d_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void get3DTransformRequestResponse::set_allocated_transform3d(std::string* transform3d) {
  if (transform3d != nullptr) {
    
  } else {
    
  }
  transform3d_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), transform3d,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.transform3D)
}

// bytes confidence = 3;
inline void get3DTransformRequestResponse::clear_confidence() {
  confidence_.ClearToEmpty();
}
inline const std::string& get3DTransformRequestResponse::confidence() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.confidence)
  return _internal_confidence();
}
inline void get3DTransformRequestResponse::set_confidence(const std::string& value) {
  _internal_set_confidence(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.confidence)
}
inline std::string* get3DTransformRequestResponse::mutable_confidence() {
  // @@protoc_insertion_point(field_mutable:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.confidence)
  return _internal_mutable_confidence();
}
inline const std::string& get3DTransformRequestResponse::_internal_confidence() const {
  return confidence_.Get();
}
inline void get3DTransformRequestResponse::_internal_set_confidence(const std::string& value) {
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void get3DTransformRequestResponse::set_confidence(std::string&& value) {
  
  confidence_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.confidence)
}
inline void get3DTransformRequestResponse::set_confidence(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.confidence)
}
inline void get3DTransformRequestResponse::set_confidence(const void* value,
    size_t size) {
  
  confidence_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.confidence)
}
inline std::string* get3DTransformRequestResponse::_internal_mutable_confidence() {
  
  return confidence_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* get3DTransformRequestResponse::release_confidence() {
  // @@protoc_insertion_point(field_release:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.confidence)
  return confidence_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void get3DTransformRequestResponse::set_allocated_confidence(std::string* confidence) {
  if (confidence != nullptr) {
    
  } else {
    
  }
  confidence_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), confidence,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.confidence)
}

// sint32 xpcfGrpcReturnValue = 4;
inline void get3DTransformRequestResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 get3DTransformRequestResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 get3DTransformRequestResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void get3DTransformRequestResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void get3DTransformRequestResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIAsyncRelocalizationPipeline.get3DTransformRequestResponse.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcIAsyncRelocalizationPipeline

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcIAsyncRelocalizationPipelineService_2eproto
