// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIDepthCameraService.proto

#include "grpcIDepthCameraService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIDepthCamera {
constexpr startResponse::startResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct startResponseDefaultTypeInternal {
  constexpr startResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~startResponseDefaultTypeInternal() {}
  union {
    startResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT startResponseDefaultTypeInternal _startResponse_default_instance_;
constexpr stopResponse::stopResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct stopResponseDefaultTypeInternal {
  constexpr stopResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~stopResponseDefaultTypeInternal() {}
  union {
    stopResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT stopResponseDefaultTypeInternal _stopResponse_default_instance_;
constexpr getNextDepthFrameRequest::getNextDepthFrameRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : img_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getNextDepthFrameRequestDefaultTypeInternal {
  constexpr getNextDepthFrameRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getNextDepthFrameRequestDefaultTypeInternal() {}
  union {
    getNextDepthFrameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getNextDepthFrameRequestDefaultTypeInternal _getNextDepthFrameRequest_default_instance_;
constexpr getNextDepthFrameResponse::getNextDepthFrameResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : img_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getNextDepthFrameResponseDefaultTypeInternal {
  constexpr getNextDepthFrameResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getNextDepthFrameResponseDefaultTypeInternal() {}
  union {
    getNextDepthFrameResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getNextDepthFrameResponseDefaultTypeInternal _getNextDepthFrameResponse_default_instance_;
constexpr getPointCloudRequest::getPointCloudRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getPointCloudRequestDefaultTypeInternal {
  constexpr getPointCloudRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getPointCloudRequestDefaultTypeInternal() {}
  union {
    getPointCloudRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getPointCloudRequestDefaultTypeInternal _getPointCloudRequest_default_instance_;
constexpr getPointCloudResponse::getPointCloudResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getPointCloudResponseDefaultTypeInternal {
  constexpr getPointCloudResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getPointCloudResponseDefaultTypeInternal() {}
  union {
    getPointCloudResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getPointCloudResponseDefaultTypeInternal _getPointCloudResponse_default_instance_;
constexpr setDepthResolutionRequest::setDepthResolutionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resolution_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setDepthResolutionRequestDefaultTypeInternal {
  constexpr setDepthResolutionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setDepthResolutionRequestDefaultTypeInternal() {}
  union {
    setDepthResolutionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setDepthResolutionRequestDefaultTypeInternal _setDepthResolutionRequest_default_instance_;
constexpr setDepthResolutionResponse::setDepthResolutionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct setDepthResolutionResponseDefaultTypeInternal {
  constexpr setDepthResolutionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setDepthResolutionResponseDefaultTypeInternal() {}
  union {
    setDepthResolutionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setDepthResolutionResponseDefaultTypeInternal _setDepthResolutionResponse_default_instance_;
constexpr setIntrinsicDepthParametersRequest::setIntrinsicDepthParametersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : intrinsic_parameters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setIntrinsicDepthParametersRequestDefaultTypeInternal {
  constexpr setIntrinsicDepthParametersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setIntrinsicDepthParametersRequestDefaultTypeInternal() {}
  union {
    setIntrinsicDepthParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setIntrinsicDepthParametersRequestDefaultTypeInternal _setIntrinsicDepthParametersRequest_default_instance_;
constexpr setIntrinsicDepthParametersResponse::setIntrinsicDepthParametersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct setIntrinsicDepthParametersResponseDefaultTypeInternal {
  constexpr setIntrinsicDepthParametersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setIntrinsicDepthParametersResponseDefaultTypeInternal() {}
  union {
    setIntrinsicDepthParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setIntrinsicDepthParametersResponseDefaultTypeInternal _setIntrinsicDepthParametersResponse_default_instance_;
constexpr setDistortionDepthParametersRequest::setDistortionDepthParametersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : distortion_parameters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setDistortionDepthParametersRequestDefaultTypeInternal {
  constexpr setDistortionDepthParametersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setDistortionDepthParametersRequestDefaultTypeInternal() {}
  union {
    setDistortionDepthParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setDistortionDepthParametersRequestDefaultTypeInternal _setDistortionDepthParametersRequest_default_instance_;
constexpr setDistortionDepthParametersResponse::setDistortionDepthParametersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct setDistortionDepthParametersResponseDefaultTypeInternal {
  constexpr setDistortionDepthParametersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setDistortionDepthParametersResponseDefaultTypeInternal() {}
  union {
    setDistortionDepthParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setDistortionDepthParametersResponseDefaultTypeInternal _setDistortionDepthParametersResponse_default_instance_;
constexpr getDepthResolutionResponse::getDepthResolutionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getDepthResolutionResponseDefaultTypeInternal {
  constexpr getDepthResolutionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getDepthResolutionResponseDefaultTypeInternal() {}
  union {
    getDepthResolutionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getDepthResolutionResponseDefaultTypeInternal _getDepthResolutionResponse_default_instance_;
constexpr getDepthMinDistanceResponse::getDepthMinDistanceResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct getDepthMinDistanceResponseDefaultTypeInternal {
  constexpr getDepthMinDistanceResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getDepthMinDistanceResponseDefaultTypeInternal() {}
  union {
    getDepthMinDistanceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getDepthMinDistanceResponseDefaultTypeInternal _getDepthMinDistanceResponse_default_instance_;
constexpr getIntrinsicsDepthParametersResponse::getIntrinsicsDepthParametersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getIntrinsicsDepthParametersResponseDefaultTypeInternal {
  constexpr getIntrinsicsDepthParametersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getIntrinsicsDepthParametersResponseDefaultTypeInternal() {}
  union {
    getIntrinsicsDepthParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getIntrinsicsDepthParametersResponseDefaultTypeInternal _getIntrinsicsDepthParametersResponse_default_instance_;
constexpr getDistortionDepthParametersResponse::getDistortionDepthParametersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getDistortionDepthParametersResponseDefaultTypeInternal {
  constexpr getDistortionDepthParametersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getDistortionDepthParametersResponseDefaultTypeInternal() {}
  union {
    getDistortionDepthParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getDistortionDepthParametersResponseDefaultTypeInternal _getDistortionDepthParametersResponse_default_instance_;
}  // namespace grpcIDepthCamera
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIDepthCameraService_2eproto[16];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIDepthCameraService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIDepthCameraService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIDepthCameraService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::startResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::startResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::stopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::stopResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getNextDepthFrameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getNextDepthFrameRequest, img_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getNextDepthFrameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getNextDepthFrameResponse, img_),
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getNextDepthFrameResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getPointCloudRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getPointCloudRequest, pc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getPointCloudResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getPointCloudResponse, pc_),
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getPointCloudResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setDepthResolutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setDepthResolutionRequest, resolution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setDepthResolutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setDepthResolutionResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setIntrinsicDepthParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setIntrinsicDepthParametersRequest, intrinsic_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setIntrinsicDepthParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setIntrinsicDepthParametersResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setDistortionDepthParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setDistortionDepthParametersRequest, distortion_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setDistortionDepthParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::setDistortionDepthParametersResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getDepthResolutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getDepthResolutionResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getDepthMinDistanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getDepthMinDistanceResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getIntrinsicsDepthParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getIntrinsicsDepthParametersResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getDistortionDepthParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDepthCamera::getDistortionDepthParametersResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIDepthCamera::startResponse)},
  { 6, -1, sizeof(::grpcIDepthCamera::stopResponse)},
  { 12, -1, sizeof(::grpcIDepthCamera::getNextDepthFrameRequest)},
  { 18, -1, sizeof(::grpcIDepthCamera::getNextDepthFrameResponse)},
  { 25, -1, sizeof(::grpcIDepthCamera::getPointCloudRequest)},
  { 31, -1, sizeof(::grpcIDepthCamera::getPointCloudResponse)},
  { 38, -1, sizeof(::grpcIDepthCamera::setDepthResolutionRequest)},
  { 44, -1, sizeof(::grpcIDepthCamera::setDepthResolutionResponse)},
  { 50, -1, sizeof(::grpcIDepthCamera::setIntrinsicDepthParametersRequest)},
  { 56, -1, sizeof(::grpcIDepthCamera::setIntrinsicDepthParametersResponse)},
  { 62, -1, sizeof(::grpcIDepthCamera::setDistortionDepthParametersRequest)},
  { 68, -1, sizeof(::grpcIDepthCamera::setDistortionDepthParametersResponse)},
  { 74, -1, sizeof(::grpcIDepthCamera::getDepthResolutionResponse)},
  { 80, -1, sizeof(::grpcIDepthCamera::getDepthMinDistanceResponse)},
  { 86, -1, sizeof(::grpcIDepthCamera::getIntrinsicsDepthParametersResponse)},
  { 92, -1, sizeof(::grpcIDepthCamera::getDistortionDepthParametersResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_startResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_stopResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_getNextDepthFrameRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_getNextDepthFrameResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_getPointCloudRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_getPointCloudResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_setDepthResolutionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_setDepthResolutionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_setIntrinsicDepthParametersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_setIntrinsicDepthParametersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_setDistortionDepthParametersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_setDistortionDepthParametersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_getDepthResolutionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_getDepthMinDistanceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_getIntrinsicsDepthParametersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDepthCamera::_getDistortionDepthParametersResponse_default_instance_),
};

const char descriptor_table_protodef_grpcIDepthCameraService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035grpcIDepthCameraService.proto\022\020grpcIDe"
  "pthCamera\032\033google/protobuf/empty.proto\","
  "\n\rstartResponse\022\033\n\023xpcfGrpcReturnValue\030\001"
  " \001(\021\"+\n\014stopResponse\022\033\n\023xpcfGrpcReturnVa"
  "lue\030\001 \001(\021\"\'\n\030getNextDepthFrameRequest\022\013\n"
  "\003img\030\001 \001(\014\"E\n\031getNextDepthFrameResponse\022"
  "\013\n\003img\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001("
  "\021\"\"\n\024getPointCloudRequest\022\n\n\002pc\030\001 \001(\014\"@\n"
  "\025getPointCloudResponse\022\n\n\002pc\030\001 \001(\014\022\033\n\023xp"
  "cfGrpcReturnValue\030\002 \001(\021\"/\n\031setDepthResol"
  "utionRequest\022\022\n\nresolution\030\001 \001(\014\"9\n\032setD"
  "epthResolutionResponse\022\033\n\023xpcfGrpcReturn"
  "Value\030\001 \001(\021\"B\n\"setIntrinsicDepthParamete"
  "rsRequest\022\034\n\024intrinsic_parameters\030\001 \001(\014\""
  "B\n#setIntrinsicDepthParametersResponse\022\033"
  "\n\023xpcfGrpcReturnValue\030\001 \001(\021\"D\n#setDistor"
  "tionDepthParametersRequest\022\035\n\025distortion"
  "_parameters\030\001 \001(\014\"C\n$setDistortionDepthP"
  "arametersResponse\022\033\n\023xpcfGrpcReturnValue"
  "\030\001 \001(\021\"9\n\032getDepthResolutionResponse\022\033\n\023"
  "xpcfGrpcReturnValue\030\001 \001(\014\":\n\033getDepthMin"
  "DistanceResponse\022\033\n\023xpcfGrpcReturnValue\030"
  "\001 \001(\002\"C\n$getIntrinsicsDepthParametersRes"
  "ponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\014\"C\n$ge"
  "tDistortionDepthParametersResponse\022\033\n\023xp"
  "cfGrpcReturnValue\030\001 \001(\0142\251\t\n\027grpcIDepthCa"
  "meraService\022B\n\005start\022\026.google.protobuf.E"
  "mpty\032\037.grpcIDepthCamera.startResponse\"\000\022"
  "@\n\004stop\022\026.google.protobuf.Empty\032\036.grpcID"
  "epthCamera.stopResponse\"\000\022n\n\021getNextDept"
  "hFrame\022*.grpcIDepthCamera.getNextDepthFr"
  "ameRequest\032+.grpcIDepthCamera.getNextDep"
  "thFrameResponse\"\000\022b\n\rgetPointCloud\022&.grp"
  "cIDepthCamera.getPointCloudRequest\032\'.grp"
  "cIDepthCamera.getPointCloudResponse\"\000\022q\n"
  "\022setDepthResolution\022+.grpcIDepthCamera.s"
  "etDepthResolutionRequest\032,.grpcIDepthCam"
  "era.setDepthResolutionResponse\"\000\022\214\001\n\033set"
  "IntrinsicDepthParameters\0224.grpcIDepthCam"
  "era.setIntrinsicDepthParametersRequest\0325"
  ".grpcIDepthCamera.setIntrinsicDepthParam"
  "etersResponse\"\000\022\217\001\n\034setDistortionDepthPa"
  "rameters\0225.grpcIDepthCamera.setDistortio"
  "nDepthParametersRequest\0326.grpcIDepthCame"
  "ra.setDistortionDepthParametersResponse\""
  "\000\022\\\n\022getDepthResolution\022\026.google.protobu"
  "f.Empty\032,.grpcIDepthCamera.getDepthResol"
  "utionResponse\"\000\022^\n\023getDepthMinDistance\022\026"
  ".google.protobuf.Empty\032-.grpcIDepthCamer"
  "a.getDepthMinDistanceResponse\"\000\022p\n\034getIn"
  "trinsicsDepthParameters\022\026.google.protobu"
  "f.Empty\0326.grpcIDepthCamera.getIntrinsics"
  "DepthParametersResponse\"\000\022p\n\034getDistorti"
  "onDepthParameters\022\026.google.protobuf.Empt"
  "y\0326.grpcIDepthCamera.getDistortionDepthP"
  "arametersResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIDepthCameraService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIDepthCameraService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIDepthCameraService_2eproto = {
  false, false, 2227, descriptor_table_protodef_grpcIDepthCameraService_2eproto, "grpcIDepthCameraService.proto", 
  &descriptor_table_grpcIDepthCameraService_2eproto_once, descriptor_table_grpcIDepthCameraService_2eproto_deps, 1, 16,
  schemas, file_default_instances, TableStruct_grpcIDepthCameraService_2eproto::offsets,
  file_level_metadata_grpcIDepthCameraService_2eproto, file_level_enum_descriptors_grpcIDepthCameraService_2eproto, file_level_service_descriptors_grpcIDepthCameraService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIDepthCameraService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIDepthCameraService_2eproto);
  return descriptor_table_grpcIDepthCameraService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIDepthCameraService_2eproto(&descriptor_table_grpcIDepthCameraService_2eproto);
namespace grpcIDepthCamera {

// ===================================================================

class startResponse::_Internal {
 public:
};

startResponse::startResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.startResponse)
}
startResponse::startResponse(const startResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.startResponse)
}

void startResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

startResponse::~startResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.startResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void startResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void startResponse::ArenaDtor(void* object) {
  startResponse* _this = reinterpret_cast< startResponse* >(object);
  (void)_this;
}
void startResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void startResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void startResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.startResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* startResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* startResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.startResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.startResponse)
  return target;
}

size_t startResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.startResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void startResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.startResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const startResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<startResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.startResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.startResponse)
    MergeFrom(*source);
  }
}

void startResponse::MergeFrom(const startResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.startResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void startResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.startResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void startResponse::CopyFrom(const startResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.startResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool startResponse::IsInitialized() const {
  return true;
}

void startResponse::InternalSwap(startResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata startResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class stopResponse::_Internal {
 public:
};

stopResponse::stopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.stopResponse)
}
stopResponse::stopResponse(const stopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.stopResponse)
}

void stopResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

stopResponse::~stopResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.stopResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void stopResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void stopResponse::ArenaDtor(void* object) {
  stopResponse* _this = reinterpret_cast< stopResponse* >(object);
  (void)_this;
}
void stopResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void stopResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void stopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.stopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* stopResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* stopResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.stopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.stopResponse)
  return target;
}

size_t stopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.stopResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void stopResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.stopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const stopResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<stopResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.stopResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.stopResponse)
    MergeFrom(*source);
  }
}

void stopResponse::MergeFrom(const stopResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.stopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void stopResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.stopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stopResponse::CopyFrom(const stopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.stopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stopResponse::IsInitialized() const {
  return true;
}

void stopResponse::InternalSwap(stopResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata stopResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getNextDepthFrameRequest::_Internal {
 public:
};

getNextDepthFrameRequest::getNextDepthFrameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.getNextDepthFrameRequest)
}
getNextDepthFrameRequest::getNextDepthFrameRequest(const getNextDepthFrameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_img().empty()) {
    img_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_img(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.getNextDepthFrameRequest)
}

void getNextDepthFrameRequest::SharedCtor() {
img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getNextDepthFrameRequest::~getNextDepthFrameRequest() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.getNextDepthFrameRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getNextDepthFrameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  img_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getNextDepthFrameRequest::ArenaDtor(void* object) {
  getNextDepthFrameRequest* _this = reinterpret_cast< getNextDepthFrameRequest* >(object);
  (void)_this;
}
void getNextDepthFrameRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getNextDepthFrameRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getNextDepthFrameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.getNextDepthFrameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  img_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNextDepthFrameRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes img = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_img();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getNextDepthFrameRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.getNextDepthFrameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes img = 1;
  if (this->img().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_img(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.getNextDepthFrameRequest)
  return target;
}

size_t getNextDepthFrameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.getNextDepthFrameRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes img = 1;
  if (this->img().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_img());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getNextDepthFrameRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.getNextDepthFrameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getNextDepthFrameRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getNextDepthFrameRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.getNextDepthFrameRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.getNextDepthFrameRequest)
    MergeFrom(*source);
  }
}

void getNextDepthFrameRequest::MergeFrom(const getNextDepthFrameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.getNextDepthFrameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.img().size() > 0) {
    _internal_set_img(from._internal_img());
  }
}

void getNextDepthFrameRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.getNextDepthFrameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getNextDepthFrameRequest::CopyFrom(const getNextDepthFrameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.getNextDepthFrameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNextDepthFrameRequest::IsInitialized() const {
  return true;
}

void getNextDepthFrameRequest::InternalSwap(getNextDepthFrameRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  img_.Swap(&other->img_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getNextDepthFrameRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getNextDepthFrameResponse::_Internal {
 public:
};

getNextDepthFrameResponse::getNextDepthFrameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.getNextDepthFrameResponse)
}
getNextDepthFrameResponse::getNextDepthFrameResponse(const getNextDepthFrameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_img().empty()) {
    img_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_img(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.getNextDepthFrameResponse)
}

void getNextDepthFrameResponse::SharedCtor() {
img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getNextDepthFrameResponse::~getNextDepthFrameResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.getNextDepthFrameResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getNextDepthFrameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  img_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getNextDepthFrameResponse::ArenaDtor(void* object) {
  getNextDepthFrameResponse* _this = reinterpret_cast< getNextDepthFrameResponse* >(object);
  (void)_this;
}
void getNextDepthFrameResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getNextDepthFrameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getNextDepthFrameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.getNextDepthFrameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  img_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNextDepthFrameResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes img = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_img();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getNextDepthFrameResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.getNextDepthFrameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes img = 1;
  if (this->img().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_img(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.getNextDepthFrameResponse)
  return target;
}

size_t getNextDepthFrameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.getNextDepthFrameResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes img = 1;
  if (this->img().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_img());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getNextDepthFrameResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.getNextDepthFrameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getNextDepthFrameResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getNextDepthFrameResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.getNextDepthFrameResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.getNextDepthFrameResponse)
    MergeFrom(*source);
  }
}

void getNextDepthFrameResponse::MergeFrom(const getNextDepthFrameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.getNextDepthFrameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.img().size() > 0) {
    _internal_set_img(from._internal_img());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getNextDepthFrameResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.getNextDepthFrameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getNextDepthFrameResponse::CopyFrom(const getNextDepthFrameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.getNextDepthFrameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNextDepthFrameResponse::IsInitialized() const {
  return true;
}

void getNextDepthFrameResponse::InternalSwap(getNextDepthFrameResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  img_.Swap(&other->img_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNextDepthFrameResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getPointCloudRequest::_Internal {
 public:
};

getPointCloudRequest::getPointCloudRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.getPointCloudRequest)
}
getPointCloudRequest::getPointCloudRequest(const getPointCloudRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pc().empty()) {
    pc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pc(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.getPointCloudRequest)
}

void getPointCloudRequest::SharedCtor() {
pc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getPointCloudRequest::~getPointCloudRequest() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.getPointCloudRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getPointCloudRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getPointCloudRequest::ArenaDtor(void* object) {
  getPointCloudRequest* _this = reinterpret_cast< getPointCloudRequest* >(object);
  (void)_this;
}
void getPointCloudRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getPointCloudRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getPointCloudRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.getPointCloudRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pc_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getPointCloudRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes pc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getPointCloudRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.getPointCloudRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pc = 1;
  if (this->pc().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.getPointCloudRequest)
  return target;
}

size_t getPointCloudRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.getPointCloudRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pc = 1;
  if (this->pc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pc());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getPointCloudRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.getPointCloudRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getPointCloudRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getPointCloudRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.getPointCloudRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.getPointCloudRequest)
    MergeFrom(*source);
  }
}

void getPointCloudRequest::MergeFrom(const getPointCloudRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.getPointCloudRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pc().size() > 0) {
    _internal_set_pc(from._internal_pc());
  }
}

void getPointCloudRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.getPointCloudRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getPointCloudRequest::CopyFrom(const getPointCloudRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.getPointCloudRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getPointCloudRequest::IsInitialized() const {
  return true;
}

void getPointCloudRequest::InternalSwap(getPointCloudRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pc_.Swap(&other->pc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getPointCloudRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getPointCloudResponse::_Internal {
 public:
};

getPointCloudResponse::getPointCloudResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.getPointCloudResponse)
}
getPointCloudResponse::getPointCloudResponse(const getPointCloudResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pc().empty()) {
    pc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pc(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.getPointCloudResponse)
}

void getPointCloudResponse::SharedCtor() {
pc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getPointCloudResponse::~getPointCloudResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.getPointCloudResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getPointCloudResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getPointCloudResponse::ArenaDtor(void* object) {
  getPointCloudResponse* _this = reinterpret_cast< getPointCloudResponse* >(object);
  (void)_this;
}
void getPointCloudResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getPointCloudResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getPointCloudResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.getPointCloudResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pc_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getPointCloudResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes pc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getPointCloudResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.getPointCloudResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pc = 1;
  if (this->pc().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pc(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.getPointCloudResponse)
  return target;
}

size_t getPointCloudResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.getPointCloudResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pc = 1;
  if (this->pc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pc());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getPointCloudResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.getPointCloudResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getPointCloudResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getPointCloudResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.getPointCloudResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.getPointCloudResponse)
    MergeFrom(*source);
  }
}

void getPointCloudResponse::MergeFrom(const getPointCloudResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.getPointCloudResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pc().size() > 0) {
    _internal_set_pc(from._internal_pc());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getPointCloudResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.getPointCloudResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getPointCloudResponse::CopyFrom(const getPointCloudResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.getPointCloudResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getPointCloudResponse::IsInitialized() const {
  return true;
}

void getPointCloudResponse::InternalSwap(getPointCloudResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pc_.Swap(&other->pc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getPointCloudResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setDepthResolutionRequest::_Internal {
 public:
};

setDepthResolutionRequest::setDepthResolutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.setDepthResolutionRequest)
}
setDepthResolutionRequest::setDepthResolutionRequest(const setDepthResolutionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resolution_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resolution().empty()) {
    resolution_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resolution(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.setDepthResolutionRequest)
}

void setDepthResolutionRequest::SharedCtor() {
resolution_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setDepthResolutionRequest::~setDepthResolutionRequest() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.setDepthResolutionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setDepthResolutionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  resolution_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setDepthResolutionRequest::ArenaDtor(void* object) {
  setDepthResolutionRequest* _this = reinterpret_cast< setDepthResolutionRequest* >(object);
  (void)_this;
}
void setDepthResolutionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setDepthResolutionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setDepthResolutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.setDepthResolutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resolution_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDepthResolutionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes resolution = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_resolution();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setDepthResolutionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.setDepthResolutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes resolution = 1;
  if (this->resolution().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_resolution(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.setDepthResolutionRequest)
  return target;
}

size_t setDepthResolutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.setDepthResolutionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes resolution = 1;
  if (this->resolution().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_resolution());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setDepthResolutionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.setDepthResolutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setDepthResolutionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setDepthResolutionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.setDepthResolutionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.setDepthResolutionRequest)
    MergeFrom(*source);
  }
}

void setDepthResolutionRequest::MergeFrom(const setDepthResolutionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.setDepthResolutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resolution().size() > 0) {
    _internal_set_resolution(from._internal_resolution());
  }
}

void setDepthResolutionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.setDepthResolutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setDepthResolutionRequest::CopyFrom(const setDepthResolutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.setDepthResolutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDepthResolutionRequest::IsInitialized() const {
  return true;
}

void setDepthResolutionRequest::InternalSwap(setDepthResolutionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resolution_.Swap(&other->resolution_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setDepthResolutionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setDepthResolutionResponse::_Internal {
 public:
};

setDepthResolutionResponse::setDepthResolutionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.setDepthResolutionResponse)
}
setDepthResolutionResponse::setDepthResolutionResponse(const setDepthResolutionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.setDepthResolutionResponse)
}

void setDepthResolutionResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

setDepthResolutionResponse::~setDepthResolutionResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.setDepthResolutionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setDepthResolutionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void setDepthResolutionResponse::ArenaDtor(void* object) {
  setDepthResolutionResponse* _this = reinterpret_cast< setDepthResolutionResponse* >(object);
  (void)_this;
}
void setDepthResolutionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setDepthResolutionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setDepthResolutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.setDepthResolutionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDepthResolutionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setDepthResolutionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.setDepthResolutionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.setDepthResolutionResponse)
  return target;
}

size_t setDepthResolutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.setDepthResolutionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setDepthResolutionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.setDepthResolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const setDepthResolutionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setDepthResolutionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.setDepthResolutionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.setDepthResolutionResponse)
    MergeFrom(*source);
  }
}

void setDepthResolutionResponse::MergeFrom(const setDepthResolutionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.setDepthResolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void setDepthResolutionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.setDepthResolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setDepthResolutionResponse::CopyFrom(const setDepthResolutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.setDepthResolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDepthResolutionResponse::IsInitialized() const {
  return true;
}

void setDepthResolutionResponse::InternalSwap(setDepthResolutionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setDepthResolutionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setIntrinsicDepthParametersRequest::_Internal {
 public:
};

setIntrinsicDepthParametersRequest::setIntrinsicDepthParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
}
setIntrinsicDepthParametersRequest::setIntrinsicDepthParametersRequest(const setIntrinsicDepthParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  intrinsic_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_intrinsic_parameters().empty()) {
    intrinsic_parameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_intrinsic_parameters(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
}

void setIntrinsicDepthParametersRequest::SharedCtor() {
intrinsic_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setIntrinsicDepthParametersRequest::~setIntrinsicDepthParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setIntrinsicDepthParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  intrinsic_parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setIntrinsicDepthParametersRequest::ArenaDtor(void* object) {
  setIntrinsicDepthParametersRequest* _this = reinterpret_cast< setIntrinsicDepthParametersRequest* >(object);
  (void)_this;
}
void setIntrinsicDepthParametersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setIntrinsicDepthParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setIntrinsicDepthParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intrinsic_parameters_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setIntrinsicDepthParametersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes intrinsic_parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_intrinsic_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setIntrinsicDepthParametersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes intrinsic_parameters = 1;
  if (this->intrinsic_parameters().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_intrinsic_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
  return target;
}

size_t setIntrinsicDepthParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes intrinsic_parameters = 1;
  if (this->intrinsic_parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_intrinsic_parameters());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setIntrinsicDepthParametersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setIntrinsicDepthParametersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setIntrinsicDepthParametersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
    MergeFrom(*source);
  }
}

void setIntrinsicDepthParametersRequest::MergeFrom(const setIntrinsicDepthParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.intrinsic_parameters().size() > 0) {
    _internal_set_intrinsic_parameters(from._internal_intrinsic_parameters());
  }
}

void setIntrinsicDepthParametersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setIntrinsicDepthParametersRequest::CopyFrom(const setIntrinsicDepthParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.setIntrinsicDepthParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setIntrinsicDepthParametersRequest::IsInitialized() const {
  return true;
}

void setIntrinsicDepthParametersRequest::InternalSwap(setIntrinsicDepthParametersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  intrinsic_parameters_.Swap(&other->intrinsic_parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setIntrinsicDepthParametersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setIntrinsicDepthParametersResponse::_Internal {
 public:
};

setIntrinsicDepthParametersResponse::setIntrinsicDepthParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
}
setIntrinsicDepthParametersResponse::setIntrinsicDepthParametersResponse(const setIntrinsicDepthParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
}

void setIntrinsicDepthParametersResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

setIntrinsicDepthParametersResponse::~setIntrinsicDepthParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setIntrinsicDepthParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void setIntrinsicDepthParametersResponse::ArenaDtor(void* object) {
  setIntrinsicDepthParametersResponse* _this = reinterpret_cast< setIntrinsicDepthParametersResponse* >(object);
  (void)_this;
}
void setIntrinsicDepthParametersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setIntrinsicDepthParametersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setIntrinsicDepthParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setIntrinsicDepthParametersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setIntrinsicDepthParametersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
  return target;
}

size_t setIntrinsicDepthParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setIntrinsicDepthParametersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const setIntrinsicDepthParametersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setIntrinsicDepthParametersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
    MergeFrom(*source);
  }
}

void setIntrinsicDepthParametersResponse::MergeFrom(const setIntrinsicDepthParametersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void setIntrinsicDepthParametersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setIntrinsicDepthParametersResponse::CopyFrom(const setIntrinsicDepthParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.setIntrinsicDepthParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setIntrinsicDepthParametersResponse::IsInitialized() const {
  return true;
}

void setIntrinsicDepthParametersResponse::InternalSwap(setIntrinsicDepthParametersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setIntrinsicDepthParametersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setDistortionDepthParametersRequest::_Internal {
 public:
};

setDistortionDepthParametersRequest::setDistortionDepthParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.setDistortionDepthParametersRequest)
}
setDistortionDepthParametersRequest::setDistortionDepthParametersRequest(const setDistortionDepthParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  distortion_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_distortion_parameters().empty()) {
    distortion_parameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_distortion_parameters(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.setDistortionDepthParametersRequest)
}

void setDistortionDepthParametersRequest::SharedCtor() {
distortion_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setDistortionDepthParametersRequest::~setDistortionDepthParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.setDistortionDepthParametersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setDistortionDepthParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  distortion_parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setDistortionDepthParametersRequest::ArenaDtor(void* object) {
  setDistortionDepthParametersRequest* _this = reinterpret_cast< setDistortionDepthParametersRequest* >(object);
  (void)_this;
}
void setDistortionDepthParametersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setDistortionDepthParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setDistortionDepthParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.setDistortionDepthParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  distortion_parameters_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDistortionDepthParametersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes distortion_parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_distortion_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setDistortionDepthParametersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.setDistortionDepthParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes distortion_parameters = 1;
  if (this->distortion_parameters().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_distortion_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.setDistortionDepthParametersRequest)
  return target;
}

size_t setDistortionDepthParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.setDistortionDepthParametersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes distortion_parameters = 1;
  if (this->distortion_parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_distortion_parameters());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setDistortionDepthParametersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.setDistortionDepthParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setDistortionDepthParametersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setDistortionDepthParametersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.setDistortionDepthParametersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.setDistortionDepthParametersRequest)
    MergeFrom(*source);
  }
}

void setDistortionDepthParametersRequest::MergeFrom(const setDistortionDepthParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.setDistortionDepthParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.distortion_parameters().size() > 0) {
    _internal_set_distortion_parameters(from._internal_distortion_parameters());
  }
}

void setDistortionDepthParametersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.setDistortionDepthParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setDistortionDepthParametersRequest::CopyFrom(const setDistortionDepthParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.setDistortionDepthParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDistortionDepthParametersRequest::IsInitialized() const {
  return true;
}

void setDistortionDepthParametersRequest::InternalSwap(setDistortionDepthParametersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  distortion_parameters_.Swap(&other->distortion_parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setDistortionDepthParametersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setDistortionDepthParametersResponse::_Internal {
 public:
};

setDistortionDepthParametersResponse::setDistortionDepthParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.setDistortionDepthParametersResponse)
}
setDistortionDepthParametersResponse::setDistortionDepthParametersResponse(const setDistortionDepthParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.setDistortionDepthParametersResponse)
}

void setDistortionDepthParametersResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

setDistortionDepthParametersResponse::~setDistortionDepthParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.setDistortionDepthParametersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setDistortionDepthParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void setDistortionDepthParametersResponse::ArenaDtor(void* object) {
  setDistortionDepthParametersResponse* _this = reinterpret_cast< setDistortionDepthParametersResponse* >(object);
  (void)_this;
}
void setDistortionDepthParametersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setDistortionDepthParametersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setDistortionDepthParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.setDistortionDepthParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDistortionDepthParametersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setDistortionDepthParametersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.setDistortionDepthParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.setDistortionDepthParametersResponse)
  return target;
}

size_t setDistortionDepthParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.setDistortionDepthParametersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setDistortionDepthParametersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.setDistortionDepthParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const setDistortionDepthParametersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setDistortionDepthParametersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.setDistortionDepthParametersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.setDistortionDepthParametersResponse)
    MergeFrom(*source);
  }
}

void setDistortionDepthParametersResponse::MergeFrom(const setDistortionDepthParametersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.setDistortionDepthParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void setDistortionDepthParametersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.setDistortionDepthParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setDistortionDepthParametersResponse::CopyFrom(const setDistortionDepthParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.setDistortionDepthParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDistortionDepthParametersResponse::IsInitialized() const {
  return true;
}

void setDistortionDepthParametersResponse::InternalSwap(setDistortionDepthParametersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setDistortionDepthParametersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getDepthResolutionResponse::_Internal {
 public:
};

getDepthResolutionResponse::getDepthResolutionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.getDepthResolutionResponse)
}
getDepthResolutionResponse::getDepthResolutionResponse(const getDepthResolutionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.getDepthResolutionResponse)
}

void getDepthResolutionResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getDepthResolutionResponse::~getDepthResolutionResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.getDepthResolutionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getDepthResolutionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getDepthResolutionResponse::ArenaDtor(void* object) {
  getDepthResolutionResponse* _this = reinterpret_cast< getDepthResolutionResponse* >(object);
  (void)_this;
}
void getDepthResolutionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getDepthResolutionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getDepthResolutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.getDepthResolutionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDepthResolutionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getDepthResolutionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.getDepthResolutionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.getDepthResolutionResponse)
  return target;
}

size_t getDepthResolutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.getDepthResolutionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getDepthResolutionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.getDepthResolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getDepthResolutionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getDepthResolutionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.getDepthResolutionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.getDepthResolutionResponse)
    MergeFrom(*source);
  }
}

void getDepthResolutionResponse::MergeFrom(const getDepthResolutionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.getDepthResolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getDepthResolutionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.getDepthResolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getDepthResolutionResponse::CopyFrom(const getDepthResolutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.getDepthResolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDepthResolutionResponse::IsInitialized() const {
  return true;
}

void getDepthResolutionResponse::InternalSwap(getDepthResolutionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getDepthResolutionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getDepthMinDistanceResponse::_Internal {
 public:
};

getDepthMinDistanceResponse::getDepthMinDistanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.getDepthMinDistanceResponse)
}
getDepthMinDistanceResponse::getDepthMinDistanceResponse(const getDepthMinDistanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.getDepthMinDistanceResponse)
}

void getDepthMinDistanceResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

getDepthMinDistanceResponse::~getDepthMinDistanceResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.getDepthMinDistanceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getDepthMinDistanceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getDepthMinDistanceResponse::ArenaDtor(void* object) {
  getDepthMinDistanceResponse* _this = reinterpret_cast< getDepthMinDistanceResponse* >(object);
  (void)_this;
}
void getDepthMinDistanceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getDepthMinDistanceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getDepthMinDistanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.getDepthMinDistanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDepthMinDistanceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getDepthMinDistanceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.getDepthMinDistanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float xpcfGrpcReturnValue = 1;
  if (!(this->xpcfgrpcreturnvalue() <= 0 && this->xpcfgrpcreturnvalue() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.getDepthMinDistanceResponse)
  return target;
}

size_t getDepthMinDistanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.getDepthMinDistanceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float xpcfGrpcReturnValue = 1;
  if (!(this->xpcfgrpcreturnvalue() <= 0 && this->xpcfgrpcreturnvalue() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getDepthMinDistanceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.getDepthMinDistanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getDepthMinDistanceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getDepthMinDistanceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.getDepthMinDistanceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.getDepthMinDistanceResponse)
    MergeFrom(*source);
  }
}

void getDepthMinDistanceResponse::MergeFrom(const getDepthMinDistanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.getDepthMinDistanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.xpcfgrpcreturnvalue() <= 0 && from.xpcfgrpcreturnvalue() >= 0)) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getDepthMinDistanceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.getDepthMinDistanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getDepthMinDistanceResponse::CopyFrom(const getDepthMinDistanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.getDepthMinDistanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDepthMinDistanceResponse::IsInitialized() const {
  return true;
}

void getDepthMinDistanceResponse::InternalSwap(getDepthMinDistanceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getDepthMinDistanceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getIntrinsicsDepthParametersResponse::_Internal {
 public:
};

getIntrinsicsDepthParametersResponse::getIntrinsicsDepthParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
}
getIntrinsicsDepthParametersResponse::getIntrinsicsDepthParametersResponse(const getIntrinsicsDepthParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
}

void getIntrinsicsDepthParametersResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getIntrinsicsDepthParametersResponse::~getIntrinsicsDepthParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getIntrinsicsDepthParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getIntrinsicsDepthParametersResponse::ArenaDtor(void* object) {
  getIntrinsicsDepthParametersResponse* _this = reinterpret_cast< getIntrinsicsDepthParametersResponse* >(object);
  (void)_this;
}
void getIntrinsicsDepthParametersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getIntrinsicsDepthParametersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getIntrinsicsDepthParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getIntrinsicsDepthParametersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getIntrinsicsDepthParametersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
  return target;
}

size_t getIntrinsicsDepthParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getIntrinsicsDepthParametersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getIntrinsicsDepthParametersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getIntrinsicsDepthParametersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
    MergeFrom(*source);
  }
}

void getIntrinsicsDepthParametersResponse::MergeFrom(const getIntrinsicsDepthParametersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getIntrinsicsDepthParametersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getIntrinsicsDepthParametersResponse::CopyFrom(const getIntrinsicsDepthParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.getIntrinsicsDepthParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getIntrinsicsDepthParametersResponse::IsInitialized() const {
  return true;
}

void getIntrinsicsDepthParametersResponse::InternalSwap(getIntrinsicsDepthParametersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getIntrinsicsDepthParametersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getDistortionDepthParametersResponse::_Internal {
 public:
};

getDistortionDepthParametersResponse::getDistortionDepthParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDepthCamera.getDistortionDepthParametersResponse)
}
getDistortionDepthParametersResponse::getDistortionDepthParametersResponse(const getDistortionDepthParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDepthCamera.getDistortionDepthParametersResponse)
}

void getDistortionDepthParametersResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getDistortionDepthParametersResponse::~getDistortionDepthParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcIDepthCamera.getDistortionDepthParametersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getDistortionDepthParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getDistortionDepthParametersResponse::ArenaDtor(void* object) {
  getDistortionDepthParametersResponse* _this = reinterpret_cast< getDistortionDepthParametersResponse* >(object);
  (void)_this;
}
void getDistortionDepthParametersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getDistortionDepthParametersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getDistortionDepthParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDepthCamera.getDistortionDepthParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDistortionDepthParametersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getDistortionDepthParametersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDepthCamera.getDistortionDepthParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDepthCamera.getDistortionDepthParametersResponse)
  return target;
}

size_t getDistortionDepthParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDepthCamera.getDistortionDepthParametersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getDistortionDepthParametersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDepthCamera.getDistortionDepthParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getDistortionDepthParametersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getDistortionDepthParametersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDepthCamera.getDistortionDepthParametersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDepthCamera.getDistortionDepthParametersResponse)
    MergeFrom(*source);
  }
}

void getDistortionDepthParametersResponse::MergeFrom(const getDistortionDepthParametersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDepthCamera.getDistortionDepthParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getDistortionDepthParametersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDepthCamera.getDistortionDepthParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getDistortionDepthParametersResponse::CopyFrom(const getDistortionDepthParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDepthCamera.getDistortionDepthParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDistortionDepthParametersResponse::IsInitialized() const {
  return true;
}

void getDistortionDepthParametersResponse::InternalSwap(getDistortionDepthParametersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getDistortionDepthParametersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIDepthCamera
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::startResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::startResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::startResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::stopResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::stopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::stopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::getNextDepthFrameRequest* Arena::CreateMaybeMessage< ::grpcIDepthCamera::getNextDepthFrameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::getNextDepthFrameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::getNextDepthFrameResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::getNextDepthFrameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::getNextDepthFrameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::getPointCloudRequest* Arena::CreateMaybeMessage< ::grpcIDepthCamera::getPointCloudRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::getPointCloudRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::getPointCloudResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::getPointCloudResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::getPointCloudResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::setDepthResolutionRequest* Arena::CreateMaybeMessage< ::grpcIDepthCamera::setDepthResolutionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::setDepthResolutionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::setDepthResolutionResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::setDepthResolutionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::setDepthResolutionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::setIntrinsicDepthParametersRequest* Arena::CreateMaybeMessage< ::grpcIDepthCamera::setIntrinsicDepthParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::setIntrinsicDepthParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::setIntrinsicDepthParametersResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::setIntrinsicDepthParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::setIntrinsicDepthParametersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::setDistortionDepthParametersRequest* Arena::CreateMaybeMessage< ::grpcIDepthCamera::setDistortionDepthParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::setDistortionDepthParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::setDistortionDepthParametersResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::setDistortionDepthParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::setDistortionDepthParametersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::getDepthResolutionResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::getDepthResolutionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::getDepthResolutionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::getDepthMinDistanceResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::getDepthMinDistanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::getDepthMinDistanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::getIntrinsicsDepthParametersResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::getIntrinsicsDepthParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::getIntrinsicsDepthParametersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDepthCamera::getDistortionDepthParametersResponse* Arena::CreateMaybeMessage< ::grpcIDepthCamera::getDistortionDepthParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDepthCamera::getDistortionDepthParametersResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
