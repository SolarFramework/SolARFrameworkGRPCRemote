// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIMatchesOverlayService.proto

#include "grpcIMatchesOverlayService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIMatchesOverlay {
constexpr draw_grpc0Request::draw_grpc0Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : image1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , points_image1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , points_image2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , outimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct draw_grpc0RequestDefaultTypeInternal {
  constexpr draw_grpc0RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~draw_grpc0RequestDefaultTypeInternal() {}
  union {
    draw_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT draw_grpc0RequestDefaultTypeInternal _draw_grpc0Request_default_instance_;
constexpr draw_grpc0Response::draw_grpc0Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : outimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct draw_grpc0ResponseDefaultTypeInternal {
  constexpr draw_grpc0ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~draw_grpc0ResponseDefaultTypeInternal() {}
  union {
    draw_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT draw_grpc0ResponseDefaultTypeInternal _draw_grpc0Response_default_instance_;
constexpr draw_grpc1Request::draw_grpc1Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : image1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , keypoints_image1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , keypoints_image2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , outimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct draw_grpc1RequestDefaultTypeInternal {
  constexpr draw_grpc1RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~draw_grpc1RequestDefaultTypeInternal() {}
  union {
    draw_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT draw_grpc1RequestDefaultTypeInternal _draw_grpc1Request_default_instance_;
constexpr draw_grpc1Response::draw_grpc1Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : outimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct draw_grpc1ResponseDefaultTypeInternal {
  constexpr draw_grpc1ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~draw_grpc1ResponseDefaultTypeInternal() {}
  union {
    draw_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT draw_grpc1ResponseDefaultTypeInternal _draw_grpc1Response_default_instance_;
constexpr draw_grpc2Request::draw_grpc2Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , points_image1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , points_image2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , outimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct draw_grpc2RequestDefaultTypeInternal {
  constexpr draw_grpc2RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~draw_grpc2RequestDefaultTypeInternal() {}
  union {
    draw_grpc2Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT draw_grpc2RequestDefaultTypeInternal _draw_grpc2Request_default_instance_;
constexpr draw_grpc2Response::draw_grpc2Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : outimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct draw_grpc2ResponseDefaultTypeInternal {
  constexpr draw_grpc2ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~draw_grpc2ResponseDefaultTypeInternal() {}
  union {
    draw_grpc2Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT draw_grpc2ResponseDefaultTypeInternal _draw_grpc2Response_default_instance_;
constexpr draw_grpc3Request::draw_grpc3Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , keypoints_image1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , keypoints_image2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , outimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct draw_grpc3RequestDefaultTypeInternal {
  constexpr draw_grpc3RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~draw_grpc3RequestDefaultTypeInternal() {}
  union {
    draw_grpc3Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT draw_grpc3RequestDefaultTypeInternal _draw_grpc3Request_default_instance_;
constexpr draw_grpc3Response::draw_grpc3Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : outimage_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct draw_grpc3ResponseDefaultTypeInternal {
  constexpr draw_grpc3ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~draw_grpc3ResponseDefaultTypeInternal() {}
  union {
    draw_grpc3Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT draw_grpc3ResponseDefaultTypeInternal _draw_grpc3Response_default_instance_;
}  // namespace grpcIMatchesOverlay
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIMatchesOverlayService_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIMatchesOverlayService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIMatchesOverlayService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIMatchesOverlayService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Request, image1_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Request, image2_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Request, points_image1_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Request, points_image2_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Request, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Request, outimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc0Response, outimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Request, image1_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Request, image2_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Request, keypoints_image1_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Request, keypoints_image2_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Request, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Request, outimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc1Response, outimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc2Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc2Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc2Request, image_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc2Request, points_image1_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc2Request, points_image2_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc2Request, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc2Request, outimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc2Response, outimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc3Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc3Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc3Request, image_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc3Request, keypoints_image1_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc3Request, keypoints_image2_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc3Request, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc3Request, outimage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc3Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIMatchesOverlay::draw_grpc3Response, outimage_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIMatchesOverlay::draw_grpc0Request)},
  { 12, -1, sizeof(::grpcIMatchesOverlay::draw_grpc0Response)},
  { 18, -1, sizeof(::grpcIMatchesOverlay::draw_grpc1Request)},
  { 30, -1, sizeof(::grpcIMatchesOverlay::draw_grpc1Response)},
  { 36, -1, sizeof(::grpcIMatchesOverlay::draw_grpc2Request)},
  { 47, -1, sizeof(::grpcIMatchesOverlay::draw_grpc2Response)},
  { 53, -1, sizeof(::grpcIMatchesOverlay::draw_grpc3Request)},
  { 64, -1, sizeof(::grpcIMatchesOverlay::draw_grpc3Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMatchesOverlay::_draw_grpc0Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMatchesOverlay::_draw_grpc0Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMatchesOverlay::_draw_grpc1Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMatchesOverlay::_draw_grpc1Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMatchesOverlay::_draw_grpc2Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMatchesOverlay::_draw_grpc2Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMatchesOverlay::_draw_grpc3Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIMatchesOverlay::_draw_grpc3Response_default_instance_),
};

const char descriptor_table_protodef_grpcIMatchesOverlayService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n grpcIMatchesOverlayService.proto\022\023grpc"
  "IMatchesOverlay\032\033google/protobuf/empty.p"
  "roto\"\251\001\n\021draw_grpc0Request\022#\n\033grpcServer"
  "CompressionFormat\030\001 \001(\005\022\016\n\006image1\030\002 \001(\014\022"
  "\016\n\006image2\030\003 \001(\014\022\025\n\rpoints_image1\030\004 \001(\014\022\025"
  "\n\rpoints_image2\030\005 \001(\014\022\017\n\007matches\030\006 \001(\014\022\020"
  "\n\010outImage\030\007 \001(\014\"&\n\022draw_grpc0Response\022\020"
  "\n\010outImage\030\001 \001(\014\"\257\001\n\021draw_grpc1Request\022#"
  "\n\033grpcServerCompressionFormat\030\001 \001(\005\022\016\n\006i"
  "mage1\030\002 \001(\014\022\016\n\006image2\030\003 \001(\014\022\030\n\020keypoints"
  "_image1\030\004 \001(\014\022\030\n\020keypoints_image2\030\005 \001(\014\022"
  "\017\n\007matches\030\006 \001(\014\022\020\n\010outImage\030\007 \001(\014\"&\n\022dr"
  "aw_grpc1Response\022\020\n\010outImage\030\001 \001(\014\"\230\001\n\021d"
  "raw_grpc2Request\022#\n\033grpcServerCompressio"
  "nFormat\030\001 \001(\005\022\r\n\005image\030\002 \001(\014\022\025\n\rpoints_i"
  "mage1\030\003 \001(\014\022\025\n\rpoints_image2\030\004 \001(\014\022\017\n\007ma"
  "tches\030\005 \001(\014\022\020\n\010outImage\030\006 \001(\014\"&\n\022draw_gr"
  "pc2Response\022\020\n\010outImage\030\001 \001(\014\"\236\001\n\021draw_g"
  "rpc3Request\022#\n\033grpcServerCompressionForm"
  "at\030\001 \001(\005\022\r\n\005image\030\002 \001(\014\022\030\n\020keypoints_ima"
  "ge1\030\003 \001(\014\022\030\n\020keypoints_image2\030\004 \001(\014\022\017\n\007m"
  "atches\030\005 \001(\014\022\020\n\010outImage\030\006 \001(\014\"&\n\022draw_g"
  "rpc3Response\022\020\n\010outImage\030\001 \001(\0142\240\003\n\032grpcI"
  "MatchesOverlayService\022_\n\ndraw_grpc0\022&.gr"
  "pcIMatchesOverlay.draw_grpc0Request\032\'.gr"
  "pcIMatchesOverlay.draw_grpc0Response\"\000\022_"
  "\n\ndraw_grpc1\022&.grpcIMatchesOverlay.draw_"
  "grpc1Request\032\'.grpcIMatchesOverlay.draw_"
  "grpc1Response\"\000\022_\n\ndraw_grpc2\022&.grpcIMat"
  "chesOverlay.draw_grpc2Request\032\'.grpcIMat"
  "chesOverlay.draw_grpc2Response\"\000\022_\n\ndraw"
  "_grpc3\022&.grpcIMatchesOverlay.draw_grpc3R"
  "equest\032\'.grpcIMatchesOverlay.draw_grpc3R"
  "esponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIMatchesOverlayService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIMatchesOverlayService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIMatchesOverlayService_2eproto = {
  false, false, 1337, descriptor_table_protodef_grpcIMatchesOverlayService_2eproto, "grpcIMatchesOverlayService.proto", 
  &descriptor_table_grpcIMatchesOverlayService_2eproto_once, descriptor_table_grpcIMatchesOverlayService_2eproto_deps, 1, 8,
  schemas, file_default_instances, TableStruct_grpcIMatchesOverlayService_2eproto::offsets,
  file_level_metadata_grpcIMatchesOverlayService_2eproto, file_level_enum_descriptors_grpcIMatchesOverlayService_2eproto, file_level_service_descriptors_grpcIMatchesOverlayService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIMatchesOverlayService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIMatchesOverlayService_2eproto);
  return descriptor_table_grpcIMatchesOverlayService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIMatchesOverlayService_2eproto(&descriptor_table_grpcIMatchesOverlayService_2eproto);
namespace grpcIMatchesOverlay {

// ===================================================================

class draw_grpc0Request::_Internal {
 public:
};

draw_grpc0Request::draw_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMatchesOverlay.draw_grpc0Request)
}
draw_grpc0Request::draw_grpc0Request(const draw_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image1().empty()) {
    image1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image1(), 
      GetArena());
  }
  image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image2().empty()) {
    image2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image2(), 
      GetArena());
  }
  points_image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_points_image1().empty()) {
    points_image1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_points_image1(), 
      GetArena());
  }
  points_image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_points_image2().empty()) {
    points_image2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_points_image2(), 
      GetArena());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outimage().empty()) {
    outimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outimage(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMatchesOverlay.draw_grpc0Request)
}

void draw_grpc0Request::SharedCtor() {
image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
points_image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
points_image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

draw_grpc0Request::~draw_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIMatchesOverlay.draw_grpc0Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void draw_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  points_image1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  points_image2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  outimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void draw_grpc0Request::ArenaDtor(void* object) {
  draw_grpc0Request* _this = reinterpret_cast< draw_grpc0Request* >(object);
  (void)_this;
}
void draw_grpc0Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void draw_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void draw_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMatchesOverlay.draw_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image1_.ClearToEmpty();
  image2_.ClearToEmpty();
  points_image1_.ClearToEmpty();
  points_image2_.ClearToEmpty();
  matches_.ClearToEmpty();
  outimage_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* draw_grpc0Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_image2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes points_image1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_points_image1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes points_image2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_points_image2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes matches = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes outImage = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_outimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* draw_grpc0Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMatchesOverlay.draw_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes image1 = 2;
  if (this->image1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image1(), target);
  }

  // bytes image2 = 3;
  if (this->image2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_image2(), target);
  }

  // bytes points_image1 = 4;
  if (this->points_image1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_points_image1(), target);
  }

  // bytes points_image2 = 5;
  if (this->points_image2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_points_image2(), target);
  }

  // bytes matches = 6;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_matches(), target);
  }

  // bytes outImage = 7;
  if (this->outimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_outimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMatchesOverlay.draw_grpc0Request)
  return target;
}

size_t draw_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMatchesOverlay.draw_grpc0Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes image1 = 2;
  if (this->image1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image1());
  }

  // bytes image2 = 3;
  if (this->image2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image2());
  }

  // bytes points_image1 = 4;
  if (this->points_image1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points_image1());
  }

  // bytes points_image2 = 5;
  if (this->points_image2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points_image2());
  }

  // bytes matches = 6;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes outImage = 7;
  if (this->outimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outimage());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void draw_grpc0Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMatchesOverlay.draw_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  const draw_grpc0Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<draw_grpc0Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMatchesOverlay.draw_grpc0Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMatchesOverlay.draw_grpc0Request)
    MergeFrom(*source);
  }
}

void draw_grpc0Request::MergeFrom(const draw_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMatchesOverlay.draw_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image1().size() > 0) {
    _internal_set_image1(from._internal_image1());
  }
  if (from.image2().size() > 0) {
    _internal_set_image2(from._internal_image2());
  }
  if (from.points_image1().size() > 0) {
    _internal_set_points_image1(from._internal_points_image1());
  }
  if (from.points_image2().size() > 0) {
    _internal_set_points_image2(from._internal_points_image2());
  }
  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.outimage().size() > 0) {
    _internal_set_outimage(from._internal_outimage());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void draw_grpc0Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMatchesOverlay.draw_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void draw_grpc0Request::CopyFrom(const draw_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMatchesOverlay.draw_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool draw_grpc0Request::IsInitialized() const {
  return true;
}

void draw_grpc0Request::InternalSwap(draw_grpc0Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image1_.Swap(&other->image1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image2_.Swap(&other->image2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  points_image1_.Swap(&other->points_image1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  points_image2_.Swap(&other->points_image2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  outimage_.Swap(&other->outimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata draw_grpc0Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class draw_grpc0Response::_Internal {
 public:
};

draw_grpc0Response::draw_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMatchesOverlay.draw_grpc0Response)
}
draw_grpc0Response::draw_grpc0Response(const draw_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outimage().empty()) {
    outimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outimage(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIMatchesOverlay.draw_grpc0Response)
}

void draw_grpc0Response::SharedCtor() {
outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

draw_grpc0Response::~draw_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIMatchesOverlay.draw_grpc0Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void draw_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  outimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void draw_grpc0Response::ArenaDtor(void* object) {
  draw_grpc0Response* _this = reinterpret_cast< draw_grpc0Response* >(object);
  (void)_this;
}
void draw_grpc0Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void draw_grpc0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void draw_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMatchesOverlay.draw_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* draw_grpc0Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes outImage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_outimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* draw_grpc0Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMatchesOverlay.draw_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes outImage = 1;
  if (this->outimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_outimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMatchesOverlay.draw_grpc0Response)
  return target;
}

size_t draw_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMatchesOverlay.draw_grpc0Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes outImage = 1;
  if (this->outimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void draw_grpc0Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMatchesOverlay.draw_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  const draw_grpc0Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<draw_grpc0Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMatchesOverlay.draw_grpc0Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMatchesOverlay.draw_grpc0Response)
    MergeFrom(*source);
  }
}

void draw_grpc0Response::MergeFrom(const draw_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMatchesOverlay.draw_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.outimage().size() > 0) {
    _internal_set_outimage(from._internal_outimage());
  }
}

void draw_grpc0Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMatchesOverlay.draw_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void draw_grpc0Response::CopyFrom(const draw_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMatchesOverlay.draw_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool draw_grpc0Response::IsInitialized() const {
  return true;
}

void draw_grpc0Response::InternalSwap(draw_grpc0Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  outimage_.Swap(&other->outimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata draw_grpc0Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class draw_grpc1Request::_Internal {
 public:
};

draw_grpc1Request::draw_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMatchesOverlay.draw_grpc1Request)
}
draw_grpc1Request::draw_grpc1Request(const draw_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image1().empty()) {
    image1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image1(), 
      GetArena());
  }
  image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image2().empty()) {
    image2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image2(), 
      GetArena());
  }
  keypoints_image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keypoints_image1().empty()) {
    keypoints_image1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keypoints_image1(), 
      GetArena());
  }
  keypoints_image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keypoints_image2().empty()) {
    keypoints_image2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keypoints_image2(), 
      GetArena());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outimage().empty()) {
    outimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outimage(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMatchesOverlay.draw_grpc1Request)
}

void draw_grpc1Request::SharedCtor() {
image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
keypoints_image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
keypoints_image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

draw_grpc1Request::~draw_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIMatchesOverlay.draw_grpc1Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void draw_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keypoints_image1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keypoints_image2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  outimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void draw_grpc1Request::ArenaDtor(void* object) {
  draw_grpc1Request* _this = reinterpret_cast< draw_grpc1Request* >(object);
  (void)_this;
}
void draw_grpc1Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void draw_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void draw_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMatchesOverlay.draw_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image1_.ClearToEmpty();
  image2_.ClearToEmpty();
  keypoints_image1_.ClearToEmpty();
  keypoints_image2_.ClearToEmpty();
  matches_.ClearToEmpty();
  outimage_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* draw_grpc1Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_image2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keypoints_image1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_keypoints_image1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keypoints_image2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_keypoints_image2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes matches = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes outImage = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_outimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* draw_grpc1Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMatchesOverlay.draw_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes image1 = 2;
  if (this->image1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image1(), target);
  }

  // bytes image2 = 3;
  if (this->image2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_image2(), target);
  }

  // bytes keypoints_image1 = 4;
  if (this->keypoints_image1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_keypoints_image1(), target);
  }

  // bytes keypoints_image2 = 5;
  if (this->keypoints_image2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_keypoints_image2(), target);
  }

  // bytes matches = 6;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_matches(), target);
  }

  // bytes outImage = 7;
  if (this->outimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_outimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMatchesOverlay.draw_grpc1Request)
  return target;
}

size_t draw_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMatchesOverlay.draw_grpc1Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes image1 = 2;
  if (this->image1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image1());
  }

  // bytes image2 = 3;
  if (this->image2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image2());
  }

  // bytes keypoints_image1 = 4;
  if (this->keypoints_image1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints_image1());
  }

  // bytes keypoints_image2 = 5;
  if (this->keypoints_image2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints_image2());
  }

  // bytes matches = 6;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes outImage = 7;
  if (this->outimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outimage());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void draw_grpc1Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMatchesOverlay.draw_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  const draw_grpc1Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<draw_grpc1Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMatchesOverlay.draw_grpc1Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMatchesOverlay.draw_grpc1Request)
    MergeFrom(*source);
  }
}

void draw_grpc1Request::MergeFrom(const draw_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMatchesOverlay.draw_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image1().size() > 0) {
    _internal_set_image1(from._internal_image1());
  }
  if (from.image2().size() > 0) {
    _internal_set_image2(from._internal_image2());
  }
  if (from.keypoints_image1().size() > 0) {
    _internal_set_keypoints_image1(from._internal_keypoints_image1());
  }
  if (from.keypoints_image2().size() > 0) {
    _internal_set_keypoints_image2(from._internal_keypoints_image2());
  }
  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.outimage().size() > 0) {
    _internal_set_outimage(from._internal_outimage());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void draw_grpc1Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMatchesOverlay.draw_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void draw_grpc1Request::CopyFrom(const draw_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMatchesOverlay.draw_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool draw_grpc1Request::IsInitialized() const {
  return true;
}

void draw_grpc1Request::InternalSwap(draw_grpc1Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image1_.Swap(&other->image1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image2_.Swap(&other->image2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  keypoints_image1_.Swap(&other->keypoints_image1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  keypoints_image2_.Swap(&other->keypoints_image2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  outimage_.Swap(&other->outimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata draw_grpc1Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class draw_grpc1Response::_Internal {
 public:
};

draw_grpc1Response::draw_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMatchesOverlay.draw_grpc1Response)
}
draw_grpc1Response::draw_grpc1Response(const draw_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outimage().empty()) {
    outimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outimage(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIMatchesOverlay.draw_grpc1Response)
}

void draw_grpc1Response::SharedCtor() {
outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

draw_grpc1Response::~draw_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIMatchesOverlay.draw_grpc1Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void draw_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  outimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void draw_grpc1Response::ArenaDtor(void* object) {
  draw_grpc1Response* _this = reinterpret_cast< draw_grpc1Response* >(object);
  (void)_this;
}
void draw_grpc1Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void draw_grpc1Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void draw_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMatchesOverlay.draw_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* draw_grpc1Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes outImage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_outimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* draw_grpc1Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMatchesOverlay.draw_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes outImage = 1;
  if (this->outimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_outimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMatchesOverlay.draw_grpc1Response)
  return target;
}

size_t draw_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMatchesOverlay.draw_grpc1Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes outImage = 1;
  if (this->outimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void draw_grpc1Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMatchesOverlay.draw_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  const draw_grpc1Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<draw_grpc1Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMatchesOverlay.draw_grpc1Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMatchesOverlay.draw_grpc1Response)
    MergeFrom(*source);
  }
}

void draw_grpc1Response::MergeFrom(const draw_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMatchesOverlay.draw_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.outimage().size() > 0) {
    _internal_set_outimage(from._internal_outimage());
  }
}

void draw_grpc1Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMatchesOverlay.draw_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void draw_grpc1Response::CopyFrom(const draw_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMatchesOverlay.draw_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool draw_grpc1Response::IsInitialized() const {
  return true;
}

void draw_grpc1Response::InternalSwap(draw_grpc1Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  outimage_.Swap(&other->outimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata draw_grpc1Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class draw_grpc2Request::_Internal {
 public:
};

draw_grpc2Request::draw_grpc2Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMatchesOverlay.draw_grpc2Request)
}
draw_grpc2Request::draw_grpc2Request(const draw_grpc2Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArena());
  }
  points_image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_points_image1().empty()) {
    points_image1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_points_image1(), 
      GetArena());
  }
  points_image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_points_image2().empty()) {
    points_image2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_points_image2(), 
      GetArena());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outimage().empty()) {
    outimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outimage(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMatchesOverlay.draw_grpc2Request)
}

void draw_grpc2Request::SharedCtor() {
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
points_image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
points_image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

draw_grpc2Request::~draw_grpc2Request() {
  // @@protoc_insertion_point(destructor:grpcIMatchesOverlay.draw_grpc2Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void draw_grpc2Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  points_image1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  points_image2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  outimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void draw_grpc2Request::ArenaDtor(void* object) {
  draw_grpc2Request* _this = reinterpret_cast< draw_grpc2Request* >(object);
  (void)_this;
}
void draw_grpc2Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void draw_grpc2Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void draw_grpc2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMatchesOverlay.draw_grpc2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_.ClearToEmpty();
  points_image1_.ClearToEmpty();
  points_image2_.ClearToEmpty();
  matches_.ClearToEmpty();
  outimage_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* draw_grpc2Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes points_image1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_points_image1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes points_image2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_points_image2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes matches = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes outImage = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_outimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* draw_grpc2Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMatchesOverlay.draw_grpc2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image(), target);
  }

  // bytes points_image1 = 3;
  if (this->points_image1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_points_image1(), target);
  }

  // bytes points_image2 = 4;
  if (this->points_image2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_points_image2(), target);
  }

  // bytes matches = 5;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_matches(), target);
  }

  // bytes outImage = 6;
  if (this->outimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_outimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMatchesOverlay.draw_grpc2Request)
  return target;
}

size_t draw_grpc2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMatchesOverlay.draw_grpc2Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image());
  }

  // bytes points_image1 = 3;
  if (this->points_image1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points_image1());
  }

  // bytes points_image2 = 4;
  if (this->points_image2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points_image2());
  }

  // bytes matches = 5;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes outImage = 6;
  if (this->outimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outimage());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void draw_grpc2Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMatchesOverlay.draw_grpc2Request)
  GOOGLE_DCHECK_NE(&from, this);
  const draw_grpc2Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<draw_grpc2Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMatchesOverlay.draw_grpc2Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMatchesOverlay.draw_grpc2Request)
    MergeFrom(*source);
  }
}

void draw_grpc2Request::MergeFrom(const draw_grpc2Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMatchesOverlay.draw_grpc2Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image().size() > 0) {
    _internal_set_image(from._internal_image());
  }
  if (from.points_image1().size() > 0) {
    _internal_set_points_image1(from._internal_points_image1());
  }
  if (from.points_image2().size() > 0) {
    _internal_set_points_image2(from._internal_points_image2());
  }
  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.outimage().size() > 0) {
    _internal_set_outimage(from._internal_outimage());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void draw_grpc2Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMatchesOverlay.draw_grpc2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void draw_grpc2Request::CopyFrom(const draw_grpc2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMatchesOverlay.draw_grpc2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool draw_grpc2Request::IsInitialized() const {
  return true;
}

void draw_grpc2Request::InternalSwap(draw_grpc2Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_.Swap(&other->image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  points_image1_.Swap(&other->points_image1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  points_image2_.Swap(&other->points_image2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  outimage_.Swap(&other->outimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata draw_grpc2Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class draw_grpc2Response::_Internal {
 public:
};

draw_grpc2Response::draw_grpc2Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMatchesOverlay.draw_grpc2Response)
}
draw_grpc2Response::draw_grpc2Response(const draw_grpc2Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outimage().empty()) {
    outimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outimage(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIMatchesOverlay.draw_grpc2Response)
}

void draw_grpc2Response::SharedCtor() {
outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

draw_grpc2Response::~draw_grpc2Response() {
  // @@protoc_insertion_point(destructor:grpcIMatchesOverlay.draw_grpc2Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void draw_grpc2Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  outimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void draw_grpc2Response::ArenaDtor(void* object) {
  draw_grpc2Response* _this = reinterpret_cast< draw_grpc2Response* >(object);
  (void)_this;
}
void draw_grpc2Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void draw_grpc2Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void draw_grpc2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMatchesOverlay.draw_grpc2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* draw_grpc2Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes outImage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_outimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* draw_grpc2Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMatchesOverlay.draw_grpc2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes outImage = 1;
  if (this->outimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_outimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMatchesOverlay.draw_grpc2Response)
  return target;
}

size_t draw_grpc2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMatchesOverlay.draw_grpc2Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes outImage = 1;
  if (this->outimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void draw_grpc2Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMatchesOverlay.draw_grpc2Response)
  GOOGLE_DCHECK_NE(&from, this);
  const draw_grpc2Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<draw_grpc2Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMatchesOverlay.draw_grpc2Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMatchesOverlay.draw_grpc2Response)
    MergeFrom(*source);
  }
}

void draw_grpc2Response::MergeFrom(const draw_grpc2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMatchesOverlay.draw_grpc2Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.outimage().size() > 0) {
    _internal_set_outimage(from._internal_outimage());
  }
}

void draw_grpc2Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMatchesOverlay.draw_grpc2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void draw_grpc2Response::CopyFrom(const draw_grpc2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMatchesOverlay.draw_grpc2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool draw_grpc2Response::IsInitialized() const {
  return true;
}

void draw_grpc2Response::InternalSwap(draw_grpc2Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  outimage_.Swap(&other->outimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata draw_grpc2Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class draw_grpc3Request::_Internal {
 public:
};

draw_grpc3Request::draw_grpc3Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMatchesOverlay.draw_grpc3Request)
}
draw_grpc3Request::draw_grpc3Request(const draw_grpc3Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArena());
  }
  keypoints_image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keypoints_image1().empty()) {
    keypoints_image1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keypoints_image1(), 
      GetArena());
  }
  keypoints_image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keypoints_image2().empty()) {
    keypoints_image2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keypoints_image2(), 
      GetArena());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outimage().empty()) {
    outimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outimage(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIMatchesOverlay.draw_grpc3Request)
}

void draw_grpc3Request::SharedCtor() {
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
keypoints_image1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
keypoints_image2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

draw_grpc3Request::~draw_grpc3Request() {
  // @@protoc_insertion_point(destructor:grpcIMatchesOverlay.draw_grpc3Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void draw_grpc3Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keypoints_image1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keypoints_image2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  outimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void draw_grpc3Request::ArenaDtor(void* object) {
  draw_grpc3Request* _this = reinterpret_cast< draw_grpc3Request* >(object);
  (void)_this;
}
void draw_grpc3Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void draw_grpc3Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void draw_grpc3Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMatchesOverlay.draw_grpc3Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_.ClearToEmpty();
  keypoints_image1_.ClearToEmpty();
  keypoints_image2_.ClearToEmpty();
  matches_.ClearToEmpty();
  outimage_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* draw_grpc3Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keypoints_image1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_keypoints_image1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes keypoints_image2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_keypoints_image2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes matches = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes outImage = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_outimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* draw_grpc3Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMatchesOverlay.draw_grpc3Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image(), target);
  }

  // bytes keypoints_image1 = 3;
  if (this->keypoints_image1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_keypoints_image1(), target);
  }

  // bytes keypoints_image2 = 4;
  if (this->keypoints_image2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_keypoints_image2(), target);
  }

  // bytes matches = 5;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_matches(), target);
  }

  // bytes outImage = 6;
  if (this->outimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_outimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMatchesOverlay.draw_grpc3Request)
  return target;
}

size_t draw_grpc3Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMatchesOverlay.draw_grpc3Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image());
  }

  // bytes keypoints_image1 = 3;
  if (this->keypoints_image1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints_image1());
  }

  // bytes keypoints_image2 = 4;
  if (this->keypoints_image2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints_image2());
  }

  // bytes matches = 5;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // bytes outImage = 6;
  if (this->outimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outimage());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void draw_grpc3Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMatchesOverlay.draw_grpc3Request)
  GOOGLE_DCHECK_NE(&from, this);
  const draw_grpc3Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<draw_grpc3Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMatchesOverlay.draw_grpc3Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMatchesOverlay.draw_grpc3Request)
    MergeFrom(*source);
  }
}

void draw_grpc3Request::MergeFrom(const draw_grpc3Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMatchesOverlay.draw_grpc3Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image().size() > 0) {
    _internal_set_image(from._internal_image());
  }
  if (from.keypoints_image1().size() > 0) {
    _internal_set_keypoints_image1(from._internal_keypoints_image1());
  }
  if (from.keypoints_image2().size() > 0) {
    _internal_set_keypoints_image2(from._internal_keypoints_image2());
  }
  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.outimage().size() > 0) {
    _internal_set_outimage(from._internal_outimage());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void draw_grpc3Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMatchesOverlay.draw_grpc3Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void draw_grpc3Request::CopyFrom(const draw_grpc3Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMatchesOverlay.draw_grpc3Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool draw_grpc3Request::IsInitialized() const {
  return true;
}

void draw_grpc3Request::InternalSwap(draw_grpc3Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_.Swap(&other->image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  keypoints_image1_.Swap(&other->keypoints_image1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  keypoints_image2_.Swap(&other->keypoints_image2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  outimage_.Swap(&other->outimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata draw_grpc3Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class draw_grpc3Response::_Internal {
 public:
};

draw_grpc3Response::draw_grpc3Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIMatchesOverlay.draw_grpc3Response)
}
draw_grpc3Response::draw_grpc3Response(const draw_grpc3Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outimage().empty()) {
    outimage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_outimage(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIMatchesOverlay.draw_grpc3Response)
}

void draw_grpc3Response::SharedCtor() {
outimage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

draw_grpc3Response::~draw_grpc3Response() {
  // @@protoc_insertion_point(destructor:grpcIMatchesOverlay.draw_grpc3Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void draw_grpc3Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  outimage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void draw_grpc3Response::ArenaDtor(void* object) {
  draw_grpc3Response* _this = reinterpret_cast< draw_grpc3Response* >(object);
  (void)_this;
}
void draw_grpc3Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void draw_grpc3Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void draw_grpc3Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIMatchesOverlay.draw_grpc3Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outimage_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* draw_grpc3Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes outImage = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_outimage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* draw_grpc3Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIMatchesOverlay.draw_grpc3Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes outImage = 1;
  if (this->outimage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_outimage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIMatchesOverlay.draw_grpc3Response)
  return target;
}

size_t draw_grpc3Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIMatchesOverlay.draw_grpc3Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes outImage = 1;
  if (this->outimage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_outimage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void draw_grpc3Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIMatchesOverlay.draw_grpc3Response)
  GOOGLE_DCHECK_NE(&from, this);
  const draw_grpc3Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<draw_grpc3Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIMatchesOverlay.draw_grpc3Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIMatchesOverlay.draw_grpc3Response)
    MergeFrom(*source);
  }
}

void draw_grpc3Response::MergeFrom(const draw_grpc3Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIMatchesOverlay.draw_grpc3Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.outimage().size() > 0) {
    _internal_set_outimage(from._internal_outimage());
  }
}

void draw_grpc3Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIMatchesOverlay.draw_grpc3Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void draw_grpc3Response::CopyFrom(const draw_grpc3Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIMatchesOverlay.draw_grpc3Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool draw_grpc3Response::IsInitialized() const {
  return true;
}

void draw_grpc3Response::InternalSwap(draw_grpc3Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  outimage_.Swap(&other->outimage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata draw_grpc3Response::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIMatchesOverlay
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIMatchesOverlay::draw_grpc0Request* Arena::CreateMaybeMessage< ::grpcIMatchesOverlay::draw_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMatchesOverlay::draw_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMatchesOverlay::draw_grpc0Response* Arena::CreateMaybeMessage< ::grpcIMatchesOverlay::draw_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMatchesOverlay::draw_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMatchesOverlay::draw_grpc1Request* Arena::CreateMaybeMessage< ::grpcIMatchesOverlay::draw_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMatchesOverlay::draw_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMatchesOverlay::draw_grpc1Response* Arena::CreateMaybeMessage< ::grpcIMatchesOverlay::draw_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMatchesOverlay::draw_grpc1Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMatchesOverlay::draw_grpc2Request* Arena::CreateMaybeMessage< ::grpcIMatchesOverlay::draw_grpc2Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMatchesOverlay::draw_grpc2Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMatchesOverlay::draw_grpc2Response* Arena::CreateMaybeMessage< ::grpcIMatchesOverlay::draw_grpc2Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMatchesOverlay::draw_grpc2Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMatchesOverlay::draw_grpc3Request* Arena::CreateMaybeMessage< ::grpcIMatchesOverlay::draw_grpc3Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMatchesOverlay::draw_grpc3Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIMatchesOverlay::draw_grpc3Response* Arena::CreateMaybeMessage< ::grpcIMatchesOverlay::draw_grpc3Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIMatchesOverlay::draw_grpc3Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
