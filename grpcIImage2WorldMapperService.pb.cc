// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIImage2WorldMapperService.proto

#include "grpcIImage2WorldMapperService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIImage2WorldMapper {
constexpr mapRequest::mapRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : digitalpoints_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , worldpoints_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct mapRequestDefaultTypeInternal {
  constexpr mapRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~mapRequestDefaultTypeInternal() {}
  union {
    mapRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT mapRequestDefaultTypeInternal _mapRequest_default_instance_;
constexpr mapResponse::mapResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : worldpoints_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct mapResponseDefaultTypeInternal {
  constexpr mapResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~mapResponseDefaultTypeInternal() {}
  union {
    mapResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT mapResponseDefaultTypeInternal _mapResponse_default_instance_;
}  // namespace grpcIImage2WorldMapper
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIImage2WorldMapperService_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIImage2WorldMapperService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIImage2WorldMapperService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIImage2WorldMapperService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIImage2WorldMapper::mapRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIImage2WorldMapper::mapRequest, digitalpoints_),
  PROTOBUF_FIELD_OFFSET(::grpcIImage2WorldMapper::mapRequest, worldpoints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIImage2WorldMapper::mapResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIImage2WorldMapper::mapResponse, worldpoints_),
  PROTOBUF_FIELD_OFFSET(::grpcIImage2WorldMapper::mapResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIImage2WorldMapper::mapRequest)},
  { 7, -1, sizeof(::grpcIImage2WorldMapper::mapResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIImage2WorldMapper::_mapRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIImage2WorldMapper::_mapResponse_default_instance_),
};

const char descriptor_table_protodef_grpcIImage2WorldMapperService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#grpcIImage2WorldMapperService.proto\022\026g"
  "rpcIImage2WorldMapper\032\033google/protobuf/e"
  "mpty.proto\"8\n\nmapRequest\022\025\n\rdigitalPoint"
  "s\030\001 \001(\014\022\023\n\013worldPoints\030\002 \001(\014\"\?\n\013mapRespo"
  "nse\022\023\n\013worldPoints\030\001 \001(\014\022\033\n\023xpcfGrpcRetu"
  "rnValue\030\002 \001(\0212q\n\035grpcIImage2WorldMapperS"
  "ervice\022P\n\003map\022\".grpcIImage2WorldMapper.m"
  "apRequest\032#.grpcIImage2WorldMapper.mapRe"
  "sponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIImage2WorldMapperService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIImage2WorldMapperService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIImage2WorldMapperService_2eproto = {
  false, false, 336, descriptor_table_protodef_grpcIImage2WorldMapperService_2eproto, "grpcIImage2WorldMapperService.proto", 
  &descriptor_table_grpcIImage2WorldMapperService_2eproto_once, descriptor_table_grpcIImage2WorldMapperService_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_grpcIImage2WorldMapperService_2eproto::offsets,
  file_level_metadata_grpcIImage2WorldMapperService_2eproto, file_level_enum_descriptors_grpcIImage2WorldMapperService_2eproto, file_level_service_descriptors_grpcIImage2WorldMapperService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIImage2WorldMapperService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIImage2WorldMapperService_2eproto);
  return descriptor_table_grpcIImage2WorldMapperService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIImage2WorldMapperService_2eproto(&descriptor_table_grpcIImage2WorldMapperService_2eproto);
namespace grpcIImage2WorldMapper {

// ===================================================================

class mapRequest::_Internal {
 public:
};

mapRequest::mapRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIImage2WorldMapper.mapRequest)
}
mapRequest::mapRequest(const mapRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  digitalpoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_digitalpoints().empty()) {
    digitalpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_digitalpoints(), 
      GetArena());
  }
  worldpoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worldpoints().empty()) {
    worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worldpoints(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIImage2WorldMapper.mapRequest)
}

void mapRequest::SharedCtor() {
digitalpoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
worldpoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

mapRequest::~mapRequest() {
  // @@protoc_insertion_point(destructor:grpcIImage2WorldMapper.mapRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void mapRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  digitalpoints_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  worldpoints_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void mapRequest::ArenaDtor(void* object) {
  mapRequest* _this = reinterpret_cast< mapRequest* >(object);
  (void)_this;
}
void mapRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void mapRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void mapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIImage2WorldMapper.mapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  digitalpoints_.ClearToEmpty();
  worldpoints_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* mapRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes digitalPoints = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_digitalpoints();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes worldPoints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_worldpoints();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* mapRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIImage2WorldMapper.mapRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes digitalPoints = 1;
  if (this->digitalpoints().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_digitalpoints(), target);
  }

  // bytes worldPoints = 2;
  if (this->worldpoints().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_worldpoints(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIImage2WorldMapper.mapRequest)
  return target;
}

size_t mapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIImage2WorldMapper.mapRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes digitalPoints = 1;
  if (this->digitalpoints().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_digitalpoints());
  }

  // bytes worldPoints = 2;
  if (this->worldpoints().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldpoints());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mapRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIImage2WorldMapper.mapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const mapRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<mapRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIImage2WorldMapper.mapRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIImage2WorldMapper.mapRequest)
    MergeFrom(*source);
  }
}

void mapRequest::MergeFrom(const mapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIImage2WorldMapper.mapRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.digitalpoints().size() > 0) {
    _internal_set_digitalpoints(from._internal_digitalpoints());
  }
  if (from.worldpoints().size() > 0) {
    _internal_set_worldpoints(from._internal_worldpoints());
  }
}

void mapRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIImage2WorldMapper.mapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mapRequest::CopyFrom(const mapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIImage2WorldMapper.mapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mapRequest::IsInitialized() const {
  return true;
}

void mapRequest::InternalSwap(mapRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  digitalpoints_.Swap(&other->digitalpoints_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  worldpoints_.Swap(&other->worldpoints_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata mapRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class mapResponse::_Internal {
 public:
};

mapResponse::mapResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIImage2WorldMapper.mapResponse)
}
mapResponse::mapResponse(const mapResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  worldpoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_worldpoints().empty()) {
    worldpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_worldpoints(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIImage2WorldMapper.mapResponse)
}

void mapResponse::SharedCtor() {
worldpoints_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

mapResponse::~mapResponse() {
  // @@protoc_insertion_point(destructor:grpcIImage2WorldMapper.mapResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void mapResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  worldpoints_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void mapResponse::ArenaDtor(void* object) {
  mapResponse* _this = reinterpret_cast< mapResponse* >(object);
  (void)_this;
}
void mapResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void mapResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void mapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIImage2WorldMapper.mapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  worldpoints_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* mapResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes worldPoints = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_worldpoints();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* mapResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIImage2WorldMapper.mapResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes worldPoints = 1;
  if (this->worldpoints().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_worldpoints(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIImage2WorldMapper.mapResponse)
  return target;
}

size_t mapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIImage2WorldMapper.mapResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes worldPoints = 1;
  if (this->worldpoints().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_worldpoints());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mapResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIImage2WorldMapper.mapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const mapResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<mapResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIImage2WorldMapper.mapResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIImage2WorldMapper.mapResponse)
    MergeFrom(*source);
  }
}

void mapResponse::MergeFrom(const mapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIImage2WorldMapper.mapResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.worldpoints().size() > 0) {
    _internal_set_worldpoints(from._internal_worldpoints());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void mapResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIImage2WorldMapper.mapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mapResponse::CopyFrom(const mapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIImage2WorldMapper.mapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mapResponse::IsInitialized() const {
  return true;
}

void mapResponse::InternalSwap(mapResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  worldpoints_.Swap(&other->worldpoints_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata mapResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIImage2WorldMapper
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIImage2WorldMapper::mapRequest* Arena::CreateMaybeMessage< ::grpcIImage2WorldMapper::mapRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIImage2WorldMapper::mapRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIImage2WorldMapper::mapResponse* Arena::CreateMaybeMessage< ::grpcIImage2WorldMapper::mapResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIImage2WorldMapper::mapResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
