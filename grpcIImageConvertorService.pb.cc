// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIImageConvertorService.proto

#include "grpcIImageConvertorService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIImageConvertor {
constexpr convert_grpc0Request::convert_grpc0Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imgsrc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , imgdst_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct convert_grpc0RequestDefaultTypeInternal {
  constexpr convert_grpc0RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~convert_grpc0RequestDefaultTypeInternal() {}
  union {
    convert_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT convert_grpc0RequestDefaultTypeInternal _convert_grpc0Request_default_instance_;
constexpr convert_grpc0Response::convert_grpc0Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imgdst_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct convert_grpc0ResponseDefaultTypeInternal {
  constexpr convert_grpc0ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~convert_grpc0ResponseDefaultTypeInternal() {}
  union {
    convert_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT convert_grpc0ResponseDefaultTypeInternal _convert_grpc0Response_default_instance_;
constexpr convert_grpc1Request::convert_grpc1Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imgsrc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , imgdst_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , destlayout_(0){}
struct convert_grpc1RequestDefaultTypeInternal {
  constexpr convert_grpc1RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~convert_grpc1RequestDefaultTypeInternal() {}
  union {
    convert_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT convert_grpc1RequestDefaultTypeInternal _convert_grpc1Request_default_instance_;
constexpr convert_grpc1Response::convert_grpc1Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imgdst_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct convert_grpc1ResponseDefaultTypeInternal {
  constexpr convert_grpc1ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~convert_grpc1ResponseDefaultTypeInternal() {}
  union {
    convert_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT convert_grpc1ResponseDefaultTypeInternal _convert_grpc1Response_default_instance_;
constexpr convertLookUpTableRequest::convertLookUpTableRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imgsrc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , imgdst_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct convertLookUpTableRequestDefaultTypeInternal {
  constexpr convertLookUpTableRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~convertLookUpTableRequestDefaultTypeInternal() {}
  union {
    convertLookUpTableRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT convertLookUpTableRequestDefaultTypeInternal _convertLookUpTableRequest_default_instance_;
constexpr convertLookUpTableResponse::convertLookUpTableResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : imgdst_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct convertLookUpTableResponseDefaultTypeInternal {
  constexpr convertLookUpTableResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~convertLookUpTableResponseDefaultTypeInternal() {}
  union {
    convertLookUpTableResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT convertLookUpTableResponseDefaultTypeInternal _convertLookUpTableResponse_default_instance_;
}  // namespace grpcIImageConvertor
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIImageConvertorService_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIImageConvertorService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIImageConvertorService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIImageConvertorService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc0Request, imgsrc_),
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc0Request, imgdst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc0Response, imgdst_),
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc0Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc1Request, imgsrc_),
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc1Request, destlayout_),
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc1Request, imgdst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc1Response, imgdst_),
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convert_grpc1Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convertLookUpTableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convertLookUpTableRequest, imgsrc_),
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convertLookUpTableRequest, imgdst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convertLookUpTableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convertLookUpTableResponse, imgdst_),
  PROTOBUF_FIELD_OFFSET(::grpcIImageConvertor::convertLookUpTableResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIImageConvertor::convert_grpc0Request)},
  { 7, -1, sizeof(::grpcIImageConvertor::convert_grpc0Response)},
  { 14, -1, sizeof(::grpcIImageConvertor::convert_grpc1Request)},
  { 22, -1, sizeof(::grpcIImageConvertor::convert_grpc1Response)},
  { 29, -1, sizeof(::grpcIImageConvertor::convertLookUpTableRequest)},
  { 36, -1, sizeof(::grpcIImageConvertor::convertLookUpTableResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIImageConvertor::_convert_grpc0Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIImageConvertor::_convert_grpc0Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIImageConvertor::_convert_grpc1Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIImageConvertor::_convert_grpc1Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIImageConvertor::_convertLookUpTableRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIImageConvertor::_convertLookUpTableResponse_default_instance_),
};

const char descriptor_table_protodef_grpcIImageConvertorService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n grpcIImageConvertorService.proto\022\023grpc"
  "IImageConvertor\032\033google/protobuf/empty.p"
  "roto\"6\n\024convert_grpc0Request\022\016\n\006imgSrc\030\001"
  " \001(\014\022\016\n\006imgDst\030\002 \001(\014\"D\n\025convert_grpc0Res"
  "ponse\022\016\n\006imgDst\030\001 \001(\014\022\033\n\023xpcfGrpcReturnV"
  "alue\030\002 \001(\021\"J\n\024convert_grpc1Request\022\016\n\006im"
  "gSrc\030\001 \001(\014\022\022\n\ndestLayout\030\002 \001(\021\022\016\n\006imgDst"
  "\030\003 \001(\014\"D\n\025convert_grpc1Response\022\016\n\006imgDs"
  "t\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\021\";\n\031"
  "convertLookUpTableRequest\022\016\n\006imgSrc\030\001 \001("
  "\014\022\016\n\006imgDst\030\002 \001(\014\"I\n\032convertLookUpTableR"
  "esponse\022\016\n\006imgDst\030\001 \001(\014\022\033\n\023xpcfGrpcRetur"
  "nValue\030\002 \001(\0212\351\002\n\032grpcIImageConvertorServ"
  "ice\022h\n\rconvert_grpc0\022).grpcIImageConvert"
  "or.convert_grpc0Request\032*.grpcIImageConv"
  "ertor.convert_grpc0Response\"\000\022h\n\rconvert"
  "_grpc1\022).grpcIImageConvertor.convert_grp"
  "c1Request\032*.grpcIImageConvertor.convert_"
  "grpc1Response\"\000\022w\n\022convertLookUpTable\022.."
  "grpcIImageConvertor.convertLookUpTableRe"
  "quest\032/.grpcIImageConvertor.convertLookU"
  "pTableResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIImageConvertorService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIImageConvertorService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIImageConvertorService_2eproto = {
  false, false, 864, descriptor_table_protodef_grpcIImageConvertorService_2eproto, "grpcIImageConvertorService.proto", 
  &descriptor_table_grpcIImageConvertorService_2eproto_once, descriptor_table_grpcIImageConvertorService_2eproto_deps, 1, 6,
  schemas, file_default_instances, TableStruct_grpcIImageConvertorService_2eproto::offsets,
  file_level_metadata_grpcIImageConvertorService_2eproto, file_level_enum_descriptors_grpcIImageConvertorService_2eproto, file_level_service_descriptors_grpcIImageConvertorService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIImageConvertorService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIImageConvertorService_2eproto);
  return descriptor_table_grpcIImageConvertorService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIImageConvertorService_2eproto(&descriptor_table_grpcIImageConvertorService_2eproto);
namespace grpcIImageConvertor {

// ===================================================================

class convert_grpc0Request::_Internal {
 public:
};

convert_grpc0Request::convert_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIImageConvertor.convert_grpc0Request)
}
convert_grpc0Request::convert_grpc0Request(const convert_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imgsrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imgsrc().empty()) {
    imgsrc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imgsrc(), 
      GetArena());
  }
  imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imgdst().empty()) {
    imgdst_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imgdst(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIImageConvertor.convert_grpc0Request)
}

void convert_grpc0Request::SharedCtor() {
imgsrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

convert_grpc0Request::~convert_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIImageConvertor.convert_grpc0Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void convert_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imgsrc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imgdst_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void convert_grpc0Request::ArenaDtor(void* object) {
  convert_grpc0Request* _this = reinterpret_cast< convert_grpc0Request* >(object);
  (void)_this;
}
void convert_grpc0Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void convert_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void convert_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIImageConvertor.convert_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgsrc_.ClearToEmpty();
  imgdst_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* convert_grpc0Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes imgSrc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imgsrc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes imgDst = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_imgdst();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* convert_grpc0Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIImageConvertor.convert_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes imgSrc = 1;
  if (this->imgsrc().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_imgsrc(), target);
  }

  // bytes imgDst = 2;
  if (this->imgdst().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_imgdst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIImageConvertor.convert_grpc0Request)
  return target;
}

size_t convert_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIImageConvertor.convert_grpc0Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes imgSrc = 1;
  if (this->imgsrc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imgsrc());
  }

  // bytes imgDst = 2;
  if (this->imgdst().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imgdst());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void convert_grpc0Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIImageConvertor.convert_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  const convert_grpc0Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<convert_grpc0Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIImageConvertor.convert_grpc0Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIImageConvertor.convert_grpc0Request)
    MergeFrom(*source);
  }
}

void convert_grpc0Request::MergeFrom(const convert_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIImageConvertor.convert_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imgsrc().size() > 0) {
    _internal_set_imgsrc(from._internal_imgsrc());
  }
  if (from.imgdst().size() > 0) {
    _internal_set_imgdst(from._internal_imgdst());
  }
}

void convert_grpc0Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIImageConvertor.convert_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void convert_grpc0Request::CopyFrom(const convert_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIImageConvertor.convert_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool convert_grpc0Request::IsInitialized() const {
  return true;
}

void convert_grpc0Request::InternalSwap(convert_grpc0Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imgsrc_.Swap(&other->imgsrc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  imgdst_.Swap(&other->imgdst_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata convert_grpc0Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class convert_grpc0Response::_Internal {
 public:
};

convert_grpc0Response::convert_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIImageConvertor.convert_grpc0Response)
}
convert_grpc0Response::convert_grpc0Response(const convert_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imgdst().empty()) {
    imgdst_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imgdst(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIImageConvertor.convert_grpc0Response)
}

void convert_grpc0Response::SharedCtor() {
imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

convert_grpc0Response::~convert_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIImageConvertor.convert_grpc0Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void convert_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imgdst_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void convert_grpc0Response::ArenaDtor(void* object) {
  convert_grpc0Response* _this = reinterpret_cast< convert_grpc0Response* >(object);
  (void)_this;
}
void convert_grpc0Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void convert_grpc0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void convert_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIImageConvertor.convert_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgdst_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* convert_grpc0Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes imgDst = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imgdst();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* convert_grpc0Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIImageConvertor.convert_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes imgDst = 1;
  if (this->imgdst().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_imgdst(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIImageConvertor.convert_grpc0Response)
  return target;
}

size_t convert_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIImageConvertor.convert_grpc0Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes imgDst = 1;
  if (this->imgdst().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imgdst());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void convert_grpc0Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIImageConvertor.convert_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  const convert_grpc0Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<convert_grpc0Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIImageConvertor.convert_grpc0Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIImageConvertor.convert_grpc0Response)
    MergeFrom(*source);
  }
}

void convert_grpc0Response::MergeFrom(const convert_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIImageConvertor.convert_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imgdst().size() > 0) {
    _internal_set_imgdst(from._internal_imgdst());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void convert_grpc0Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIImageConvertor.convert_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void convert_grpc0Response::CopyFrom(const convert_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIImageConvertor.convert_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool convert_grpc0Response::IsInitialized() const {
  return true;
}

void convert_grpc0Response::InternalSwap(convert_grpc0Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imgdst_.Swap(&other->imgdst_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata convert_grpc0Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class convert_grpc1Request::_Internal {
 public:
};

convert_grpc1Request::convert_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIImageConvertor.convert_grpc1Request)
}
convert_grpc1Request::convert_grpc1Request(const convert_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imgsrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imgsrc().empty()) {
    imgsrc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imgsrc(), 
      GetArena());
  }
  imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imgdst().empty()) {
    imgdst_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imgdst(), 
      GetArena());
  }
  destlayout_ = from.destlayout_;
  // @@protoc_insertion_point(copy_constructor:grpcIImageConvertor.convert_grpc1Request)
}

void convert_grpc1Request::SharedCtor() {
imgsrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
destlayout_ = 0;
}

convert_grpc1Request::~convert_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIImageConvertor.convert_grpc1Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void convert_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imgsrc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imgdst_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void convert_grpc1Request::ArenaDtor(void* object) {
  convert_grpc1Request* _this = reinterpret_cast< convert_grpc1Request* >(object);
  (void)_this;
}
void convert_grpc1Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void convert_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void convert_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIImageConvertor.convert_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgsrc_.ClearToEmpty();
  imgdst_.ClearToEmpty();
  destlayout_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* convert_grpc1Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes imgSrc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imgsrc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 destLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          destlayout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes imgDst = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_imgdst();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* convert_grpc1Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIImageConvertor.convert_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes imgSrc = 1;
  if (this->imgsrc().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_imgsrc(), target);
  }

  // sint32 destLayout = 2;
  if (this->destlayout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_destlayout(), target);
  }

  // bytes imgDst = 3;
  if (this->imgdst().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_imgdst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIImageConvertor.convert_grpc1Request)
  return target;
}

size_t convert_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIImageConvertor.convert_grpc1Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes imgSrc = 1;
  if (this->imgsrc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imgsrc());
  }

  // bytes imgDst = 3;
  if (this->imgdst().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imgdst());
  }

  // sint32 destLayout = 2;
  if (this->destlayout() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_destlayout());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void convert_grpc1Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIImageConvertor.convert_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  const convert_grpc1Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<convert_grpc1Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIImageConvertor.convert_grpc1Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIImageConvertor.convert_grpc1Request)
    MergeFrom(*source);
  }
}

void convert_grpc1Request::MergeFrom(const convert_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIImageConvertor.convert_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imgsrc().size() > 0) {
    _internal_set_imgsrc(from._internal_imgsrc());
  }
  if (from.imgdst().size() > 0) {
    _internal_set_imgdst(from._internal_imgdst());
  }
  if (from.destlayout() != 0) {
    _internal_set_destlayout(from._internal_destlayout());
  }
}

void convert_grpc1Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIImageConvertor.convert_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void convert_grpc1Request::CopyFrom(const convert_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIImageConvertor.convert_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool convert_grpc1Request::IsInitialized() const {
  return true;
}

void convert_grpc1Request::InternalSwap(convert_grpc1Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imgsrc_.Swap(&other->imgsrc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  imgdst_.Swap(&other->imgdst_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(destlayout_, other->destlayout_);
}

::PROTOBUF_NAMESPACE_ID::Metadata convert_grpc1Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class convert_grpc1Response::_Internal {
 public:
};

convert_grpc1Response::convert_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIImageConvertor.convert_grpc1Response)
}
convert_grpc1Response::convert_grpc1Response(const convert_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imgdst().empty()) {
    imgdst_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imgdst(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIImageConvertor.convert_grpc1Response)
}

void convert_grpc1Response::SharedCtor() {
imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

convert_grpc1Response::~convert_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIImageConvertor.convert_grpc1Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void convert_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imgdst_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void convert_grpc1Response::ArenaDtor(void* object) {
  convert_grpc1Response* _this = reinterpret_cast< convert_grpc1Response* >(object);
  (void)_this;
}
void convert_grpc1Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void convert_grpc1Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void convert_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIImageConvertor.convert_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgdst_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* convert_grpc1Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes imgDst = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imgdst();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* convert_grpc1Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIImageConvertor.convert_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes imgDst = 1;
  if (this->imgdst().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_imgdst(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIImageConvertor.convert_grpc1Response)
  return target;
}

size_t convert_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIImageConvertor.convert_grpc1Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes imgDst = 1;
  if (this->imgdst().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imgdst());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void convert_grpc1Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIImageConvertor.convert_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  const convert_grpc1Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<convert_grpc1Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIImageConvertor.convert_grpc1Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIImageConvertor.convert_grpc1Response)
    MergeFrom(*source);
  }
}

void convert_grpc1Response::MergeFrom(const convert_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIImageConvertor.convert_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imgdst().size() > 0) {
    _internal_set_imgdst(from._internal_imgdst());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void convert_grpc1Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIImageConvertor.convert_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void convert_grpc1Response::CopyFrom(const convert_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIImageConvertor.convert_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool convert_grpc1Response::IsInitialized() const {
  return true;
}

void convert_grpc1Response::InternalSwap(convert_grpc1Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imgdst_.Swap(&other->imgdst_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata convert_grpc1Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class convertLookUpTableRequest::_Internal {
 public:
};

convertLookUpTableRequest::convertLookUpTableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIImageConvertor.convertLookUpTableRequest)
}
convertLookUpTableRequest::convertLookUpTableRequest(const convertLookUpTableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imgsrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imgsrc().empty()) {
    imgsrc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imgsrc(), 
      GetArena());
  }
  imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imgdst().empty()) {
    imgdst_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imgdst(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIImageConvertor.convertLookUpTableRequest)
}

void convertLookUpTableRequest::SharedCtor() {
imgsrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

convertLookUpTableRequest::~convertLookUpTableRequest() {
  // @@protoc_insertion_point(destructor:grpcIImageConvertor.convertLookUpTableRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void convertLookUpTableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imgsrc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  imgdst_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void convertLookUpTableRequest::ArenaDtor(void* object) {
  convertLookUpTableRequest* _this = reinterpret_cast< convertLookUpTableRequest* >(object);
  (void)_this;
}
void convertLookUpTableRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void convertLookUpTableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void convertLookUpTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIImageConvertor.convertLookUpTableRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgsrc_.ClearToEmpty();
  imgdst_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* convertLookUpTableRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes imgSrc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imgsrc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes imgDst = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_imgdst();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* convertLookUpTableRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIImageConvertor.convertLookUpTableRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes imgSrc = 1;
  if (this->imgsrc().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_imgsrc(), target);
  }

  // bytes imgDst = 2;
  if (this->imgdst().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_imgdst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIImageConvertor.convertLookUpTableRequest)
  return target;
}

size_t convertLookUpTableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIImageConvertor.convertLookUpTableRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes imgSrc = 1;
  if (this->imgsrc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imgsrc());
  }

  // bytes imgDst = 2;
  if (this->imgdst().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imgdst());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void convertLookUpTableRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIImageConvertor.convertLookUpTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const convertLookUpTableRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<convertLookUpTableRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIImageConvertor.convertLookUpTableRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIImageConvertor.convertLookUpTableRequest)
    MergeFrom(*source);
  }
}

void convertLookUpTableRequest::MergeFrom(const convertLookUpTableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIImageConvertor.convertLookUpTableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imgsrc().size() > 0) {
    _internal_set_imgsrc(from._internal_imgsrc());
  }
  if (from.imgdst().size() > 0) {
    _internal_set_imgdst(from._internal_imgdst());
  }
}

void convertLookUpTableRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIImageConvertor.convertLookUpTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void convertLookUpTableRequest::CopyFrom(const convertLookUpTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIImageConvertor.convertLookUpTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool convertLookUpTableRequest::IsInitialized() const {
  return true;
}

void convertLookUpTableRequest::InternalSwap(convertLookUpTableRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imgsrc_.Swap(&other->imgsrc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  imgdst_.Swap(&other->imgdst_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata convertLookUpTableRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class convertLookUpTableResponse::_Internal {
 public:
};

convertLookUpTableResponse::convertLookUpTableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIImageConvertor.convertLookUpTableResponse)
}
convertLookUpTableResponse::convertLookUpTableResponse(const convertLookUpTableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_imgdst().empty()) {
    imgdst_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_imgdst(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIImageConvertor.convertLookUpTableResponse)
}

void convertLookUpTableResponse::SharedCtor() {
imgdst_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

convertLookUpTableResponse::~convertLookUpTableResponse() {
  // @@protoc_insertion_point(destructor:grpcIImageConvertor.convertLookUpTableResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void convertLookUpTableResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  imgdst_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void convertLookUpTableResponse::ArenaDtor(void* object) {
  convertLookUpTableResponse* _this = reinterpret_cast< convertLookUpTableResponse* >(object);
  (void)_this;
}
void convertLookUpTableResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void convertLookUpTableResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void convertLookUpTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIImageConvertor.convertLookUpTableResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imgdst_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* convertLookUpTableResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes imgDst = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_imgdst();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* convertLookUpTableResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIImageConvertor.convertLookUpTableResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes imgDst = 1;
  if (this->imgdst().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_imgdst(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIImageConvertor.convertLookUpTableResponse)
  return target;
}

size_t convertLookUpTableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIImageConvertor.convertLookUpTableResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes imgDst = 1;
  if (this->imgdst().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_imgdst());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void convertLookUpTableResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIImageConvertor.convertLookUpTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const convertLookUpTableResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<convertLookUpTableResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIImageConvertor.convertLookUpTableResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIImageConvertor.convertLookUpTableResponse)
    MergeFrom(*source);
  }
}

void convertLookUpTableResponse::MergeFrom(const convertLookUpTableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIImageConvertor.convertLookUpTableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imgdst().size() > 0) {
    _internal_set_imgdst(from._internal_imgdst());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void convertLookUpTableResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIImageConvertor.convertLookUpTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void convertLookUpTableResponse::CopyFrom(const convertLookUpTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIImageConvertor.convertLookUpTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool convertLookUpTableResponse::IsInitialized() const {
  return true;
}

void convertLookUpTableResponse::InternalSwap(convertLookUpTableResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  imgdst_.Swap(&other->imgdst_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata convertLookUpTableResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIImageConvertor
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIImageConvertor::convert_grpc0Request* Arena::CreateMaybeMessage< ::grpcIImageConvertor::convert_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIImageConvertor::convert_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIImageConvertor::convert_grpc0Response* Arena::CreateMaybeMessage< ::grpcIImageConvertor::convert_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIImageConvertor::convert_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIImageConvertor::convert_grpc1Request* Arena::CreateMaybeMessage< ::grpcIImageConvertor::convert_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIImageConvertor::convert_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIImageConvertor::convert_grpc1Response* Arena::CreateMaybeMessage< ::grpcIImageConvertor::convert_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIImageConvertor::convert_grpc1Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIImageConvertor::convertLookUpTableRequest* Arena::CreateMaybeMessage< ::grpcIImageConvertor::convertLookUpTableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIImageConvertor::convertLookUpTableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIImageConvertor::convertLookUpTableResponse* Arena::CreateMaybeMessage< ::grpcIImageConvertor::convertLookUpTableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIImageConvertor::convertLookUpTableResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
