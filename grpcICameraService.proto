syntax = "proto3";

import "google/protobuf/empty.proto";

package grpcICamera;

message startRequest
{
int32 grpcServerCompressionFormat  = 1;
}

message startResponse
{
sint32 xpcfGrpcReturnValue = 1;
}

message stopRequest
{
int32 grpcServerCompressionFormat  = 1;
}

message stopResponse
{
sint32 xpcfGrpcReturnValue = 1;
}

message getNextImageRequest
{
int32 grpcServerCompressionFormat  = 1;
bytes img = 2;
}

message getNextImageResponse
{
bytes img = 1;
sint32 xpcfGrpcReturnValue = 2;
}

message setResolutionRequest
{
bytes resolution = 1;
}

message setIntrinsicParametersRequest
{
bytes intrinsic_parameters = 1;
}

message setDistortionParametersRequest
{
bytes distortion_parameters = 1;
}

message setParametersRequest
{
bytes parameters = 1;
}

message getResolutionRequest
{
int32 grpcServerCompressionFormat  = 1;
}

message getResolutionResponse
{
bytes xpcfGrpcReturnValue = 1;
}

message getIntrinsicsParametersRequest
{
int32 grpcServerCompressionFormat  = 1;
}

message getIntrinsicsParametersResponse
{
bytes xpcfGrpcReturnValue = 1;
}

message getParametersRequest
{
int32 grpcServerCompressionFormat  = 1;
}

message getParametersResponse
{
bytes xpcfGrpcReturnValue = 1;
}

message getDistortionParametersRequest
{
int32 grpcServerCompressionFormat  = 1;
}

message getDistortionParametersResponse
{
bytes xpcfGrpcReturnValue = 1;
}

service grpcICameraService {
rpc start(startRequest) returns(startResponse) {}
rpc stop(stopRequest) returns(stopResponse) {}
rpc getNextImage(getNextImageRequest) returns(getNextImageResponse) {}
rpc setResolution(setResolutionRequest) returns(google.protobuf.Empty) {}
rpc setIntrinsicParameters(setIntrinsicParametersRequest) returns(google.protobuf.Empty) {}
rpc setDistortionParameters(setDistortionParametersRequest) returns(google.protobuf.Empty) {}
rpc setParameters(setParametersRequest) returns(google.protobuf.Empty) {}
rpc getResolution(getResolutionRequest) returns(getResolutionResponse) {}
rpc getIntrinsicsParameters(getIntrinsicsParametersRequest) returns(getIntrinsicsParametersResponse) {}
rpc getParameters(getParametersRequest) returns(getParametersResponse) {}
rpc getDistortionParameters(getDistortionParametersRequest) returns(getDistortionParametersResponse) {}
}

