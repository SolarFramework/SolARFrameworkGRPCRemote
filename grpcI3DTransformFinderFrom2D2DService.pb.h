// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcI3DTransformFinderFrom2D2DService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcI3DTransformFinderFrom2D2DService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcI3DTransformFinderFrom2D2DService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcI3DTransformFinderFrom2D2DService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcI3DTransformFinderFrom2D2DService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcI3DTransformFinderFrom2D2DService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcI3DTransformFinderFrom2D2DService_2eproto_metadata_getter(int index);
namespace grpcI3DTransformFinderFrom2D2D {
class estimate_grpc0Request;
struct estimate_grpc0RequestDefaultTypeInternal;
extern estimate_grpc0RequestDefaultTypeInternal _estimate_grpc0Request_default_instance_;
class estimate_grpc0Response;
struct estimate_grpc0ResponseDefaultTypeInternal;
extern estimate_grpc0ResponseDefaultTypeInternal _estimate_grpc0Response_default_instance_;
class estimate_grpc1Request;
struct estimate_grpc1RequestDefaultTypeInternal;
extern estimate_grpc1RequestDefaultTypeInternal _estimate_grpc1Request_default_instance_;
class estimate_grpc1Response;
struct estimate_grpc1ResponseDefaultTypeInternal;
extern estimate_grpc1ResponseDefaultTypeInternal _estimate_grpc1Response_default_instance_;
class setCameraParametersRequest;
struct setCameraParametersRequestDefaultTypeInternal;
extern setCameraParametersRequestDefaultTypeInternal _setCameraParametersRequest_default_instance_;
}  // namespace grpcI3DTransformFinderFrom2D2D
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcI3DTransformFinderFrom2D2D::estimate_grpc0Request* Arena::CreateMaybeMessage<::grpcI3DTransformFinderFrom2D2D::estimate_grpc0Request>(Arena*);
template<> ::grpcI3DTransformFinderFrom2D2D::estimate_grpc0Response* Arena::CreateMaybeMessage<::grpcI3DTransformFinderFrom2D2D::estimate_grpc0Response>(Arena*);
template<> ::grpcI3DTransformFinderFrom2D2D::estimate_grpc1Request* Arena::CreateMaybeMessage<::grpcI3DTransformFinderFrom2D2D::estimate_grpc1Request>(Arena*);
template<> ::grpcI3DTransformFinderFrom2D2D::estimate_grpc1Response* Arena::CreateMaybeMessage<::grpcI3DTransformFinderFrom2D2D::estimate_grpc1Response>(Arena*);
template<> ::grpcI3DTransformFinderFrom2D2D::setCameraParametersRequest* Arena::CreateMaybeMessage<::grpcI3DTransformFinderFrom2D2D::setCameraParametersRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcI3DTransformFinderFrom2D2D {

// ===================================================================

class setCameraParametersRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest) */ {
 public:
  inline setCameraParametersRequest() : setCameraParametersRequest(nullptr) {}
  virtual ~setCameraParametersRequest();
  explicit constexpr setCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  setCameraParametersRequest(const setCameraParametersRequest& from);
  setCameraParametersRequest(setCameraParametersRequest&& from) noexcept
    : setCameraParametersRequest() {
    *this = ::std::move(from);
  }

  inline setCameraParametersRequest& operator=(const setCameraParametersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline setCameraParametersRequest& operator=(setCameraParametersRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const setCameraParametersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const setCameraParametersRequest* internal_default_instance() {
    return reinterpret_cast<const setCameraParametersRequest*>(
               &_setCameraParametersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(setCameraParametersRequest& a, setCameraParametersRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(setCameraParametersRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(setCameraParametersRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline setCameraParametersRequest* New() const final {
    return CreateMaybeMessage<setCameraParametersRequest>(nullptr);
  }

  setCameraParametersRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<setCameraParametersRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const setCameraParametersRequest& from);
  void MergeFrom(const setCameraParametersRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(setCameraParametersRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest";
  }
  protected:
  explicit setCameraParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DTransformFinderFrom2D2DService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntrinsicParamsFieldNumber = 1,
    kDistorsionParamsFieldNumber = 2,
  };
  // bytes intrinsicParams = 1;
  void clear_intrinsicparams();
  const std::string& intrinsicparams() const;
  void set_intrinsicparams(const std::string& value);
  void set_intrinsicparams(std::string&& value);
  void set_intrinsicparams(const char* value);
  void set_intrinsicparams(const void* value, size_t size);
  std::string* mutable_intrinsicparams();
  std::string* release_intrinsicparams();
  void set_allocated_intrinsicparams(std::string* intrinsicparams);
  private:
  const std::string& _internal_intrinsicparams() const;
  void _internal_set_intrinsicparams(const std::string& value);
  std::string* _internal_mutable_intrinsicparams();
  public:

  // bytes distorsionParams = 2;
  void clear_distorsionparams();
  const std::string& distorsionparams() const;
  void set_distorsionparams(const std::string& value);
  void set_distorsionparams(std::string&& value);
  void set_distorsionparams(const char* value);
  void set_distorsionparams(const void* value, size_t size);
  std::string* mutable_distorsionparams();
  std::string* release_distorsionparams();
  void set_allocated_distorsionparams(std::string* distorsionparams);
  private:
  const std::string& _internal_distorsionparams() const;
  void _internal_set_distorsionparams(const std::string& value);
  std::string* _internal_mutable_distorsionparams();
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr intrinsicparams_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr distorsionparams_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformFinderFrom2D2DService_2eproto;
};
// -------------------------------------------------------------------

class estimate_grpc0Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request) */ {
 public:
  inline estimate_grpc0Request() : estimate_grpc0Request(nullptr) {}
  virtual ~estimate_grpc0Request();
  explicit constexpr estimate_grpc0Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimate_grpc0Request(const estimate_grpc0Request& from);
  estimate_grpc0Request(estimate_grpc0Request&& from) noexcept
    : estimate_grpc0Request() {
    *this = ::std::move(from);
  }

  inline estimate_grpc0Request& operator=(const estimate_grpc0Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimate_grpc0Request& operator=(estimate_grpc0Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const estimate_grpc0Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimate_grpc0Request* internal_default_instance() {
    return reinterpret_cast<const estimate_grpc0Request*>(
               &_estimate_grpc0Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(estimate_grpc0Request& a, estimate_grpc0Request& b) {
    a.Swap(&b);
  }
  inline void Swap(estimate_grpc0Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimate_grpc0Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimate_grpc0Request* New() const final {
    return CreateMaybeMessage<estimate_grpc0Request>(nullptr);
  }

  estimate_grpc0Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimate_grpc0Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const estimate_grpc0Request& from);
  void MergeFrom(const estimate_grpc0Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimate_grpc0Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request";
  }
  protected:
  explicit estimate_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DTransformFinderFrom2D2DService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsView1FieldNumber = 1,
    kPointsView2FieldNumber = 2,
    kPoseView1FieldNumber = 3,
    kPoseView2FieldNumber = 4,
    kInlierMatchesFieldNumber = 5,
  };
  // bytes pointsView1 = 1;
  void clear_pointsview1();
  const std::string& pointsview1() const;
  void set_pointsview1(const std::string& value);
  void set_pointsview1(std::string&& value);
  void set_pointsview1(const char* value);
  void set_pointsview1(const void* value, size_t size);
  std::string* mutable_pointsview1();
  std::string* release_pointsview1();
  void set_allocated_pointsview1(std::string* pointsview1);
  private:
  const std::string& _internal_pointsview1() const;
  void _internal_set_pointsview1(const std::string& value);
  std::string* _internal_mutable_pointsview1();
  public:

  // bytes pointsView2 = 2;
  void clear_pointsview2();
  const std::string& pointsview2() const;
  void set_pointsview2(const std::string& value);
  void set_pointsview2(std::string&& value);
  void set_pointsview2(const char* value);
  void set_pointsview2(const void* value, size_t size);
  std::string* mutable_pointsview2();
  std::string* release_pointsview2();
  void set_allocated_pointsview2(std::string* pointsview2);
  private:
  const std::string& _internal_pointsview2() const;
  void _internal_set_pointsview2(const std::string& value);
  std::string* _internal_mutable_pointsview2();
  public:

  // bytes poseView1 = 3;
  void clear_poseview1();
  const std::string& poseview1() const;
  void set_poseview1(const std::string& value);
  void set_poseview1(std::string&& value);
  void set_poseview1(const char* value);
  void set_poseview1(const void* value, size_t size);
  std::string* mutable_poseview1();
  std::string* release_poseview1();
  void set_allocated_poseview1(std::string* poseview1);
  private:
  const std::string& _internal_poseview1() const;
  void _internal_set_poseview1(const std::string& value);
  std::string* _internal_mutable_poseview1();
  public:

  // bytes poseView2 = 4;
  void clear_poseview2();
  const std::string& poseview2() const;
  void set_poseview2(const std::string& value);
  void set_poseview2(std::string&& value);
  void set_poseview2(const char* value);
  void set_poseview2(const void* value, size_t size);
  std::string* mutable_poseview2();
  std::string* release_poseview2();
  void set_allocated_poseview2(std::string* poseview2);
  private:
  const std::string& _internal_poseview2() const;
  void _internal_set_poseview2(const std::string& value);
  std::string* _internal_mutable_poseview2();
  public:

  // bytes inlierMatches = 5;
  void clear_inliermatches();
  const std::string& inliermatches() const;
  void set_inliermatches(const std::string& value);
  void set_inliermatches(std::string&& value);
  void set_inliermatches(const char* value);
  void set_inliermatches(const void* value, size_t size);
  std::string* mutable_inliermatches();
  std::string* release_inliermatches();
  void set_allocated_inliermatches(std::string* inliermatches);
  private:
  const std::string& _internal_inliermatches() const;
  void _internal_set_inliermatches(const std::string& value);
  std::string* _internal_mutable_inliermatches();
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pointsview1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pointsview2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr poseview1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr poseview2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inliermatches_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformFinderFrom2D2DService_2eproto;
};
// -------------------------------------------------------------------

class estimate_grpc0Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response) */ {
 public:
  inline estimate_grpc0Response() : estimate_grpc0Response(nullptr) {}
  virtual ~estimate_grpc0Response();
  explicit constexpr estimate_grpc0Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimate_grpc0Response(const estimate_grpc0Response& from);
  estimate_grpc0Response(estimate_grpc0Response&& from) noexcept
    : estimate_grpc0Response() {
    *this = ::std::move(from);
  }

  inline estimate_grpc0Response& operator=(const estimate_grpc0Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimate_grpc0Response& operator=(estimate_grpc0Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const estimate_grpc0Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimate_grpc0Response* internal_default_instance() {
    return reinterpret_cast<const estimate_grpc0Response*>(
               &_estimate_grpc0Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(estimate_grpc0Response& a, estimate_grpc0Response& b) {
    a.Swap(&b);
  }
  inline void Swap(estimate_grpc0Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimate_grpc0Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimate_grpc0Response* New() const final {
    return CreateMaybeMessage<estimate_grpc0Response>(nullptr);
  }

  estimate_grpc0Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimate_grpc0Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const estimate_grpc0Response& from);
  void MergeFrom(const estimate_grpc0Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimate_grpc0Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response";
  }
  protected:
  explicit estimate_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DTransformFinderFrom2D2DService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoseView2FieldNumber = 1,
    kInlierMatchesFieldNumber = 2,
    kXpcfGrpcReturnValueFieldNumber = 3,
  };
  // bytes poseView2 = 1;
  void clear_poseview2();
  const std::string& poseview2() const;
  void set_poseview2(const std::string& value);
  void set_poseview2(std::string&& value);
  void set_poseview2(const char* value);
  void set_poseview2(const void* value, size_t size);
  std::string* mutable_poseview2();
  std::string* release_poseview2();
  void set_allocated_poseview2(std::string* poseview2);
  private:
  const std::string& _internal_poseview2() const;
  void _internal_set_poseview2(const std::string& value);
  std::string* _internal_mutable_poseview2();
  public:

  // bytes inlierMatches = 2;
  void clear_inliermatches();
  const std::string& inliermatches() const;
  void set_inliermatches(const std::string& value);
  void set_inliermatches(std::string&& value);
  void set_inliermatches(const char* value);
  void set_inliermatches(const void* value, size_t size);
  std::string* mutable_inliermatches();
  std::string* release_inliermatches();
  void set_allocated_inliermatches(std::string* inliermatches);
  private:
  const std::string& _internal_inliermatches() const;
  void _internal_set_inliermatches(const std::string& value);
  std::string* _internal_mutable_inliermatches();
  public:

  // sint32 xpcfGrpcReturnValue = 3;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr poseview2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inliermatches_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformFinderFrom2D2DService_2eproto;
};
// -------------------------------------------------------------------

class estimate_grpc1Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request) */ {
 public:
  inline estimate_grpc1Request() : estimate_grpc1Request(nullptr) {}
  virtual ~estimate_grpc1Request();
  explicit constexpr estimate_grpc1Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimate_grpc1Request(const estimate_grpc1Request& from);
  estimate_grpc1Request(estimate_grpc1Request&& from) noexcept
    : estimate_grpc1Request() {
    *this = ::std::move(from);
  }

  inline estimate_grpc1Request& operator=(const estimate_grpc1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimate_grpc1Request& operator=(estimate_grpc1Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const estimate_grpc1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimate_grpc1Request* internal_default_instance() {
    return reinterpret_cast<const estimate_grpc1Request*>(
               &_estimate_grpc1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(estimate_grpc1Request& a, estimate_grpc1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(estimate_grpc1Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimate_grpc1Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimate_grpc1Request* New() const final {
    return CreateMaybeMessage<estimate_grpc1Request>(nullptr);
  }

  estimate_grpc1Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimate_grpc1Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const estimate_grpc1Request& from);
  void MergeFrom(const estimate_grpc1Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimate_grpc1Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request";
  }
  protected:
  explicit estimate_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DTransformFinderFrom2D2DService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsView1FieldNumber = 1,
    kPointsView2FieldNumber = 2,
    kPoseView1FieldNumber = 3,
    kPoseView2FieldNumber = 4,
    kInlierMatchesFieldNumber = 5,
  };
  // bytes pointsView1 = 1;
  void clear_pointsview1();
  const std::string& pointsview1() const;
  void set_pointsview1(const std::string& value);
  void set_pointsview1(std::string&& value);
  void set_pointsview1(const char* value);
  void set_pointsview1(const void* value, size_t size);
  std::string* mutable_pointsview1();
  std::string* release_pointsview1();
  void set_allocated_pointsview1(std::string* pointsview1);
  private:
  const std::string& _internal_pointsview1() const;
  void _internal_set_pointsview1(const std::string& value);
  std::string* _internal_mutable_pointsview1();
  public:

  // bytes pointsView2 = 2;
  void clear_pointsview2();
  const std::string& pointsview2() const;
  void set_pointsview2(const std::string& value);
  void set_pointsview2(std::string&& value);
  void set_pointsview2(const char* value);
  void set_pointsview2(const void* value, size_t size);
  std::string* mutable_pointsview2();
  std::string* release_pointsview2();
  void set_allocated_pointsview2(std::string* pointsview2);
  private:
  const std::string& _internal_pointsview2() const;
  void _internal_set_pointsview2(const std::string& value);
  std::string* _internal_mutable_pointsview2();
  public:

  // bytes poseView1 = 3;
  void clear_poseview1();
  const std::string& poseview1() const;
  void set_poseview1(const std::string& value);
  void set_poseview1(std::string&& value);
  void set_poseview1(const char* value);
  void set_poseview1(const void* value, size_t size);
  std::string* mutable_poseview1();
  std::string* release_poseview1();
  void set_allocated_poseview1(std::string* poseview1);
  private:
  const std::string& _internal_poseview1() const;
  void _internal_set_poseview1(const std::string& value);
  std::string* _internal_mutable_poseview1();
  public:

  // bytes poseView2 = 4;
  void clear_poseview2();
  const std::string& poseview2() const;
  void set_poseview2(const std::string& value);
  void set_poseview2(std::string&& value);
  void set_poseview2(const char* value);
  void set_poseview2(const void* value, size_t size);
  std::string* mutable_poseview2();
  std::string* release_poseview2();
  void set_allocated_poseview2(std::string* poseview2);
  private:
  const std::string& _internal_poseview2() const;
  void _internal_set_poseview2(const std::string& value);
  std::string* _internal_mutable_poseview2();
  public:

  // bytes inlierMatches = 5;
  void clear_inliermatches();
  const std::string& inliermatches() const;
  void set_inliermatches(const std::string& value);
  void set_inliermatches(std::string&& value);
  void set_inliermatches(const char* value);
  void set_inliermatches(const void* value, size_t size);
  std::string* mutable_inliermatches();
  std::string* release_inliermatches();
  void set_allocated_inliermatches(std::string* inliermatches);
  private:
  const std::string& _internal_inliermatches() const;
  void _internal_set_inliermatches(const std::string& value);
  std::string* _internal_mutable_inliermatches();
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pointsview1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pointsview2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr poseview1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr poseview2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inliermatches_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformFinderFrom2D2DService_2eproto;
};
// -------------------------------------------------------------------

class estimate_grpc1Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response) */ {
 public:
  inline estimate_grpc1Response() : estimate_grpc1Response(nullptr) {}
  virtual ~estimate_grpc1Response();
  explicit constexpr estimate_grpc1Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  estimate_grpc1Response(const estimate_grpc1Response& from);
  estimate_grpc1Response(estimate_grpc1Response&& from) noexcept
    : estimate_grpc1Response() {
    *this = ::std::move(from);
  }

  inline estimate_grpc1Response& operator=(const estimate_grpc1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline estimate_grpc1Response& operator=(estimate_grpc1Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const estimate_grpc1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const estimate_grpc1Response* internal_default_instance() {
    return reinterpret_cast<const estimate_grpc1Response*>(
               &_estimate_grpc1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(estimate_grpc1Response& a, estimate_grpc1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(estimate_grpc1Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(estimate_grpc1Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline estimate_grpc1Response* New() const final {
    return CreateMaybeMessage<estimate_grpc1Response>(nullptr);
  }

  estimate_grpc1Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<estimate_grpc1Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const estimate_grpc1Response& from);
  void MergeFrom(const estimate_grpc1Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(estimate_grpc1Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response";
  }
  protected:
  explicit estimate_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcI3DTransformFinderFrom2D2DService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoseView2FieldNumber = 1,
    kInlierMatchesFieldNumber = 2,
    kXpcfGrpcReturnValueFieldNumber = 3,
  };
  // bytes poseView2 = 1;
  void clear_poseview2();
  const std::string& poseview2() const;
  void set_poseview2(const std::string& value);
  void set_poseview2(std::string&& value);
  void set_poseview2(const char* value);
  void set_poseview2(const void* value, size_t size);
  std::string* mutable_poseview2();
  std::string* release_poseview2();
  void set_allocated_poseview2(std::string* poseview2);
  private:
  const std::string& _internal_poseview2() const;
  void _internal_set_poseview2(const std::string& value);
  std::string* _internal_mutable_poseview2();
  public:

  // bytes inlierMatches = 2;
  void clear_inliermatches();
  const std::string& inliermatches() const;
  void set_inliermatches(const std::string& value);
  void set_inliermatches(std::string&& value);
  void set_inliermatches(const char* value);
  void set_inliermatches(const void* value, size_t size);
  std::string* mutable_inliermatches();
  std::string* release_inliermatches();
  void set_allocated_inliermatches(std::string* inliermatches);
  private:
  const std::string& _internal_inliermatches() const;
  void _internal_set_inliermatches(const std::string& value);
  std::string* _internal_mutable_inliermatches();
  public:

  // sint32 xpcfGrpcReturnValue = 3;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr poseview2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inliermatches_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcI3DTransformFinderFrom2D2DService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// setCameraParametersRequest

// bytes intrinsicParams = 1;
inline void setCameraParametersRequest::clear_intrinsicparams() {
  intrinsicparams_.ClearToEmpty();
}
inline const std::string& setCameraParametersRequest::intrinsicparams() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.intrinsicParams)
  return _internal_intrinsicparams();
}
inline void setCameraParametersRequest::set_intrinsicparams(const std::string& value) {
  _internal_set_intrinsicparams(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.intrinsicParams)
}
inline std::string* setCameraParametersRequest::mutable_intrinsicparams() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.intrinsicParams)
  return _internal_mutable_intrinsicparams();
}
inline const std::string& setCameraParametersRequest::_internal_intrinsicparams() const {
  return intrinsicparams_.Get();
}
inline void setCameraParametersRequest::_internal_set_intrinsicparams(const std::string& value) {
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void setCameraParametersRequest::set_intrinsicparams(std::string&& value) {
  
  intrinsicparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.intrinsicParams)
}
inline void setCameraParametersRequest::set_intrinsicparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.intrinsicParams)
}
inline void setCameraParametersRequest::set_intrinsicparams(const void* value,
    size_t size) {
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.intrinsicParams)
}
inline std::string* setCameraParametersRequest::_internal_mutable_intrinsicparams() {
  
  return intrinsicparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* setCameraParametersRequest::release_intrinsicparams() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.intrinsicParams)
  return intrinsicparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void setCameraParametersRequest::set_allocated_intrinsicparams(std::string* intrinsicparams) {
  if (intrinsicparams != nullptr) {
    
  } else {
    
  }
  intrinsicparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), intrinsicparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.intrinsicParams)
}

// bytes distorsionParams = 2;
inline void setCameraParametersRequest::clear_distorsionparams() {
  distorsionparams_.ClearToEmpty();
}
inline const std::string& setCameraParametersRequest::distorsionparams() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.distorsionParams)
  return _internal_distorsionparams();
}
inline void setCameraParametersRequest::set_distorsionparams(const std::string& value) {
  _internal_set_distorsionparams(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.distorsionParams)
}
inline std::string* setCameraParametersRequest::mutable_distorsionparams() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.distorsionParams)
  return _internal_mutable_distorsionparams();
}
inline const std::string& setCameraParametersRequest::_internal_distorsionparams() const {
  return distorsionparams_.Get();
}
inline void setCameraParametersRequest::_internal_set_distorsionparams(const std::string& value) {
  
  distorsionparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void setCameraParametersRequest::set_distorsionparams(std::string&& value) {
  
  distorsionparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.distorsionParams)
}
inline void setCameraParametersRequest::set_distorsionparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  distorsionparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.distorsionParams)
}
inline void setCameraParametersRequest::set_distorsionparams(const void* value,
    size_t size) {
  
  distorsionparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.distorsionParams)
}
inline std::string* setCameraParametersRequest::_internal_mutable_distorsionparams() {
  
  return distorsionparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* setCameraParametersRequest::release_distorsionparams() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.distorsionParams)
  return distorsionparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void setCameraParametersRequest::set_allocated_distorsionparams(std::string* distorsionparams) {
  if (distorsionparams != nullptr) {
    
  } else {
    
  }
  distorsionparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), distorsionparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.setCameraParametersRequest.distorsionParams)
}

// -------------------------------------------------------------------

// estimate_grpc0Request

// bytes pointsView1 = 1;
inline void estimate_grpc0Request::clear_pointsview1() {
  pointsview1_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Request::pointsview1() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView1)
  return _internal_pointsview1();
}
inline void estimate_grpc0Request::set_pointsview1(const std::string& value) {
  _internal_set_pointsview1(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView1)
}
inline std::string* estimate_grpc0Request::mutable_pointsview1() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView1)
  return _internal_mutable_pointsview1();
}
inline const std::string& estimate_grpc0Request::_internal_pointsview1() const {
  return pointsview1_.Get();
}
inline void estimate_grpc0Request::_internal_set_pointsview1(const std::string& value) {
  
  pointsview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Request::set_pointsview1(std::string&& value) {
  
  pointsview1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView1)
}
inline void estimate_grpc0Request::set_pointsview1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pointsview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView1)
}
inline void estimate_grpc0Request::set_pointsview1(const void* value,
    size_t size) {
  
  pointsview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView1)
}
inline std::string* estimate_grpc0Request::_internal_mutable_pointsview1() {
  
  return pointsview1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Request::release_pointsview1() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView1)
  return pointsview1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Request::set_allocated_pointsview1(std::string* pointsview1) {
  if (pointsview1 != nullptr) {
    
  } else {
    
  }
  pointsview1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pointsview1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView1)
}

// bytes pointsView2 = 2;
inline void estimate_grpc0Request::clear_pointsview2() {
  pointsview2_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Request::pointsview2() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView2)
  return _internal_pointsview2();
}
inline void estimate_grpc0Request::set_pointsview2(const std::string& value) {
  _internal_set_pointsview2(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView2)
}
inline std::string* estimate_grpc0Request::mutable_pointsview2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView2)
  return _internal_mutable_pointsview2();
}
inline const std::string& estimate_grpc0Request::_internal_pointsview2() const {
  return pointsview2_.Get();
}
inline void estimate_grpc0Request::_internal_set_pointsview2(const std::string& value) {
  
  pointsview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Request::set_pointsview2(std::string&& value) {
  
  pointsview2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView2)
}
inline void estimate_grpc0Request::set_pointsview2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pointsview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView2)
}
inline void estimate_grpc0Request::set_pointsview2(const void* value,
    size_t size) {
  
  pointsview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView2)
}
inline std::string* estimate_grpc0Request::_internal_mutable_pointsview2() {
  
  return pointsview2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Request::release_pointsview2() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView2)
  return pointsview2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Request::set_allocated_pointsview2(std::string* pointsview2) {
  if (pointsview2 != nullptr) {
    
  } else {
    
  }
  pointsview2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pointsview2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.pointsView2)
}

// bytes poseView1 = 3;
inline void estimate_grpc0Request::clear_poseview1() {
  poseview1_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Request::poseview1() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView1)
  return _internal_poseview1();
}
inline void estimate_grpc0Request::set_poseview1(const std::string& value) {
  _internal_set_poseview1(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView1)
}
inline std::string* estimate_grpc0Request::mutable_poseview1() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView1)
  return _internal_mutable_poseview1();
}
inline const std::string& estimate_grpc0Request::_internal_poseview1() const {
  return poseview1_.Get();
}
inline void estimate_grpc0Request::_internal_set_poseview1(const std::string& value) {
  
  poseview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Request::set_poseview1(std::string&& value) {
  
  poseview1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView1)
}
inline void estimate_grpc0Request::set_poseview1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  poseview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView1)
}
inline void estimate_grpc0Request::set_poseview1(const void* value,
    size_t size) {
  
  poseview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView1)
}
inline std::string* estimate_grpc0Request::_internal_mutable_poseview1() {
  
  return poseview1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Request::release_poseview1() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView1)
  return poseview1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Request::set_allocated_poseview1(std::string* poseview1) {
  if (poseview1 != nullptr) {
    
  } else {
    
  }
  poseview1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), poseview1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView1)
}

// bytes poseView2 = 4;
inline void estimate_grpc0Request::clear_poseview2() {
  poseview2_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Request::poseview2() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView2)
  return _internal_poseview2();
}
inline void estimate_grpc0Request::set_poseview2(const std::string& value) {
  _internal_set_poseview2(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView2)
}
inline std::string* estimate_grpc0Request::mutable_poseview2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView2)
  return _internal_mutable_poseview2();
}
inline const std::string& estimate_grpc0Request::_internal_poseview2() const {
  return poseview2_.Get();
}
inline void estimate_grpc0Request::_internal_set_poseview2(const std::string& value) {
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Request::set_poseview2(std::string&& value) {
  
  poseview2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView2)
}
inline void estimate_grpc0Request::set_poseview2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView2)
}
inline void estimate_grpc0Request::set_poseview2(const void* value,
    size_t size) {
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView2)
}
inline std::string* estimate_grpc0Request::_internal_mutable_poseview2() {
  
  return poseview2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Request::release_poseview2() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView2)
  return poseview2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Request::set_allocated_poseview2(std::string* poseview2) {
  if (poseview2 != nullptr) {
    
  } else {
    
  }
  poseview2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), poseview2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.poseView2)
}

// bytes inlierMatches = 5;
inline void estimate_grpc0Request::clear_inliermatches() {
  inliermatches_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Request::inliermatches() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.inlierMatches)
  return _internal_inliermatches();
}
inline void estimate_grpc0Request::set_inliermatches(const std::string& value) {
  _internal_set_inliermatches(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.inlierMatches)
}
inline std::string* estimate_grpc0Request::mutable_inliermatches() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.inlierMatches)
  return _internal_mutable_inliermatches();
}
inline const std::string& estimate_grpc0Request::_internal_inliermatches() const {
  return inliermatches_.Get();
}
inline void estimate_grpc0Request::_internal_set_inliermatches(const std::string& value) {
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Request::set_inliermatches(std::string&& value) {
  
  inliermatches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.inlierMatches)
}
inline void estimate_grpc0Request::set_inliermatches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.inlierMatches)
}
inline void estimate_grpc0Request::set_inliermatches(const void* value,
    size_t size) {
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.inlierMatches)
}
inline std::string* estimate_grpc0Request::_internal_mutable_inliermatches() {
  
  return inliermatches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Request::release_inliermatches() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.inlierMatches)
  return inliermatches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Request::set_allocated_inliermatches(std::string* inliermatches) {
  if (inliermatches != nullptr) {
    
  } else {
    
  }
  inliermatches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inliermatches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Request.inlierMatches)
}

// -------------------------------------------------------------------

// estimate_grpc0Response

// bytes poseView2 = 1;
inline void estimate_grpc0Response::clear_poseview2() {
  poseview2_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Response::poseview2() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.poseView2)
  return _internal_poseview2();
}
inline void estimate_grpc0Response::set_poseview2(const std::string& value) {
  _internal_set_poseview2(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.poseView2)
}
inline std::string* estimate_grpc0Response::mutable_poseview2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.poseView2)
  return _internal_mutable_poseview2();
}
inline const std::string& estimate_grpc0Response::_internal_poseview2() const {
  return poseview2_.Get();
}
inline void estimate_grpc0Response::_internal_set_poseview2(const std::string& value) {
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Response::set_poseview2(std::string&& value) {
  
  poseview2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.poseView2)
}
inline void estimate_grpc0Response::set_poseview2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.poseView2)
}
inline void estimate_grpc0Response::set_poseview2(const void* value,
    size_t size) {
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.poseView2)
}
inline std::string* estimate_grpc0Response::_internal_mutable_poseview2() {
  
  return poseview2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Response::release_poseview2() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.poseView2)
  return poseview2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Response::set_allocated_poseview2(std::string* poseview2) {
  if (poseview2 != nullptr) {
    
  } else {
    
  }
  poseview2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), poseview2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.poseView2)
}

// bytes inlierMatches = 2;
inline void estimate_grpc0Response::clear_inliermatches() {
  inliermatches_.ClearToEmpty();
}
inline const std::string& estimate_grpc0Response::inliermatches() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.inlierMatches)
  return _internal_inliermatches();
}
inline void estimate_grpc0Response::set_inliermatches(const std::string& value) {
  _internal_set_inliermatches(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.inlierMatches)
}
inline std::string* estimate_grpc0Response::mutable_inliermatches() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.inlierMatches)
  return _internal_mutable_inliermatches();
}
inline const std::string& estimate_grpc0Response::_internal_inliermatches() const {
  return inliermatches_.Get();
}
inline void estimate_grpc0Response::_internal_set_inliermatches(const std::string& value) {
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc0Response::set_inliermatches(std::string&& value) {
  
  inliermatches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.inlierMatches)
}
inline void estimate_grpc0Response::set_inliermatches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.inlierMatches)
}
inline void estimate_grpc0Response::set_inliermatches(const void* value,
    size_t size) {
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.inlierMatches)
}
inline std::string* estimate_grpc0Response::_internal_mutable_inliermatches() {
  
  return inliermatches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc0Response::release_inliermatches() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.inlierMatches)
  return inliermatches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc0Response::set_allocated_inliermatches(std::string* inliermatches) {
  if (inliermatches != nullptr) {
    
  } else {
    
  }
  inliermatches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inliermatches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.inlierMatches)
}

// sint32 xpcfGrpcReturnValue = 3;
inline void estimate_grpc0Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc0Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc0Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void estimate_grpc0Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void estimate_grpc0Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc0Response.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// estimate_grpc1Request

// bytes pointsView1 = 1;
inline void estimate_grpc1Request::clear_pointsview1() {
  pointsview1_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::pointsview1() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView1)
  return _internal_pointsview1();
}
inline void estimate_grpc1Request::set_pointsview1(const std::string& value) {
  _internal_set_pointsview1(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView1)
}
inline std::string* estimate_grpc1Request::mutable_pointsview1() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView1)
  return _internal_mutable_pointsview1();
}
inline const std::string& estimate_grpc1Request::_internal_pointsview1() const {
  return pointsview1_.Get();
}
inline void estimate_grpc1Request::_internal_set_pointsview1(const std::string& value) {
  
  pointsview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_pointsview1(std::string&& value) {
  
  pointsview1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView1)
}
inline void estimate_grpc1Request::set_pointsview1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pointsview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView1)
}
inline void estimate_grpc1Request::set_pointsview1(const void* value,
    size_t size) {
  
  pointsview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView1)
}
inline std::string* estimate_grpc1Request::_internal_mutable_pointsview1() {
  
  return pointsview1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_pointsview1() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView1)
  return pointsview1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_pointsview1(std::string* pointsview1) {
  if (pointsview1 != nullptr) {
    
  } else {
    
  }
  pointsview1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pointsview1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView1)
}

// bytes pointsView2 = 2;
inline void estimate_grpc1Request::clear_pointsview2() {
  pointsview2_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::pointsview2() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView2)
  return _internal_pointsview2();
}
inline void estimate_grpc1Request::set_pointsview2(const std::string& value) {
  _internal_set_pointsview2(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView2)
}
inline std::string* estimate_grpc1Request::mutable_pointsview2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView2)
  return _internal_mutable_pointsview2();
}
inline const std::string& estimate_grpc1Request::_internal_pointsview2() const {
  return pointsview2_.Get();
}
inline void estimate_grpc1Request::_internal_set_pointsview2(const std::string& value) {
  
  pointsview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_pointsview2(std::string&& value) {
  
  pointsview2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView2)
}
inline void estimate_grpc1Request::set_pointsview2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pointsview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView2)
}
inline void estimate_grpc1Request::set_pointsview2(const void* value,
    size_t size) {
  
  pointsview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView2)
}
inline std::string* estimate_grpc1Request::_internal_mutable_pointsview2() {
  
  return pointsview2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_pointsview2() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView2)
  return pointsview2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_pointsview2(std::string* pointsview2) {
  if (pointsview2 != nullptr) {
    
  } else {
    
  }
  pointsview2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pointsview2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.pointsView2)
}

// bytes poseView1 = 3;
inline void estimate_grpc1Request::clear_poseview1() {
  poseview1_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::poseview1() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView1)
  return _internal_poseview1();
}
inline void estimate_grpc1Request::set_poseview1(const std::string& value) {
  _internal_set_poseview1(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView1)
}
inline std::string* estimate_grpc1Request::mutable_poseview1() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView1)
  return _internal_mutable_poseview1();
}
inline const std::string& estimate_grpc1Request::_internal_poseview1() const {
  return poseview1_.Get();
}
inline void estimate_grpc1Request::_internal_set_poseview1(const std::string& value) {
  
  poseview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_poseview1(std::string&& value) {
  
  poseview1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView1)
}
inline void estimate_grpc1Request::set_poseview1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  poseview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView1)
}
inline void estimate_grpc1Request::set_poseview1(const void* value,
    size_t size) {
  
  poseview1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView1)
}
inline std::string* estimate_grpc1Request::_internal_mutable_poseview1() {
  
  return poseview1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_poseview1() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView1)
  return poseview1_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_poseview1(std::string* poseview1) {
  if (poseview1 != nullptr) {
    
  } else {
    
  }
  poseview1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), poseview1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView1)
}

// bytes poseView2 = 4;
inline void estimate_grpc1Request::clear_poseview2() {
  poseview2_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::poseview2() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView2)
  return _internal_poseview2();
}
inline void estimate_grpc1Request::set_poseview2(const std::string& value) {
  _internal_set_poseview2(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView2)
}
inline std::string* estimate_grpc1Request::mutable_poseview2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView2)
  return _internal_mutable_poseview2();
}
inline const std::string& estimate_grpc1Request::_internal_poseview2() const {
  return poseview2_.Get();
}
inline void estimate_grpc1Request::_internal_set_poseview2(const std::string& value) {
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_poseview2(std::string&& value) {
  
  poseview2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView2)
}
inline void estimate_grpc1Request::set_poseview2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView2)
}
inline void estimate_grpc1Request::set_poseview2(const void* value,
    size_t size) {
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView2)
}
inline std::string* estimate_grpc1Request::_internal_mutable_poseview2() {
  
  return poseview2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_poseview2() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView2)
  return poseview2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_poseview2(std::string* poseview2) {
  if (poseview2 != nullptr) {
    
  } else {
    
  }
  poseview2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), poseview2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.poseView2)
}

// bytes inlierMatches = 5;
inline void estimate_grpc1Request::clear_inliermatches() {
  inliermatches_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Request::inliermatches() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.inlierMatches)
  return _internal_inliermatches();
}
inline void estimate_grpc1Request::set_inliermatches(const std::string& value) {
  _internal_set_inliermatches(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.inlierMatches)
}
inline std::string* estimate_grpc1Request::mutable_inliermatches() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.inlierMatches)
  return _internal_mutable_inliermatches();
}
inline const std::string& estimate_grpc1Request::_internal_inliermatches() const {
  return inliermatches_.Get();
}
inline void estimate_grpc1Request::_internal_set_inliermatches(const std::string& value) {
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Request::set_inliermatches(std::string&& value) {
  
  inliermatches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.inlierMatches)
}
inline void estimate_grpc1Request::set_inliermatches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.inlierMatches)
}
inline void estimate_grpc1Request::set_inliermatches(const void* value,
    size_t size) {
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.inlierMatches)
}
inline std::string* estimate_grpc1Request::_internal_mutable_inliermatches() {
  
  return inliermatches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Request::release_inliermatches() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.inlierMatches)
  return inliermatches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Request::set_allocated_inliermatches(std::string* inliermatches) {
  if (inliermatches != nullptr) {
    
  } else {
    
  }
  inliermatches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inliermatches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Request.inlierMatches)
}

// -------------------------------------------------------------------

// estimate_grpc1Response

// bytes poseView2 = 1;
inline void estimate_grpc1Response::clear_poseview2() {
  poseview2_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Response::poseview2() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.poseView2)
  return _internal_poseview2();
}
inline void estimate_grpc1Response::set_poseview2(const std::string& value) {
  _internal_set_poseview2(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.poseView2)
}
inline std::string* estimate_grpc1Response::mutable_poseview2() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.poseView2)
  return _internal_mutable_poseview2();
}
inline const std::string& estimate_grpc1Response::_internal_poseview2() const {
  return poseview2_.Get();
}
inline void estimate_grpc1Response::_internal_set_poseview2(const std::string& value) {
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Response::set_poseview2(std::string&& value) {
  
  poseview2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.poseView2)
}
inline void estimate_grpc1Response::set_poseview2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.poseView2)
}
inline void estimate_grpc1Response::set_poseview2(const void* value,
    size_t size) {
  
  poseview2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.poseView2)
}
inline std::string* estimate_grpc1Response::_internal_mutable_poseview2() {
  
  return poseview2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Response::release_poseview2() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.poseView2)
  return poseview2_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Response::set_allocated_poseview2(std::string* poseview2) {
  if (poseview2 != nullptr) {
    
  } else {
    
  }
  poseview2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), poseview2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.poseView2)
}

// bytes inlierMatches = 2;
inline void estimate_grpc1Response::clear_inliermatches() {
  inliermatches_.ClearToEmpty();
}
inline const std::string& estimate_grpc1Response::inliermatches() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.inlierMatches)
  return _internal_inliermatches();
}
inline void estimate_grpc1Response::set_inliermatches(const std::string& value) {
  _internal_set_inliermatches(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.inlierMatches)
}
inline std::string* estimate_grpc1Response::mutable_inliermatches() {
  // @@protoc_insertion_point(field_mutable:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.inlierMatches)
  return _internal_mutable_inliermatches();
}
inline const std::string& estimate_grpc1Response::_internal_inliermatches() const {
  return inliermatches_.Get();
}
inline void estimate_grpc1Response::_internal_set_inliermatches(const std::string& value) {
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void estimate_grpc1Response::set_inliermatches(std::string&& value) {
  
  inliermatches_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.inlierMatches)
}
inline void estimate_grpc1Response::set_inliermatches(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.inlierMatches)
}
inline void estimate_grpc1Response::set_inliermatches(const void* value,
    size_t size) {
  
  inliermatches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.inlierMatches)
}
inline std::string* estimate_grpc1Response::_internal_mutable_inliermatches() {
  
  return inliermatches_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* estimate_grpc1Response::release_inliermatches() {
  // @@protoc_insertion_point(field_release:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.inlierMatches)
  return inliermatches_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void estimate_grpc1Response::set_allocated_inliermatches(std::string* inliermatches) {
  if (inliermatches != nullptr) {
    
  } else {
    
  }
  inliermatches_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inliermatches,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.inlierMatches)
}

// sint32 xpcfGrpcReturnValue = 3;
inline void estimate_grpc1Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc1Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 estimate_grpc1Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void estimate_grpc1Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void estimate_grpc1Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcI3DTransformFinderFrom2D2D.estimate_grpc1Response.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcI3DTransformFinderFrom2D2D

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcI3DTransformFinderFrom2D2DService_2eproto
