// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIDescriptorMatcherGeometricService.proto

#include "grpcIDescriptorMatcherGeometricService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIDescriptorMatcherGeometric {
constexpr match_grpc0Request::match_grpc0Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : descriptors1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , descriptors2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , undistortedkeypoints1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , undistortedkeypoints2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pose1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , pose2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , camparams_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mask_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct match_grpc0RequestDefaultTypeInternal {
  constexpr match_grpc0RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc0RequestDefaultTypeInternal() {}
  union {
    match_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc0RequestDefaultTypeInternal _match_grpc0Request_default_instance_;
constexpr match_grpc0Response::match_grpc0Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct match_grpc0ResponseDefaultTypeInternal {
  constexpr match_grpc0ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc0ResponseDefaultTypeInternal() {}
  union {
    match_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc0ResponseDefaultTypeInternal _match_grpc0Response_default_instance_;
constexpr match_grpc1Request::match_grpc1Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : frame1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , frame2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , camparams_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mask_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct match_grpc1RequestDefaultTypeInternal {
  constexpr match_grpc1RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc1RequestDefaultTypeInternal() {}
  union {
    match_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc1RequestDefaultTypeInternal _match_grpc1Request_default_instance_;
constexpr match_grpc1Response::match_grpc1Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct match_grpc1ResponseDefaultTypeInternal {
  constexpr match_grpc1ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc1ResponseDefaultTypeInternal() {}
  union {
    match_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc1ResponseDefaultTypeInternal _match_grpc1Response_default_instance_;
}  // namespace grpcIDescriptorMatcherGeometric
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIDescriptorMatcherGeometricService_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIDescriptorMatcherGeometricService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIDescriptorMatcherGeometricService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIDescriptorMatcherGeometricService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, descriptors1_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, descriptors2_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, undistortedkeypoints1_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, undistortedkeypoints2_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, pose1_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, pose2_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, camparams_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, mask_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Request, matches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Response, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc0Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc1Request, frame1_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc1Request, frame2_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc1Request, camparams_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc1Request, mask_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc1Request, matches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc1Response, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherGeometric::match_grpc1Response, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIDescriptorMatcherGeometric::match_grpc0Request)},
  { 14, -1, sizeof(::grpcIDescriptorMatcherGeometric::match_grpc0Response)},
  { 21, -1, sizeof(::grpcIDescriptorMatcherGeometric::match_grpc1Request)},
  { 31, -1, sizeof(::grpcIDescriptorMatcherGeometric::match_grpc1Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherGeometric::_match_grpc0Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherGeometric::_match_grpc0Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherGeometric::_match_grpc1Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherGeometric::_match_grpc1Response_default_instance_),
};

const char descriptor_table_protodef_grpcIDescriptorMatcherGeometricService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,grpcIDescriptorMatcherGeometricService"
  ".proto\022\037grpcIDescriptorMatcherGeometric\032"
  "\033google/protobuf/empty.proto\"\316\001\n\022match_g"
  "rpc0Request\022\024\n\014descriptors1\030\001 \001(\014\022\024\n\014des"
  "criptors2\030\002 \001(\014\022\035\n\025undistortedKeypoints1"
  "\030\003 \001(\014\022\035\n\025undistortedKeypoints2\030\004 \001(\014\022\r\n"
  "\005pose1\030\005 \001(\014\022\r\n\005pose2\030\006 \001(\014\022\021\n\tcamParams"
  "\030\007 \001(\014\022\014\n\004mask\030\010 \001(\014\022\017\n\007matches\030\t \001(\014\"C\n"
  "\023match_grpc0Response\022\017\n\007matches\030\001 \001(\014\022\033\n"
  "\023xpcfGrpcReturnValue\030\002 \001(\021\"f\n\022match_grpc"
  "1Request\022\016\n\006frame1\030\001 \001(\014\022\016\n\006frame2\030\002 \001(\014"
  "\022\021\n\tcamParams\030\003 \001(\014\022\014\n\004mask\030\004 \001(\014\022\017\n\007mat"
  "ches\030\005 \001(\014\"C\n\023match_grpc1Response\022\017\n\007mat"
  "ches\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 \001(\0212"
  "\240\002\n&grpcIDescriptorMatcherGeometricServi"
  "ce\022z\n\013match_grpc0\0223.grpcIDescriptorMatch"
  "erGeometric.match_grpc0Request\0324.grpcIDe"
  "scriptorMatcherGeometric.match_grpc0Resp"
  "onse\"\000\022z\n\013match_grpc1\0223.grpcIDescriptorM"
  "atcherGeometric.match_grpc1Request\0324.grp"
  "cIDescriptorMatcherGeometric.match_grpc1"
  "Response\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIDescriptorMatcherGeometricService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIDescriptorMatcherGeometricService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIDescriptorMatcherGeometricService_2eproto = {
  false, false, 858, descriptor_table_protodef_grpcIDescriptorMatcherGeometricService_2eproto, "grpcIDescriptorMatcherGeometricService.proto", 
  &descriptor_table_grpcIDescriptorMatcherGeometricService_2eproto_once, descriptor_table_grpcIDescriptorMatcherGeometricService_2eproto_deps, 1, 4,
  schemas, file_default_instances, TableStruct_grpcIDescriptorMatcherGeometricService_2eproto::offsets,
  file_level_metadata_grpcIDescriptorMatcherGeometricService_2eproto, file_level_enum_descriptors_grpcIDescriptorMatcherGeometricService_2eproto, file_level_service_descriptors_grpcIDescriptorMatcherGeometricService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIDescriptorMatcherGeometricService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIDescriptorMatcherGeometricService_2eproto);
  return descriptor_table_grpcIDescriptorMatcherGeometricService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIDescriptorMatcherGeometricService_2eproto(&descriptor_table_grpcIDescriptorMatcherGeometricService_2eproto);
namespace grpcIDescriptorMatcherGeometric {

// ===================================================================

class match_grpc0Request::_Internal {
 public:
};

match_grpc0Request::match_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherGeometric.match_grpc0Request)
}
match_grpc0Request::match_grpc0Request(const match_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  descriptors1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descriptors1().empty()) {
    descriptors1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descriptors1(), 
      GetArena());
  }
  descriptors2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descriptors2().empty()) {
    descriptors2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descriptors2(), 
      GetArena());
  }
  undistortedkeypoints1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_undistortedkeypoints1().empty()) {
    undistortedkeypoints1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_undistortedkeypoints1(), 
      GetArena());
  }
  undistortedkeypoints2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_undistortedkeypoints2().empty()) {
    undistortedkeypoints2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_undistortedkeypoints2(), 
      GetArena());
  }
  pose1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pose1().empty()) {
    pose1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pose1(), 
      GetArena());
  }
  pose2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pose2().empty()) {
    pose2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pose2(), 
      GetArena());
  }
  camparams_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_camparams().empty()) {
    camparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_camparams(), 
      GetArena());
  }
  mask_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mask().empty()) {
    mask_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mask(), 
      GetArena());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherGeometric.match_grpc0Request)
}

void match_grpc0Request::SharedCtor() {
descriptors1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
descriptors2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
undistortedkeypoints1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
undistortedkeypoints2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pose1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
pose2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
camparams_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
mask_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

match_grpc0Request::~match_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherGeometric.match_grpc0Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  descriptors1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descriptors2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undistortedkeypoints1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  undistortedkeypoints2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pose1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pose2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  camparams_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mask_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc0Request::ArenaDtor(void* object) {
  match_grpc0Request* _this = reinterpret_cast< match_grpc0Request* >(object);
  (void)_this;
}
void match_grpc0Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherGeometric.match_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptors1_.ClearToEmpty();
  descriptors2_.ClearToEmpty();
  undistortedkeypoints1_.ClearToEmpty();
  undistortedkeypoints2_.ClearToEmpty();
  pose1_.ClearToEmpty();
  pose2_.ClearToEmpty();
  camparams_.ClearToEmpty();
  mask_.ClearToEmpty();
  matches_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc0Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes descriptors1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_descriptors1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes descriptors2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_descriptors2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes undistortedKeypoints1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_undistortedkeypoints1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes undistortedKeypoints2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_undistortedkeypoints2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pose1 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_pose1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pose2 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_pose2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes camParams = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_camparams();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes mask = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_mask();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes matches = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc0Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherGeometric.match_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes descriptors1 = 1;
  if (this->descriptors1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_descriptors1(), target);
  }

  // bytes descriptors2 = 2;
  if (this->descriptors2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_descriptors2(), target);
  }

  // bytes undistortedKeypoints1 = 3;
  if (this->undistortedkeypoints1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_undistortedkeypoints1(), target);
  }

  // bytes undistortedKeypoints2 = 4;
  if (this->undistortedkeypoints2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_undistortedkeypoints2(), target);
  }

  // bytes pose1 = 5;
  if (this->pose1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_pose1(), target);
  }

  // bytes pose2 = 6;
  if (this->pose2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_pose2(), target);
  }

  // bytes camParams = 7;
  if (this->camparams().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_camparams(), target);
  }

  // bytes mask = 8;
  if (this->mask().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_mask(), target);
  }

  // bytes matches = 9;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_matches(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherGeometric.match_grpc0Request)
  return target;
}

size_t match_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherGeometric.match_grpc0Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes descriptors1 = 1;
  if (this->descriptors1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors1());
  }

  // bytes descriptors2 = 2;
  if (this->descriptors2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors2());
  }

  // bytes undistortedKeypoints1 = 3;
  if (this->undistortedkeypoints1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_undistortedkeypoints1());
  }

  // bytes undistortedKeypoints2 = 4;
  if (this->undistortedkeypoints2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_undistortedkeypoints2());
  }

  // bytes pose1 = 5;
  if (this->pose1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pose1());
  }

  // bytes pose2 = 6;
  if (this->pose2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pose2());
  }

  // bytes camParams = 7;
  if (this->camparams().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams());
  }

  // bytes mask = 8;
  if (this->mask().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mask());
  }

  // bytes matches = 9;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc0Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherGeometric.match_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc0Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc0Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherGeometric.match_grpc0Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherGeometric.match_grpc0Request)
    MergeFrom(*source);
  }
}

void match_grpc0Request::MergeFrom(const match_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherGeometric.match_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.descriptors1().size() > 0) {
    _internal_set_descriptors1(from._internal_descriptors1());
  }
  if (from.descriptors2().size() > 0) {
    _internal_set_descriptors2(from._internal_descriptors2());
  }
  if (from.undistortedkeypoints1().size() > 0) {
    _internal_set_undistortedkeypoints1(from._internal_undistortedkeypoints1());
  }
  if (from.undistortedkeypoints2().size() > 0) {
    _internal_set_undistortedkeypoints2(from._internal_undistortedkeypoints2());
  }
  if (from.pose1().size() > 0) {
    _internal_set_pose1(from._internal_pose1());
  }
  if (from.pose2().size() > 0) {
    _internal_set_pose2(from._internal_pose2());
  }
  if (from.camparams().size() > 0) {
    _internal_set_camparams(from._internal_camparams());
  }
  if (from.mask().size() > 0) {
    _internal_set_mask(from._internal_mask());
  }
  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
}

void match_grpc0Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherGeometric.match_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc0Request::CopyFrom(const match_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherGeometric.match_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc0Request::IsInitialized() const {
  return true;
}

void match_grpc0Request::InternalSwap(match_grpc0Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  descriptors1_.Swap(&other->descriptors1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  descriptors2_.Swap(&other->descriptors2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  undistortedkeypoints1_.Swap(&other->undistortedkeypoints1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  undistortedkeypoints2_.Swap(&other->undistortedkeypoints2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pose1_.Swap(&other->pose1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pose2_.Swap(&other->pose2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  camparams_.Swap(&other->camparams_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mask_.Swap(&other->mask_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc0Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class match_grpc0Response::_Internal {
 public:
};

match_grpc0Response::match_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherGeometric.match_grpc0Response)
}
match_grpc0Response::match_grpc0Response(const match_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherGeometric.match_grpc0Response)
}

void match_grpc0Response::SharedCtor() {
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

match_grpc0Response::~match_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherGeometric.match_grpc0Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc0Response::ArenaDtor(void* object) {
  match_grpc0Response* _this = reinterpret_cast< match_grpc0Response* >(object);
  (void)_this;
}
void match_grpc0Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherGeometric.match_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matches_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc0Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes matches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc0Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherGeometric.match_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_matches(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherGeometric.match_grpc0Response)
  return target;
}

size_t match_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherGeometric.match_grpc0Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc0Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherGeometric.match_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc0Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc0Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherGeometric.match_grpc0Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherGeometric.match_grpc0Response)
    MergeFrom(*source);
  }
}

void match_grpc0Response::MergeFrom(const match_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherGeometric.match_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void match_grpc0Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherGeometric.match_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc0Response::CopyFrom(const match_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherGeometric.match_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc0Response::IsInitialized() const {
  return true;
}

void match_grpc0Response::InternalSwap(match_grpc0Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc0Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class match_grpc1Request::_Internal {
 public:
};

match_grpc1Request::match_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherGeometric.match_grpc1Request)
}
match_grpc1Request::match_grpc1Request(const match_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  frame1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_frame1().empty()) {
    frame1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_frame1(), 
      GetArena());
  }
  frame2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_frame2().empty()) {
    frame2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_frame2(), 
      GetArena());
  }
  camparams_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_camparams().empty()) {
    camparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_camparams(), 
      GetArena());
  }
  mask_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mask().empty()) {
    mask_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mask(), 
      GetArena());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherGeometric.match_grpc1Request)
}

void match_grpc1Request::SharedCtor() {
frame1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
frame2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
camparams_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
mask_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

match_grpc1Request::~match_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherGeometric.match_grpc1Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  frame1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frame2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  camparams_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mask_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc1Request::ArenaDtor(void* object) {
  match_grpc1Request* _this = reinterpret_cast< match_grpc1Request* >(object);
  (void)_this;
}
void match_grpc1Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherGeometric.match_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frame1_.ClearToEmpty();
  frame2_.ClearToEmpty();
  camparams_.ClearToEmpty();
  mask_.ClearToEmpty();
  matches_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc1Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes frame1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_frame1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes frame2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_frame2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes camParams = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_camparams();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes mask = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_mask();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes matches = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc1Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherGeometric.match_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes frame1 = 1;
  if (this->frame1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_frame1(), target);
  }

  // bytes frame2 = 2;
  if (this->frame2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_frame2(), target);
  }

  // bytes camParams = 3;
  if (this->camparams().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_camparams(), target);
  }

  // bytes mask = 4;
  if (this->mask().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_mask(), target);
  }

  // bytes matches = 5;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_matches(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherGeometric.match_grpc1Request)
  return target;
}

size_t match_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherGeometric.match_grpc1Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes frame1 = 1;
  if (this->frame1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frame1());
  }

  // bytes frame2 = 2;
  if (this->frame2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frame2());
  }

  // bytes camParams = 3;
  if (this->camparams().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_camparams());
  }

  // bytes mask = 4;
  if (this->mask().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mask());
  }

  // bytes matches = 5;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc1Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherGeometric.match_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc1Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc1Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherGeometric.match_grpc1Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherGeometric.match_grpc1Request)
    MergeFrom(*source);
  }
}

void match_grpc1Request::MergeFrom(const match_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherGeometric.match_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.frame1().size() > 0) {
    _internal_set_frame1(from._internal_frame1());
  }
  if (from.frame2().size() > 0) {
    _internal_set_frame2(from._internal_frame2());
  }
  if (from.camparams().size() > 0) {
    _internal_set_camparams(from._internal_camparams());
  }
  if (from.mask().size() > 0) {
    _internal_set_mask(from._internal_mask());
  }
  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
}

void match_grpc1Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherGeometric.match_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc1Request::CopyFrom(const match_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherGeometric.match_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc1Request::IsInitialized() const {
  return true;
}

void match_grpc1Request::InternalSwap(match_grpc1Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  frame1_.Swap(&other->frame1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frame2_.Swap(&other->frame2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  camparams_.Swap(&other->camparams_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mask_.Swap(&other->mask_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc1Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class match_grpc1Response::_Internal {
 public:
};

match_grpc1Response::match_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherGeometric.match_grpc1Response)
}
match_grpc1Response::match_grpc1Response(const match_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherGeometric.match_grpc1Response)
}

void match_grpc1Response::SharedCtor() {
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

match_grpc1Response::~match_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherGeometric.match_grpc1Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc1Response::ArenaDtor(void* object) {
  match_grpc1Response* _this = reinterpret_cast< match_grpc1Response* >(object);
  (void)_this;
}
void match_grpc1Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc1Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherGeometric.match_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matches_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc1Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes matches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc1Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherGeometric.match_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_matches(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherGeometric.match_grpc1Response)
  return target;
}

size_t match_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherGeometric.match_grpc1Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc1Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherGeometric.match_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc1Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc1Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherGeometric.match_grpc1Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherGeometric.match_grpc1Response)
    MergeFrom(*source);
  }
}

void match_grpc1Response::MergeFrom(const match_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherGeometric.match_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void match_grpc1Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherGeometric.match_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc1Response::CopyFrom(const match_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherGeometric.match_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc1Response::IsInitialized() const {
  return true;
}

void match_grpc1Response::InternalSwap(match_grpc1Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc1Response::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIDescriptorMatcherGeometric
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherGeometric::match_grpc0Request* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherGeometric::match_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherGeometric::match_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherGeometric::match_grpc0Response* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherGeometric::match_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherGeometric::match_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherGeometric::match_grpc1Request* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherGeometric::match_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherGeometric::match_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherGeometric::match_grpc1Response* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherGeometric::match_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherGeometric::match_grpc1Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
