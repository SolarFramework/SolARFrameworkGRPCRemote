// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: grpcIKeyframeRetrieverService.proto

#include "grpcIKeyframeRetrieverService.pb.h"
#include "grpcIKeyframeRetrieverService.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace grpcIKeyframeRetriever {

static const char* grpcIKeyframeRetrieverService_method_names[] = {
  "/grpcIKeyframeRetriever.grpcIKeyframeRetrieverService/addKeyframe",
  "/grpcIKeyframeRetriever.grpcIKeyframeRetrieverService/suppressKeyframe",
  "/grpcIKeyframeRetriever.grpcIKeyframeRetrieverService/retrieve_grpc0",
  "/grpcIKeyframeRetriever.grpcIKeyframeRetrieverService/retrieve_grpc1",
  "/grpcIKeyframeRetriever.grpcIKeyframeRetrieverService/saveToFile",
  "/grpcIKeyframeRetriever.grpcIKeyframeRetrieverService/loadFromFile",
  "/grpcIKeyframeRetriever.grpcIKeyframeRetrieverService/match_grpc0",
  "/grpcIKeyframeRetriever.grpcIKeyframeRetrieverService/match_grpc1",
};

std::unique_ptr< grpcIKeyframeRetrieverService::Stub> grpcIKeyframeRetrieverService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< grpcIKeyframeRetrieverService::Stub> stub(new grpcIKeyframeRetrieverService::Stub(channel));
  return stub;
}

grpcIKeyframeRetrieverService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_addKeyframe_(grpcIKeyframeRetrieverService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_suppressKeyframe_(grpcIKeyframeRetrieverService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_retrieve_grpc0_(grpcIKeyframeRetrieverService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_retrieve_grpc1_(grpcIKeyframeRetrieverService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_saveToFile_(grpcIKeyframeRetrieverService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_loadFromFile_(grpcIKeyframeRetrieverService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_match_grpc0_(grpcIKeyframeRetrieverService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_match_grpc1_(grpcIKeyframeRetrieverService_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status grpcIKeyframeRetrieverService::Stub::addKeyframe(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::addKeyframeRequest& request, ::grpcIKeyframeRetriever::addKeyframeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIKeyframeRetriever::addKeyframeRequest, ::grpcIKeyframeRetriever::addKeyframeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_addKeyframe_, context, request, response);
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::addKeyframe(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::addKeyframeRequest* request, ::grpcIKeyframeRetriever::addKeyframeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIKeyframeRetriever::addKeyframeRequest, ::grpcIKeyframeRetriever::addKeyframeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addKeyframe_, context, request, response, std::move(f));
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::addKeyframe(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::addKeyframeRequest* request, ::grpcIKeyframeRetriever::addKeyframeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_addKeyframe_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::addKeyframeResponse>* grpcIKeyframeRetrieverService::Stub::PrepareAsyncaddKeyframeRaw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::addKeyframeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIKeyframeRetriever::addKeyframeResponse, ::grpcIKeyframeRetriever::addKeyframeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_addKeyframe_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::addKeyframeResponse>* grpcIKeyframeRetrieverService::Stub::AsyncaddKeyframeRaw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::addKeyframeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncaddKeyframeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIKeyframeRetrieverService::Stub::suppressKeyframe(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::suppressKeyframeRequest& request, ::grpcIKeyframeRetriever::suppressKeyframeResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIKeyframeRetriever::suppressKeyframeRequest, ::grpcIKeyframeRetriever::suppressKeyframeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_suppressKeyframe_, context, request, response);
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::suppressKeyframe(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::suppressKeyframeRequest* request, ::grpcIKeyframeRetriever::suppressKeyframeResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIKeyframeRetriever::suppressKeyframeRequest, ::grpcIKeyframeRetriever::suppressKeyframeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_suppressKeyframe_, context, request, response, std::move(f));
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::suppressKeyframe(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::suppressKeyframeRequest* request, ::grpcIKeyframeRetriever::suppressKeyframeResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_suppressKeyframe_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::suppressKeyframeResponse>* grpcIKeyframeRetrieverService::Stub::PrepareAsyncsuppressKeyframeRaw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::suppressKeyframeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIKeyframeRetriever::suppressKeyframeResponse, ::grpcIKeyframeRetriever::suppressKeyframeRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_suppressKeyframe_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::suppressKeyframeResponse>* grpcIKeyframeRetrieverService::Stub::AsyncsuppressKeyframeRaw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::suppressKeyframeRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsuppressKeyframeRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIKeyframeRetrieverService::Stub::retrieve_grpc0(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc0Request& request, ::grpcIKeyframeRetriever::retrieve_grpc0Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIKeyframeRetriever::retrieve_grpc0Request, ::grpcIKeyframeRetriever::retrieve_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_retrieve_grpc0_, context, request, response);
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::retrieve_grpc0(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc0Request* request, ::grpcIKeyframeRetriever::retrieve_grpc0Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIKeyframeRetriever::retrieve_grpc0Request, ::grpcIKeyframeRetriever::retrieve_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_retrieve_grpc0_, context, request, response, std::move(f));
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::retrieve_grpc0(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc0Request* request, ::grpcIKeyframeRetriever::retrieve_grpc0Response* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_retrieve_grpc0_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::retrieve_grpc0Response>* grpcIKeyframeRetrieverService::Stub::PrepareAsyncretrieve_grpc0Raw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIKeyframeRetriever::retrieve_grpc0Response, ::grpcIKeyframeRetriever::retrieve_grpc0Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_retrieve_grpc0_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::retrieve_grpc0Response>* grpcIKeyframeRetrieverService::Stub::Asyncretrieve_grpc0Raw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncretrieve_grpc0Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIKeyframeRetrieverService::Stub::retrieve_grpc1(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc1Request& request, ::grpcIKeyframeRetriever::retrieve_grpc1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIKeyframeRetriever::retrieve_grpc1Request, ::grpcIKeyframeRetriever::retrieve_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_retrieve_grpc1_, context, request, response);
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::retrieve_grpc1(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc1Request* request, ::grpcIKeyframeRetriever::retrieve_grpc1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIKeyframeRetriever::retrieve_grpc1Request, ::grpcIKeyframeRetriever::retrieve_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_retrieve_grpc1_, context, request, response, std::move(f));
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::retrieve_grpc1(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc1Request* request, ::grpcIKeyframeRetriever::retrieve_grpc1Response* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_retrieve_grpc1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::retrieve_grpc1Response>* grpcIKeyframeRetrieverService::Stub::PrepareAsyncretrieve_grpc1Raw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIKeyframeRetriever::retrieve_grpc1Response, ::grpcIKeyframeRetriever::retrieve_grpc1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_retrieve_grpc1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::retrieve_grpc1Response>* grpcIKeyframeRetrieverService::Stub::Asyncretrieve_grpc1Raw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncretrieve_grpc1Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIKeyframeRetrieverService::Stub::saveToFile(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::saveToFileRequest& request, ::grpcIKeyframeRetriever::saveToFileResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIKeyframeRetriever::saveToFileRequest, ::grpcIKeyframeRetriever::saveToFileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_saveToFile_, context, request, response);
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::saveToFile(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::saveToFileRequest* request, ::grpcIKeyframeRetriever::saveToFileResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIKeyframeRetriever::saveToFileRequest, ::grpcIKeyframeRetriever::saveToFileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_saveToFile_, context, request, response, std::move(f));
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::saveToFile(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::saveToFileRequest* request, ::grpcIKeyframeRetriever::saveToFileResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_saveToFile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::saveToFileResponse>* grpcIKeyframeRetrieverService::Stub::PrepareAsyncsaveToFileRaw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::saveToFileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIKeyframeRetriever::saveToFileResponse, ::grpcIKeyframeRetriever::saveToFileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_saveToFile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::saveToFileResponse>* grpcIKeyframeRetrieverService::Stub::AsyncsaveToFileRaw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::saveToFileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncsaveToFileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIKeyframeRetrieverService::Stub::loadFromFile(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::loadFromFileRequest& request, ::grpcIKeyframeRetriever::loadFromFileResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIKeyframeRetriever::loadFromFileRequest, ::grpcIKeyframeRetriever::loadFromFileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_loadFromFile_, context, request, response);
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::loadFromFile(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::loadFromFileRequest* request, ::grpcIKeyframeRetriever::loadFromFileResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIKeyframeRetriever::loadFromFileRequest, ::grpcIKeyframeRetriever::loadFromFileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_loadFromFile_, context, request, response, std::move(f));
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::loadFromFile(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::loadFromFileRequest* request, ::grpcIKeyframeRetriever::loadFromFileResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_loadFromFile_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::loadFromFileResponse>* grpcIKeyframeRetrieverService::Stub::PrepareAsyncloadFromFileRaw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::loadFromFileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIKeyframeRetriever::loadFromFileResponse, ::grpcIKeyframeRetriever::loadFromFileRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_loadFromFile_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::loadFromFileResponse>* grpcIKeyframeRetrieverService::Stub::AsyncloadFromFileRaw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::loadFromFileRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncloadFromFileRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIKeyframeRetrieverService::Stub::match_grpc0(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc0Request& request, ::grpcIKeyframeRetriever::match_grpc0Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIKeyframeRetriever::match_grpc0Request, ::grpcIKeyframeRetriever::match_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_match_grpc0_, context, request, response);
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::match_grpc0(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc0Request* request, ::grpcIKeyframeRetriever::match_grpc0Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIKeyframeRetriever::match_grpc0Request, ::grpcIKeyframeRetriever::match_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_match_grpc0_, context, request, response, std::move(f));
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::match_grpc0(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc0Request* request, ::grpcIKeyframeRetriever::match_grpc0Response* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_match_grpc0_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::match_grpc0Response>* grpcIKeyframeRetrieverService::Stub::PrepareAsyncmatch_grpc0Raw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIKeyframeRetriever::match_grpc0Response, ::grpcIKeyframeRetriever::match_grpc0Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_match_grpc0_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::match_grpc0Response>* grpcIKeyframeRetrieverService::Stub::Asyncmatch_grpc0Raw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc0Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncmatch_grpc0Raw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status grpcIKeyframeRetrieverService::Stub::match_grpc1(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc1Request& request, ::grpcIKeyframeRetriever::match_grpc1Response* response) {
  return ::grpc::internal::BlockingUnaryCall< ::grpcIKeyframeRetriever::match_grpc1Request, ::grpcIKeyframeRetriever::match_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_match_grpc1_, context, request, response);
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::match_grpc1(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc1Request* request, ::grpcIKeyframeRetriever::match_grpc1Response* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::grpcIKeyframeRetriever::match_grpc1Request, ::grpcIKeyframeRetriever::match_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_match_grpc1_, context, request, response, std::move(f));
}

void grpcIKeyframeRetrieverService::Stub::experimental_async::match_grpc1(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc1Request* request, ::grpcIKeyframeRetriever::match_grpc1Response* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_match_grpc1_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::match_grpc1Response>* grpcIKeyframeRetrieverService::Stub::PrepareAsyncmatch_grpc1Raw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::grpcIKeyframeRetriever::match_grpc1Response, ::grpcIKeyframeRetriever::match_grpc1Request, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_match_grpc1_, context, request);
}

::grpc::ClientAsyncResponseReader< ::grpcIKeyframeRetriever::match_grpc1Response>* grpcIKeyframeRetrieverService::Stub::Asyncmatch_grpc1Raw(::grpc::ClientContext* context, const ::grpcIKeyframeRetriever::match_grpc1Request& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncmatch_grpc1Raw(context, request, cq);
  result->StartCall();
  return result;
}

grpcIKeyframeRetrieverService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIKeyframeRetrieverService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIKeyframeRetrieverService::Service, ::grpcIKeyframeRetriever::addKeyframeRequest, ::grpcIKeyframeRetriever::addKeyframeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIKeyframeRetrieverService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIKeyframeRetriever::addKeyframeRequest* req,
             ::grpcIKeyframeRetriever::addKeyframeResponse* resp) {
               return service->addKeyframe(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIKeyframeRetrieverService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIKeyframeRetrieverService::Service, ::grpcIKeyframeRetriever::suppressKeyframeRequest, ::grpcIKeyframeRetriever::suppressKeyframeResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIKeyframeRetrieverService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIKeyframeRetriever::suppressKeyframeRequest* req,
             ::grpcIKeyframeRetriever::suppressKeyframeResponse* resp) {
               return service->suppressKeyframe(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIKeyframeRetrieverService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIKeyframeRetrieverService::Service, ::grpcIKeyframeRetriever::retrieve_grpc0Request, ::grpcIKeyframeRetriever::retrieve_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIKeyframeRetrieverService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIKeyframeRetriever::retrieve_grpc0Request* req,
             ::grpcIKeyframeRetriever::retrieve_grpc0Response* resp) {
               return service->retrieve_grpc0(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIKeyframeRetrieverService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIKeyframeRetrieverService::Service, ::grpcIKeyframeRetriever::retrieve_grpc1Request, ::grpcIKeyframeRetriever::retrieve_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIKeyframeRetrieverService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIKeyframeRetriever::retrieve_grpc1Request* req,
             ::grpcIKeyframeRetriever::retrieve_grpc1Response* resp) {
               return service->retrieve_grpc1(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIKeyframeRetrieverService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIKeyframeRetrieverService::Service, ::grpcIKeyframeRetriever::saveToFileRequest, ::grpcIKeyframeRetriever::saveToFileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIKeyframeRetrieverService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIKeyframeRetriever::saveToFileRequest* req,
             ::grpcIKeyframeRetriever::saveToFileResponse* resp) {
               return service->saveToFile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIKeyframeRetrieverService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIKeyframeRetrieverService::Service, ::grpcIKeyframeRetriever::loadFromFileRequest, ::grpcIKeyframeRetriever::loadFromFileResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIKeyframeRetrieverService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIKeyframeRetriever::loadFromFileRequest* req,
             ::grpcIKeyframeRetriever::loadFromFileResponse* resp) {
               return service->loadFromFile(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIKeyframeRetrieverService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIKeyframeRetrieverService::Service, ::grpcIKeyframeRetriever::match_grpc0Request, ::grpcIKeyframeRetriever::match_grpc0Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIKeyframeRetrieverService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIKeyframeRetriever::match_grpc0Request* req,
             ::grpcIKeyframeRetriever::match_grpc0Response* resp) {
               return service->match_grpc0(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      grpcIKeyframeRetrieverService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< grpcIKeyframeRetrieverService::Service, ::grpcIKeyframeRetriever::match_grpc1Request, ::grpcIKeyframeRetriever::match_grpc1Response, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](grpcIKeyframeRetrieverService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::grpcIKeyframeRetriever::match_grpc1Request* req,
             ::grpcIKeyframeRetriever::match_grpc1Response* resp) {
               return service->match_grpc1(ctx, req, resp);
             }, this)));
}

grpcIKeyframeRetrieverService::Service::~Service() {
}

::grpc::Status grpcIKeyframeRetrieverService::Service::addKeyframe(::grpc::ServerContext* context, const ::grpcIKeyframeRetriever::addKeyframeRequest* request, ::grpcIKeyframeRetriever::addKeyframeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIKeyframeRetrieverService::Service::suppressKeyframe(::grpc::ServerContext* context, const ::grpcIKeyframeRetriever::suppressKeyframeRequest* request, ::grpcIKeyframeRetriever::suppressKeyframeResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIKeyframeRetrieverService::Service::retrieve_grpc0(::grpc::ServerContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc0Request* request, ::grpcIKeyframeRetriever::retrieve_grpc0Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIKeyframeRetrieverService::Service::retrieve_grpc1(::grpc::ServerContext* context, const ::grpcIKeyframeRetriever::retrieve_grpc1Request* request, ::grpcIKeyframeRetriever::retrieve_grpc1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIKeyframeRetrieverService::Service::saveToFile(::grpc::ServerContext* context, const ::grpcIKeyframeRetriever::saveToFileRequest* request, ::grpcIKeyframeRetriever::saveToFileResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIKeyframeRetrieverService::Service::loadFromFile(::grpc::ServerContext* context, const ::grpcIKeyframeRetriever::loadFromFileRequest* request, ::grpcIKeyframeRetriever::loadFromFileResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIKeyframeRetrieverService::Service::match_grpc0(::grpc::ServerContext* context, const ::grpcIKeyframeRetriever::match_grpc0Request* request, ::grpcIKeyframeRetriever::match_grpc0Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status grpcIKeyframeRetrieverService::Service::match_grpc1(::grpc::ServerContext* context, const ::grpcIKeyframeRetriever::match_grpc1Request* request, ::grpcIKeyframeRetriever::match_grpc1Response* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace grpcIKeyframeRetriever

