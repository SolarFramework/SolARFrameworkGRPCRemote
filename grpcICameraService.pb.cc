// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcICameraService.proto

#include "grpcICameraService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcICamera {
constexpr startRequest::startRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct startRequestDefaultTypeInternal {
  constexpr startRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~startRequestDefaultTypeInternal() {}
  union {
    startRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT startRequestDefaultTypeInternal _startRequest_default_instance_;
constexpr startResponse::startResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct startResponseDefaultTypeInternal {
  constexpr startResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~startResponseDefaultTypeInternal() {}
  union {
    startResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT startResponseDefaultTypeInternal _startResponse_default_instance_;
constexpr stopRequest::stopRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct stopRequestDefaultTypeInternal {
  constexpr stopRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~stopRequestDefaultTypeInternal() {}
  union {
    stopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT stopRequestDefaultTypeInternal _stopRequest_default_instance_;
constexpr stopResponse::stopResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(0){}
struct stopResponseDefaultTypeInternal {
  constexpr stopResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~stopResponseDefaultTypeInternal() {}
  union {
    stopResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT stopResponseDefaultTypeInternal _stopResponse_default_instance_;
constexpr getNextImageRequest::getNextImageRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : img_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0){}
struct getNextImageRequestDefaultTypeInternal {
  constexpr getNextImageRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getNextImageRequestDefaultTypeInternal() {}
  union {
    getNextImageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getNextImageRequestDefaultTypeInternal _getNextImageRequest_default_instance_;
constexpr getNextImageResponse::getNextImageResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : img_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct getNextImageResponseDefaultTypeInternal {
  constexpr getNextImageResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getNextImageResponseDefaultTypeInternal() {}
  union {
    getNextImageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getNextImageResponseDefaultTypeInternal _getNextImageResponse_default_instance_;
constexpr setResolutionRequest::setResolutionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : resolution_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setResolutionRequestDefaultTypeInternal {
  constexpr setResolutionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setResolutionRequestDefaultTypeInternal() {}
  union {
    setResolutionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setResolutionRequestDefaultTypeInternal _setResolutionRequest_default_instance_;
constexpr setIntrinsicParametersRequest::setIntrinsicParametersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : intrinsic_parameters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setIntrinsicParametersRequestDefaultTypeInternal {
  constexpr setIntrinsicParametersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setIntrinsicParametersRequestDefaultTypeInternal() {}
  union {
    setIntrinsicParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setIntrinsicParametersRequestDefaultTypeInternal _setIntrinsicParametersRequest_default_instance_;
constexpr setDistortionParametersRequest::setDistortionParametersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : distortion_parameters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setDistortionParametersRequestDefaultTypeInternal {
  constexpr setDistortionParametersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setDistortionParametersRequestDefaultTypeInternal() {}
  union {
    setDistortionParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setDistortionParametersRequestDefaultTypeInternal _setDistortionParametersRequest_default_instance_;
constexpr setParametersRequest::setParametersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : parameters_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct setParametersRequestDefaultTypeInternal {
  constexpr setParametersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~setParametersRequestDefaultTypeInternal() {}
  union {
    setParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT setParametersRequestDefaultTypeInternal _setParametersRequest_default_instance_;
constexpr getResolutionRequest::getResolutionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct getResolutionRequestDefaultTypeInternal {
  constexpr getResolutionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getResolutionRequestDefaultTypeInternal() {}
  union {
    getResolutionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getResolutionRequestDefaultTypeInternal _getResolutionRequest_default_instance_;
constexpr getResolutionResponse::getResolutionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getResolutionResponseDefaultTypeInternal {
  constexpr getResolutionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getResolutionResponseDefaultTypeInternal() {}
  union {
    getResolutionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getResolutionResponseDefaultTypeInternal _getResolutionResponse_default_instance_;
constexpr getIntrinsicsParametersRequest::getIntrinsicsParametersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct getIntrinsicsParametersRequestDefaultTypeInternal {
  constexpr getIntrinsicsParametersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getIntrinsicsParametersRequestDefaultTypeInternal() {}
  union {
    getIntrinsicsParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getIntrinsicsParametersRequestDefaultTypeInternal _getIntrinsicsParametersRequest_default_instance_;
constexpr getIntrinsicsParametersResponse::getIntrinsicsParametersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getIntrinsicsParametersResponseDefaultTypeInternal {
  constexpr getIntrinsicsParametersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getIntrinsicsParametersResponseDefaultTypeInternal() {}
  union {
    getIntrinsicsParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getIntrinsicsParametersResponseDefaultTypeInternal _getIntrinsicsParametersResponse_default_instance_;
constexpr getParametersRequest::getParametersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct getParametersRequestDefaultTypeInternal {
  constexpr getParametersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getParametersRequestDefaultTypeInternal() {}
  union {
    getParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getParametersRequestDefaultTypeInternal _getParametersRequest_default_instance_;
constexpr getParametersResponse::getParametersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getParametersResponseDefaultTypeInternal {
  constexpr getParametersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getParametersResponseDefaultTypeInternal() {}
  union {
    getParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getParametersResponseDefaultTypeInternal _getParametersResponse_default_instance_;
constexpr getDistortionParametersRequest::getDistortionParametersRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : grpcservercompressionformat_(0){}
struct getDistortionParametersRequestDefaultTypeInternal {
  constexpr getDistortionParametersRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getDistortionParametersRequestDefaultTypeInternal() {}
  union {
    getDistortionParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getDistortionParametersRequestDefaultTypeInternal _getDistortionParametersRequest_default_instance_;
constexpr getDistortionParametersResponse::getDistortionParametersResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xpcfgrpcreturnvalue_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct getDistortionParametersResponseDefaultTypeInternal {
  constexpr getDistortionParametersResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~getDistortionParametersResponseDefaultTypeInternal() {}
  union {
    getDistortionParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT getDistortionParametersResponseDefaultTypeInternal _getDistortionParametersResponse_default_instance_;
}  // namespace grpcICamera
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcICameraService_2eproto[18];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcICameraService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcICameraService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcICameraService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::startRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::startRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::startResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::startResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::stopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::stopRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::stopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::stopResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageRequest, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageRequest, img_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageResponse, img_),
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setResolutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setResolutionRequest, resolution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setIntrinsicParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setIntrinsicParametersRequest, intrinsic_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setDistortionParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setDistortionParametersRequest, distortion_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setParametersRequest, parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getResolutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getResolutionRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getResolutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getResolutionResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getIntrinsicsParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getIntrinsicsParametersRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getIntrinsicsParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getIntrinsicsParametersResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getParametersRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getParametersResponse, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getDistortionParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getDistortionParametersRequest, grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getDistortionParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getDistortionParametersResponse, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcICamera::startRequest)},
  { 6, -1, sizeof(::grpcICamera::startResponse)},
  { 12, -1, sizeof(::grpcICamera::stopRequest)},
  { 18, -1, sizeof(::grpcICamera::stopResponse)},
  { 24, -1, sizeof(::grpcICamera::getNextImageRequest)},
  { 31, -1, sizeof(::grpcICamera::getNextImageResponse)},
  { 38, -1, sizeof(::grpcICamera::setResolutionRequest)},
  { 44, -1, sizeof(::grpcICamera::setIntrinsicParametersRequest)},
  { 50, -1, sizeof(::grpcICamera::setDistortionParametersRequest)},
  { 56, -1, sizeof(::grpcICamera::setParametersRequest)},
  { 62, -1, sizeof(::grpcICamera::getResolutionRequest)},
  { 68, -1, sizeof(::grpcICamera::getResolutionResponse)},
  { 74, -1, sizeof(::grpcICamera::getIntrinsicsParametersRequest)},
  { 80, -1, sizeof(::grpcICamera::getIntrinsicsParametersResponse)},
  { 86, -1, sizeof(::grpcICamera::getParametersRequest)},
  { 92, -1, sizeof(::grpcICamera::getParametersResponse)},
  { 98, -1, sizeof(::grpcICamera::getDistortionParametersRequest)},
  { 104, -1, sizeof(::grpcICamera::getDistortionParametersResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_startRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_startResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_stopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_stopResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getNextImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getNextImageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_setResolutionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_setIntrinsicParametersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_setDistortionParametersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_setParametersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getResolutionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getResolutionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getIntrinsicsParametersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getIntrinsicsParametersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getParametersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getParametersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getDistortionParametersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcICamera::_getDistortionParametersResponse_default_instance_),
};

const char descriptor_table_protodef_grpcICameraService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030grpcICameraService.proto\022\013grpcICamera\032"
  "\033google/protobuf/empty.proto\"3\n\014startReq"
  "uest\022#\n\033grpcServerCompressionFormat\030\001 \001("
  "\005\",\n\rstartResponse\022\033\n\023xpcfGrpcReturnValu"
  "e\030\001 \001(\021\"2\n\013stopRequest\022#\n\033grpcServerComp"
  "ressionFormat\030\001 \001(\005\"+\n\014stopResponse\022\033\n\023x"
  "pcfGrpcReturnValue\030\001 \001(\021\"G\n\023getNextImage"
  "Request\022#\n\033grpcServerCompressionFormat\030\001"
  " \001(\005\022\013\n\003img\030\002 \001(\014\"@\n\024getNextImageRespons"
  "e\022\013\n\003img\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 "
  "\001(\021\"*\n\024setResolutionRequest\022\022\n\nresolutio"
  "n\030\001 \001(\014\"=\n\035setIntrinsicParametersRequest"
  "\022\034\n\024intrinsic_parameters\030\001 \001(\014\"\?\n\036setDis"
  "tortionParametersRequest\022\035\n\025distortion_p"
  "arameters\030\001 \001(\014\"*\n\024setParametersRequest\022"
  "\022\n\nparameters\030\001 \001(\014\";\n\024getResolutionRequ"
  "est\022#\n\033grpcServerCompressionFormat\030\001 \001(\005"
  "\"4\n\025getResolutionResponse\022\033\n\023xpcfGrpcRet"
  "urnValue\030\001 \001(\014\"E\n\036getIntrinsicsParameter"
  "sRequest\022#\n\033grpcServerCompressionFormat\030"
  "\001 \001(\005\">\n\037getIntrinsicsParametersResponse"
  "\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\014\";\n\024getPara"
  "metersRequest\022#\n\033grpcServerCompressionFo"
  "rmat\030\001 \001(\005\"4\n\025getParametersResponse\022\033\n\023x"
  "pcfGrpcReturnValue\030\001 \001(\014\"E\n\036getDistortio"
  "nParametersRequest\022#\n\033grpcServerCompress"
  "ionFormat\030\001 \001(\005\">\n\037getDistortionParamete"
  "rsResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\0142"
  "\356\007\n\022grpcICameraService\022@\n\005start\022\031.grpcIC"
  "amera.startRequest\032\032.grpcICamera.startRe"
  "sponse\"\000\022=\n\004stop\022\030.grpcICamera.stopReque"
  "st\032\031.grpcICamera.stopResponse\"\000\022U\n\014getNe"
  "xtImage\022 .grpcICamera.getNextImageReques"
  "t\032!.grpcICamera.getNextImageResponse\"\000\022L"
  "\n\rsetResolution\022!.grpcICamera.setResolut"
  "ionRequest\032\026.google.protobuf.Empty\"\000\022^\n\026"
  "setIntrinsicParameters\022*.grpcICamera.set"
  "IntrinsicParametersRequest\032\026.google.prot"
  "obuf.Empty\"\000\022`\n\027setDistortionParameters\022"
  "+.grpcICamera.setDistortionParametersReq"
  "uest\032\026.google.protobuf.Empty\"\000\022L\n\rsetPar"
  "ameters\022!.grpcICamera.setParametersReque"
  "st\032\026.google.protobuf.Empty\"\000\022X\n\rgetResol"
  "ution\022!.grpcICamera.getResolutionRequest"
  "\032\".grpcICamera.getResolutionResponse\"\000\022v"
  "\n\027getIntrinsicsParameters\022+.grpcICamera."
  "getIntrinsicsParametersRequest\032,.grpcICa"
  "mera.getIntrinsicsParametersResponse\"\000\022X"
  "\n\rgetParameters\022!.grpcICamera.getParamet"
  "ersRequest\032\".grpcICamera.getParametersRe"
  "sponse\"\000\022v\n\027getDistortionParameters\022+.gr"
  "pcICamera.getDistortionParametersRequest"
  "\032,.grpcICamera.getDistortionParametersRe"
  "sponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcICameraService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcICameraService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcICameraService_2eproto = {
  false, false, 2136, descriptor_table_protodef_grpcICameraService_2eproto, "grpcICameraService.proto", 
  &descriptor_table_grpcICameraService_2eproto_once, descriptor_table_grpcICameraService_2eproto_deps, 1, 18,
  schemas, file_default_instances, TableStruct_grpcICameraService_2eproto::offsets,
  file_level_metadata_grpcICameraService_2eproto, file_level_enum_descriptors_grpcICameraService_2eproto, file_level_service_descriptors_grpcICameraService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcICameraService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcICameraService_2eproto);
  return descriptor_table_grpcICameraService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcICameraService_2eproto(&descriptor_table_grpcICameraService_2eproto);
namespace grpcICamera {

// ===================================================================

class startRequest::_Internal {
 public:
};

startRequest::startRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.startRequest)
}
startRequest::startRequest(const startRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.startRequest)
}

void startRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

startRequest::~startRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.startRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void startRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void startRequest::ArenaDtor(void* object) {
  startRequest* _this = reinterpret_cast< startRequest* >(object);
  (void)_this;
}
void startRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void startRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void startRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.startRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* startRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* startRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.startRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.startRequest)
  return target;
}

size_t startRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.startRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void startRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.startRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const startRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<startRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.startRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.startRequest)
    MergeFrom(*source);
  }
}

void startRequest::MergeFrom(const startRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.startRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void startRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.startRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void startRequest::CopyFrom(const startRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.startRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool startRequest::IsInitialized() const {
  return true;
}

void startRequest::InternalSwap(startRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata startRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class startResponse::_Internal {
 public:
};

startResponse::startResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.startResponse)
}
startResponse::startResponse(const startResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.startResponse)
}

void startResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

startResponse::~startResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.startResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void startResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void startResponse::ArenaDtor(void* object) {
  startResponse* _this = reinterpret_cast< startResponse* >(object);
  (void)_this;
}
void startResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void startResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void startResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.startResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* startResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* startResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.startResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.startResponse)
  return target;
}

size_t startResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.startResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void startResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.startResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const startResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<startResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.startResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.startResponse)
    MergeFrom(*source);
  }
}

void startResponse::MergeFrom(const startResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.startResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void startResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.startResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void startResponse::CopyFrom(const startResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.startResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool startResponse::IsInitialized() const {
  return true;
}

void startResponse::InternalSwap(startResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata startResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class stopRequest::_Internal {
 public:
};

stopRequest::stopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.stopRequest)
}
stopRequest::stopRequest(const stopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.stopRequest)
}

void stopRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

stopRequest::~stopRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.stopRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void stopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void stopRequest::ArenaDtor(void* object) {
  stopRequest* _this = reinterpret_cast< stopRequest* >(object);
  (void)_this;
}
void stopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void stopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void stopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.stopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* stopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* stopRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.stopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.stopRequest)
  return target;
}

size_t stopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.stopRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void stopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.stopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const stopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<stopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.stopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.stopRequest)
    MergeFrom(*source);
  }
}

void stopRequest::MergeFrom(const stopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.stopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void stopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.stopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stopRequest::CopyFrom(const stopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.stopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stopRequest::IsInitialized() const {
  return true;
}

void stopRequest::InternalSwap(stopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata stopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class stopResponse::_Internal {
 public:
};

stopResponse::stopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.stopResponse)
}
stopResponse::stopResponse(const stopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.stopResponse)
}

void stopResponse::SharedCtor() {
xpcfgrpcreturnvalue_ = 0;
}

stopResponse::~stopResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.stopResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void stopResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void stopResponse::ArenaDtor(void* object) {
  stopResponse* _this = reinterpret_cast< stopResponse* >(object);
  (void)_this;
}
void stopResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void stopResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void stopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.stopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* stopResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* stopResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.stopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.stopResponse)
  return target;
}

size_t stopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.stopResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void stopResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.stopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const stopResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<stopResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.stopResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.stopResponse)
    MergeFrom(*source);
  }
}

void stopResponse::MergeFrom(const stopResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.stopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void stopResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.stopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void stopResponse::CopyFrom(const stopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.stopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stopResponse::IsInitialized() const {
  return true;
}

void stopResponse::InternalSwap(stopResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata stopResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getNextImageRequest::_Internal {
 public:
};

getNextImageRequest::getNextImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getNextImageRequest)
}
getNextImageRequest::getNextImageRequest(const getNextImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_img().empty()) {
    img_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_img(), 
      GetArena());
  }
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getNextImageRequest)
}

void getNextImageRequest::SharedCtor() {
img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
grpcservercompressionformat_ = 0;
}

getNextImageRequest::~getNextImageRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getNextImageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getNextImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  img_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getNextImageRequest::ArenaDtor(void* object) {
  getNextImageRequest* _this = reinterpret_cast< getNextImageRequest* >(object);
  (void)_this;
}
void getNextImageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getNextImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getNextImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getNextImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  img_.ClearToEmpty();
  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNextImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes img = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_img();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getNextImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getNextImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes img = 2;
  if (this->img().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_img(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getNextImageRequest)
  return target;
}

size_t getNextImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getNextImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes img = 2;
  if (this->img().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_img());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getNextImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getNextImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getNextImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getNextImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getNextImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getNextImageRequest)
    MergeFrom(*source);
  }
}

void getNextImageRequest::MergeFrom(const getNextImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getNextImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.img().size() > 0) {
    _internal_set_img(from._internal_img());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getNextImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getNextImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getNextImageRequest::CopyFrom(const getNextImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getNextImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNextImageRequest::IsInitialized() const {
  return true;
}

void getNextImageRequest::InternalSwap(getNextImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  img_.Swap(&other->img_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNextImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getNextImageResponse::_Internal {
 public:
};

getNextImageResponse::getNextImageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getNextImageResponse)
}
getNextImageResponse::getNextImageResponse(const getNextImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_img().empty()) {
    img_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_img(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getNextImageResponse)
}

void getNextImageResponse::SharedCtor() {
img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

getNextImageResponse::~getNextImageResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getNextImageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getNextImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  img_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getNextImageResponse::ArenaDtor(void* object) {
  getNextImageResponse* _this = reinterpret_cast< getNextImageResponse* >(object);
  (void)_this;
}
void getNextImageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getNextImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getNextImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getNextImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  img_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNextImageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes img = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_img();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getNextImageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getNextImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes img = 1;
  if (this->img().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_img(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getNextImageResponse)
  return target;
}

size_t getNextImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getNextImageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes img = 1;
  if (this->img().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_img());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getNextImageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getNextImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getNextImageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getNextImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getNextImageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getNextImageResponse)
    MergeFrom(*source);
  }
}

void getNextImageResponse::MergeFrom(const getNextImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getNextImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.img().size() > 0) {
    _internal_set_img(from._internal_img());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getNextImageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getNextImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getNextImageResponse::CopyFrom(const getNextImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getNextImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNextImageResponse::IsInitialized() const {
  return true;
}

void getNextImageResponse::InternalSwap(getNextImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  img_.Swap(&other->img_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNextImageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setResolutionRequest::_Internal {
 public:
};

setResolutionRequest::setResolutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.setResolutionRequest)
}
setResolutionRequest::setResolutionRequest(const setResolutionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resolution_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resolution().empty()) {
    resolution_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resolution(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.setResolutionRequest)
}

void setResolutionRequest::SharedCtor() {
resolution_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setResolutionRequest::~setResolutionRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.setResolutionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setResolutionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  resolution_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setResolutionRequest::ArenaDtor(void* object) {
  setResolutionRequest* _this = reinterpret_cast< setResolutionRequest* >(object);
  (void)_this;
}
void setResolutionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setResolutionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setResolutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.setResolutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resolution_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setResolutionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes resolution = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_resolution();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setResolutionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.setResolutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes resolution = 1;
  if (this->resolution().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_resolution(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.setResolutionRequest)
  return target;
}

size_t setResolutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.setResolutionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes resolution = 1;
  if (this->resolution().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_resolution());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setResolutionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.setResolutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setResolutionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setResolutionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.setResolutionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.setResolutionRequest)
    MergeFrom(*source);
  }
}

void setResolutionRequest::MergeFrom(const setResolutionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.setResolutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resolution().size() > 0) {
    _internal_set_resolution(from._internal_resolution());
  }
}

void setResolutionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.setResolutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setResolutionRequest::CopyFrom(const setResolutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.setResolutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setResolutionRequest::IsInitialized() const {
  return true;
}

void setResolutionRequest::InternalSwap(setResolutionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resolution_.Swap(&other->resolution_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setResolutionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setIntrinsicParametersRequest::_Internal {
 public:
};

setIntrinsicParametersRequest::setIntrinsicParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.setIntrinsicParametersRequest)
}
setIntrinsicParametersRequest::setIntrinsicParametersRequest(const setIntrinsicParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  intrinsic_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_intrinsic_parameters().empty()) {
    intrinsic_parameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_intrinsic_parameters(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.setIntrinsicParametersRequest)
}

void setIntrinsicParametersRequest::SharedCtor() {
intrinsic_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setIntrinsicParametersRequest::~setIntrinsicParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.setIntrinsicParametersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setIntrinsicParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  intrinsic_parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setIntrinsicParametersRequest::ArenaDtor(void* object) {
  setIntrinsicParametersRequest* _this = reinterpret_cast< setIntrinsicParametersRequest* >(object);
  (void)_this;
}
void setIntrinsicParametersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setIntrinsicParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setIntrinsicParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.setIntrinsicParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intrinsic_parameters_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setIntrinsicParametersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes intrinsic_parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_intrinsic_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setIntrinsicParametersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.setIntrinsicParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes intrinsic_parameters = 1;
  if (this->intrinsic_parameters().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_intrinsic_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.setIntrinsicParametersRequest)
  return target;
}

size_t setIntrinsicParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.setIntrinsicParametersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes intrinsic_parameters = 1;
  if (this->intrinsic_parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_intrinsic_parameters());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setIntrinsicParametersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.setIntrinsicParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setIntrinsicParametersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setIntrinsicParametersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.setIntrinsicParametersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.setIntrinsicParametersRequest)
    MergeFrom(*source);
  }
}

void setIntrinsicParametersRequest::MergeFrom(const setIntrinsicParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.setIntrinsicParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.intrinsic_parameters().size() > 0) {
    _internal_set_intrinsic_parameters(from._internal_intrinsic_parameters());
  }
}

void setIntrinsicParametersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.setIntrinsicParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setIntrinsicParametersRequest::CopyFrom(const setIntrinsicParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.setIntrinsicParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setIntrinsicParametersRequest::IsInitialized() const {
  return true;
}

void setIntrinsicParametersRequest::InternalSwap(setIntrinsicParametersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  intrinsic_parameters_.Swap(&other->intrinsic_parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setIntrinsicParametersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setDistortionParametersRequest::_Internal {
 public:
};

setDistortionParametersRequest::setDistortionParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.setDistortionParametersRequest)
}
setDistortionParametersRequest::setDistortionParametersRequest(const setDistortionParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  distortion_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_distortion_parameters().empty()) {
    distortion_parameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_distortion_parameters(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.setDistortionParametersRequest)
}

void setDistortionParametersRequest::SharedCtor() {
distortion_parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setDistortionParametersRequest::~setDistortionParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.setDistortionParametersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setDistortionParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  distortion_parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setDistortionParametersRequest::ArenaDtor(void* object) {
  setDistortionParametersRequest* _this = reinterpret_cast< setDistortionParametersRequest* >(object);
  (void)_this;
}
void setDistortionParametersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setDistortionParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setDistortionParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.setDistortionParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  distortion_parameters_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDistortionParametersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes distortion_parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_distortion_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setDistortionParametersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.setDistortionParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes distortion_parameters = 1;
  if (this->distortion_parameters().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_distortion_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.setDistortionParametersRequest)
  return target;
}

size_t setDistortionParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.setDistortionParametersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes distortion_parameters = 1;
  if (this->distortion_parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_distortion_parameters());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setDistortionParametersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.setDistortionParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setDistortionParametersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setDistortionParametersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.setDistortionParametersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.setDistortionParametersRequest)
    MergeFrom(*source);
  }
}

void setDistortionParametersRequest::MergeFrom(const setDistortionParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.setDistortionParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.distortion_parameters().size() > 0) {
    _internal_set_distortion_parameters(from._internal_distortion_parameters());
  }
}

void setDistortionParametersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.setDistortionParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setDistortionParametersRequest::CopyFrom(const setDistortionParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.setDistortionParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDistortionParametersRequest::IsInitialized() const {
  return true;
}

void setDistortionParametersRequest::InternalSwap(setDistortionParametersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  distortion_parameters_.Swap(&other->distortion_parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setDistortionParametersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class setParametersRequest::_Internal {
 public:
};

setParametersRequest::setParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.setParametersRequest)
}
setParametersRequest::setParametersRequest(const setParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parameters().empty()) {
    parameters_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parameters(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.setParametersRequest)
}

void setParametersRequest::SharedCtor() {
parameters_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

setParametersRequest::~setParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.setParametersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void setParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  parameters_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void setParametersRequest::ArenaDtor(void* object) {
  setParametersRequest* _this = reinterpret_cast< setParametersRequest* >(object);
  (void)_this;
}
void setParametersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void setParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void setParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.setParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setParametersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parameters();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setParametersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.setParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes parameters = 1;
  if (this->parameters().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.setParametersRequest)
  return target;
}

size_t setParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.setParametersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes parameters = 1;
  if (this->parameters().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_parameters());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setParametersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.setParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const setParametersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setParametersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.setParametersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.setParametersRequest)
    MergeFrom(*source);
  }
}

void setParametersRequest::MergeFrom(const setParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.setParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parameters().size() > 0) {
    _internal_set_parameters(from._internal_parameters());
  }
}

void setParametersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.setParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setParametersRequest::CopyFrom(const setParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.setParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setParametersRequest::IsInitialized() const {
  return true;
}

void setParametersRequest::InternalSwap(setParametersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parameters_.Swap(&other->parameters_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata setParametersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getResolutionRequest::_Internal {
 public:
};

getResolutionRequest::getResolutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getResolutionRequest)
}
getResolutionRequest::getResolutionRequest(const getResolutionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getResolutionRequest)
}

void getResolutionRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

getResolutionRequest::~getResolutionRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getResolutionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getResolutionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getResolutionRequest::ArenaDtor(void* object) {
  getResolutionRequest* _this = reinterpret_cast< getResolutionRequest* >(object);
  (void)_this;
}
void getResolutionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getResolutionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getResolutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getResolutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getResolutionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getResolutionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getResolutionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getResolutionRequest)
  return target;
}

size_t getResolutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getResolutionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getResolutionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getResolutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getResolutionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getResolutionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getResolutionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getResolutionRequest)
    MergeFrom(*source);
  }
}

void getResolutionRequest::MergeFrom(const getResolutionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getResolutionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getResolutionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getResolutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getResolutionRequest::CopyFrom(const getResolutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getResolutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getResolutionRequest::IsInitialized() const {
  return true;
}

void getResolutionRequest::InternalSwap(getResolutionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getResolutionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getResolutionResponse::_Internal {
 public:
};

getResolutionResponse::getResolutionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getResolutionResponse)
}
getResolutionResponse::getResolutionResponse(const getResolutionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getResolutionResponse)
}

void getResolutionResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getResolutionResponse::~getResolutionResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getResolutionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getResolutionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getResolutionResponse::ArenaDtor(void* object) {
  getResolutionResponse* _this = reinterpret_cast< getResolutionResponse* >(object);
  (void)_this;
}
void getResolutionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getResolutionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getResolutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getResolutionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getResolutionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getResolutionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getResolutionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getResolutionResponse)
  return target;
}

size_t getResolutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getResolutionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getResolutionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getResolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getResolutionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getResolutionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getResolutionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getResolutionResponse)
    MergeFrom(*source);
  }
}

void getResolutionResponse::MergeFrom(const getResolutionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getResolutionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getResolutionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getResolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getResolutionResponse::CopyFrom(const getResolutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getResolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getResolutionResponse::IsInitialized() const {
  return true;
}

void getResolutionResponse::InternalSwap(getResolutionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getResolutionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getIntrinsicsParametersRequest::_Internal {
 public:
};

getIntrinsicsParametersRequest::getIntrinsicsParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getIntrinsicsParametersRequest)
}
getIntrinsicsParametersRequest::getIntrinsicsParametersRequest(const getIntrinsicsParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getIntrinsicsParametersRequest)
}

void getIntrinsicsParametersRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

getIntrinsicsParametersRequest::~getIntrinsicsParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getIntrinsicsParametersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getIntrinsicsParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getIntrinsicsParametersRequest::ArenaDtor(void* object) {
  getIntrinsicsParametersRequest* _this = reinterpret_cast< getIntrinsicsParametersRequest* >(object);
  (void)_this;
}
void getIntrinsicsParametersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getIntrinsicsParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getIntrinsicsParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getIntrinsicsParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getIntrinsicsParametersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getIntrinsicsParametersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getIntrinsicsParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getIntrinsicsParametersRequest)
  return target;
}

size_t getIntrinsicsParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getIntrinsicsParametersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getIntrinsicsParametersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getIntrinsicsParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getIntrinsicsParametersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getIntrinsicsParametersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getIntrinsicsParametersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getIntrinsicsParametersRequest)
    MergeFrom(*source);
  }
}

void getIntrinsicsParametersRequest::MergeFrom(const getIntrinsicsParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getIntrinsicsParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getIntrinsicsParametersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getIntrinsicsParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getIntrinsicsParametersRequest::CopyFrom(const getIntrinsicsParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getIntrinsicsParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getIntrinsicsParametersRequest::IsInitialized() const {
  return true;
}

void getIntrinsicsParametersRequest::InternalSwap(getIntrinsicsParametersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getIntrinsicsParametersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getIntrinsicsParametersResponse::_Internal {
 public:
};

getIntrinsicsParametersResponse::getIntrinsicsParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getIntrinsicsParametersResponse)
}
getIntrinsicsParametersResponse::getIntrinsicsParametersResponse(const getIntrinsicsParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getIntrinsicsParametersResponse)
}

void getIntrinsicsParametersResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getIntrinsicsParametersResponse::~getIntrinsicsParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getIntrinsicsParametersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getIntrinsicsParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getIntrinsicsParametersResponse::ArenaDtor(void* object) {
  getIntrinsicsParametersResponse* _this = reinterpret_cast< getIntrinsicsParametersResponse* >(object);
  (void)_this;
}
void getIntrinsicsParametersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getIntrinsicsParametersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getIntrinsicsParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getIntrinsicsParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getIntrinsicsParametersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getIntrinsicsParametersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getIntrinsicsParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getIntrinsicsParametersResponse)
  return target;
}

size_t getIntrinsicsParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getIntrinsicsParametersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getIntrinsicsParametersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getIntrinsicsParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getIntrinsicsParametersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getIntrinsicsParametersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getIntrinsicsParametersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getIntrinsicsParametersResponse)
    MergeFrom(*source);
  }
}

void getIntrinsicsParametersResponse::MergeFrom(const getIntrinsicsParametersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getIntrinsicsParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getIntrinsicsParametersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getIntrinsicsParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getIntrinsicsParametersResponse::CopyFrom(const getIntrinsicsParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getIntrinsicsParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getIntrinsicsParametersResponse::IsInitialized() const {
  return true;
}

void getIntrinsicsParametersResponse::InternalSwap(getIntrinsicsParametersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getIntrinsicsParametersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getParametersRequest::_Internal {
 public:
};

getParametersRequest::getParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getParametersRequest)
}
getParametersRequest::getParametersRequest(const getParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getParametersRequest)
}

void getParametersRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

getParametersRequest::~getParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getParametersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getParametersRequest::ArenaDtor(void* object) {
  getParametersRequest* _this = reinterpret_cast< getParametersRequest* >(object);
  (void)_this;
}
void getParametersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getParametersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getParametersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getParametersRequest)
  return target;
}

size_t getParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getParametersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getParametersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getParametersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getParametersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getParametersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getParametersRequest)
    MergeFrom(*source);
  }
}

void getParametersRequest::MergeFrom(const getParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getParametersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getParametersRequest::CopyFrom(const getParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getParametersRequest::IsInitialized() const {
  return true;
}

void getParametersRequest::InternalSwap(getParametersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getParametersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getParametersResponse::_Internal {
 public:
};

getParametersResponse::getParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getParametersResponse)
}
getParametersResponse::getParametersResponse(const getParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getParametersResponse)
}

void getParametersResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getParametersResponse::~getParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getParametersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getParametersResponse::ArenaDtor(void* object) {
  getParametersResponse* _this = reinterpret_cast< getParametersResponse* >(object);
  (void)_this;
}
void getParametersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getParametersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getParametersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getParametersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getParametersResponse)
  return target;
}

size_t getParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getParametersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getParametersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getParametersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getParametersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getParametersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getParametersResponse)
    MergeFrom(*source);
  }
}

void getParametersResponse::MergeFrom(const getParametersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getParametersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getParametersResponse::CopyFrom(const getParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getParametersResponse::IsInitialized() const {
  return true;
}

void getParametersResponse::InternalSwap(getParametersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getParametersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getDistortionParametersRequest::_Internal {
 public:
};

getDistortionParametersRequest::getDistortionParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getDistortionParametersRequest)
}
getDistortionParametersRequest::getDistortionParametersRequest(const getDistortionParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  grpcservercompressionformat_ = from.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getDistortionParametersRequest)
}

void getDistortionParametersRequest::SharedCtor() {
grpcservercompressionformat_ = 0;
}

getDistortionParametersRequest::~getDistortionParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getDistortionParametersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getDistortionParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void getDistortionParametersRequest::ArenaDtor(void* object) {
  getDistortionParametersRequest* _this = reinterpret_cast< getDistortionParametersRequest* >(object);
  (void)_this;
}
void getDistortionParametersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getDistortionParametersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getDistortionParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getDistortionParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDistortionParametersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getDistortionParametersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getDistortionParametersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getDistortionParametersRequest)
  return target;
}

size_t getDistortionParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getDistortionParametersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getDistortionParametersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getDistortionParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getDistortionParametersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getDistortionParametersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getDistortionParametersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getDistortionParametersRequest)
    MergeFrom(*source);
  }
}

void getDistortionParametersRequest::MergeFrom(const getDistortionParametersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getDistortionParametersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
}

void getDistortionParametersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getDistortionParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getDistortionParametersRequest::CopyFrom(const getDistortionParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getDistortionParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDistortionParametersRequest::IsInitialized() const {
  return true;
}

void getDistortionParametersRequest::InternalSwap(getDistortionParametersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(grpcservercompressionformat_, other->grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getDistortionParametersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class getDistortionParametersResponse::_Internal {
 public:
};

getDistortionParametersResponse::getDistortionParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getDistortionParametersResponse)
}
getDistortionParametersResponse::getDistortionParametersResponse(const getDistortionParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    xpcfgrpcreturnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xpcfgrpcreturnvalue(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getDistortionParametersResponse)
}

void getDistortionParametersResponse::SharedCtor() {
xpcfgrpcreturnvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

getDistortionParametersResponse::~getDistortionParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getDistortionParametersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void getDistortionParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  xpcfgrpcreturnvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void getDistortionParametersResponse::ArenaDtor(void* object) {
  getDistortionParametersResponse* _this = reinterpret_cast< getDistortionParametersResponse* >(object);
  (void)_this;
}
void getDistortionParametersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void getDistortionParametersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void getDistortionParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getDistortionParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDistortionParametersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* getDistortionParametersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getDistortionParametersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getDistortionParametersResponse)
  return target;
}

size_t getDistortionParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getDistortionParametersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (this->xpcfgrpcreturnvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getDistortionParametersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcICamera.getDistortionParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getDistortionParametersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<getDistortionParametersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcICamera.getDistortionParametersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcICamera.getDistortionParametersResponse)
    MergeFrom(*source);
  }
}

void getDistortionParametersResponse::MergeFrom(const getDistortionParametersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getDistortionParametersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpcfgrpcreturnvalue().size() > 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void getDistortionParametersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcICamera.getDistortionParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getDistortionParametersResponse::CopyFrom(const getDistortionParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getDistortionParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDistortionParametersResponse::IsInitialized() const {
  return true;
}

void getDistortionParametersResponse::InternalSwap(getDistortionParametersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  xpcfgrpcreturnvalue_.Swap(&other->xpcfgrpcreturnvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata getDistortionParametersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcICamera
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcICamera::startRequest* Arena::CreateMaybeMessage< ::grpcICamera::startRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::startRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::startResponse* Arena::CreateMaybeMessage< ::grpcICamera::startResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::startResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::stopRequest* Arena::CreateMaybeMessage< ::grpcICamera::stopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::stopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::stopResponse* Arena::CreateMaybeMessage< ::grpcICamera::stopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::stopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getNextImageRequest* Arena::CreateMaybeMessage< ::grpcICamera::getNextImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getNextImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getNextImageResponse* Arena::CreateMaybeMessage< ::grpcICamera::getNextImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getNextImageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::setResolutionRequest* Arena::CreateMaybeMessage< ::grpcICamera::setResolutionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::setResolutionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::setIntrinsicParametersRequest* Arena::CreateMaybeMessage< ::grpcICamera::setIntrinsicParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::setIntrinsicParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::setDistortionParametersRequest* Arena::CreateMaybeMessage< ::grpcICamera::setDistortionParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::setDistortionParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::setParametersRequest* Arena::CreateMaybeMessage< ::grpcICamera::setParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::setParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getResolutionRequest* Arena::CreateMaybeMessage< ::grpcICamera::getResolutionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getResolutionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getResolutionResponse* Arena::CreateMaybeMessage< ::grpcICamera::getResolutionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getResolutionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getIntrinsicsParametersRequest* Arena::CreateMaybeMessage< ::grpcICamera::getIntrinsicsParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getIntrinsicsParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getIntrinsicsParametersResponse* Arena::CreateMaybeMessage< ::grpcICamera::getIntrinsicsParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getIntrinsicsParametersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getParametersRequest* Arena::CreateMaybeMessage< ::grpcICamera::getParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getParametersResponse* Arena::CreateMaybeMessage< ::grpcICamera::getParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getParametersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getDistortionParametersRequest* Arena::CreateMaybeMessage< ::grpcICamera::getDistortionParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getDistortionParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getDistortionParametersResponse* Arena::CreateMaybeMessage< ::grpcICamera::getDistortionParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getDistortionParametersResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
