// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcICameraService.proto

#include "grpcICameraService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcICamera {
PROTOBUF_CONSTEXPR startRequest::startRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct startRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR startRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~startRequestDefaultTypeInternal() {}
  union {
    startRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 startRequestDefaultTypeInternal _startRequest_default_instance_;
PROTOBUF_CONSTEXPR startResponse::startResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct startResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR startResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~startResponseDefaultTypeInternal() {}
  union {
    startResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 startResponseDefaultTypeInternal _startResponse_default_instance_;
PROTOBUF_CONSTEXPR stopRequest::stopRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct stopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR stopRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~stopRequestDefaultTypeInternal() {}
  union {
    stopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 stopRequestDefaultTypeInternal _stopRequest_default_instance_;
PROTOBUF_CONSTEXPR stopResponse::stopResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct stopResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR stopResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~stopResponseDefaultTypeInternal() {}
  union {
    stopResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 stopResponseDefaultTypeInternal _stopResponse_default_instance_;
PROTOBUF_CONSTEXPR getNextImageRequest::getNextImageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.img_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getNextImageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getNextImageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getNextImageRequestDefaultTypeInternal() {}
  union {
    getNextImageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getNextImageRequestDefaultTypeInternal _getNextImageRequest_default_instance_;
PROTOBUF_CONSTEXPR getNextImageResponse::getNextImageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.img_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.xpcfgrpcreturnvalue_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getNextImageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getNextImageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getNextImageResponseDefaultTypeInternal() {}
  union {
    getNextImageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getNextImageResponseDefaultTypeInternal _getNextImageResponse_default_instance_;
PROTOBUF_CONSTEXPR setResolutionRequest::setResolutionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resolution_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct setResolutionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setResolutionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~setResolutionRequestDefaultTypeInternal() {}
  union {
    setResolutionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setResolutionRequestDefaultTypeInternal _setResolutionRequest_default_instance_;
PROTOBUF_CONSTEXPR setIntrinsicParametersRequest::setIntrinsicParametersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.intrinsic_parameters_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct setIntrinsicParametersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setIntrinsicParametersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~setIntrinsicParametersRequestDefaultTypeInternal() {}
  union {
    setIntrinsicParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setIntrinsicParametersRequestDefaultTypeInternal _setIntrinsicParametersRequest_default_instance_;
PROTOBUF_CONSTEXPR setDistortionParametersRequest::setDistortionParametersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.distortion_parameters_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct setDistortionParametersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setDistortionParametersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~setDistortionParametersRequestDefaultTypeInternal() {}
  union {
    setDistortionParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setDistortionParametersRequestDefaultTypeInternal _setDistortionParametersRequest_default_instance_;
PROTOBUF_CONSTEXPR setParametersRequest::setParametersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parameters_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct setParametersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setParametersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~setParametersRequestDefaultTypeInternal() {}
  union {
    setParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setParametersRequestDefaultTypeInternal _setParametersRequest_default_instance_;
PROTOBUF_CONSTEXPR getResolutionRequest::getResolutionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getResolutionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getResolutionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getResolutionRequestDefaultTypeInternal() {}
  union {
    getResolutionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getResolutionRequestDefaultTypeInternal _getResolutionRequest_default_instance_;
PROTOBUF_CONSTEXPR getResolutionResponse::getResolutionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getResolutionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getResolutionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getResolutionResponseDefaultTypeInternal() {}
  union {
    getResolutionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getResolutionResponseDefaultTypeInternal _getResolutionResponse_default_instance_;
PROTOBUF_CONSTEXPR getIntrinsicsParametersRequest::getIntrinsicsParametersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getIntrinsicsParametersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getIntrinsicsParametersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getIntrinsicsParametersRequestDefaultTypeInternal() {}
  union {
    getIntrinsicsParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getIntrinsicsParametersRequestDefaultTypeInternal _getIntrinsicsParametersRequest_default_instance_;
PROTOBUF_CONSTEXPR getIntrinsicsParametersResponse::getIntrinsicsParametersResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getIntrinsicsParametersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getIntrinsicsParametersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getIntrinsicsParametersResponseDefaultTypeInternal() {}
  union {
    getIntrinsicsParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getIntrinsicsParametersResponseDefaultTypeInternal _getIntrinsicsParametersResponse_default_instance_;
PROTOBUF_CONSTEXPR getParametersRequest::getParametersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getParametersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getParametersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getParametersRequestDefaultTypeInternal() {}
  union {
    getParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getParametersRequestDefaultTypeInternal _getParametersRequest_default_instance_;
PROTOBUF_CONSTEXPR getParametersResponse::getParametersResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getParametersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getParametersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getParametersResponseDefaultTypeInternal() {}
  union {
    getParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getParametersResponseDefaultTypeInternal _getParametersResponse_default_instance_;
PROTOBUF_CONSTEXPR getDistortionParametersRequest::getDistortionParametersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getDistortionParametersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getDistortionParametersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getDistortionParametersRequestDefaultTypeInternal() {}
  union {
    getDistortionParametersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getDistortionParametersRequestDefaultTypeInternal _getDistortionParametersRequest_default_instance_;
PROTOBUF_CONSTEXPR getDistortionParametersResponse::getDistortionParametersResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getDistortionParametersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getDistortionParametersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getDistortionParametersResponseDefaultTypeInternal() {}
  union {
    getDistortionParametersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getDistortionParametersResponseDefaultTypeInternal _getDistortionParametersResponse_default_instance_;
}  // namespace grpcICamera
static ::_pb::Metadata file_level_metadata_grpcICameraService_2eproto[18];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcICameraService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcICameraService_2eproto = nullptr;

const uint32_t TableStruct_grpcICameraService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::startRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::startRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::startResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::startResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::stopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::stopRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::stopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::stopResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageRequest, _impl_.img_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageResponse, _impl_.img_),
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getNextImageResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setResolutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setResolutionRequest, _impl_.resolution_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setIntrinsicParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setIntrinsicParametersRequest, _impl_.intrinsic_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setDistortionParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setDistortionParametersRequest, _impl_.distortion_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::setParametersRequest, _impl_.parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getResolutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getResolutionRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getResolutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getResolutionResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getIntrinsicsParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getIntrinsicsParametersRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getIntrinsicsParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getIntrinsicsParametersResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getParametersRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getParametersResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getDistortionParametersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getDistortionParametersRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getDistortionParametersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcICamera::getDistortionParametersResponse, _impl_.xpcfgrpcreturnvalue_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcICamera::startRequest)},
  { 7, -1, -1, sizeof(::grpcICamera::startResponse)},
  { 14, -1, -1, sizeof(::grpcICamera::stopRequest)},
  { 21, -1, -1, sizeof(::grpcICamera::stopResponse)},
  { 28, -1, -1, sizeof(::grpcICamera::getNextImageRequest)},
  { 36, -1, -1, sizeof(::grpcICamera::getNextImageResponse)},
  { 44, -1, -1, sizeof(::grpcICamera::setResolutionRequest)},
  { 51, -1, -1, sizeof(::grpcICamera::setIntrinsicParametersRequest)},
  { 58, -1, -1, sizeof(::grpcICamera::setDistortionParametersRequest)},
  { 65, -1, -1, sizeof(::grpcICamera::setParametersRequest)},
  { 72, -1, -1, sizeof(::grpcICamera::getResolutionRequest)},
  { 79, -1, -1, sizeof(::grpcICamera::getResolutionResponse)},
  { 86, -1, -1, sizeof(::grpcICamera::getIntrinsicsParametersRequest)},
  { 93, -1, -1, sizeof(::grpcICamera::getIntrinsicsParametersResponse)},
  { 100, -1, -1, sizeof(::grpcICamera::getParametersRequest)},
  { 107, -1, -1, sizeof(::grpcICamera::getParametersResponse)},
  { 114, -1, -1, sizeof(::grpcICamera::getDistortionParametersRequest)},
  { 121, -1, -1, sizeof(::grpcICamera::getDistortionParametersResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcICamera::_startRequest_default_instance_._instance,
  &::grpcICamera::_startResponse_default_instance_._instance,
  &::grpcICamera::_stopRequest_default_instance_._instance,
  &::grpcICamera::_stopResponse_default_instance_._instance,
  &::grpcICamera::_getNextImageRequest_default_instance_._instance,
  &::grpcICamera::_getNextImageResponse_default_instance_._instance,
  &::grpcICamera::_setResolutionRequest_default_instance_._instance,
  &::grpcICamera::_setIntrinsicParametersRequest_default_instance_._instance,
  &::grpcICamera::_setDistortionParametersRequest_default_instance_._instance,
  &::grpcICamera::_setParametersRequest_default_instance_._instance,
  &::grpcICamera::_getResolutionRequest_default_instance_._instance,
  &::grpcICamera::_getResolutionResponse_default_instance_._instance,
  &::grpcICamera::_getIntrinsicsParametersRequest_default_instance_._instance,
  &::grpcICamera::_getIntrinsicsParametersResponse_default_instance_._instance,
  &::grpcICamera::_getParametersRequest_default_instance_._instance,
  &::grpcICamera::_getParametersResponse_default_instance_._instance,
  &::grpcICamera::_getDistortionParametersRequest_default_instance_._instance,
  &::grpcICamera::_getDistortionParametersResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcICameraService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030grpcICameraService.proto\022\013grpcICamera\032"
  "\033google/protobuf/empty.proto\"3\n\014startReq"
  "uest\022#\n\033grpcServerCompressionFormat\030\001 \001("
  "\005\",\n\rstartResponse\022\033\n\023xpcfGrpcReturnValu"
  "e\030\001 \001(\021\"2\n\013stopRequest\022#\n\033grpcServerComp"
  "ressionFormat\030\001 \001(\005\"+\n\014stopResponse\022\033\n\023x"
  "pcfGrpcReturnValue\030\001 \001(\021\"G\n\023getNextImage"
  "Request\022#\n\033grpcServerCompressionFormat\030\001"
  " \001(\005\022\013\n\003img\030\002 \001(\014\"@\n\024getNextImageRespons"
  "e\022\013\n\003img\030\001 \001(\014\022\033\n\023xpcfGrpcReturnValue\030\002 "
  "\001(\021\"*\n\024setResolutionRequest\022\022\n\nresolutio"
  "n\030\001 \001(\014\"=\n\035setIntrinsicParametersRequest"
  "\022\034\n\024intrinsic_parameters\030\001 \001(\014\"\?\n\036setDis"
  "tortionParametersRequest\022\035\n\025distortion_p"
  "arameters\030\001 \001(\014\"*\n\024setParametersRequest\022"
  "\022\n\nparameters\030\001 \001(\014\";\n\024getResolutionRequ"
  "est\022#\n\033grpcServerCompressionFormat\030\001 \001(\005"
  "\"4\n\025getResolutionResponse\022\033\n\023xpcfGrpcRet"
  "urnValue\030\001 \001(\014\"E\n\036getIntrinsicsParameter"
  "sRequest\022#\n\033grpcServerCompressionFormat\030"
  "\001 \001(\005\">\n\037getIntrinsicsParametersResponse"
  "\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\014\";\n\024getPara"
  "metersRequest\022#\n\033grpcServerCompressionFo"
  "rmat\030\001 \001(\005\"4\n\025getParametersResponse\022\033\n\023x"
  "pcfGrpcReturnValue\030\001 \001(\014\"E\n\036getDistortio"
  "nParametersRequest\022#\n\033grpcServerCompress"
  "ionFormat\030\001 \001(\005\">\n\037getDistortionParamete"
  "rsResponse\022\033\n\023xpcfGrpcReturnValue\030\001 \001(\0142"
  "\356\007\n\022grpcICameraService\022@\n\005start\022\031.grpcIC"
  "amera.startRequest\032\032.grpcICamera.startRe"
  "sponse\"\000\022=\n\004stop\022\030.grpcICamera.stopReque"
  "st\032\031.grpcICamera.stopResponse\"\000\022U\n\014getNe"
  "xtImage\022 .grpcICamera.getNextImageReques"
  "t\032!.grpcICamera.getNextImageResponse\"\000\022L"
  "\n\rsetResolution\022!.grpcICamera.setResolut"
  "ionRequest\032\026.google.protobuf.Empty\"\000\022^\n\026"
  "setIntrinsicParameters\022*.grpcICamera.set"
  "IntrinsicParametersRequest\032\026.google.prot"
  "obuf.Empty\"\000\022`\n\027setDistortionParameters\022"
  "+.grpcICamera.setDistortionParametersReq"
  "uest\032\026.google.protobuf.Empty\"\000\022L\n\rsetPar"
  "ameters\022!.grpcICamera.setParametersReque"
  "st\032\026.google.protobuf.Empty\"\000\022X\n\rgetResol"
  "ution\022!.grpcICamera.getResolutionRequest"
  "\032\".grpcICamera.getResolutionResponse\"\000\022v"
  "\n\027getIntrinsicsParameters\022+.grpcICamera."
  "getIntrinsicsParametersRequest\032,.grpcICa"
  "mera.getIntrinsicsParametersResponse\"\000\022X"
  "\n\rgetParameters\022!.grpcICamera.getParamet"
  "ersRequest\032\".grpcICamera.getParametersRe"
  "sponse\"\000\022v\n\027getDistortionParameters\022+.gr"
  "pcICamera.getDistortionParametersRequest"
  "\032,.grpcICamera.getDistortionParametersRe"
  "sponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcICameraService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcICameraService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcICameraService_2eproto = {
    false, false, 2136, descriptor_table_protodef_grpcICameraService_2eproto,
    "grpcICameraService.proto",
    &descriptor_table_grpcICameraService_2eproto_once, descriptor_table_grpcICameraService_2eproto_deps, 1, 18,
    schemas, file_default_instances, TableStruct_grpcICameraService_2eproto::offsets,
    file_level_metadata_grpcICameraService_2eproto, file_level_enum_descriptors_grpcICameraService_2eproto,
    file_level_service_descriptors_grpcICameraService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcICameraService_2eproto_getter() {
  return &descriptor_table_grpcICameraService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcICameraService_2eproto(&descriptor_table_grpcICameraService_2eproto);
namespace grpcICamera {

// ===================================================================

class startRequest::_Internal {
 public:
};

startRequest::startRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.startRequest)
}
startRequest::startRequest(const startRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  startRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.startRequest)
}

inline void startRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

startRequest::~startRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.startRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void startRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void startRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void startRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.startRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* startRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* startRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.startRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.startRequest)
  return target;
}

size_t startRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.startRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData startRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    startRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*startRequest::GetClassData() const { return &_class_data_; }


void startRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<startRequest*>(&to_msg);
  auto& from = static_cast<const startRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.startRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void startRequest::CopyFrom(const startRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.startRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool startRequest::IsInitialized() const {
  return true;
}

void startRequest::InternalSwap(startRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata startRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[0]);
}

// ===================================================================

class startResponse::_Internal {
 public:
};

startResponse::startResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.startResponse)
}
startResponse::startResponse(const startResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  startResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.startResponse)
}

inline void startResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

startResponse::~startResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.startResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void startResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void startResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void startResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.startResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* startResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* startResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.startResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.startResponse)
  return target;
}

size_t startResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.startResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData startResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    startResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*startResponse::GetClassData() const { return &_class_data_; }


void startResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<startResponse*>(&to_msg);
  auto& from = static_cast<const startResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.startResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void startResponse::CopyFrom(const startResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.startResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool startResponse::IsInitialized() const {
  return true;
}

void startResponse::InternalSwap(startResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata startResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[1]);
}

// ===================================================================

class stopRequest::_Internal {
 public:
};

stopRequest::stopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.stopRequest)
}
stopRequest::stopRequest(const stopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  stopRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.stopRequest)
}

inline void stopRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

stopRequest::~stopRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.stopRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void stopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void stopRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void stopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.stopRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* stopRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* stopRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.stopRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.stopRequest)
  return target;
}

size_t stopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.stopRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData stopRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    stopRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*stopRequest::GetClassData() const { return &_class_data_; }


void stopRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<stopRequest*>(&to_msg);
  auto& from = static_cast<const stopRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.stopRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void stopRequest::CopyFrom(const stopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.stopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stopRequest::IsInitialized() const {
  return true;
}

void stopRequest::InternalSwap(stopRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata stopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[2]);
}

// ===================================================================

class stopResponse::_Internal {
 public:
};

stopResponse::stopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.stopResponse)
}
stopResponse::stopResponse(const stopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  stopResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.stopResponse)
}

inline void stopResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

stopResponse::~stopResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.stopResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void stopResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void stopResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void stopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.stopResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* stopResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint32 xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* stopResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.stopResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.stopResponse)
  return target;
}

size_t stopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.stopResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 xpcfGrpcReturnValue = 1;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData stopResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    stopResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*stopResponse::GetClassData() const { return &_class_data_; }


void stopResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<stopResponse*>(&to_msg);
  auto& from = static_cast<const stopResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.stopResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void stopResponse::CopyFrom(const stopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.stopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool stopResponse::IsInitialized() const {
  return true;
}

void stopResponse::InternalSwap(stopResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata stopResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[3]);
}

// ===================================================================

class getNextImageRequest::_Internal {
 public:
};

getNextImageRequest::getNextImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getNextImageRequest)
}
getNextImageRequest::getNextImageRequest(const getNextImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getNextImageRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.img_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.img_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.img_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_img().empty()) {
    _this->_impl_.img_.Set(from._internal_img(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getNextImageRequest)
}

inline void getNextImageRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.img_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.img_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.img_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getNextImageRequest::~getNextImageRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getNextImageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getNextImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.img_.Destroy();
}

void getNextImageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getNextImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getNextImageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.img_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNextImageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes img = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_img();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getNextImageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getNextImageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes img = 2;
  if (!this->_internal_img().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_img(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getNextImageRequest)
  return target;
}

size_t getNextImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getNextImageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes img = 2;
  if (!this->_internal_img().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_img());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getNextImageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getNextImageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getNextImageRequest::GetClassData() const { return &_class_data_; }


void getNextImageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getNextImageRequest*>(&to_msg);
  auto& from = static_cast<const getNextImageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getNextImageRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_img().empty()) {
    _this->_internal_set_img(from._internal_img());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getNextImageRequest::CopyFrom(const getNextImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getNextImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNextImageRequest::IsInitialized() const {
  return true;
}

void getNextImageRequest::InternalSwap(getNextImageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.img_, lhs_arena,
      &other->_impl_.img_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNextImageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[4]);
}

// ===================================================================

class getNextImageResponse::_Internal {
 public:
};

getNextImageResponse::getNextImageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getNextImageResponse)
}
getNextImageResponse::getNextImageResponse(const getNextImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getNextImageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.img_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.img_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.img_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_img().empty()) {
    _this->_impl_.img_.Set(from._internal_img(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.xpcfgrpcreturnvalue_ = from._impl_.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getNextImageResponse)
}

inline void getNextImageResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.img_){}
    , decltype(_impl_.xpcfgrpcreturnvalue_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.img_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.img_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getNextImageResponse::~getNextImageResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getNextImageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getNextImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.img_.Destroy();
}

void getNextImageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getNextImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getNextImageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.img_.ClearToEmpty();
  _impl_.xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getNextImageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes img = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_img();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getNextImageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getNextImageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes img = 1;
  if (!this->_internal_img().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_img(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getNextImageResponse)
  return target;
}

size_t getNextImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getNextImageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes img = 1;
  if (!this->_internal_img().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_img());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->_internal_xpcfgrpcreturnvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt32SizePlusOne(this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getNextImageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getNextImageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getNextImageResponse::GetClassData() const { return &_class_data_; }


void getNextImageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getNextImageResponse*>(&to_msg);
  auto& from = static_cast<const getNextImageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getNextImageResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_img().empty()) {
    _this->_internal_set_img(from._internal_img());
  }
  if (from._internal_xpcfgrpcreturnvalue() != 0) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getNextImageResponse::CopyFrom(const getNextImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getNextImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getNextImageResponse::IsInitialized() const {
  return true;
}

void getNextImageResponse::InternalSwap(getNextImageResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.img_, lhs_arena,
      &other->_impl_.img_, rhs_arena
  );
  swap(_impl_.xpcfgrpcreturnvalue_, other->_impl_.xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getNextImageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[5]);
}

// ===================================================================

class setResolutionRequest::_Internal {
 public:
};

setResolutionRequest::setResolutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.setResolutionRequest)
}
setResolutionRequest::setResolutionRequest(const setResolutionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  setResolutionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resolution_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.resolution_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resolution_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_resolution().empty()) {
    _this->_impl_.resolution_.Set(from._internal_resolution(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.setResolutionRequest)
}

inline void setResolutionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resolution_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.resolution_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resolution_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

setResolutionRequest::~setResolutionRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.setResolutionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void setResolutionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resolution_.Destroy();
}

void setResolutionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void setResolutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.setResolutionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resolution_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setResolutionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes resolution = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_resolution();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* setResolutionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.setResolutionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes resolution = 1;
  if (!this->_internal_resolution().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_resolution(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.setResolutionRequest)
  return target;
}

size_t setResolutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.setResolutionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes resolution = 1;
  if (!this->_internal_resolution().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_resolution());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setResolutionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    setResolutionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setResolutionRequest::GetClassData() const { return &_class_data_; }


void setResolutionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<setResolutionRequest*>(&to_msg);
  auto& from = static_cast<const setResolutionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.setResolutionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resolution().empty()) {
    _this->_internal_set_resolution(from._internal_resolution());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setResolutionRequest::CopyFrom(const setResolutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.setResolutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setResolutionRequest::IsInitialized() const {
  return true;
}

void setResolutionRequest::InternalSwap(setResolutionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.resolution_, lhs_arena,
      &other->_impl_.resolution_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata setResolutionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[6]);
}

// ===================================================================

class setIntrinsicParametersRequest::_Internal {
 public:
};

setIntrinsicParametersRequest::setIntrinsicParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.setIntrinsicParametersRequest)
}
setIntrinsicParametersRequest::setIntrinsicParametersRequest(const setIntrinsicParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  setIntrinsicParametersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.intrinsic_parameters_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.intrinsic_parameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.intrinsic_parameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_intrinsic_parameters().empty()) {
    _this->_impl_.intrinsic_parameters_.Set(from._internal_intrinsic_parameters(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.setIntrinsicParametersRequest)
}

inline void setIntrinsicParametersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.intrinsic_parameters_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.intrinsic_parameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.intrinsic_parameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

setIntrinsicParametersRequest::~setIntrinsicParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.setIntrinsicParametersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void setIntrinsicParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.intrinsic_parameters_.Destroy();
}

void setIntrinsicParametersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void setIntrinsicParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.setIntrinsicParametersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.intrinsic_parameters_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setIntrinsicParametersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes intrinsic_parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_intrinsic_parameters();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* setIntrinsicParametersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.setIntrinsicParametersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes intrinsic_parameters = 1;
  if (!this->_internal_intrinsic_parameters().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_intrinsic_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.setIntrinsicParametersRequest)
  return target;
}

size_t setIntrinsicParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.setIntrinsicParametersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes intrinsic_parameters = 1;
  if (!this->_internal_intrinsic_parameters().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_intrinsic_parameters());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setIntrinsicParametersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    setIntrinsicParametersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setIntrinsicParametersRequest::GetClassData() const { return &_class_data_; }


void setIntrinsicParametersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<setIntrinsicParametersRequest*>(&to_msg);
  auto& from = static_cast<const setIntrinsicParametersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.setIntrinsicParametersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_intrinsic_parameters().empty()) {
    _this->_internal_set_intrinsic_parameters(from._internal_intrinsic_parameters());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setIntrinsicParametersRequest::CopyFrom(const setIntrinsicParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.setIntrinsicParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setIntrinsicParametersRequest::IsInitialized() const {
  return true;
}

void setIntrinsicParametersRequest::InternalSwap(setIntrinsicParametersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.intrinsic_parameters_, lhs_arena,
      &other->_impl_.intrinsic_parameters_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata setIntrinsicParametersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[7]);
}

// ===================================================================

class setDistortionParametersRequest::_Internal {
 public:
};

setDistortionParametersRequest::setDistortionParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.setDistortionParametersRequest)
}
setDistortionParametersRequest::setDistortionParametersRequest(const setDistortionParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  setDistortionParametersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.distortion_parameters_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.distortion_parameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.distortion_parameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_distortion_parameters().empty()) {
    _this->_impl_.distortion_parameters_.Set(from._internal_distortion_parameters(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.setDistortionParametersRequest)
}

inline void setDistortionParametersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.distortion_parameters_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.distortion_parameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.distortion_parameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

setDistortionParametersRequest::~setDistortionParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.setDistortionParametersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void setDistortionParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.distortion_parameters_.Destroy();
}

void setDistortionParametersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void setDistortionParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.setDistortionParametersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.distortion_parameters_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setDistortionParametersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes distortion_parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_distortion_parameters();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* setDistortionParametersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.setDistortionParametersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes distortion_parameters = 1;
  if (!this->_internal_distortion_parameters().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_distortion_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.setDistortionParametersRequest)
  return target;
}

size_t setDistortionParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.setDistortionParametersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes distortion_parameters = 1;
  if (!this->_internal_distortion_parameters().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_distortion_parameters());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setDistortionParametersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    setDistortionParametersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setDistortionParametersRequest::GetClassData() const { return &_class_data_; }


void setDistortionParametersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<setDistortionParametersRequest*>(&to_msg);
  auto& from = static_cast<const setDistortionParametersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.setDistortionParametersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_distortion_parameters().empty()) {
    _this->_internal_set_distortion_parameters(from._internal_distortion_parameters());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setDistortionParametersRequest::CopyFrom(const setDistortionParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.setDistortionParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setDistortionParametersRequest::IsInitialized() const {
  return true;
}

void setDistortionParametersRequest::InternalSwap(setDistortionParametersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.distortion_parameters_, lhs_arena,
      &other->_impl_.distortion_parameters_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata setDistortionParametersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[8]);
}

// ===================================================================

class setParametersRequest::_Internal {
 public:
};

setParametersRequest::setParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.setParametersRequest)
}
setParametersRequest::setParametersRequest(const setParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  setParametersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parameters_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parameters().empty()) {
    _this->_impl_.parameters_.Set(from._internal_parameters(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.setParametersRequest)
}

inline void setParametersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parameters_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parameters_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parameters_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

setParametersRequest::~setParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.setParametersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void setParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameters_.Destroy();
}

void setParametersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void setParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.setParametersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* setParametersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parameters();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* setParametersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.setParametersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes parameters = 1;
  if (!this->_internal_parameters().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_parameters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.setParametersRequest)
  return target;
}

size_t setParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.setParametersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes parameters = 1;
  if (!this->_internal_parameters().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_parameters());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData setParametersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    setParametersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*setParametersRequest::GetClassData() const { return &_class_data_; }


void setParametersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<setParametersRequest*>(&to_msg);
  auto& from = static_cast<const setParametersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.setParametersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parameters().empty()) {
    _this->_internal_set_parameters(from._internal_parameters());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void setParametersRequest::CopyFrom(const setParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.setParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setParametersRequest::IsInitialized() const {
  return true;
}

void setParametersRequest::InternalSwap(setParametersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parameters_, lhs_arena,
      &other->_impl_.parameters_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata setParametersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[9]);
}

// ===================================================================

class getResolutionRequest::_Internal {
 public:
};

getResolutionRequest::getResolutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getResolutionRequest)
}
getResolutionRequest::getResolutionRequest(const getResolutionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getResolutionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getResolutionRequest)
}

inline void getResolutionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getResolutionRequest::~getResolutionRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getResolutionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getResolutionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getResolutionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getResolutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getResolutionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getResolutionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getResolutionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getResolutionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getResolutionRequest)
  return target;
}

size_t getResolutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getResolutionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getResolutionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getResolutionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getResolutionRequest::GetClassData() const { return &_class_data_; }


void getResolutionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getResolutionRequest*>(&to_msg);
  auto& from = static_cast<const getResolutionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getResolutionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getResolutionRequest::CopyFrom(const getResolutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getResolutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getResolutionRequest::IsInitialized() const {
  return true;
}

void getResolutionRequest::InternalSwap(getResolutionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getResolutionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[10]);
}

// ===================================================================

class getResolutionResponse::_Internal {
 public:
};

getResolutionResponse::getResolutionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getResolutionResponse)
}
getResolutionResponse::getResolutionResponse(const getResolutionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getResolutionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_impl_.xpcfgrpcreturnvalue_.Set(from._internal_xpcfgrpcreturnvalue(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getResolutionResponse)
}

inline void getResolutionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getResolutionResponse::~getResolutionResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getResolutionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getResolutionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.xpcfgrpcreturnvalue_.Destroy();
}

void getResolutionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getResolutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getResolutionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getResolutionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getResolutionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getResolutionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getResolutionResponse)
  return target;
}

size_t getResolutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getResolutionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getResolutionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getResolutionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getResolutionResponse::GetClassData() const { return &_class_data_; }


void getResolutionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getResolutionResponse*>(&to_msg);
  auto& from = static_cast<const getResolutionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getResolutionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getResolutionResponse::CopyFrom(const getResolutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getResolutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getResolutionResponse::IsInitialized() const {
  return true;
}

void getResolutionResponse::InternalSwap(getResolutionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.xpcfgrpcreturnvalue_, lhs_arena,
      &other->_impl_.xpcfgrpcreturnvalue_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata getResolutionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[11]);
}

// ===================================================================

class getIntrinsicsParametersRequest::_Internal {
 public:
};

getIntrinsicsParametersRequest::getIntrinsicsParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getIntrinsicsParametersRequest)
}
getIntrinsicsParametersRequest::getIntrinsicsParametersRequest(const getIntrinsicsParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getIntrinsicsParametersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getIntrinsicsParametersRequest)
}

inline void getIntrinsicsParametersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getIntrinsicsParametersRequest::~getIntrinsicsParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getIntrinsicsParametersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getIntrinsicsParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getIntrinsicsParametersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getIntrinsicsParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getIntrinsicsParametersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getIntrinsicsParametersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getIntrinsicsParametersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getIntrinsicsParametersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getIntrinsicsParametersRequest)
  return target;
}

size_t getIntrinsicsParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getIntrinsicsParametersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getIntrinsicsParametersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getIntrinsicsParametersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getIntrinsicsParametersRequest::GetClassData() const { return &_class_data_; }


void getIntrinsicsParametersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getIntrinsicsParametersRequest*>(&to_msg);
  auto& from = static_cast<const getIntrinsicsParametersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getIntrinsicsParametersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getIntrinsicsParametersRequest::CopyFrom(const getIntrinsicsParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getIntrinsicsParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getIntrinsicsParametersRequest::IsInitialized() const {
  return true;
}

void getIntrinsicsParametersRequest::InternalSwap(getIntrinsicsParametersRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getIntrinsicsParametersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[12]);
}

// ===================================================================

class getIntrinsicsParametersResponse::_Internal {
 public:
};

getIntrinsicsParametersResponse::getIntrinsicsParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getIntrinsicsParametersResponse)
}
getIntrinsicsParametersResponse::getIntrinsicsParametersResponse(const getIntrinsicsParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getIntrinsicsParametersResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_impl_.xpcfgrpcreturnvalue_.Set(from._internal_xpcfgrpcreturnvalue(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getIntrinsicsParametersResponse)
}

inline void getIntrinsicsParametersResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getIntrinsicsParametersResponse::~getIntrinsicsParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getIntrinsicsParametersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getIntrinsicsParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.xpcfgrpcreturnvalue_.Destroy();
}

void getIntrinsicsParametersResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getIntrinsicsParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getIntrinsicsParametersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getIntrinsicsParametersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getIntrinsicsParametersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getIntrinsicsParametersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getIntrinsicsParametersResponse)
  return target;
}

size_t getIntrinsicsParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getIntrinsicsParametersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getIntrinsicsParametersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getIntrinsicsParametersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getIntrinsicsParametersResponse::GetClassData() const { return &_class_data_; }


void getIntrinsicsParametersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getIntrinsicsParametersResponse*>(&to_msg);
  auto& from = static_cast<const getIntrinsicsParametersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getIntrinsicsParametersResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getIntrinsicsParametersResponse::CopyFrom(const getIntrinsicsParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getIntrinsicsParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getIntrinsicsParametersResponse::IsInitialized() const {
  return true;
}

void getIntrinsicsParametersResponse::InternalSwap(getIntrinsicsParametersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.xpcfgrpcreturnvalue_, lhs_arena,
      &other->_impl_.xpcfgrpcreturnvalue_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata getIntrinsicsParametersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[13]);
}

// ===================================================================

class getParametersRequest::_Internal {
 public:
};

getParametersRequest::getParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getParametersRequest)
}
getParametersRequest::getParametersRequest(const getParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getParametersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getParametersRequest)
}

inline void getParametersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getParametersRequest::~getParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getParametersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getParametersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getParametersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getParametersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getParametersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getParametersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getParametersRequest)
  return target;
}

size_t getParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getParametersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getParametersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getParametersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getParametersRequest::GetClassData() const { return &_class_data_; }


void getParametersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getParametersRequest*>(&to_msg);
  auto& from = static_cast<const getParametersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getParametersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getParametersRequest::CopyFrom(const getParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getParametersRequest::IsInitialized() const {
  return true;
}

void getParametersRequest::InternalSwap(getParametersRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getParametersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[14]);
}

// ===================================================================

class getParametersResponse::_Internal {
 public:
};

getParametersResponse::getParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getParametersResponse)
}
getParametersResponse::getParametersResponse(const getParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getParametersResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_impl_.xpcfgrpcreturnvalue_.Set(from._internal_xpcfgrpcreturnvalue(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getParametersResponse)
}

inline void getParametersResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getParametersResponse::~getParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getParametersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.xpcfgrpcreturnvalue_.Destroy();
}

void getParametersResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getParametersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getParametersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getParametersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getParametersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getParametersResponse)
  return target;
}

size_t getParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getParametersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getParametersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getParametersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getParametersResponse::GetClassData() const { return &_class_data_; }


void getParametersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getParametersResponse*>(&to_msg);
  auto& from = static_cast<const getParametersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getParametersResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getParametersResponse::CopyFrom(const getParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getParametersResponse::IsInitialized() const {
  return true;
}

void getParametersResponse::InternalSwap(getParametersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.xpcfgrpcreturnvalue_, lhs_arena,
      &other->_impl_.xpcfgrpcreturnvalue_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata getParametersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[15]);
}

// ===================================================================

class getDistortionParametersRequest::_Internal {
 public:
};

getDistortionParametersRequest::getDistortionParametersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getDistortionParametersRequest)
}
getDistortionParametersRequest::getDistortionParametersRequest(const getDistortionParametersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getDistortionParametersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getDistortionParametersRequest)
}

inline void getDistortionParametersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getDistortionParametersRequest::~getDistortionParametersRequest() {
  // @@protoc_insertion_point(destructor:grpcICamera.getDistortionParametersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getDistortionParametersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getDistortionParametersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getDistortionParametersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getDistortionParametersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDistortionParametersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getDistortionParametersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getDistortionParametersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getDistortionParametersRequest)
  return target;
}

size_t getDistortionParametersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getDistortionParametersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getDistortionParametersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getDistortionParametersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getDistortionParametersRequest::GetClassData() const { return &_class_data_; }


void getDistortionParametersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getDistortionParametersRequest*>(&to_msg);
  auto& from = static_cast<const getDistortionParametersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getDistortionParametersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getDistortionParametersRequest::CopyFrom(const getDistortionParametersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getDistortionParametersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDistortionParametersRequest::IsInitialized() const {
  return true;
}

void getDistortionParametersRequest::InternalSwap(getDistortionParametersRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getDistortionParametersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[16]);
}

// ===================================================================

class getDistortionParametersResponse::_Internal {
 public:
};

getDistortionParametersResponse::getDistortionParametersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcICamera.getDistortionParametersResponse)
}
getDistortionParametersResponse::getDistortionParametersResponse(const getDistortionParametersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getDistortionParametersResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_impl_.xpcfgrpcreturnvalue_.Set(from._internal_xpcfgrpcreturnvalue(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcICamera.getDistortionParametersResponse)
}

inline void getDistortionParametersResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getDistortionParametersResponse::~getDistortionParametersResponse() {
  // @@protoc_insertion_point(destructor:grpcICamera.getDistortionParametersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getDistortionParametersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.xpcfgrpcreturnvalue_.Destroy();
}

void getDistortionParametersResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getDistortionParametersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcICamera.getDistortionParametersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getDistortionParametersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getDistortionParametersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcICamera.getDistortionParametersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcICamera.getDistortionParametersResponse)
  return target;
}

size_t getDistortionParametersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcICamera.getDistortionParametersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getDistortionParametersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getDistortionParametersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getDistortionParametersResponse::GetClassData() const { return &_class_data_; }


void getDistortionParametersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getDistortionParametersResponse*>(&to_msg);
  auto& from = static_cast<const getDistortionParametersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcICamera.getDistortionParametersResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getDistortionParametersResponse::CopyFrom(const getDistortionParametersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcICamera.getDistortionParametersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getDistortionParametersResponse::IsInitialized() const {
  return true;
}

void getDistortionParametersResponse::InternalSwap(getDistortionParametersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.xpcfgrpcreturnvalue_, lhs_arena,
      &other->_impl_.xpcfgrpcreturnvalue_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata getDistortionParametersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcICameraService_2eproto_getter, &descriptor_table_grpcICameraService_2eproto_once,
      file_level_metadata_grpcICameraService_2eproto[17]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcICamera
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcICamera::startRequest*
Arena::CreateMaybeMessage< ::grpcICamera::startRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::startRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::startResponse*
Arena::CreateMaybeMessage< ::grpcICamera::startResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::startResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::stopRequest*
Arena::CreateMaybeMessage< ::grpcICamera::stopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::stopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::stopResponse*
Arena::CreateMaybeMessage< ::grpcICamera::stopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::stopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getNextImageRequest*
Arena::CreateMaybeMessage< ::grpcICamera::getNextImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getNextImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getNextImageResponse*
Arena::CreateMaybeMessage< ::grpcICamera::getNextImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getNextImageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::setResolutionRequest*
Arena::CreateMaybeMessage< ::grpcICamera::setResolutionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::setResolutionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::setIntrinsicParametersRequest*
Arena::CreateMaybeMessage< ::grpcICamera::setIntrinsicParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::setIntrinsicParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::setDistortionParametersRequest*
Arena::CreateMaybeMessage< ::grpcICamera::setDistortionParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::setDistortionParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::setParametersRequest*
Arena::CreateMaybeMessage< ::grpcICamera::setParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::setParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getResolutionRequest*
Arena::CreateMaybeMessage< ::grpcICamera::getResolutionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getResolutionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getResolutionResponse*
Arena::CreateMaybeMessage< ::grpcICamera::getResolutionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getResolutionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getIntrinsicsParametersRequest*
Arena::CreateMaybeMessage< ::grpcICamera::getIntrinsicsParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getIntrinsicsParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getIntrinsicsParametersResponse*
Arena::CreateMaybeMessage< ::grpcICamera::getIntrinsicsParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getIntrinsicsParametersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getParametersRequest*
Arena::CreateMaybeMessage< ::grpcICamera::getParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getParametersResponse*
Arena::CreateMaybeMessage< ::grpcICamera::getParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getParametersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getDistortionParametersRequest*
Arena::CreateMaybeMessage< ::grpcICamera::getDistortionParametersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getDistortionParametersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcICamera::getDistortionParametersResponse*
Arena::CreateMaybeMessage< ::grpcICamera::getDistortionParametersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcICamera::getDistortionParametersResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
