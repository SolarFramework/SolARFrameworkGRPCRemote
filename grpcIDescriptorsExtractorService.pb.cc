// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIDescriptorsExtractorService.proto

#include "grpcIDescriptorsExtractorService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcIDescriptorsExtractor {
PROTOBUF_CONSTEXPR getTypeStringRequest::getTypeStringRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getTypeStringRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getTypeStringRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getTypeStringRequestDefaultTypeInternal() {}
  union {
    getTypeStringRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getTypeStringRequestDefaultTypeInternal _getTypeStringRequest_default_instance_;
PROTOBUF_CONSTEXPR getTypeStringResponse::getTypeStringResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xpcfgrpcreturnvalue_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct getTypeStringResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR getTypeStringResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~getTypeStringResponseDefaultTypeInternal() {}
  union {
    getTypeStringResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 getTypeStringResponseDefaultTypeInternal _getTypeStringResponse_default_instance_;
PROTOBUF_CONSTEXPR extractRequest::extractRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.image_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.keypoints_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.descriptors_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.grpcservercompressionformat_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct extractRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR extractRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~extractRequestDefaultTypeInternal() {}
  union {
    extractRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 extractRequestDefaultTypeInternal _extractRequest_default_instance_;
PROTOBUF_CONSTEXPR extractResponse::extractResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.descriptors_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct extractResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR extractResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~extractResponseDefaultTypeInternal() {}
  union {
    extractResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 extractResponseDefaultTypeInternal _extractResponse_default_instance_;
}  // namespace grpcIDescriptorsExtractor
static ::_pb::Metadata file_level_metadata_grpcIDescriptorsExtractorService_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_grpcIDescriptorsExtractorService_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_grpcIDescriptorsExtractorService_2eproto = nullptr;

const uint32_t TableStruct_grpcIDescriptorsExtractorService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::getTypeStringRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::getTypeStringRequest, _impl_.grpcservercompressionformat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::getTypeStringResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::getTypeStringResponse, _impl_.xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::extractRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::extractRequest, _impl_.grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::extractRequest, _impl_.image_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::extractRequest, _impl_.keypoints_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::extractRequest, _impl_.descriptors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::extractResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorsExtractor::extractResponse, _impl_.descriptors_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcIDescriptorsExtractor::getTypeStringRequest)},
  { 7, -1, -1, sizeof(::grpcIDescriptorsExtractor::getTypeStringResponse)},
  { 14, -1, -1, sizeof(::grpcIDescriptorsExtractor::extractRequest)},
  { 24, -1, -1, sizeof(::grpcIDescriptorsExtractor::extractResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcIDescriptorsExtractor::_getTypeStringRequest_default_instance_._instance,
  &::grpcIDescriptorsExtractor::_getTypeStringResponse_default_instance_._instance,
  &::grpcIDescriptorsExtractor::_extractRequest_default_instance_._instance,
  &::grpcIDescriptorsExtractor::_extractResponse_default_instance_._instance,
};

const char descriptor_table_protodef_grpcIDescriptorsExtractorService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&grpcIDescriptorsExtractorService.proto"
  "\022\031grpcIDescriptorsExtractor\032\033google/prot"
  "obuf/empty.proto\";\n\024getTypeStringRequest"
  "\022#\n\033grpcServerCompressionFormat\030\001 \001(\005\"4\n"
  "\025getTypeStringResponse\022\033\n\023xpcfGrpcReturn"
  "Value\030\001 \001(\t\"l\n\016extractRequest\022#\n\033grpcSer"
  "verCompressionFormat\030\001 \001(\005\022\r\n\005image\030\002 \001("
  "\014\022\021\n\tkeypoints\030\003 \001(\014\022\023\n\013descriptors\030\004 \001("
  "\014\"&\n\017extractResponse\022\023\n\013descriptors\030\001 \001("
  "\0142\374\001\n grpcIDescriptorsExtractorService\022t"
  "\n\rgetTypeString\022/.grpcIDescriptorsExtrac"
  "tor.getTypeStringRequest\0320.grpcIDescript"
  "orsExtractor.getTypeStringResponse\"\000\022b\n\007"
  "extract\022).grpcIDescriptorsExtractor.extr"
  "actRequest\032*.grpcIDescriptorsExtractor.e"
  "xtractResponse\"\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_grpcIDescriptorsExtractorService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::_pbi::once_flag descriptor_table_grpcIDescriptorsExtractorService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_grpcIDescriptorsExtractorService_2eproto = {
    false, false, 624, descriptor_table_protodef_grpcIDescriptorsExtractorService_2eproto,
    "grpcIDescriptorsExtractorService.proto",
    &descriptor_table_grpcIDescriptorsExtractorService_2eproto_once, descriptor_table_grpcIDescriptorsExtractorService_2eproto_deps, 1, 4,
    schemas, file_default_instances, TableStruct_grpcIDescriptorsExtractorService_2eproto::offsets,
    file_level_metadata_grpcIDescriptorsExtractorService_2eproto, file_level_enum_descriptors_grpcIDescriptorsExtractorService_2eproto,
    file_level_service_descriptors_grpcIDescriptorsExtractorService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_grpcIDescriptorsExtractorService_2eproto_getter() {
  return &descriptor_table_grpcIDescriptorsExtractorService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_grpcIDescriptorsExtractorService_2eproto(&descriptor_table_grpcIDescriptorsExtractorService_2eproto);
namespace grpcIDescriptorsExtractor {

// ===================================================================

class getTypeStringRequest::_Internal {
 public:
};

getTypeStringRequest::getTypeStringRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorsExtractor.getTypeStringRequest)
}
getTypeStringRequest::getTypeStringRequest(const getTypeStringRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getTypeStringRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorsExtractor.getTypeStringRequest)
}

inline void getTypeStringRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

getTypeStringRequest::~getTypeStringRequest() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorsExtractor.getTypeStringRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getTypeStringRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void getTypeStringRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getTypeStringRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorsExtractor.getTypeStringRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTypeStringRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getTypeStringRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorsExtractor.getTypeStringRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorsExtractor.getTypeStringRequest)
  return target;
}

size_t getTypeStringRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorsExtractor.getTypeStringRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getTypeStringRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getTypeStringRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getTypeStringRequest::GetClassData() const { return &_class_data_; }


void getTypeStringRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getTypeStringRequest*>(&to_msg);
  auto& from = static_cast<const getTypeStringRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorsExtractor.getTypeStringRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getTypeStringRequest::CopyFrom(const getTypeStringRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorsExtractor.getTypeStringRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTypeStringRequest::IsInitialized() const {
  return true;
}

void getTypeStringRequest::InternalSwap(getTypeStringRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata getTypeStringRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDescriptorsExtractorService_2eproto_getter, &descriptor_table_grpcIDescriptorsExtractorService_2eproto_once,
      file_level_metadata_grpcIDescriptorsExtractorService_2eproto[0]);
}

// ===================================================================

class getTypeStringResponse::_Internal {
 public:
};

getTypeStringResponse::getTypeStringResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorsExtractor.getTypeStringResponse)
}
getTypeStringResponse::getTypeStringResponse(const getTypeStringResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  getTypeStringResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_impl_.xpcfgrpcreturnvalue_.Set(from._internal_xpcfgrpcreturnvalue(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorsExtractor.getTypeStringResponse)
}

inline void getTypeStringResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xpcfgrpcreturnvalue_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.xpcfgrpcreturnvalue_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xpcfgrpcreturnvalue_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

getTypeStringResponse::~getTypeStringResponse() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorsExtractor.getTypeStringResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void getTypeStringResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.xpcfgrpcreturnvalue_.Destroy();
}

void getTypeStringResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void getTypeStringResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorsExtractor.getTypeStringResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpcfgrpcreturnvalue_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* getTypeStringResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string xpcfGrpcReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_xpcfgrpcreturnvalue();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcIDescriptorsExtractor.getTypeStringResponse.xpcfGrpcReturnValue"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* getTypeStringResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorsExtractor.getTypeStringResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_xpcfgrpcreturnvalue().data(), static_cast<int>(this->_internal_xpcfgrpcreturnvalue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcIDescriptorsExtractor.getTypeStringResponse.xpcfGrpcReturnValue");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorsExtractor.getTypeStringResponse)
  return target;
}

size_t getTypeStringResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorsExtractor.getTypeStringResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string xpcfGrpcReturnValue = 1;
  if (!this->_internal_xpcfgrpcreturnvalue().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_xpcfgrpcreturnvalue());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData getTypeStringResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    getTypeStringResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*getTypeStringResponse::GetClassData() const { return &_class_data_; }


void getTypeStringResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<getTypeStringResponse*>(&to_msg);
  auto& from = static_cast<const getTypeStringResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorsExtractor.getTypeStringResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xpcfgrpcreturnvalue().empty()) {
    _this->_internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void getTypeStringResponse::CopyFrom(const getTypeStringResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorsExtractor.getTypeStringResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getTypeStringResponse::IsInitialized() const {
  return true;
}

void getTypeStringResponse::InternalSwap(getTypeStringResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.xpcfgrpcreturnvalue_, lhs_arena,
      &other->_impl_.xpcfgrpcreturnvalue_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata getTypeStringResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDescriptorsExtractorService_2eproto_getter, &descriptor_table_grpcIDescriptorsExtractorService_2eproto_once,
      file_level_metadata_grpcIDescriptorsExtractorService_2eproto[1]);
}

// ===================================================================

class extractRequest::_Internal {
 public:
};

extractRequest::extractRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorsExtractor.extractRequest)
}
extractRequest::extractRequest(const extractRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  extractRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.image_){}
    , decltype(_impl_.keypoints_){}
    , decltype(_impl_.descriptors_){}
    , decltype(_impl_.grpcservercompressionformat_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_image().empty()) {
    _this->_impl_.image_.Set(from._internal_image(), 
      _this->GetArenaForAllocation());
  }
  _impl_.keypoints_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keypoints_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_keypoints().empty()) {
    _this->_impl_.keypoints_.Set(from._internal_keypoints(), 
      _this->GetArenaForAllocation());
  }
  _impl_.descriptors_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.descriptors_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_descriptors().empty()) {
    _this->_impl_.descriptors_.Set(from._internal_descriptors(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.grpcservercompressionformat_ = from._impl_.grpcservercompressionformat_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorsExtractor.extractRequest)
}

inline void extractRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.image_){}
    , decltype(_impl_.keypoints_){}
    , decltype(_impl_.descriptors_){}
    , decltype(_impl_.grpcservercompressionformat_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.image_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.image_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.keypoints_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.keypoints_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.descriptors_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.descriptors_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

extractRequest::~extractRequest() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorsExtractor.extractRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void extractRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.image_.Destroy();
  _impl_.keypoints_.Destroy();
  _impl_.descriptors_.Destroy();
}

void extractRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void extractRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorsExtractor.extractRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.image_.ClearToEmpty();
  _impl_.keypoints_.ClearToEmpty();
  _impl_.descriptors_.ClearToEmpty();
  _impl_.grpcservercompressionformat_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* extractRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_image();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes keypoints = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_keypoints();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes descriptors = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_descriptors();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* extractRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorsExtractor.extractRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes image = 2;
  if (!this->_internal_image().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image(), target);
  }

  // bytes keypoints = 3;
  if (!this->_internal_keypoints().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_keypoints(), target);
  }

  // bytes descriptors = 4;
  if (!this->_internal_descriptors().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_descriptors(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorsExtractor.extractRequest)
  return target;
}

size_t extractRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorsExtractor.extractRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes image = 2;
  if (!this->_internal_image().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image());
  }

  // bytes keypoints = 3;
  if (!this->_internal_keypoints().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_keypoints());
  }

  // bytes descriptors = 4;
  if (!this->_internal_descriptors().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->_internal_grpcservercompressionformat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_grpcservercompressionformat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData extractRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    extractRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*extractRequest::GetClassData() const { return &_class_data_; }


void extractRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<extractRequest*>(&to_msg);
  auto& from = static_cast<const extractRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorsExtractor.extractRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_image().empty()) {
    _this->_internal_set_image(from._internal_image());
  }
  if (!from._internal_keypoints().empty()) {
    _this->_internal_set_keypoints(from._internal_keypoints());
  }
  if (!from._internal_descriptors().empty()) {
    _this->_internal_set_descriptors(from._internal_descriptors());
  }
  if (from._internal_grpcservercompressionformat() != 0) {
    _this->_internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void extractRequest::CopyFrom(const extractRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorsExtractor.extractRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool extractRequest::IsInitialized() const {
  return true;
}

void extractRequest::InternalSwap(extractRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.image_, lhs_arena,
      &other->_impl_.image_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.keypoints_, lhs_arena,
      &other->_impl_.keypoints_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.descriptors_, lhs_arena,
      &other->_impl_.descriptors_, rhs_arena
  );
  swap(_impl_.grpcservercompressionformat_, other->_impl_.grpcservercompressionformat_);
}

::PROTOBUF_NAMESPACE_ID::Metadata extractRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDescriptorsExtractorService_2eproto_getter, &descriptor_table_grpcIDescriptorsExtractorService_2eproto_once,
      file_level_metadata_grpcIDescriptorsExtractorService_2eproto[2]);
}

// ===================================================================

class extractResponse::_Internal {
 public:
};

extractResponse::extractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorsExtractor.extractResponse)
}
extractResponse::extractResponse(const extractResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  extractResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.descriptors_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.descriptors_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.descriptors_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_descriptors().empty()) {
    _this->_impl_.descriptors_.Set(from._internal_descriptors(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorsExtractor.extractResponse)
}

inline void extractResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.descriptors_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.descriptors_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.descriptors_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

extractResponse::~extractResponse() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorsExtractor.extractResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void extractResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.descriptors_.Destroy();
}

void extractResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void extractResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorsExtractor.extractResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.descriptors_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* extractResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes descriptors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_descriptors();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* extractResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorsExtractor.extractResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes descriptors = 1;
  if (!this->_internal_descriptors().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_descriptors(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorsExtractor.extractResponse)
  return target;
}

size_t extractResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorsExtractor.extractResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes descriptors = 1;
  if (!this->_internal_descriptors().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData extractResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    extractResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*extractResponse::GetClassData() const { return &_class_data_; }


void extractResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<extractResponse*>(&to_msg);
  auto& from = static_cast<const extractResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorsExtractor.extractResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_descriptors().empty()) {
    _this->_internal_set_descriptors(from._internal_descriptors());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void extractResponse::CopyFrom(const extractResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorsExtractor.extractResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool extractResponse::IsInitialized() const {
  return true;
}

void extractResponse::InternalSwap(extractResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.descriptors_, lhs_arena,
      &other->_impl_.descriptors_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata extractResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_grpcIDescriptorsExtractorService_2eproto_getter, &descriptor_table_grpcIDescriptorsExtractorService_2eproto_once,
      file_level_metadata_grpcIDescriptorsExtractorService_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIDescriptorsExtractor
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIDescriptorsExtractor::getTypeStringRequest*
Arena::CreateMaybeMessage< ::grpcIDescriptorsExtractor::getTypeStringRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorsExtractor::getTypeStringRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorsExtractor::getTypeStringResponse*
Arena::CreateMaybeMessage< ::grpcIDescriptorsExtractor::getTypeStringResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorsExtractor::getTypeStringResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorsExtractor::extractRequest*
Arena::CreateMaybeMessage< ::grpcIDescriptorsExtractor::extractRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorsExtractor::extractRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorsExtractor::extractResponse*
Arena::CreateMaybeMessage< ::grpcIDescriptorsExtractor::extractResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorsExtractor::extractResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
