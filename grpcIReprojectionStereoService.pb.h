// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIReprojectionStereoService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_grpcIReprojectionStereoService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_grpcIReprojectionStereoService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_grpcIReprojectionStereoService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_grpcIReprojectionStereoService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIReprojectionStereoService_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_grpcIReprojectionStereoService_2eproto_metadata_getter(int index);
namespace grpcIReprojectionStereo {
class reprojectToCloudPoints_grpc0Request;
struct reprojectToCloudPoints_grpc0RequestDefaultTypeInternal;
extern reprojectToCloudPoints_grpc0RequestDefaultTypeInternal _reprojectToCloudPoints_grpc0Request_default_instance_;
class reprojectToCloudPoints_grpc0Response;
struct reprojectToCloudPoints_grpc0ResponseDefaultTypeInternal;
extern reprojectToCloudPoints_grpc0ResponseDefaultTypeInternal _reprojectToCloudPoints_grpc0Response_default_instance_;
class reprojectToCloudPoints_grpc1Request;
struct reprojectToCloudPoints_grpc1RequestDefaultTypeInternal;
extern reprojectToCloudPoints_grpc1RequestDefaultTypeInternal _reprojectToCloudPoints_grpc1Request_default_instance_;
class reprojectToCloudPoints_grpc1Response;
struct reprojectToCloudPoints_grpc1ResponseDefaultTypeInternal;
extern reprojectToCloudPoints_grpc1ResponseDefaultTypeInternal _reprojectToCloudPoints_grpc1Response_default_instance_;
class reprojectToUnrectificationRequest;
struct reprojectToUnrectificationRequestDefaultTypeInternal;
extern reprojectToUnrectificationRequestDefaultTypeInternal _reprojectToUnrectificationRequest_default_instance_;
class reprojectToUnrectificationResponse;
struct reprojectToUnrectificationResponseDefaultTypeInternal;
extern reprojectToUnrectificationResponseDefaultTypeInternal _reprojectToUnrectificationResponse_default_instance_;
}  // namespace grpcIReprojectionStereo
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcIReprojectionStereo::reprojectToCloudPoints_grpc0Request* Arena::CreateMaybeMessage<::grpcIReprojectionStereo::reprojectToCloudPoints_grpc0Request>(Arena*);
template<> ::grpcIReprojectionStereo::reprojectToCloudPoints_grpc0Response* Arena::CreateMaybeMessage<::grpcIReprojectionStereo::reprojectToCloudPoints_grpc0Response>(Arena*);
template<> ::grpcIReprojectionStereo::reprojectToCloudPoints_grpc1Request* Arena::CreateMaybeMessage<::grpcIReprojectionStereo::reprojectToCloudPoints_grpc1Request>(Arena*);
template<> ::grpcIReprojectionStereo::reprojectToCloudPoints_grpc1Response* Arena::CreateMaybeMessage<::grpcIReprojectionStereo::reprojectToCloudPoints_grpc1Response>(Arena*);
template<> ::grpcIReprojectionStereo::reprojectToUnrectificationRequest* Arena::CreateMaybeMessage<::grpcIReprojectionStereo::reprojectToUnrectificationRequest>(Arena*);
template<> ::grpcIReprojectionStereo::reprojectToUnrectificationResponse* Arena::CreateMaybeMessage<::grpcIReprojectionStereo::reprojectToUnrectificationResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcIReprojectionStereo {

// ===================================================================

class reprojectToUnrectificationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIReprojectionStereo.reprojectToUnrectificationRequest) */ {
 public:
  inline reprojectToUnrectificationRequest() : reprojectToUnrectificationRequest(nullptr) {}
  virtual ~reprojectToUnrectificationRequest();
  explicit constexpr reprojectToUnrectificationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  reprojectToUnrectificationRequest(const reprojectToUnrectificationRequest& from);
  reprojectToUnrectificationRequest(reprojectToUnrectificationRequest&& from) noexcept
    : reprojectToUnrectificationRequest() {
    *this = ::std::move(from);
  }

  inline reprojectToUnrectificationRequest& operator=(const reprojectToUnrectificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline reprojectToUnrectificationRequest& operator=(reprojectToUnrectificationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const reprojectToUnrectificationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const reprojectToUnrectificationRequest* internal_default_instance() {
    return reinterpret_cast<const reprojectToUnrectificationRequest*>(
               &_reprojectToUnrectificationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(reprojectToUnrectificationRequest& a, reprojectToUnrectificationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(reprojectToUnrectificationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(reprojectToUnrectificationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline reprojectToUnrectificationRequest* New() const final {
    return CreateMaybeMessage<reprojectToUnrectificationRequest>(nullptr);
  }

  reprojectToUnrectificationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<reprojectToUnrectificationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const reprojectToUnrectificationRequest& from);
  void MergeFrom(const reprojectToUnrectificationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(reprojectToUnrectificationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIReprojectionStereo.reprojectToUnrectificationRequest";
  }
  protected:
  explicit reprojectToUnrectificationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIReprojectionStereoService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRectifiedKeypointsFieldNumber = 1,
    kRectParamsFieldNumber = 2,
    kUnrectifiedKeypointsFieldNumber = 3,
  };
  // bytes rectifiedKeypoints = 1;
  void clear_rectifiedkeypoints();
  const std::string& rectifiedkeypoints() const;
  void set_rectifiedkeypoints(const std::string& value);
  void set_rectifiedkeypoints(std::string&& value);
  void set_rectifiedkeypoints(const char* value);
  void set_rectifiedkeypoints(const void* value, size_t size);
  std::string* mutable_rectifiedkeypoints();
  std::string* release_rectifiedkeypoints();
  void set_allocated_rectifiedkeypoints(std::string* rectifiedkeypoints);
  private:
  const std::string& _internal_rectifiedkeypoints() const;
  void _internal_set_rectifiedkeypoints(const std::string& value);
  std::string* _internal_mutable_rectifiedkeypoints();
  public:

  // bytes rectParams = 2;
  void clear_rectparams();
  const std::string& rectparams() const;
  void set_rectparams(const std::string& value);
  void set_rectparams(std::string&& value);
  void set_rectparams(const char* value);
  void set_rectparams(const void* value, size_t size);
  std::string* mutable_rectparams();
  std::string* release_rectparams();
  void set_allocated_rectparams(std::string* rectparams);
  private:
  const std::string& _internal_rectparams() const;
  void _internal_set_rectparams(const std::string& value);
  std::string* _internal_mutable_rectparams();
  public:

  // bytes unrectifiedKeypoints = 3;
  void clear_unrectifiedkeypoints();
  const std::string& unrectifiedkeypoints() const;
  void set_unrectifiedkeypoints(const std::string& value);
  void set_unrectifiedkeypoints(std::string&& value);
  void set_unrectifiedkeypoints(const char* value);
  void set_unrectifiedkeypoints(const void* value, size_t size);
  std::string* mutable_unrectifiedkeypoints();
  std::string* release_unrectifiedkeypoints();
  void set_allocated_unrectifiedkeypoints(std::string* unrectifiedkeypoints);
  private:
  const std::string& _internal_unrectifiedkeypoints() const;
  void _internal_set_unrectifiedkeypoints(const std::string& value);
  std::string* _internal_mutable_unrectifiedkeypoints();
  public:

  // @@protoc_insertion_point(class_scope:grpcIReprojectionStereo.reprojectToUnrectificationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rectifiedkeypoints_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rectparams_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr unrectifiedkeypoints_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIReprojectionStereoService_2eproto;
};
// -------------------------------------------------------------------

class reprojectToUnrectificationResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIReprojectionStereo.reprojectToUnrectificationResponse) */ {
 public:
  inline reprojectToUnrectificationResponse() : reprojectToUnrectificationResponse(nullptr) {}
  virtual ~reprojectToUnrectificationResponse();
  explicit constexpr reprojectToUnrectificationResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  reprojectToUnrectificationResponse(const reprojectToUnrectificationResponse& from);
  reprojectToUnrectificationResponse(reprojectToUnrectificationResponse&& from) noexcept
    : reprojectToUnrectificationResponse() {
    *this = ::std::move(from);
  }

  inline reprojectToUnrectificationResponse& operator=(const reprojectToUnrectificationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline reprojectToUnrectificationResponse& operator=(reprojectToUnrectificationResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const reprojectToUnrectificationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const reprojectToUnrectificationResponse* internal_default_instance() {
    return reinterpret_cast<const reprojectToUnrectificationResponse*>(
               &_reprojectToUnrectificationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(reprojectToUnrectificationResponse& a, reprojectToUnrectificationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(reprojectToUnrectificationResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(reprojectToUnrectificationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline reprojectToUnrectificationResponse* New() const final {
    return CreateMaybeMessage<reprojectToUnrectificationResponse>(nullptr);
  }

  reprojectToUnrectificationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<reprojectToUnrectificationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const reprojectToUnrectificationResponse& from);
  void MergeFrom(const reprojectToUnrectificationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(reprojectToUnrectificationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIReprojectionStereo.reprojectToUnrectificationResponse";
  }
  protected:
  explicit reprojectToUnrectificationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIReprojectionStereoService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnrectifiedKeypointsFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes unrectifiedKeypoints = 1;
  void clear_unrectifiedkeypoints();
  const std::string& unrectifiedkeypoints() const;
  void set_unrectifiedkeypoints(const std::string& value);
  void set_unrectifiedkeypoints(std::string&& value);
  void set_unrectifiedkeypoints(const char* value);
  void set_unrectifiedkeypoints(const void* value, size_t size);
  std::string* mutable_unrectifiedkeypoints();
  std::string* release_unrectifiedkeypoints();
  void set_allocated_unrectifiedkeypoints(std::string* unrectifiedkeypoints);
  private:
  const std::string& _internal_unrectifiedkeypoints() const;
  void _internal_set_unrectifiedkeypoints(const std::string& value);
  std::string* _internal_mutable_unrectifiedkeypoints();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIReprojectionStereo.reprojectToUnrectificationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr unrectifiedkeypoints_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIReprojectionStereoService_2eproto;
};
// -------------------------------------------------------------------

class reprojectToCloudPoints_grpc0Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request) */ {
 public:
  inline reprojectToCloudPoints_grpc0Request() : reprojectToCloudPoints_grpc0Request(nullptr) {}
  virtual ~reprojectToCloudPoints_grpc0Request();
  explicit constexpr reprojectToCloudPoints_grpc0Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  reprojectToCloudPoints_grpc0Request(const reprojectToCloudPoints_grpc0Request& from);
  reprojectToCloudPoints_grpc0Request(reprojectToCloudPoints_grpc0Request&& from) noexcept
    : reprojectToCloudPoints_grpc0Request() {
    *this = ::std::move(from);
  }

  inline reprojectToCloudPoints_grpc0Request& operator=(const reprojectToCloudPoints_grpc0Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline reprojectToCloudPoints_grpc0Request& operator=(reprojectToCloudPoints_grpc0Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const reprojectToCloudPoints_grpc0Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const reprojectToCloudPoints_grpc0Request* internal_default_instance() {
    return reinterpret_cast<const reprojectToCloudPoints_grpc0Request*>(
               &_reprojectToCloudPoints_grpc0Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(reprojectToCloudPoints_grpc0Request& a, reprojectToCloudPoints_grpc0Request& b) {
    a.Swap(&b);
  }
  inline void Swap(reprojectToCloudPoints_grpc0Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(reprojectToCloudPoints_grpc0Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline reprojectToCloudPoints_grpc0Request* New() const final {
    return CreateMaybeMessage<reprojectToCloudPoints_grpc0Request>(nullptr);
  }

  reprojectToCloudPoints_grpc0Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<reprojectToCloudPoints_grpc0Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const reprojectToCloudPoints_grpc0Request& from);
  void MergeFrom(const reprojectToCloudPoints_grpc0Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(reprojectToCloudPoints_grpc0Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request";
  }
  protected:
  explicit reprojectToCloudPoints_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIReprojectionStereoService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUndistortedKeypointsFieldNumber = 1,
    kDescriptorsFieldNumber = 2,
    kPoseFieldNumber = 3,
    kIntrinsicParamsFieldNumber = 4,
    kCloudPointsFieldNumber = 5,
  };
  // bytes undistortedKeypoints = 1;
  void clear_undistortedkeypoints();
  const std::string& undistortedkeypoints() const;
  void set_undistortedkeypoints(const std::string& value);
  void set_undistortedkeypoints(std::string&& value);
  void set_undistortedkeypoints(const char* value);
  void set_undistortedkeypoints(const void* value, size_t size);
  std::string* mutable_undistortedkeypoints();
  std::string* release_undistortedkeypoints();
  void set_allocated_undistortedkeypoints(std::string* undistortedkeypoints);
  private:
  const std::string& _internal_undistortedkeypoints() const;
  void _internal_set_undistortedkeypoints(const std::string& value);
  std::string* _internal_mutable_undistortedkeypoints();
  public:

  // bytes descriptors = 2;
  void clear_descriptors();
  const std::string& descriptors() const;
  void set_descriptors(const std::string& value);
  void set_descriptors(std::string&& value);
  void set_descriptors(const char* value);
  void set_descriptors(const void* value, size_t size);
  std::string* mutable_descriptors();
  std::string* release_descriptors();
  void set_allocated_descriptors(std::string* descriptors);
  private:
  const std::string& _internal_descriptors() const;
  void _internal_set_descriptors(const std::string& value);
  std::string* _internal_mutable_descriptors();
  public:

  // bytes pose = 3;
  void clear_pose();
  const std::string& pose() const;
  void set_pose(const std::string& value);
  void set_pose(std::string&& value);
  void set_pose(const char* value);
  void set_pose(const void* value, size_t size);
  std::string* mutable_pose();
  std::string* release_pose();
  void set_allocated_pose(std::string* pose);
  private:
  const std::string& _internal_pose() const;
  void _internal_set_pose(const std::string& value);
  std::string* _internal_mutable_pose();
  public:

  // bytes intrinsicParams = 4;
  void clear_intrinsicparams();
  const std::string& intrinsicparams() const;
  void set_intrinsicparams(const std::string& value);
  void set_intrinsicparams(std::string&& value);
  void set_intrinsicparams(const char* value);
  void set_intrinsicparams(const void* value, size_t size);
  std::string* mutable_intrinsicparams();
  std::string* release_intrinsicparams();
  void set_allocated_intrinsicparams(std::string* intrinsicparams);
  private:
  const std::string& _internal_intrinsicparams() const;
  void _internal_set_intrinsicparams(const std::string& value);
  std::string* _internal_mutable_intrinsicparams();
  public:

  // bytes cloudPoints = 5;
  void clear_cloudpoints();
  const std::string& cloudpoints() const;
  void set_cloudpoints(const std::string& value);
  void set_cloudpoints(std::string&& value);
  void set_cloudpoints(const char* value);
  void set_cloudpoints(const void* value, size_t size);
  std::string* mutable_cloudpoints();
  std::string* release_cloudpoints();
  void set_allocated_cloudpoints(std::string* cloudpoints);
  private:
  const std::string& _internal_cloudpoints() const;
  void _internal_set_cloudpoints(const std::string& value);
  std::string* _internal_mutable_cloudpoints();
  public:

  // @@protoc_insertion_point(class_scope:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr undistortedkeypoints_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr descriptors_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pose_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr intrinsicparams_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cloudpoints_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIReprojectionStereoService_2eproto;
};
// -------------------------------------------------------------------

class reprojectToCloudPoints_grpc0Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response) */ {
 public:
  inline reprojectToCloudPoints_grpc0Response() : reprojectToCloudPoints_grpc0Response(nullptr) {}
  virtual ~reprojectToCloudPoints_grpc0Response();
  explicit constexpr reprojectToCloudPoints_grpc0Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  reprojectToCloudPoints_grpc0Response(const reprojectToCloudPoints_grpc0Response& from);
  reprojectToCloudPoints_grpc0Response(reprojectToCloudPoints_grpc0Response&& from) noexcept
    : reprojectToCloudPoints_grpc0Response() {
    *this = ::std::move(from);
  }

  inline reprojectToCloudPoints_grpc0Response& operator=(const reprojectToCloudPoints_grpc0Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline reprojectToCloudPoints_grpc0Response& operator=(reprojectToCloudPoints_grpc0Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const reprojectToCloudPoints_grpc0Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const reprojectToCloudPoints_grpc0Response* internal_default_instance() {
    return reinterpret_cast<const reprojectToCloudPoints_grpc0Response*>(
               &_reprojectToCloudPoints_grpc0Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(reprojectToCloudPoints_grpc0Response& a, reprojectToCloudPoints_grpc0Response& b) {
    a.Swap(&b);
  }
  inline void Swap(reprojectToCloudPoints_grpc0Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(reprojectToCloudPoints_grpc0Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline reprojectToCloudPoints_grpc0Response* New() const final {
    return CreateMaybeMessage<reprojectToCloudPoints_grpc0Response>(nullptr);
  }

  reprojectToCloudPoints_grpc0Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<reprojectToCloudPoints_grpc0Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const reprojectToCloudPoints_grpc0Response& from);
  void MergeFrom(const reprojectToCloudPoints_grpc0Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(reprojectToCloudPoints_grpc0Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response";
  }
  protected:
  explicit reprojectToCloudPoints_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIReprojectionStereoService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCloudPointsFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes cloudPoints = 1;
  void clear_cloudpoints();
  const std::string& cloudpoints() const;
  void set_cloudpoints(const std::string& value);
  void set_cloudpoints(std::string&& value);
  void set_cloudpoints(const char* value);
  void set_cloudpoints(const void* value, size_t size);
  std::string* mutable_cloudpoints();
  std::string* release_cloudpoints();
  void set_allocated_cloudpoints(std::string* cloudpoints);
  private:
  const std::string& _internal_cloudpoints() const;
  void _internal_set_cloudpoints(const std::string& value);
  std::string* _internal_mutable_cloudpoints();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cloudpoints_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIReprojectionStereoService_2eproto;
};
// -------------------------------------------------------------------

class reprojectToCloudPoints_grpc1Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request) */ {
 public:
  inline reprojectToCloudPoints_grpc1Request() : reprojectToCloudPoints_grpc1Request(nullptr) {}
  virtual ~reprojectToCloudPoints_grpc1Request();
  explicit constexpr reprojectToCloudPoints_grpc1Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  reprojectToCloudPoints_grpc1Request(const reprojectToCloudPoints_grpc1Request& from);
  reprojectToCloudPoints_grpc1Request(reprojectToCloudPoints_grpc1Request&& from) noexcept
    : reprojectToCloudPoints_grpc1Request() {
    *this = ::std::move(from);
  }

  inline reprojectToCloudPoints_grpc1Request& operator=(const reprojectToCloudPoints_grpc1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline reprojectToCloudPoints_grpc1Request& operator=(reprojectToCloudPoints_grpc1Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const reprojectToCloudPoints_grpc1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const reprojectToCloudPoints_grpc1Request* internal_default_instance() {
    return reinterpret_cast<const reprojectToCloudPoints_grpc1Request*>(
               &_reprojectToCloudPoints_grpc1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(reprojectToCloudPoints_grpc1Request& a, reprojectToCloudPoints_grpc1Request& b) {
    a.Swap(&b);
  }
  inline void Swap(reprojectToCloudPoints_grpc1Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(reprojectToCloudPoints_grpc1Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline reprojectToCloudPoints_grpc1Request* New() const final {
    return CreateMaybeMessage<reprojectToCloudPoints_grpc1Request>(nullptr);
  }

  reprojectToCloudPoints_grpc1Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<reprojectToCloudPoints_grpc1Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const reprojectToCloudPoints_grpc1Request& from);
  void MergeFrom(const reprojectToCloudPoints_grpc1Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(reprojectToCloudPoints_grpc1Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request";
  }
  protected:
  explicit reprojectToCloudPoints_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIReprojectionStereoService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameFieldNumber = 1,
    kIntrinsicParamsFieldNumber = 2,
    kCloudPointsFieldNumber = 3,
  };
  // bytes frame = 1;
  void clear_frame();
  const std::string& frame() const;
  void set_frame(const std::string& value);
  void set_frame(std::string&& value);
  void set_frame(const char* value);
  void set_frame(const void* value, size_t size);
  std::string* mutable_frame();
  std::string* release_frame();
  void set_allocated_frame(std::string* frame);
  private:
  const std::string& _internal_frame() const;
  void _internal_set_frame(const std::string& value);
  std::string* _internal_mutable_frame();
  public:

  // bytes intrinsicParams = 2;
  void clear_intrinsicparams();
  const std::string& intrinsicparams() const;
  void set_intrinsicparams(const std::string& value);
  void set_intrinsicparams(std::string&& value);
  void set_intrinsicparams(const char* value);
  void set_intrinsicparams(const void* value, size_t size);
  std::string* mutable_intrinsicparams();
  std::string* release_intrinsicparams();
  void set_allocated_intrinsicparams(std::string* intrinsicparams);
  private:
  const std::string& _internal_intrinsicparams() const;
  void _internal_set_intrinsicparams(const std::string& value);
  std::string* _internal_mutable_intrinsicparams();
  public:

  // bytes cloudPoints = 3;
  void clear_cloudpoints();
  const std::string& cloudpoints() const;
  void set_cloudpoints(const std::string& value);
  void set_cloudpoints(std::string&& value);
  void set_cloudpoints(const char* value);
  void set_cloudpoints(const void* value, size_t size);
  std::string* mutable_cloudpoints();
  std::string* release_cloudpoints();
  void set_allocated_cloudpoints(std::string* cloudpoints);
  private:
  const std::string& _internal_cloudpoints() const;
  void _internal_set_cloudpoints(const std::string& value);
  std::string* _internal_mutable_cloudpoints();
  public:

  // @@protoc_insertion_point(class_scope:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frame_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr intrinsicparams_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cloudpoints_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIReprojectionStereoService_2eproto;
};
// -------------------------------------------------------------------

class reprojectToCloudPoints_grpc1Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response) */ {
 public:
  inline reprojectToCloudPoints_grpc1Response() : reprojectToCloudPoints_grpc1Response(nullptr) {}
  virtual ~reprojectToCloudPoints_grpc1Response();
  explicit constexpr reprojectToCloudPoints_grpc1Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  reprojectToCloudPoints_grpc1Response(const reprojectToCloudPoints_grpc1Response& from);
  reprojectToCloudPoints_grpc1Response(reprojectToCloudPoints_grpc1Response&& from) noexcept
    : reprojectToCloudPoints_grpc1Response() {
    *this = ::std::move(from);
  }

  inline reprojectToCloudPoints_grpc1Response& operator=(const reprojectToCloudPoints_grpc1Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline reprojectToCloudPoints_grpc1Response& operator=(reprojectToCloudPoints_grpc1Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const reprojectToCloudPoints_grpc1Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const reprojectToCloudPoints_grpc1Response* internal_default_instance() {
    return reinterpret_cast<const reprojectToCloudPoints_grpc1Response*>(
               &_reprojectToCloudPoints_grpc1Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(reprojectToCloudPoints_grpc1Response& a, reprojectToCloudPoints_grpc1Response& b) {
    a.Swap(&b);
  }
  inline void Swap(reprojectToCloudPoints_grpc1Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(reprojectToCloudPoints_grpc1Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline reprojectToCloudPoints_grpc1Response* New() const final {
    return CreateMaybeMessage<reprojectToCloudPoints_grpc1Response>(nullptr);
  }

  reprojectToCloudPoints_grpc1Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<reprojectToCloudPoints_grpc1Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const reprojectToCloudPoints_grpc1Response& from);
  void MergeFrom(const reprojectToCloudPoints_grpc1Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(reprojectToCloudPoints_grpc1Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response";
  }
  protected:
  explicit reprojectToCloudPoints_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_grpcIReprojectionStereoService_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCloudPointsFieldNumber = 1,
    kXpcfGrpcReturnValueFieldNumber = 2,
  };
  // bytes cloudPoints = 1;
  void clear_cloudpoints();
  const std::string& cloudpoints() const;
  void set_cloudpoints(const std::string& value);
  void set_cloudpoints(std::string&& value);
  void set_cloudpoints(const char* value);
  void set_cloudpoints(const void* value, size_t size);
  std::string* mutable_cloudpoints();
  std::string* release_cloudpoints();
  void set_allocated_cloudpoints(std::string* cloudpoints);
  private:
  const std::string& _internal_cloudpoints() const;
  void _internal_set_cloudpoints(const std::string& value);
  std::string* _internal_mutable_cloudpoints();
  public:

  // sint32 xpcfGrpcReturnValue = 2;
  void clear_xpcfgrpcreturnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue() const;
  void set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_xpcfgrpcreturnvalue() const;
  void _internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cloudpoints_;
  ::PROTOBUF_NAMESPACE_ID::int32 xpcfgrpcreturnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_grpcIReprojectionStereoService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// reprojectToUnrectificationRequest

// bytes rectifiedKeypoints = 1;
inline void reprojectToUnrectificationRequest::clear_rectifiedkeypoints() {
  rectifiedkeypoints_.ClearToEmpty();
}
inline const std::string& reprojectToUnrectificationRequest::rectifiedkeypoints() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectifiedKeypoints)
  return _internal_rectifiedkeypoints();
}
inline void reprojectToUnrectificationRequest::set_rectifiedkeypoints(const std::string& value) {
  _internal_set_rectifiedkeypoints(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectifiedKeypoints)
}
inline std::string* reprojectToUnrectificationRequest::mutable_rectifiedkeypoints() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectifiedKeypoints)
  return _internal_mutable_rectifiedkeypoints();
}
inline const std::string& reprojectToUnrectificationRequest::_internal_rectifiedkeypoints() const {
  return rectifiedkeypoints_.Get();
}
inline void reprojectToUnrectificationRequest::_internal_set_rectifiedkeypoints(const std::string& value) {
  
  rectifiedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToUnrectificationRequest::set_rectifiedkeypoints(std::string&& value) {
  
  rectifiedkeypoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectifiedKeypoints)
}
inline void reprojectToUnrectificationRequest::set_rectifiedkeypoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rectifiedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectifiedKeypoints)
}
inline void reprojectToUnrectificationRequest::set_rectifiedkeypoints(const void* value,
    size_t size) {
  
  rectifiedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectifiedKeypoints)
}
inline std::string* reprojectToUnrectificationRequest::_internal_mutable_rectifiedkeypoints() {
  
  return rectifiedkeypoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToUnrectificationRequest::release_rectifiedkeypoints() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectifiedKeypoints)
  return rectifiedkeypoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToUnrectificationRequest::set_allocated_rectifiedkeypoints(std::string* rectifiedkeypoints) {
  if (rectifiedkeypoints != nullptr) {
    
  } else {
    
  }
  rectifiedkeypoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rectifiedkeypoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectifiedKeypoints)
}

// bytes rectParams = 2;
inline void reprojectToUnrectificationRequest::clear_rectparams() {
  rectparams_.ClearToEmpty();
}
inline const std::string& reprojectToUnrectificationRequest::rectparams() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectParams)
  return _internal_rectparams();
}
inline void reprojectToUnrectificationRequest::set_rectparams(const std::string& value) {
  _internal_set_rectparams(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectParams)
}
inline std::string* reprojectToUnrectificationRequest::mutable_rectparams() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectParams)
  return _internal_mutable_rectparams();
}
inline const std::string& reprojectToUnrectificationRequest::_internal_rectparams() const {
  return rectparams_.Get();
}
inline void reprojectToUnrectificationRequest::_internal_set_rectparams(const std::string& value) {
  
  rectparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToUnrectificationRequest::set_rectparams(std::string&& value) {
  
  rectparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectParams)
}
inline void reprojectToUnrectificationRequest::set_rectparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rectparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectParams)
}
inline void reprojectToUnrectificationRequest::set_rectparams(const void* value,
    size_t size) {
  
  rectparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectParams)
}
inline std::string* reprojectToUnrectificationRequest::_internal_mutable_rectparams() {
  
  return rectparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToUnrectificationRequest::release_rectparams() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectParams)
  return rectparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToUnrectificationRequest::set_allocated_rectparams(std::string* rectparams) {
  if (rectparams != nullptr) {
    
  } else {
    
  }
  rectparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rectparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToUnrectificationRequest.rectParams)
}

// bytes unrectifiedKeypoints = 3;
inline void reprojectToUnrectificationRequest::clear_unrectifiedkeypoints() {
  unrectifiedkeypoints_.ClearToEmpty();
}
inline const std::string& reprojectToUnrectificationRequest::unrectifiedkeypoints() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToUnrectificationRequest.unrectifiedKeypoints)
  return _internal_unrectifiedkeypoints();
}
inline void reprojectToUnrectificationRequest::set_unrectifiedkeypoints(const std::string& value) {
  _internal_set_unrectifiedkeypoints(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToUnrectificationRequest.unrectifiedKeypoints)
}
inline std::string* reprojectToUnrectificationRequest::mutable_unrectifiedkeypoints() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToUnrectificationRequest.unrectifiedKeypoints)
  return _internal_mutable_unrectifiedkeypoints();
}
inline const std::string& reprojectToUnrectificationRequest::_internal_unrectifiedkeypoints() const {
  return unrectifiedkeypoints_.Get();
}
inline void reprojectToUnrectificationRequest::_internal_set_unrectifiedkeypoints(const std::string& value) {
  
  unrectifiedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToUnrectificationRequest::set_unrectifiedkeypoints(std::string&& value) {
  
  unrectifiedkeypoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToUnrectificationRequest.unrectifiedKeypoints)
}
inline void reprojectToUnrectificationRequest::set_unrectifiedkeypoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  unrectifiedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToUnrectificationRequest.unrectifiedKeypoints)
}
inline void reprojectToUnrectificationRequest::set_unrectifiedkeypoints(const void* value,
    size_t size) {
  
  unrectifiedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToUnrectificationRequest.unrectifiedKeypoints)
}
inline std::string* reprojectToUnrectificationRequest::_internal_mutable_unrectifiedkeypoints() {
  
  return unrectifiedkeypoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToUnrectificationRequest::release_unrectifiedkeypoints() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToUnrectificationRequest.unrectifiedKeypoints)
  return unrectifiedkeypoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToUnrectificationRequest::set_allocated_unrectifiedkeypoints(std::string* unrectifiedkeypoints) {
  if (unrectifiedkeypoints != nullptr) {
    
  } else {
    
  }
  unrectifiedkeypoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), unrectifiedkeypoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToUnrectificationRequest.unrectifiedKeypoints)
}

// -------------------------------------------------------------------

// reprojectToUnrectificationResponse

// bytes unrectifiedKeypoints = 1;
inline void reprojectToUnrectificationResponse::clear_unrectifiedkeypoints() {
  unrectifiedkeypoints_.ClearToEmpty();
}
inline const std::string& reprojectToUnrectificationResponse::unrectifiedkeypoints() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToUnrectificationResponse.unrectifiedKeypoints)
  return _internal_unrectifiedkeypoints();
}
inline void reprojectToUnrectificationResponse::set_unrectifiedkeypoints(const std::string& value) {
  _internal_set_unrectifiedkeypoints(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToUnrectificationResponse.unrectifiedKeypoints)
}
inline std::string* reprojectToUnrectificationResponse::mutable_unrectifiedkeypoints() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToUnrectificationResponse.unrectifiedKeypoints)
  return _internal_mutable_unrectifiedkeypoints();
}
inline const std::string& reprojectToUnrectificationResponse::_internal_unrectifiedkeypoints() const {
  return unrectifiedkeypoints_.Get();
}
inline void reprojectToUnrectificationResponse::_internal_set_unrectifiedkeypoints(const std::string& value) {
  
  unrectifiedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToUnrectificationResponse::set_unrectifiedkeypoints(std::string&& value) {
  
  unrectifiedkeypoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToUnrectificationResponse.unrectifiedKeypoints)
}
inline void reprojectToUnrectificationResponse::set_unrectifiedkeypoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  unrectifiedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToUnrectificationResponse.unrectifiedKeypoints)
}
inline void reprojectToUnrectificationResponse::set_unrectifiedkeypoints(const void* value,
    size_t size) {
  
  unrectifiedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToUnrectificationResponse.unrectifiedKeypoints)
}
inline std::string* reprojectToUnrectificationResponse::_internal_mutable_unrectifiedkeypoints() {
  
  return unrectifiedkeypoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToUnrectificationResponse::release_unrectifiedkeypoints() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToUnrectificationResponse.unrectifiedKeypoints)
  return unrectifiedkeypoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToUnrectificationResponse::set_allocated_unrectifiedkeypoints(std::string* unrectifiedkeypoints) {
  if (unrectifiedkeypoints != nullptr) {
    
  } else {
    
  }
  unrectifiedkeypoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), unrectifiedkeypoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToUnrectificationResponse.unrectifiedKeypoints)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void reprojectToUnrectificationResponse::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 reprojectToUnrectificationResponse::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 reprojectToUnrectificationResponse::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToUnrectificationResponse.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void reprojectToUnrectificationResponse::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void reprojectToUnrectificationResponse::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToUnrectificationResponse.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// reprojectToCloudPoints_grpc0Request

// bytes undistortedKeypoints = 1;
inline void reprojectToCloudPoints_grpc0Request::clear_undistortedkeypoints() {
  undistortedkeypoints_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::undistortedkeypoints() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.undistortedKeypoints)
  return _internal_undistortedkeypoints();
}
inline void reprojectToCloudPoints_grpc0Request::set_undistortedkeypoints(const std::string& value) {
  _internal_set_undistortedkeypoints(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.undistortedKeypoints)
}
inline std::string* reprojectToCloudPoints_grpc0Request::mutable_undistortedkeypoints() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.undistortedKeypoints)
  return _internal_mutable_undistortedkeypoints();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::_internal_undistortedkeypoints() const {
  return undistortedkeypoints_.Get();
}
inline void reprojectToCloudPoints_grpc0Request::_internal_set_undistortedkeypoints(const std::string& value) {
  
  undistortedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_undistortedkeypoints(std::string&& value) {
  
  undistortedkeypoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.undistortedKeypoints)
}
inline void reprojectToCloudPoints_grpc0Request::set_undistortedkeypoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  undistortedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.undistortedKeypoints)
}
inline void reprojectToCloudPoints_grpc0Request::set_undistortedkeypoints(const void* value,
    size_t size) {
  
  undistortedkeypoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.undistortedKeypoints)
}
inline std::string* reprojectToCloudPoints_grpc0Request::_internal_mutable_undistortedkeypoints() {
  
  return undistortedkeypoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc0Request::release_undistortedkeypoints() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.undistortedKeypoints)
  return undistortedkeypoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_allocated_undistortedkeypoints(std::string* undistortedkeypoints) {
  if (undistortedkeypoints != nullptr) {
    
  } else {
    
  }
  undistortedkeypoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), undistortedkeypoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.undistortedKeypoints)
}

// bytes descriptors = 2;
inline void reprojectToCloudPoints_grpc0Request::clear_descriptors() {
  descriptors_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::descriptors() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.descriptors)
  return _internal_descriptors();
}
inline void reprojectToCloudPoints_grpc0Request::set_descriptors(const std::string& value) {
  _internal_set_descriptors(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.descriptors)
}
inline std::string* reprojectToCloudPoints_grpc0Request::mutable_descriptors() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.descriptors)
  return _internal_mutable_descriptors();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::_internal_descriptors() const {
  return descriptors_.Get();
}
inline void reprojectToCloudPoints_grpc0Request::_internal_set_descriptors(const std::string& value) {
  
  descriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_descriptors(std::string&& value) {
  
  descriptors_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.descriptors)
}
inline void reprojectToCloudPoints_grpc0Request::set_descriptors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  descriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.descriptors)
}
inline void reprojectToCloudPoints_grpc0Request::set_descriptors(const void* value,
    size_t size) {
  
  descriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.descriptors)
}
inline std::string* reprojectToCloudPoints_grpc0Request::_internal_mutable_descriptors() {
  
  return descriptors_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc0Request::release_descriptors() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.descriptors)
  return descriptors_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_allocated_descriptors(std::string* descriptors) {
  if (descriptors != nullptr) {
    
  } else {
    
  }
  descriptors_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), descriptors,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.descriptors)
}

// bytes pose = 3;
inline void reprojectToCloudPoints_grpc0Request::clear_pose() {
  pose_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::pose() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.pose)
  return _internal_pose();
}
inline void reprojectToCloudPoints_grpc0Request::set_pose(const std::string& value) {
  _internal_set_pose(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.pose)
}
inline std::string* reprojectToCloudPoints_grpc0Request::mutable_pose() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.pose)
  return _internal_mutable_pose();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::_internal_pose() const {
  return pose_.Get();
}
inline void reprojectToCloudPoints_grpc0Request::_internal_set_pose(const std::string& value) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_pose(std::string&& value) {
  
  pose_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.pose)
}
inline void reprojectToCloudPoints_grpc0Request::set_pose(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.pose)
}
inline void reprojectToCloudPoints_grpc0Request::set_pose(const void* value,
    size_t size) {
  
  pose_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.pose)
}
inline std::string* reprojectToCloudPoints_grpc0Request::_internal_mutable_pose() {
  
  return pose_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc0Request::release_pose() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.pose)
  return pose_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_allocated_pose(std::string* pose) {
  if (pose != nullptr) {
    
  } else {
    
  }
  pose_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pose,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.pose)
}

// bytes intrinsicParams = 4;
inline void reprojectToCloudPoints_grpc0Request::clear_intrinsicparams() {
  intrinsicparams_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::intrinsicparams() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.intrinsicParams)
  return _internal_intrinsicparams();
}
inline void reprojectToCloudPoints_grpc0Request::set_intrinsicparams(const std::string& value) {
  _internal_set_intrinsicparams(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.intrinsicParams)
}
inline std::string* reprojectToCloudPoints_grpc0Request::mutable_intrinsicparams() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.intrinsicParams)
  return _internal_mutable_intrinsicparams();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::_internal_intrinsicparams() const {
  return intrinsicparams_.Get();
}
inline void reprojectToCloudPoints_grpc0Request::_internal_set_intrinsicparams(const std::string& value) {
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_intrinsicparams(std::string&& value) {
  
  intrinsicparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.intrinsicParams)
}
inline void reprojectToCloudPoints_grpc0Request::set_intrinsicparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.intrinsicParams)
}
inline void reprojectToCloudPoints_grpc0Request::set_intrinsicparams(const void* value,
    size_t size) {
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.intrinsicParams)
}
inline std::string* reprojectToCloudPoints_grpc0Request::_internal_mutable_intrinsicparams() {
  
  return intrinsicparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc0Request::release_intrinsicparams() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.intrinsicParams)
  return intrinsicparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_allocated_intrinsicparams(std::string* intrinsicparams) {
  if (intrinsicparams != nullptr) {
    
  } else {
    
  }
  intrinsicparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), intrinsicparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.intrinsicParams)
}

// bytes cloudPoints = 5;
inline void reprojectToCloudPoints_grpc0Request::clear_cloudpoints() {
  cloudpoints_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::cloudpoints() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.cloudPoints)
  return _internal_cloudpoints();
}
inline void reprojectToCloudPoints_grpc0Request::set_cloudpoints(const std::string& value) {
  _internal_set_cloudpoints(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.cloudPoints)
}
inline std::string* reprojectToCloudPoints_grpc0Request::mutable_cloudpoints() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.cloudPoints)
  return _internal_mutable_cloudpoints();
}
inline const std::string& reprojectToCloudPoints_grpc0Request::_internal_cloudpoints() const {
  return cloudpoints_.Get();
}
inline void reprojectToCloudPoints_grpc0Request::_internal_set_cloudpoints(const std::string& value) {
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_cloudpoints(std::string&& value) {
  
  cloudpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.cloudPoints)
}
inline void reprojectToCloudPoints_grpc0Request::set_cloudpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.cloudPoints)
}
inline void reprojectToCloudPoints_grpc0Request::set_cloudpoints(const void* value,
    size_t size) {
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.cloudPoints)
}
inline std::string* reprojectToCloudPoints_grpc0Request::_internal_mutable_cloudpoints() {
  
  return cloudpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc0Request::release_cloudpoints() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.cloudPoints)
  return cloudpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc0Request::set_allocated_cloudpoints(std::string* cloudpoints) {
  if (cloudpoints != nullptr) {
    
  } else {
    
  }
  cloudpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cloudpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Request.cloudPoints)
}

// -------------------------------------------------------------------

// reprojectToCloudPoints_grpc0Response

// bytes cloudPoints = 1;
inline void reprojectToCloudPoints_grpc0Response::clear_cloudpoints() {
  cloudpoints_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc0Response::cloudpoints() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.cloudPoints)
  return _internal_cloudpoints();
}
inline void reprojectToCloudPoints_grpc0Response::set_cloudpoints(const std::string& value) {
  _internal_set_cloudpoints(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.cloudPoints)
}
inline std::string* reprojectToCloudPoints_grpc0Response::mutable_cloudpoints() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.cloudPoints)
  return _internal_mutable_cloudpoints();
}
inline const std::string& reprojectToCloudPoints_grpc0Response::_internal_cloudpoints() const {
  return cloudpoints_.Get();
}
inline void reprojectToCloudPoints_grpc0Response::_internal_set_cloudpoints(const std::string& value) {
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc0Response::set_cloudpoints(std::string&& value) {
  
  cloudpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.cloudPoints)
}
inline void reprojectToCloudPoints_grpc0Response::set_cloudpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.cloudPoints)
}
inline void reprojectToCloudPoints_grpc0Response::set_cloudpoints(const void* value,
    size_t size) {
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.cloudPoints)
}
inline std::string* reprojectToCloudPoints_grpc0Response::_internal_mutable_cloudpoints() {
  
  return cloudpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc0Response::release_cloudpoints() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.cloudPoints)
  return cloudpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc0Response::set_allocated_cloudpoints(std::string* cloudpoints) {
  if (cloudpoints != nullptr) {
    
  } else {
    
  }
  cloudpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cloudpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.cloudPoints)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void reprojectToCloudPoints_grpc0Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 reprojectToCloudPoints_grpc0Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 reprojectToCloudPoints_grpc0Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void reprojectToCloudPoints_grpc0Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void reprojectToCloudPoints_grpc0Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc0Response.xpcfGrpcReturnValue)
}

// -------------------------------------------------------------------

// reprojectToCloudPoints_grpc1Request

// bytes frame = 1;
inline void reprojectToCloudPoints_grpc1Request::clear_frame() {
  frame_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc1Request::frame() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.frame)
  return _internal_frame();
}
inline void reprojectToCloudPoints_grpc1Request::set_frame(const std::string& value) {
  _internal_set_frame(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.frame)
}
inline std::string* reprojectToCloudPoints_grpc1Request::mutable_frame() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.frame)
  return _internal_mutable_frame();
}
inline const std::string& reprojectToCloudPoints_grpc1Request::_internal_frame() const {
  return frame_.Get();
}
inline void reprojectToCloudPoints_grpc1Request::_internal_set_frame(const std::string& value) {
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc1Request::set_frame(std::string&& value) {
  
  frame_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.frame)
}
inline void reprojectToCloudPoints_grpc1Request::set_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.frame)
}
inline void reprojectToCloudPoints_grpc1Request::set_frame(const void* value,
    size_t size) {
  
  frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.frame)
}
inline std::string* reprojectToCloudPoints_grpc1Request::_internal_mutable_frame() {
  
  return frame_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc1Request::release_frame() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.frame)
  return frame_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc1Request::set_allocated_frame(std::string* frame) {
  if (frame != nullptr) {
    
  } else {
    
  }
  frame_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frame,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.frame)
}

// bytes intrinsicParams = 2;
inline void reprojectToCloudPoints_grpc1Request::clear_intrinsicparams() {
  intrinsicparams_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc1Request::intrinsicparams() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.intrinsicParams)
  return _internal_intrinsicparams();
}
inline void reprojectToCloudPoints_grpc1Request::set_intrinsicparams(const std::string& value) {
  _internal_set_intrinsicparams(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.intrinsicParams)
}
inline std::string* reprojectToCloudPoints_grpc1Request::mutable_intrinsicparams() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.intrinsicParams)
  return _internal_mutable_intrinsicparams();
}
inline const std::string& reprojectToCloudPoints_grpc1Request::_internal_intrinsicparams() const {
  return intrinsicparams_.Get();
}
inline void reprojectToCloudPoints_grpc1Request::_internal_set_intrinsicparams(const std::string& value) {
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc1Request::set_intrinsicparams(std::string&& value) {
  
  intrinsicparams_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.intrinsicParams)
}
inline void reprojectToCloudPoints_grpc1Request::set_intrinsicparams(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.intrinsicParams)
}
inline void reprojectToCloudPoints_grpc1Request::set_intrinsicparams(const void* value,
    size_t size) {
  
  intrinsicparams_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.intrinsicParams)
}
inline std::string* reprojectToCloudPoints_grpc1Request::_internal_mutable_intrinsicparams() {
  
  return intrinsicparams_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc1Request::release_intrinsicparams() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.intrinsicParams)
  return intrinsicparams_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc1Request::set_allocated_intrinsicparams(std::string* intrinsicparams) {
  if (intrinsicparams != nullptr) {
    
  } else {
    
  }
  intrinsicparams_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), intrinsicparams,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.intrinsicParams)
}

// bytes cloudPoints = 3;
inline void reprojectToCloudPoints_grpc1Request::clear_cloudpoints() {
  cloudpoints_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc1Request::cloudpoints() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.cloudPoints)
  return _internal_cloudpoints();
}
inline void reprojectToCloudPoints_grpc1Request::set_cloudpoints(const std::string& value) {
  _internal_set_cloudpoints(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.cloudPoints)
}
inline std::string* reprojectToCloudPoints_grpc1Request::mutable_cloudpoints() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.cloudPoints)
  return _internal_mutable_cloudpoints();
}
inline const std::string& reprojectToCloudPoints_grpc1Request::_internal_cloudpoints() const {
  return cloudpoints_.Get();
}
inline void reprojectToCloudPoints_grpc1Request::_internal_set_cloudpoints(const std::string& value) {
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc1Request::set_cloudpoints(std::string&& value) {
  
  cloudpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.cloudPoints)
}
inline void reprojectToCloudPoints_grpc1Request::set_cloudpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.cloudPoints)
}
inline void reprojectToCloudPoints_grpc1Request::set_cloudpoints(const void* value,
    size_t size) {
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.cloudPoints)
}
inline std::string* reprojectToCloudPoints_grpc1Request::_internal_mutable_cloudpoints() {
  
  return cloudpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc1Request::release_cloudpoints() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.cloudPoints)
  return cloudpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc1Request::set_allocated_cloudpoints(std::string* cloudpoints) {
  if (cloudpoints != nullptr) {
    
  } else {
    
  }
  cloudpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cloudpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Request.cloudPoints)
}

// -------------------------------------------------------------------

// reprojectToCloudPoints_grpc1Response

// bytes cloudPoints = 1;
inline void reprojectToCloudPoints_grpc1Response::clear_cloudpoints() {
  cloudpoints_.ClearToEmpty();
}
inline const std::string& reprojectToCloudPoints_grpc1Response::cloudpoints() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.cloudPoints)
  return _internal_cloudpoints();
}
inline void reprojectToCloudPoints_grpc1Response::set_cloudpoints(const std::string& value) {
  _internal_set_cloudpoints(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.cloudPoints)
}
inline std::string* reprojectToCloudPoints_grpc1Response::mutable_cloudpoints() {
  // @@protoc_insertion_point(field_mutable:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.cloudPoints)
  return _internal_mutable_cloudpoints();
}
inline const std::string& reprojectToCloudPoints_grpc1Response::_internal_cloudpoints() const {
  return cloudpoints_.Get();
}
inline void reprojectToCloudPoints_grpc1Response::_internal_set_cloudpoints(const std::string& value) {
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void reprojectToCloudPoints_grpc1Response::set_cloudpoints(std::string&& value) {
  
  cloudpoints_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.cloudPoints)
}
inline void reprojectToCloudPoints_grpc1Response::set_cloudpoints(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.cloudPoints)
}
inline void reprojectToCloudPoints_grpc1Response::set_cloudpoints(const void* value,
    size_t size) {
  
  cloudpoints_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.cloudPoints)
}
inline std::string* reprojectToCloudPoints_grpc1Response::_internal_mutable_cloudpoints() {
  
  return cloudpoints_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* reprojectToCloudPoints_grpc1Response::release_cloudpoints() {
  // @@protoc_insertion_point(field_release:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.cloudPoints)
  return cloudpoints_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void reprojectToCloudPoints_grpc1Response::set_allocated_cloudpoints(std::string* cloudpoints) {
  if (cloudpoints != nullptr) {
    
  } else {
    
  }
  cloudpoints_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cloudpoints,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.cloudPoints)
}

// sint32 xpcfGrpcReturnValue = 2;
inline void reprojectToCloudPoints_grpc1Response::clear_xpcfgrpcreturnvalue() {
  xpcfgrpcreturnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 reprojectToCloudPoints_grpc1Response::_internal_xpcfgrpcreturnvalue() const {
  return xpcfgrpcreturnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 reprojectToCloudPoints_grpc1Response::xpcfgrpcreturnvalue() const {
  // @@protoc_insertion_point(field_get:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.xpcfGrpcReturnValue)
  return _internal_xpcfgrpcreturnvalue();
}
inline void reprojectToCloudPoints_grpc1Response::_internal_set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  xpcfgrpcreturnvalue_ = value;
}
inline void reprojectToCloudPoints_grpc1Response::set_xpcfgrpcreturnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_xpcfgrpcreturnvalue(value);
  // @@protoc_insertion_point(field_set:grpcIReprojectionStereo.reprojectToCloudPoints_grpc1Response.xpcfGrpcReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcIReprojectionStereo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_grpcIReprojectionStereoService_2eproto
