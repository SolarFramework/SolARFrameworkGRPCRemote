// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcIDescriptorMatcherRegionService.proto

#include "grpcIDescriptorMatcherRegionService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpcIDescriptorMatcherRegion {
constexpr match_grpc0Request::match_grpc0Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : descriptors1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , descriptors2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , points2d1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , points2d2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0)
  , radius_(0)
  , matchingdistancemax_(0){}
struct match_grpc0RequestDefaultTypeInternal {
  constexpr match_grpc0RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc0RequestDefaultTypeInternal() {}
  union {
    match_grpc0Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc0RequestDefaultTypeInternal _match_grpc0Request_default_instance_;
constexpr match_grpc0Response::match_grpc0Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct match_grpc0ResponseDefaultTypeInternal {
  constexpr match_grpc0ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc0ResponseDefaultTypeInternal() {}
  union {
    match_grpc0Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc0ResponseDefaultTypeInternal _match_grpc0Response_default_instance_;
constexpr match_grpc1Request::match_grpc1Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : points2d_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , descriptors_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , frame_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0)
  , radius_(0)
  , matchingdistancemax_(0){}
struct match_grpc1RequestDefaultTypeInternal {
  constexpr match_grpc1RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc1RequestDefaultTypeInternal() {}
  union {
    match_grpc1Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc1RequestDefaultTypeInternal _match_grpc1Request_default_instance_;
constexpr match_grpc1Response::match_grpc1Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct match_grpc1ResponseDefaultTypeInternal {
  constexpr match_grpc1ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc1ResponseDefaultTypeInternal() {}
  union {
    match_grpc1Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc1ResponseDefaultTypeInternal _match_grpc1Response_default_instance_;
constexpr match_grpc2Request::match_grpc2Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : currentframe_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lastframe_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grpcservercompressionformat_(0)
  , radius_(0)
  , matchingdistancemax_(0){}
struct match_grpc2RequestDefaultTypeInternal {
  constexpr match_grpc2RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc2RequestDefaultTypeInternal() {}
  union {
    match_grpc2Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc2RequestDefaultTypeInternal _match_grpc2Request_default_instance_;
constexpr match_grpc2Response::match_grpc2Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : matches_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xpcfgrpcreturnvalue_(0){}
struct match_grpc2ResponseDefaultTypeInternal {
  constexpr match_grpc2ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~match_grpc2ResponseDefaultTypeInternal() {}
  union {
    match_grpc2Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT match_grpc2ResponseDefaultTypeInternal _match_grpc2Response_default_instance_;
}  // namespace grpcIDescriptorMatcherRegion
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcIDescriptorMatcherRegionService_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcIDescriptorMatcherRegionService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcIDescriptorMatcherRegionService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcIDescriptorMatcherRegionService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Request, descriptors1_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Request, descriptors2_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Request, points2d1_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Request, points2d2_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Request, radius_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Request, matchingdistancemax_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Request, matches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Response, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc0Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Request, points2d_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Request, descriptors_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Request, frame_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Request, radius_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Request, matchingdistancemax_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Request, matches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Response, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc1Response, xpcfgrpcreturnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Request, grpcservercompressionformat_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Request, currentframe_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Request, lastframe_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Request, radius_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Request, matchingdistancemax_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Request, matches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Response, matches_),
  PROTOBUF_FIELD_OFFSET(::grpcIDescriptorMatcherRegion::match_grpc2Response, xpcfgrpcreturnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcIDescriptorMatcherRegion::match_grpc0Request)},
  { 13, -1, sizeof(::grpcIDescriptorMatcherRegion::match_grpc0Response)},
  { 20, -1, sizeof(::grpcIDescriptorMatcherRegion::match_grpc1Request)},
  { 32, -1, sizeof(::grpcIDescriptorMatcherRegion::match_grpc1Response)},
  { 39, -1, sizeof(::grpcIDescriptorMatcherRegion::match_grpc2Request)},
  { 50, -1, sizeof(::grpcIDescriptorMatcherRegion::match_grpc2Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherRegion::_match_grpc0Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherRegion::_match_grpc0Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherRegion::_match_grpc1Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherRegion::_match_grpc1Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherRegion::_match_grpc2Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcIDescriptorMatcherRegion::_match_grpc2Response_default_instance_),
};

const char descriptor_table_protodef_grpcIDescriptorMatcherRegionService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n)grpcIDescriptorMatcherRegionService.pr"
  "oto\022\034grpcIDescriptorMatcherRegion\032\033googl"
  "e/protobuf/empty.proto\"\311\001\n\022match_grpc0Re"
  "quest\022#\n\033grpcServerCompressionFormat\030\001 \001"
  "(\005\022\024\n\014descriptors1\030\002 \001(\014\022\024\n\014descriptors2"
  "\030\003 \001(\014\022\021\n\tpoints2D1\030\004 \001(\014\022\021\n\tpoints2D2\030\005"
  " \001(\014\022\016\n\006radius\030\006 \001(\002\022\033\n\023matchingDistance"
  "Max\030\007 \001(\002\022\017\n\007matches\030\010 \001(\014\"C\n\023match_grpc"
  "0Response\022\017\n\007matches\030\001 \001(\014\022\033\n\023xpcfGrpcRe"
  "turnValue\030\002 \001(\021\"\255\001\n\022match_grpc1Request\022#"
  "\n\033grpcServerCompressionFormat\030\001 \001(\005\022\020\n\010p"
  "oints2D\030\002 \001(\014\022\023\n\013descriptors\030\003 \001(\014\022\r\n\005fr"
  "ame\030\004 \001(\014\022\016\n\006radius\030\005 \001(\002\022\033\n\023matchingDis"
  "tanceMax\030\006 \001(\002\022\017\n\007matches\030\007 \001(\014\"C\n\023match"
  "_grpc1Response\022\017\n\007matches\030\001 \001(\014\022\033\n\023xpcfG"
  "rpcReturnValue\030\002 \001(\021\"\240\001\n\022match_grpc2Requ"
  "est\022#\n\033grpcServerCompressionFormat\030\001 \001(\005"
  "\022\024\n\014currentFrame\030\002 \001(\014\022\021\n\tlastFrame\030\003 \001("
  "\014\022\016\n\006radius\030\004 \001(\002\022\033\n\023matchingDistanceMax"
  "\030\005 \001(\002\022\017\n\007matches\030\006 \001(\014\"C\n\023match_grpc2Re"
  "sponse\022\017\n\007matches\030\001 \001(\014\022\033\n\023xpcfGrpcRetur"
  "nValue\030\002 \001(\0212\207\003\n#grpcIDescriptorMatcherR"
  "egionService\022t\n\013match_grpc0\0220.grpcIDescr"
  "iptorMatcherRegion.match_grpc0Request\0321."
  "grpcIDescriptorMatcherRegion.match_grpc0"
  "Response\"\000\022t\n\013match_grpc1\0220.grpcIDescrip"
  "torMatcherRegion.match_grpc1Request\0321.gr"
  "pcIDescriptorMatcherRegion.match_grpc1Re"
  "sponse\"\000\022t\n\013match_grpc2\0220.grpcIDescripto"
  "rMatcherRegion.match_grpc2Request\0321.grpc"
  "IDescriptorMatcherRegion.match_grpc2Resp"
  "onse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcIDescriptorMatcherRegionService_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcIDescriptorMatcherRegionService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcIDescriptorMatcherRegionService_2eproto = {
  false, false, 1254, descriptor_table_protodef_grpcIDescriptorMatcherRegionService_2eproto, "grpcIDescriptorMatcherRegionService.proto", 
  &descriptor_table_grpcIDescriptorMatcherRegionService_2eproto_once, descriptor_table_grpcIDescriptorMatcherRegionService_2eproto_deps, 1, 6,
  schemas, file_default_instances, TableStruct_grpcIDescriptorMatcherRegionService_2eproto::offsets,
  file_level_metadata_grpcIDescriptorMatcherRegionService_2eproto, file_level_enum_descriptors_grpcIDescriptorMatcherRegionService_2eproto, file_level_service_descriptors_grpcIDescriptorMatcherRegionService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_grpcIDescriptorMatcherRegionService_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_grpcIDescriptorMatcherRegionService_2eproto);
  return descriptor_table_grpcIDescriptorMatcherRegionService_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_grpcIDescriptorMatcherRegionService_2eproto(&descriptor_table_grpcIDescriptorMatcherRegionService_2eproto);
namespace grpcIDescriptorMatcherRegion {

// ===================================================================

class match_grpc0Request::_Internal {
 public:
};

match_grpc0Request::match_grpc0Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherRegion.match_grpc0Request)
}
match_grpc0Request::match_grpc0Request(const match_grpc0Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  descriptors1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descriptors1().empty()) {
    descriptors1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descriptors1(), 
      GetArena());
  }
  descriptors2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descriptors2().empty()) {
    descriptors2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descriptors2(), 
      GetArena());
  }
  points2d1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_points2d1().empty()) {
    points2d1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_points2d1(), 
      GetArena());
  }
  points2d2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_points2d2().empty()) {
    points2d2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_points2d2(), 
      GetArena());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchingdistancemax_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(matchingdistancemax_));
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherRegion.match_grpc0Request)
}

void match_grpc0Request::SharedCtor() {
descriptors1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
descriptors2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
points2d1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
points2d2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&matchingdistancemax_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(matchingdistancemax_));
}

match_grpc0Request::~match_grpc0Request() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherRegion.match_grpc0Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc0Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  descriptors1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descriptors2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  points2d1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  points2d2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc0Request::ArenaDtor(void* object) {
  match_grpc0Request* _this = reinterpret_cast< match_grpc0Request* >(object);
  (void)_this;
}
void match_grpc0Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc0Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc0Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherRegion.match_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  descriptors1_.ClearToEmpty();
  descriptors2_.ClearToEmpty();
  points2d1_.ClearToEmpty();
  points2d2_.ClearToEmpty();
  matches_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchingdistancemax_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(matchingdistancemax_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc0Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes descriptors1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_descriptors1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes descriptors2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_descriptors2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes points2D1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_points2d1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes points2D2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_points2d2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float radius = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float matchingDistanceMax = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          matchingdistancemax_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // bytes matches = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc0Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherRegion.match_grpc0Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes descriptors1 = 2;
  if (this->descriptors1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_descriptors1(), target);
  }

  // bytes descriptors2 = 3;
  if (this->descriptors2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_descriptors2(), target);
  }

  // bytes points2D1 = 4;
  if (this->points2d1().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_points2d1(), target);
  }

  // bytes points2D2 = 5;
  if (this->points2d2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_points2d2(), target);
  }

  // float radius = 6;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_radius(), target);
  }

  // float matchingDistanceMax = 7;
  if (!(this->matchingdistancemax() <= 0 && this->matchingdistancemax() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_matchingdistancemax(), target);
  }

  // bytes matches = 8;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        8, this->_internal_matches(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherRegion.match_grpc0Request)
  return target;
}

size_t match_grpc0Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherRegion.match_grpc0Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes descriptors1 = 2;
  if (this->descriptors1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors1());
  }

  // bytes descriptors2 = 3;
  if (this->descriptors2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors2());
  }

  // bytes points2D1 = 4;
  if (this->points2d1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points2d1());
  }

  // bytes points2D2 = 5;
  if (this->points2d2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points2d2());
  }

  // bytes matches = 8;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  // float radius = 6;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    total_size += 1 + 4;
  }

  // float matchingDistanceMax = 7;
  if (!(this->matchingdistancemax() <= 0 && this->matchingdistancemax() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc0Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc0Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc0Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherRegion.match_grpc0Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherRegion.match_grpc0Request)
    MergeFrom(*source);
  }
}

void match_grpc0Request::MergeFrom(const match_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc0Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.descriptors1().size() > 0) {
    _internal_set_descriptors1(from._internal_descriptors1());
  }
  if (from.descriptors2().size() > 0) {
    _internal_set_descriptors2(from._internal_descriptors2());
  }
  if (from.points2d1().size() > 0) {
    _internal_set_points2d1(from._internal_points2d1());
  }
  if (from.points2d2().size() > 0) {
    _internal_set_points2d2(from._internal_points2d2());
  }
  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (!(from.radius() <= 0 && from.radius() >= 0)) {
    _internal_set_radius(from._internal_radius());
  }
  if (!(from.matchingdistancemax() <= 0 && from.matchingdistancemax() >= 0)) {
    _internal_set_matchingdistancemax(from._internal_matchingdistancemax());
  }
}

void match_grpc0Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc0Request::CopyFrom(const match_grpc0Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc0Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc0Request::IsInitialized() const {
  return true;
}

void match_grpc0Request::InternalSwap(match_grpc0Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  descriptors1_.Swap(&other->descriptors1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  descriptors2_.Swap(&other->descriptors2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  points2d1_.Swap(&other->points2d1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  points2d2_.Swap(&other->points2d2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(match_grpc0Request, matchingdistancemax_)
      + sizeof(match_grpc0Request::matchingdistancemax_)
      - PROTOBUF_FIELD_OFFSET(match_grpc0Request, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc0Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class match_grpc0Response::_Internal {
 public:
};

match_grpc0Response::match_grpc0Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherRegion.match_grpc0Response)
}
match_grpc0Response::match_grpc0Response(const match_grpc0Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherRegion.match_grpc0Response)
}

void match_grpc0Response::SharedCtor() {
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

match_grpc0Response::~match_grpc0Response() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherRegion.match_grpc0Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc0Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc0Response::ArenaDtor(void* object) {
  match_grpc0Response* _this = reinterpret_cast< match_grpc0Response* >(object);
  (void)_this;
}
void match_grpc0Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc0Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc0Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherRegion.match_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matches_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc0Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes matches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc0Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherRegion.match_grpc0Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_matches(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherRegion.match_grpc0Response)
  return target;
}

size_t match_grpc0Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherRegion.match_grpc0Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc0Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc0Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc0Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherRegion.match_grpc0Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherRegion.match_grpc0Response)
    MergeFrom(*source);
  }
}

void match_grpc0Response::MergeFrom(const match_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc0Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void match_grpc0Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc0Response::CopyFrom(const match_grpc0Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc0Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc0Response::IsInitialized() const {
  return true;
}

void match_grpc0Response::InternalSwap(match_grpc0Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc0Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class match_grpc1Request::_Internal {
 public:
};

match_grpc1Request::match_grpc1Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherRegion.match_grpc1Request)
}
match_grpc1Request::match_grpc1Request(const match_grpc1Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  points2d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_points2d().empty()) {
    points2d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_points2d(), 
      GetArena());
  }
  descriptors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_descriptors().empty()) {
    descriptors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_descriptors(), 
      GetArena());
  }
  frame_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_frame().empty()) {
    frame_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_frame(), 
      GetArena());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchingdistancemax_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(matchingdistancemax_));
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherRegion.match_grpc1Request)
}

void match_grpc1Request::SharedCtor() {
points2d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
descriptors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
frame_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&matchingdistancemax_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(matchingdistancemax_));
}

match_grpc1Request::~match_grpc1Request() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherRegion.match_grpc1Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc1Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  points2d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  descriptors_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frame_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc1Request::ArenaDtor(void* object) {
  match_grpc1Request* _this = reinterpret_cast< match_grpc1Request* >(object);
  (void)_this;
}
void match_grpc1Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc1Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc1Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherRegion.match_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points2d_.ClearToEmpty();
  descriptors_.ClearToEmpty();
  frame_.ClearToEmpty();
  matches_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchingdistancemax_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(matchingdistancemax_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc1Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes points2D = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_points2d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes descriptors = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_descriptors();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes frame = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_frame();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float radius = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float matchingDistanceMax = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          matchingdistancemax_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // bytes matches = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc1Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherRegion.match_grpc1Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes points2D = 2;
  if (this->points2d().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_points2d(), target);
  }

  // bytes descriptors = 3;
  if (this->descriptors().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_descriptors(), target);
  }

  // bytes frame = 4;
  if (this->frame().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_frame(), target);
  }

  // float radius = 5;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_radius(), target);
  }

  // float matchingDistanceMax = 6;
  if (!(this->matchingdistancemax() <= 0 && this->matchingdistancemax() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_matchingdistancemax(), target);
  }

  // bytes matches = 7;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_matches(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherRegion.match_grpc1Request)
  return target;
}

size_t match_grpc1Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherRegion.match_grpc1Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes points2D = 2;
  if (this->points2d().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_points2d());
  }

  // bytes descriptors = 3;
  if (this->descriptors().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_descriptors());
  }

  // bytes frame = 4;
  if (this->frame().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_frame());
  }

  // bytes matches = 7;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  // float radius = 5;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    total_size += 1 + 4;
  }

  // float matchingDistanceMax = 6;
  if (!(this->matchingdistancemax() <= 0 && this->matchingdistancemax() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc1Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc1Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc1Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherRegion.match_grpc1Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherRegion.match_grpc1Request)
    MergeFrom(*source);
  }
}

void match_grpc1Request::MergeFrom(const match_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc1Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.points2d().size() > 0) {
    _internal_set_points2d(from._internal_points2d());
  }
  if (from.descriptors().size() > 0) {
    _internal_set_descriptors(from._internal_descriptors());
  }
  if (from.frame().size() > 0) {
    _internal_set_frame(from._internal_frame());
  }
  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (!(from.radius() <= 0 && from.radius() >= 0)) {
    _internal_set_radius(from._internal_radius());
  }
  if (!(from.matchingdistancemax() <= 0 && from.matchingdistancemax() >= 0)) {
    _internal_set_matchingdistancemax(from._internal_matchingdistancemax());
  }
}

void match_grpc1Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc1Request::CopyFrom(const match_grpc1Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc1Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc1Request::IsInitialized() const {
  return true;
}

void match_grpc1Request::InternalSwap(match_grpc1Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  points2d_.Swap(&other->points2d_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  descriptors_.Swap(&other->descriptors_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frame_.Swap(&other->frame_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(match_grpc1Request, matchingdistancemax_)
      + sizeof(match_grpc1Request::matchingdistancemax_)
      - PROTOBUF_FIELD_OFFSET(match_grpc1Request, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc1Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class match_grpc1Response::_Internal {
 public:
};

match_grpc1Response::match_grpc1Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherRegion.match_grpc1Response)
}
match_grpc1Response::match_grpc1Response(const match_grpc1Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherRegion.match_grpc1Response)
}

void match_grpc1Response::SharedCtor() {
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

match_grpc1Response::~match_grpc1Response() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherRegion.match_grpc1Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc1Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc1Response::ArenaDtor(void* object) {
  match_grpc1Response* _this = reinterpret_cast< match_grpc1Response* >(object);
  (void)_this;
}
void match_grpc1Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc1Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc1Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherRegion.match_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matches_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc1Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes matches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc1Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherRegion.match_grpc1Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_matches(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherRegion.match_grpc1Response)
  return target;
}

size_t match_grpc1Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherRegion.match_grpc1Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc1Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc1Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc1Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherRegion.match_grpc1Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherRegion.match_grpc1Response)
    MergeFrom(*source);
  }
}

void match_grpc1Response::MergeFrom(const match_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc1Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void match_grpc1Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc1Response::CopyFrom(const match_grpc1Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc1Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc1Response::IsInitialized() const {
  return true;
}

void match_grpc1Response::InternalSwap(match_grpc1Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc1Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class match_grpc2Request::_Internal {
 public:
};

match_grpc2Request::match_grpc2Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherRegion.match_grpc2Request)
}
match_grpc2Request::match_grpc2Request(const match_grpc2Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  currentframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currentframe().empty()) {
    currentframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_currentframe(), 
      GetArena());
  }
  lastframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lastframe().empty()) {
    lastframe_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lastframe(), 
      GetArena());
  }
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  ::memcpy(&grpcservercompressionformat_, &from.grpcservercompressionformat_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchingdistancemax_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(matchingdistancemax_));
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherRegion.match_grpc2Request)
}

void match_grpc2Request::SharedCtor() {
currentframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lastframe_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&grpcservercompressionformat_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&matchingdistancemax_) -
    reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(matchingdistancemax_));
}

match_grpc2Request::~match_grpc2Request() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherRegion.match_grpc2Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc2Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  currentframe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lastframe_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc2Request::ArenaDtor(void* object) {
  match_grpc2Request* _this = reinterpret_cast< match_grpc2Request* >(object);
  (void)_this;
}
void match_grpc2Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc2Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherRegion.match_grpc2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currentframe_.ClearToEmpty();
  lastframe_.ClearToEmpty();
  matches_.ClearToEmpty();
  ::memset(&grpcservercompressionformat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchingdistancemax_) -
      reinterpret_cast<char*>(&grpcservercompressionformat_)) + sizeof(matchingdistancemax_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc2Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 grpcServerCompressionFormat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          grpcservercompressionformat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes currentFrame = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_currentframe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes lastFrame = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_lastframe();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float radius = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float matchingDistanceMax = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          matchingdistancemax_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // bytes matches = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc2Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherRegion.match_grpc2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_grpcservercompressionformat(), target);
  }

  // bytes currentFrame = 2;
  if (this->currentframe().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_currentframe(), target);
  }

  // bytes lastFrame = 3;
  if (this->lastframe().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_lastframe(), target);
  }

  // float radius = 4;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_radius(), target);
  }

  // float matchingDistanceMax = 5;
  if (!(this->matchingdistancemax() <= 0 && this->matchingdistancemax() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_matchingdistancemax(), target);
  }

  // bytes matches = 6;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_matches(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherRegion.match_grpc2Request)
  return target;
}

size_t match_grpc2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherRegion.match_grpc2Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes currentFrame = 2;
  if (this->currentframe().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_currentframe());
  }

  // bytes lastFrame = 3;
  if (this->lastframe().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_lastframe());
  }

  // bytes matches = 6;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // int32 grpcServerCompressionFormat = 1;
  if (this->grpcservercompressionformat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_grpcservercompressionformat());
  }

  // float radius = 4;
  if (!(this->radius() <= 0 && this->radius() >= 0)) {
    total_size += 1 + 4;
  }

  // float matchingDistanceMax = 5;
  if (!(this->matchingdistancemax() <= 0 && this->matchingdistancemax() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc2Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc2Request)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc2Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc2Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherRegion.match_grpc2Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherRegion.match_grpc2Request)
    MergeFrom(*source);
  }
}

void match_grpc2Request::MergeFrom(const match_grpc2Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc2Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currentframe().size() > 0) {
    _internal_set_currentframe(from._internal_currentframe());
  }
  if (from.lastframe().size() > 0) {
    _internal_set_lastframe(from._internal_lastframe());
  }
  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.grpcservercompressionformat() != 0) {
    _internal_set_grpcservercompressionformat(from._internal_grpcservercompressionformat());
  }
  if (!(from.radius() <= 0 && from.radius() >= 0)) {
    _internal_set_radius(from._internal_radius());
  }
  if (!(from.matchingdistancemax() <= 0 && from.matchingdistancemax() >= 0)) {
    _internal_set_matchingdistancemax(from._internal_matchingdistancemax());
  }
}

void match_grpc2Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc2Request::CopyFrom(const match_grpc2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc2Request::IsInitialized() const {
  return true;
}

void match_grpc2Request::InternalSwap(match_grpc2Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  currentframe_.Swap(&other->currentframe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lastframe_.Swap(&other->lastframe_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(match_grpc2Request, matchingdistancemax_)
      + sizeof(match_grpc2Request::matchingdistancemax_)
      - PROTOBUF_FIELD_OFFSET(match_grpc2Request, grpcservercompressionformat_)>(
          reinterpret_cast<char*>(&grpcservercompressionformat_),
          reinterpret_cast<char*>(&other->grpcservercompressionformat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc2Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class match_grpc2Response::_Internal {
 public:
};

match_grpc2Response::match_grpc2Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpcIDescriptorMatcherRegion.match_grpc2Response)
}
match_grpc2Response::match_grpc2Response(const match_grpc2Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_matches().empty()) {
    matches_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_matches(), 
      GetArena());
  }
  xpcfgrpcreturnvalue_ = from.xpcfgrpcreturnvalue_;
  // @@protoc_insertion_point(copy_constructor:grpcIDescriptorMatcherRegion.match_grpc2Response)
}

void match_grpc2Response::SharedCtor() {
matches_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
xpcfgrpcreturnvalue_ = 0;
}

match_grpc2Response::~match_grpc2Response() {
  // @@protoc_insertion_point(destructor:grpcIDescriptorMatcherRegion.match_grpc2Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void match_grpc2Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  matches_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void match_grpc2Response::ArenaDtor(void* object) {
  match_grpc2Response* _this = reinterpret_cast< match_grpc2Response* >(object);
  (void)_this;
}
void match_grpc2Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void match_grpc2Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void match_grpc2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcIDescriptorMatcherRegion.match_grpc2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matches_.ClearToEmpty();
  xpcfgrpcreturnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* match_grpc2Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes matches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_matches();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 xpcfGrpcReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          xpcfgrpcreturnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* match_grpc2Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcIDescriptorMatcherRegion.match_grpc2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_matches(), target);
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(2, this->_internal_xpcfgrpcreturnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcIDescriptorMatcherRegion.match_grpc2Response)
  return target;
}

size_t match_grpc2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcIDescriptorMatcherRegion.match_grpc2Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes matches = 1;
  if (this->matches().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_matches());
  }

  // sint32 xpcfGrpcReturnValue = 2;
  if (this->xpcfgrpcreturnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_xpcfgrpcreturnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void match_grpc2Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc2Response)
  GOOGLE_DCHECK_NE(&from, this);
  const match_grpc2Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<match_grpc2Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcIDescriptorMatcherRegion.match_grpc2Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcIDescriptorMatcherRegion.match_grpc2Response)
    MergeFrom(*source);
  }
}

void match_grpc2Response::MergeFrom(const match_grpc2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcIDescriptorMatcherRegion.match_grpc2Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matches().size() > 0) {
    _internal_set_matches(from._internal_matches());
  }
  if (from.xpcfgrpcreturnvalue() != 0) {
    _internal_set_xpcfgrpcreturnvalue(from._internal_xpcfgrpcreturnvalue());
  }
}

void match_grpc2Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void match_grpc2Response::CopyFrom(const match_grpc2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcIDescriptorMatcherRegion.match_grpc2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool match_grpc2Response::IsInitialized() const {
  return true;
}

void match_grpc2Response::InternalSwap(match_grpc2Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  matches_.Swap(&other->matches_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(xpcfgrpcreturnvalue_, other->xpcfgrpcreturnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata match_grpc2Response::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcIDescriptorMatcherRegion
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherRegion::match_grpc0Request* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherRegion::match_grpc0Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherRegion::match_grpc0Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherRegion::match_grpc0Response* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherRegion::match_grpc0Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherRegion::match_grpc0Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherRegion::match_grpc1Request* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherRegion::match_grpc1Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherRegion::match_grpc1Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherRegion::match_grpc1Response* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherRegion::match_grpc1Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherRegion::match_grpc1Response >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherRegion::match_grpc2Request* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherRegion::match_grpc2Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherRegion::match_grpc2Request >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcIDescriptorMatcherRegion::match_grpc2Response* Arena::CreateMaybeMessage< ::grpcIDescriptorMatcherRegion::match_grpc2Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcIDescriptorMatcherRegion::match_grpc2Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
